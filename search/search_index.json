{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"Vector%20Stores/Milvus/tutorial/","title":"PyMilvus \u200b\u4f7f\u7528\u200b\u6559\u7a0b\u200b\uff1a\u200b\u4ece\u200b\u5165\u95e8\u200b\u5230\u200b\u7cbe\u901a","text":""},{"location":"Vector%20Stores/Milvus/tutorial/#1-milvus","title":"1. Milvus \u200b\u7b80\u4ecb","text":"<p>Milvus \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f00\u6e90\u200b\u7684\u200b\u5411\u91cf\u200b\u6570\u636e\u5e93\u200b\uff0c\u200b\u4e13\u95e8\u200b\u7528\u4e8e\u200b\u5904\u7406\u200b\u5927\u89c4\u6a21\u200b\u5411\u91cf\u200b\u6570\u636e\u200b\u7684\u200b\u5b58\u50a8\u200b\u548c\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u641c\u7d22\u200b\u3002\u200b\u5b83\u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u7d22\u5f15\u200b\u7c7b\u578b\u200b\u548c\u200b\u8ddd\u79bb\u200b\u5ea6\u91cf\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5e7f\u6cdb\u5e94\u7528\u200b\u4e8e\u200b\u63a8\u8350\u200b\u7cfb\u7edf\u200b\u3001\u200b\u56fe\u50cf\u200b\u68c0\u7d22\u200b\u3001\u200b\u81ea\u7136\u8bed\u8a00\u200b\u5904\u7406\u200b\u7b49\u200b\u9886\u57df\u200b\u3002</p>"},{"location":"Vector%20Stores/Milvus/tutorial/#_1","title":"\u6838\u5fc3\u200b\u7279\u6027\u200b\uff1a","text":"<ul> <li>\u200b\u9ad8\u6027\u80fd\u200b\u5411\u91cf\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u641c\u7d22\u200b</li> <li>\u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u7d22\u5f15\u200b\u7c7b\u578b\u200b\uff08IVF_FLAT\u3001HNSW\u3001ANNOY\u200b\u7b49\u200b\uff09</li> <li>\u200b\u53ef\u200b\u6269\u5c55\u200b\u7684\u200b\u5206\u5e03\u5f0f\u200b\u67b6\u6784\u200b</li> <li>\u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u8ddd\u79bb\u200b\u5ea6\u91cf\u200b\uff08L2\u3001\u200b\u5185\u79ef\u200b\u3001\u200b\u4f59\u5f26\u200b\u7b49\u200b\uff09</li> <li>\u200b\u4e30\u5bcc\u200b\u7684\u200b SDK \u200b\u652f\u6301\u200b</li> </ul>"},{"location":"Vector%20Stores/Milvus/tutorial/#2","title":"2. \u200b\u73af\u5883\u200b\u51c6\u5907","text":""},{"location":"Vector%20Stores/Milvus/tutorial/#pymilvus_1","title":"\u5b89\u88c5\u200b PyMilvus","text":"<pre><code>pip install pymilvus\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#milvus","title":"\u542f\u52a8\u200b Milvus \u200b\u670d\u52a1","text":"<p>\u200b\u4f7f\u7528\u200b Docker \u200b\u542f\u52a8\u200b Milvus \u200b\u5355\u673a\u7248\u200b\uff1a</p> <pre><code>docker run -d --name milvus-standalone \\\n  -p 19530:19530 \\\n  -p 9091:9091 \\\n  milvusdb/milvus:v2.3.4\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#3","title":"3. \u200b\u57fa\u7840\u200b\u6982\u5ff5","text":""},{"location":"Vector%20Stores/Milvus/tutorial/#_2","title":"\u6838\u5fc3\u200b\u7ec4\u4ef6","text":"<ol> <li>Collection\uff08\u200b\u96c6\u5408\u200b\uff09\uff1a\u200b\u7c7b\u4f3c\u200b\u5173\u7cfb\u6570\u636e\u5e93\u200b\u4e2d\u200b\u7684\u200b\u8868\u200b\uff0c\u200b\u5305\u542b\u200b\u591a\u4e2a\u200b\u5b9e\u4f53\u200b</li> <li>Field\uff08\u200b\u5b57\u200b\u6bb5\u200b\uff09\uff1a\u200b\u96c6\u5408\u200b\u4e2d\u200b\u7684\u200b\u5217\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u662f\u200b\u6807\u91cf\u200b\u6216\u200b\u5411\u91cf\u200b</li> <li>Entity\uff08\u200b\u5b9e\u4f53\u200b\uff09\uff1a\u200b\u96c6\u5408\u200b\u4e2d\u200b\u7684\u200b\u4e00\u884c\u200b\u6570\u636e\u200b</li> <li>Partition\uff08\u200b\u5206\u533a\u200b\uff09\uff1a\u200b\u7528\u4e8e\u200b\u6570\u636e\u7ba1\u7406\u200b\u7684\u200b\u903b\u8f91\u200b\u5206\u7ec4\u200b</li> <li>Index\uff08\u200b\u7d22\u5f15\u200b\uff09\uff1a\u200b\u52a0\u901f\u200b\u5411\u91cf\u200b\u641c\u7d22\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b</li> <li>Schema\uff08\u200b\u6a21\u5f0f\u200b\uff09\uff1a\u200b\u5b9a\u4e49\u200b\u96c6\u5408\u200b\u7684\u200b\u7ed3\u6784\u200b</li> </ol>"},{"location":"Vector%20Stores/Milvus/tutorial/#_3","title":"\u8ddd\u79bb\u200b\u5ea6\u91cf","text":"<ul> <li>L2\uff08\u200b\u6b27\u6c0f\u200b\u8ddd\u79bb\u200b\uff09\uff1a<code>\"L2\"</code></li> <li>\u200b\u5185\u79ef\u200b\uff1a<code>\"IP\"</code></li> <li>\u200b\u4f59\u5f26\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\uff1a<code>\"COSINE\"</code></li> </ul>"},{"location":"Vector%20Stores/Milvus/tutorial/#4","title":"4. \u200b\u57fa\u7840\u200b\u64cd\u4f5c","text":""},{"location":"Vector%20Stores/Milvus/tutorial/#milvus_1","title":"\u8fde\u63a5\u200b Milvus","text":"<pre><code>from pymilvus import connections, utility\n\n# \u200b\u8fde\u63a5\u200b Milvus\nconnections.connect(\n    alias=\"default\",\n    host=\"localhost\",\n    port=\"19530\"\n)\n\n# \u200b\u68c0\u67e5\u200b\u8fde\u63a5\u200b\u72b6\u6001\u200b\nprint(f\"Milvus \u200b\u7248\u672c\u200b: {utility.get_server_version()}\")\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#_4","title":"\u521b\u5efa\u200b\u96c6\u5408","text":"<pre><code>from pymilvus import Collection, FieldSchema, CollectionSchema, DataType\n\n# \u200b\u5b9a\u4e49\u200b\u5b57\u200b\u6bb5\u200b\nfields = [\n    FieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, auto_id=True),\n    FieldSchema(name=\"embedding\", dtype=DataType.FLOAT_VECTOR, dim=128),\n    FieldSchema(name=\"title\", dtype=DataType.VARCHAR, max_length=200),\n    FieldSchema(name=\"category\", dtype=DataType.VARCHAR, max_length=100)\n]\n\n# \u200b\u521b\u5efa\u200b\u6a21\u5f0f\u200b\nschema = CollectionSchema(\n    fields=fields,\n    description=\"\u200b\u793a\u4f8b\u200b\u96c6\u5408\u200b\",\n    enable_dynamic_field=True\n)\n\n# \u200b\u521b\u5efa\u200b\u96c6\u5408\u200b\ncollection_name = \"example_collection\"\ncollection = Collection(\n    name=collection_name,\n    schema=schema,\n    using=\"default\"\n)\n\nprint(f\"\u200b\u96c6\u5408\u200b {collection_name} \u200b\u521b\u5efa\u200b\u6210\u529f\u200b\")\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#_5","title":"\u63d2\u5165\u200b\u6570\u636e","text":"<pre><code>import random\n\n# \u200b\u751f\u6210\u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\nnum_entities = 1000\nembeddings = [[random.random() for _ in range(128)] for _ in range(num_entities)]\ntitles = [f\"\u200b\u6807\u9898\u200b_{i}\" for i in range(num_entities)]\ncategories = [f\"\u200b\u5206\u7c7b\u200b_{random.randint(1, 5)}\" for _ in range(num_entities)]\n\n# \u200b\u51c6\u5907\u200b\u63d2\u5165\u200b\u6570\u636e\u200b\ndata = [\n    embeddings,  # \u200b\u5411\u91cf\u200b\u6570\u636e\u200b\n    titles,      # \u200b\u6807\u91cf\u200b\u6570\u636e\u200b\n    categories   # \u200b\u6807\u91cf\u200b\u6570\u636e\u200b\n]\n\n# \u200b\u63d2\u5165\u200b\u6570\u636e\u200b\ninsert_result = collection.insert(data)\n\nprint(f\"\u200b\u63d2\u5165\u200b\u4e86\u200b {len(insert_result.primary_keys)} \u200b\u6761\u200b\u6570\u636e\u200b\")\nprint(f\"\u200b\u4e3b\u952e\u200b: {insert_result.primary_keys[:5]}\")  # \u200b\u663e\u793a\u200b\u524d\u200b5\u200b\u4e2a\u200b\u4e3b\u952e\u200b\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#_6","title":"\u521b\u5efa\u200b\u7d22\u5f15","text":"<pre><code># \u200b\u5728\u200b\u63d2\u5165\u200b\u6570\u636e\u200b\u540e\u200b\u521b\u5efa\u200b\u7d22\u5f15\u200b\nindex_params = {\n    \"index_type\": \"IVF_FLAT\",\n    \"metric_type\": \"L2\",\n    \"params\": {\"nlist\": 128}\n}\n\n# \u200b\u4e3a\u200b\u5411\u91cf\u200b\u5b57\u200b\u6bb5\u200b\u521b\u5efa\u200b\u7d22\u5f15\u200b\ncollection.create_index(\n    field_name=\"embedding\",\n    index_params=index_params\n)\n\nprint(\"\u200b\u7d22\u5f15\u200b\u521b\u5efa\u200b\u6210\u529f\u200b\")\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#_7","title":"\u641c\u7d22\u200b\u5411\u91cf","text":"<pre><code># \u200b\u52a0\u8f7d\u200b\u96c6\u5408\u200b\u5230\u200b\u5185\u5b58\u200b\ncollection.load()\n\n# \u200b\u51c6\u5907\u200b\u641c\u7d22\u200b\u5411\u91cf\u200b\nsearch_vectors = [[random.random() for _ in range(128)] for _ in range(5)]\n\n# \u200b\u8bbe\u7f6e\u200b\u641c\u7d22\u200b\u53c2\u6570\u200b\nsearch_params = {\n    \"metric_type\": \"L2\",\n    \"params\": {\"nprobe\": 10}\n}\n\n# \u200b\u6267\u884c\u200b\u641c\u7d22\u200b\nresults = collection.search(\n    data=search_vectors,\n    anns_field=\"embedding\",\n    param=search_params,\n    limit=3,  # \u200b\u8fd4\u56de\u200btop-3\u200b\u7ed3\u679c\u200b\n    output_fields=[\"title\", \"category\"]  # \u200b\u8fd4\u56de\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\n)\n\n# \u200b\u89e3\u6790\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b\nfor i, result in enumerate(results):\n    print(f\"\\n\u200b\u641c\u7d22\u200b\u5411\u91cf\u200b {i+1} \u200b\u7684\u200b\u7ed3\u679c\u200b:\")\n    for j, hit in enumerate(result):\n        print(f\"  \u200b\u7b2c\u200b {j+1} \u200b\u540d\u200b: ID={hit.id}, \u200b\u8ddd\u79bb\u200b={hit.distance:.4f}, \"\n              f\"\u200b\u6807\u9898\u200b={hit.entity.get('title')}, \u200b\u5206\u7c7b\u200b={hit.entity.get('category')}\")\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#_8","title":"\u67e5\u8be2\u200b\u6807\u91cf\u200b\u6570\u636e","text":"<pre><code># \u200b\u57fa\u4e8e\u200b\u6807\u91cf\u200b\u5b57\u200b\u6bb5\u200b\u67e5\u8be2\u200b\nquery_result = collection.query(\n    expr='category == \"\u200b\u5206\u7c7b\u200b_1\"',\n    output_fields=[\"id\", \"title\", \"category\"],\n    limit=5\n)\n\nprint(\"\\n\u200b\u5206\u7c7b\u200b\u4e3a\u200b '\u200b\u5206\u7c7b\u200b_1' \u200b\u7684\u200b\u6570\u636e\u200b:\")\nfor result in query_result:\n    print(f\"ID: {result['id']}, \u200b\u6807\u9898\u200b: {result['title']}, \u200b\u5206\u7c7b\u200b: {result['category']}\")\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#5","title":"5. \u200b\u8fdb\u9636\u200b\u529f\u80fd","text":""},{"location":"Vector%20Stores/Milvus/tutorial/#_9","title":"\u5206\u533a\u200b\u7ba1\u7406","text":"<pre><code># \u200b\u521b\u5efa\u200b\u5206\u533a\u200b\npartition_name = \"partition_1\"\ncollection.create_partition(partition_name)\n\n# \u200b\u5411\u200b\u5206\u533a\u200b\u63d2\u5165\u200b\u6570\u636e\u200b\npartition_data = [\n    [[random.random() for _ in range(128)] for _ in range(100)],\n    [f\"\u200b\u5206\u533a\u200b\u6807\u9898\u200b_{i}\" for i in range(100)],\n    [\"\u200b\u7279\u6b8a\u200b\u5206\u7c7b\u200b\" for _ in range(100)]\n]\n\npartition_insert_result = collection.insert(partition_data, partition_name=partition_name)\n\n# \u200b\u5728\u200b\u6307\u5b9a\u200b\u5206\u533a\u200b\u641c\u7d22\u200b\npartition_results = collection.search(\n    data=search_vectors,\n    anns_field=\"embedding\",\n    param=search_params,\n    limit=2,\n    partition_names=[partition_name],\n    output_fields=[\"title\", \"category\"]\n)\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#_10","title":"\u6df7\u5408\u200b\u641c\u7d22\u200b\uff08\u200b\u6807\u91cf\u200b + \u200b\u5411\u91cf\u200b\uff09","text":"<pre><code># \u200b\u7ed3\u5408\u200b\u6807\u91cf\u200b\u8fc7\u6ee4\u200b\u7684\u200b\u5411\u91cf\u200b\u641c\u7d22\u200b\nhybrid_search_results = collection.search(\n    data=search_vectors,\n    anns_field=\"embedding\",\n    param=search_params,\n    limit=5,\n    expr='category == \"\u200b\u5206\u7c7b\u200b_2\"',  # \u200b\u6807\u91cf\u200b\u8fc7\u6ee4\u200b\u6761\u4ef6\u200b\n    output_fields=[\"title\", \"category\"]\n)\n\nprint(\"\\n\u200b\u6df7\u5408\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b (\u200b\u5206\u7c7b\u200b\u4e3a\u200b '\u200b\u5206\u7c7b\u200b_2'):\")\nfor i, result in enumerate(hybrid_search_results):\n    print(f\"\u200b\u641c\u7d22\u200b\u5411\u91cf\u200b {i+1}:\")\n    for hit in result:\n        print(f\"  ID={hit.id}, \u200b\u8ddd\u79bb\u200b={hit.distance:.4f}, \"\n              f\"\u200b\u6807\u9898\u200b={hit.entity.get('title')}\")\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#_11","title":"\u6570\u636e\u200b\u5220\u9664","text":"<pre><code># \u200b\u5220\u9664\u200b\u7279\u5b9a\u200b\u6570\u636e\u200b\ndelete_expr = 'category == \"\u200b\u7279\u6b8a\u200b\u5206\u7c7b\u200b\"'\ncollection.delete(delete_expr)\n\nprint(\"\u200b\u6570\u636e\u200b\u5220\u9664\u200b\u5b8c\u6210\u200b\")\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#_12","title":"\u96c6\u5408\u200b\u7ba1\u7406","text":"<pre><code># \u200b\u83b7\u53d6\u200b\u96c6\u5408\u200b\u4fe1\u606f\u200b\ncollection_info = {\n    \"\u200b\u5b9e\u4f53\u200b\u6570\u91cf\u200b\": collection.num_entities,\n    \"\u200b\u5206\u533a\u200b\u5217\u8868\u200b\": collection.partitions\n}\n\nprint(\"\u200b\u96c6\u5408\u200b\u4fe1\u606f\u200b:\")\nfor key, value in collection_info.items():\n    print(f\"  {key}: {value}\")\n\n# \u200b\u91ca\u653e\u200b\u96c6\u5408\u200b\u5185\u5b58\u200b\ncollection.release()\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#6","title":"6. \u200b\u6027\u80fd\u200b\u4f18\u5316","text":""},{"location":"Vector%20Stores/Milvus/tutorial/#_13","title":"\u7d22\u5f15\u200b\u9009\u62e9\u200b\u7b56\u7565","text":"<pre><code>def create_optimized_index(collection, field_name, data_size):\n    \"\"\"\u200b\u6839\u636e\u200b\u6570\u636e\u91cf\u200b\u9009\u62e9\u200b\u6700\u4f18\u200b\u7d22\u5f15\u200b\"\"\"\n    if data_size &lt; 10000:\n        # \u200b\u5c0f\u200b\u6570\u636e\u91cf\u200b\u4f7f\u7528\u200bFLAT\n        index_params = {\n            \"index_type\": \"FLAT\",\n            \"metric_type\": \"L2\"\n        }\n    elif data_size &lt; 1000000:\n        # \u200b\u4e2d\u7b49\u200b\u6570\u636e\u91cf\u200b\u4f7f\u7528\u200bIVF_FLAT\n        index_params = {\n            \"index_type\": \"IVF_FLAT\",\n            \"metric_type\": \"L2\",\n            \"params\": {\"nlist\": 1024}\n        }\n    else:\n        # \u200b\u5927\u200b\u6570\u636e\u91cf\u200b\u4f7f\u7528\u200bHNSW\n        index_params = {\n            \"index_type\": \"HNSW\",\n            \"metric_type\": \"L2\",\n            \"params\": {\"M\": 16, \"efConstruction\": 200}\n        }\n\n    collection.create_index(field_name, index_params)\n    return index_params\n\n# \u200b\u4f7f\u7528\u200b\u4f18\u5316\u200b\u7d22\u5f15\u200b\noptimized_index = create_optimized_index(collection, \"embedding\", 100000)\nprint(f\"\u200b\u521b\u5efa\u200b\u7684\u200b\u7d22\u5f15\u200b\u53c2\u6570\u200b: {optimized_index}\")\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#_14","title":"\u6279\u91cf\u200b\u64cd\u4f5c\u200b\u4f18\u5316","text":"<pre><code>def batch_insert(collection, data, batch_size=1000):\n    \"\"\"\u200b\u6279\u91cf\u200b\u63d2\u5165\u200b\u6570\u636e\u200b\u4f18\u5316\u200b\"\"\"\n    total_records = len(data[0])\n    inserted_count = 0\n\n    for i in range(0, total_records, batch_size):\n        end_idx = min(i + batch_size, total_records)\n        batch_data = [field[i:end_idx] for field in data]\n\n        insert_result = collection.insert(batch_data)\n        inserted_count += len(insert_result.primary_keys)\n\n        print(f\"\u200b\u5df2\u200b\u63d2\u5165\u200b {inserted_count}/{total_records} \u200b\u6761\u200b\u6570\u636e\u200b\")\n\n    return inserted_count\n\n# \u200b\u4f7f\u7528\u200b\u6279\u91cf\u200b\u63d2\u5165\u200b\nlarge_embeddings = [[random.random() for _ in range(128)] for _ in range(5000)]\nlarge_titles = [f\"\u200b\u6279\u91cf\u200b\u6807\u9898\u200b_{i}\" for i in range(5000)]\nlarge_categories = [f\"\u200b\u5206\u7c7b\u200b_{random.randint(1, 3)}\" for _ in range(5000)]\n\nlarge_data = [large_embeddings, large_titles, large_categories]\nbatch_insert(collection, large_data, batch_size=500)\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#7","title":"7. \u200b\u5b9e\u6218\u200b\u6848\u4f8b","text":""},{"location":"Vector%20Stores/Milvus/tutorial/#_15","title":"\u6848\u4f8b\u200b\uff1a\u200b\u56fe\u50cf\u200b\u68c0\u7d22\u7cfb\u7edf","text":"<pre><code>import numpy as np\nfrom PIL import Image\nimport requests\nfrom io import BytesIO\n\nclass ImageSearchSystem:\n    def __init__(self, collection_name=\"image_search\"):\n        self.collection_name = collection_name\n        self.setup_collection()\n\n    def setup_collection(self):\n        \"\"\"\u200b\u8bbe\u7f6e\u200b\u56fe\u50cf\u200b\u641c\u7d22\u200b\u96c6\u5408\u200b\"\"\"\n        if utility.has_collection(self.collection_name):\n            self.collection = Collection(self.collection_name)\n            return\n\n        fields = [\n            FieldSchema(name=\"id\", dtype=DataType.INT64, is_primary=True, auto_id=True),\n            FieldSchema(name=\"image_vector\", dtype=DataType.FLOAT_VECTOR, dim=512),\n            FieldSchema(name=\"image_url\", dtype=DataType.VARCHAR, max_length=500),\n            FieldSchema(name=\"tags\", dtype=DataType.VARCHAR, max_length=200),\n            FieldSchema(name=\"upload_time\", dtype=DataType.INT64)\n        ]\n\n        schema = CollectionSchema(fields, \"\u200b\u56fe\u50cf\u200b\u641c\u7d22\u200b\u96c6\u5408\u200b\")\n        self.collection = Collection(self.collection_name, schema)\n\n        # \u200b\u521b\u5efa\u200b\u7d22\u5f15\u200b\n        index_params = {\n            \"index_type\": \"IVF_FLAT\",\n            \"metric_type\": \"COSINE\",  # \u200b\u56fe\u50cf\u200b\u641c\u7d22\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200b\u4f59\u5f26\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\n            \"params\": {\"nlist\": 1024}\n        }\n        self.collection.create_index(\"image_vector\", index_params)\n\n    def add_image(self, image_vector, image_url, tags):\n        \"\"\"\u200b\u6dfb\u52a0\u200b\u56fe\u50cf\u200b\u5230\u200b\u7cfb\u7edf\u200b\"\"\"\n        current_time = int(time.time())\n        data = [\n            [image_vector],\n            [image_url],\n            [tags],\n            [current_time]\n        ]\n\n        result = self.collection.insert(data)\n        return result.primary_keys[0]\n\n    def search_similar_images(self, query_vector, top_k=10, tag_filter=None):\n        \"\"\"\u200b\u641c\u7d22\u200b\u76f8\u4f3c\u200b\u56fe\u50cf\u200b\"\"\"\n        self.collection.load()\n\n        search_params = {\n            \"metric_type\": \"COSINE\",\n            \"params\": {\"nprobe\": 16}\n        }\n\n        expr = None\n        if tag_filter:\n            expr = f'tags like \"%{tag_filter}%\"'\n\n        results = self.collection.search(\n            data=[query_vector],\n            anns_field=\"image_vector\",\n            param=search_params,\n            limit=top_k,\n            expr=expr,\n            output_fields=[\"image_url\", \"tags\", \"upload_time\"]\n        )\n\n        return results[0]\n\n    def demo_simulation(self):\n        \"\"\"\u200b\u6f14\u793a\u200b\u6a21\u62df\u200b\"\"\"\n        print(\"=== \u200b\u56fe\u50cf\u200b\u68c0\u7d22\u7cfb\u7edf\u200b\u6f14\u793a\u200b ===\")\n\n        # \u200b\u6a21\u62df\u200b\u6dfb\u52a0\u200b\u56fe\u50cf\u200b\u6570\u636e\u200b\n        print(\"\\n1. \u200b\u6dfb\u52a0\u200b\u56fe\u50cf\u200b\u6570\u636e\u200b...\")\n        for i in range(100):\n            # \u200b\u6a21\u62df\u200b512\u200b\u7ef4\u200b\u56fe\u50cf\u200b\u7279\u5f81\u5411\u91cf\u200b\n            fake_vector = [random.random() for _ in range(512)]\n            tags = f\"tag_{random.randint(1, 10)}\"\n            self.add_image(fake_vector, f\"http://example.com/image_{i}.jpg\", tags)\n\n        # \u200b\u6a21\u62df\u200b\u641c\u7d22\u200b\n        print(\"\\n2. \u200b\u6267\u884c\u200b\u76f8\u4f3c\u200b\u56fe\u50cf\u200b\u641c\u7d22\u200b...\")\n        query_vector = [random.random() for _ in range(512)]\n        results = self.search_similar_images(query_vector, top_k=5)\n\n        print(\"\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b:\")\n        for i, hit in enumerate(results):\n            print(f\"  {i+1}. \u200b\u76f8\u4f3c\u200b\u5ea6\u200b: {1 - hit.distance:.4f}, \"\n                  f\"URL: {hit.entity.get('image_url')}, \"\n                  f\"\u200b\u6807\u7b7e\u200b: {hit.entity.get('tags')}\")\n\n# \u200b\u8fd0\u884c\u200b\u6f14\u793a\u200b\nimage_system = ImageSearchSystem()\nimage_system.demo_simulation()\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#_16","title":"\u6848\u4f8b\u200b\uff1a\u200b\u63a8\u8350\u200b\u7cfb\u7edf","text":"<pre><code>class RecommendationSystem:\n    def __init__(self):\n        self.collection_name = \"user_embeddings\"\n        self.setup_collection()\n\n    def setup_collection(self):\n        \"\"\"\u200b\u8bbe\u7f6e\u200b\u7528\u6237\u200b\u5d4c\u5165\u200b\u5411\u91cf\u200b\u96c6\u5408\u200b\"\"\"\n        if utility.has_collection(self.collection_name):\n            self.collection = Collection(self.collection_name)\n            return\n\n        fields = [\n            FieldSchema(name=\"user_id\", dtype=DataType.INT64, is_primary=True),\n            FieldSchema(name=\"user_embedding\", dtype=DataType.FLOAT_VECTOR, dim=256),\n            FieldSchema(name=\"user_features\", dtype=DataType.VARCHAR, max_length=500),\n            FieldSchema(name=\"last_active\", dtype=DataType.INT64)\n        ]\n\n        schema = CollectionSchema(fields, \"\u200b\u7528\u6237\u200b\u63a8\u8350\u200b\u7cfb\u7edf\u200b\")\n        self.collection = Collection(self.collection_name, schema)\n\n        index_params = {\n            \"index_type\": \"HNSW\",\n            \"metric_type\": \"IP\",  # \u200b\u63a8\u8350\u200b\u7cfb\u7edf\u200b\u5e38\u7528\u200b\u5185\u79ef\u200b\n            \"params\": {\"M\": 16, \"efConstruction\": 200}\n        }\n        self.collection.create_index(\"user_embedding\", index_params)\n\n    def add_user(self, user_id, embedding, features):\n        \"\"\"\u200b\u6dfb\u52a0\u200b\u7528\u6237\u200b\"\"\"\n        current_time = int(time.time())\n        data = [\n            [user_id],\n            [embedding],\n            [features],\n            [current_time]\n        ]\n\n        self.collection.insert(data)\n\n    def find_similar_users(self, user_id, top_k=5):\n        \"\"\"\u200b\u67e5\u627e\u200b\u76f8\u4f3c\u200b\u7528\u6237\u200b\"\"\"\n        self.collection.load()\n\n        # \u200b\u5148\u200b\u83b7\u53d6\u200b\u76ee\u6807\u200b\u7528\u6237\u200b\u7684\u200b\u5411\u91cf\u200b\n        target_user = self.collection.query(\n            expr=f\"user_id == {user_id}\",\n            output_fields=[\"user_embedding\"]\n        )\n\n        if not target_user:\n            return []\n\n        target_embedding = target_user[0][\"user_embedding\"]\n\n        search_params = {\n            \"metric_type\": \"IP\",\n            \"params\": {\"ef\": 50}\n        }\n\n        results = self.collection.search(\n            data=[target_embedding],\n            anns_field=\"user_embedding\",\n            param=search_params,\n            limit=top_k + 1,  # \u200b\u5305\u542b\u200b\u81ea\u5df1\u200b\n            output_fields=[\"user_id\", \"user_features\"]\n        )\n\n        # \u200b\u8fc7\u6ee4\u200b\u6389\u200b\u81ea\u5df1\u200b\n        similar_users = []\n        for hit in results[0]:\n            if hit.id != user_id:\n                similar_users.append({\n                    \"user_id\": hit.id,\n                    \"score\": hit.distance,\n                    \"features\": hit.entity.get(\"user_features\")\n                })\n\n        return similar_users[:top_k]\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nrec_system = RecommendationSystem()\n\n# \u200b\u6dfb\u52a0\u200b\u793a\u4f8b\u200b\u7528\u6237\u200b\nfor i in range(1, 101):\n    embedding = [random.random() for _ in range(256)]\n    features = f\"age_{random.randint(18, 60)},interests_{random.randint(1, 10)}\"\n    rec_system.add_user(i, embedding, features)\n\n# \u200b\u67e5\u627e\u200b\u76f8\u4f3c\u200b\u7528\u6237\u200b\nsimilar_users = rec_system.find_similar_users(1, top_k=3)\nprint(\"\u200b\u76f8\u4f3c\u200b\u7528\u6237\u200b\u63a8\u8350\u200b:\")\nfor user in similar_users:\n    print(f\"\u200b\u7528\u6237\u200bID: {user['user_id']}, \u200b\u76f8\u4f3c\u200b\u5ea6\u200b: {user['score']:.4f}\")\n</code></pre>"},{"location":"Vector%20Stores/Milvus/tutorial/#_17","title":"\u603b\u7ed3","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u6db5\u76d6\u200b\u4e86\u200b PyMilvus \u200b\u4ece\u200b\u57fa\u7840\u200b\u5230\u200b\u8fdb\u9636\u200b\u7684\u200b\u5b8c\u6574\u200b\u4f7f\u7528\u200b\u6d41\u7a0b\u200b\uff1a</p> <ol> <li>\u200b\u57fa\u7840\u200b\u6982\u5ff5\u200b\uff1a\u200b\u7406\u89e3\u200b Milvus \u200b\u7684\u200b\u6838\u5fc3\u200b\u7ec4\u4ef6\u200b\u548c\u200b\u6570\u636e\u6a21\u578b\u200b</li> <li>\u200b\u57fa\u7840\u200b\u64cd\u4f5c\u200b\uff1a\u200b\u8fde\u63a5\u200b\u3001\u200b\u96c6\u5408\u200b\u7ba1\u7406\u200b\u3001\u200b\u6570\u636e\u200b\u63d2\u5165\u200b\u3001\u200b\u641c\u7d22\u200b\u67e5\u8be2\u200b</li> <li>\u200b\u8fdb\u9636\u200b\u529f\u80fd\u200b\uff1a\u200b\u5206\u533a\u200b\u7ba1\u7406\u200b\u3001\u200b\u6df7\u5408\u200b\u641c\u7d22\u200b\u3001\u200b\u6570\u636e\u200b\u5220\u9664\u200b</li> <li>\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\uff1a\u200b\u7d22\u5f15\u200b\u9009\u62e9\u200b\u3001\u200b\u6279\u91cf\u200b\u64cd\u4f5c\u200b</li> <li>\u200b\u5b9e\u6218\u200b\u6848\u4f8b\u200b\uff1a\u200b\u56fe\u50cf\u200b\u68c0\u7d22\u200b\u3001\u200b\u63a8\u8350\u200b\u7cfb\u7edf\u200b\u7b49\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b</li> </ol> <p>\u200b\u901a\u8fc7\u200b\u638c\u63e1\u200b\u8fd9\u4e9b\u200b\u77e5\u8bc6\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b\u5b9e\u9645\u200b\u9879\u76ee\u200b\u4e2d\u200b\u9ad8\u6548\u200b\u5730\u200b\u4f7f\u7528\u200b Milvus \u200b\u8fdb\u884c\u200b\u5411\u91cf\u200b\u6570\u636e\u200b\u7684\u200b\u7ba1\u7406\u200b\u548c\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u641c\u7d22\u200b\u3002\u200b\u8bb0\u5f97\u200b\u6839\u636e\u200b\u5177\u4f53\u200b\u4e1a\u52a1\u200b\u573a\u666f\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u7d22\u5f15\u200b\u7c7b\u578b\u200b\u548c\u200b\u641c\u7d22\u200b\u53c2\u6570\u200b\uff0c\u200b\u4ee5\u200b\u8fbe\u5230\u6700\u4f73\u200b\u7684\u200b\u6027\u80fd\u200b\u6548\u679c\u200b\u3002</p>"},{"location":"deeplearning/interview/","title":"\u6df1\u5ea6\u200b\u5b66\u4e60","text":""},{"location":"deeplearning/interview/#_2","title":"\u4e00\u200b\u3001\u200b\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"deeplearning/interview/#_3","title":"\ud83e\udde0 \u200b\u4e00\u200b\u3001\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u539f\u7406","text":"<p>\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u662f\u200b\u4e00\u79cd\u200b\u6a21\u62df\u200b\u4eba\u8111\u200b\u795e\u7ecf\u5143\u200b\u7ed3\u6784\u200b\u7684\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u3002 \u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\uff1a</p> <p>\u200b\u901a\u8fc7\u200b\u591a\u5c42\u200b\u975e\u7ebf\u6027\u200b\u53d8\u6362\u200b\uff0c\u200b\u5c06\u200b\u8f93\u5165\u200b\u7279\u5f81\u200b\u6620\u5c04\u200b\u5230\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b\u3002</p>"},{"location":"deeplearning/interview/#1-perceptron","title":"1\ufe0f\u20e3 \u200b\u795e\u7ecf\u5143\u200b\u6a21\u578b\u200b\uff08Perceptron\uff09","text":"<p>\u200b\u6bcf\u4e2a\u200b\u795e\u7ecf\u5143\u200b\u63a5\u53d7\u200b\u8f93\u5165\u200b \\(x_1, x_2, \\dots, x_n\\)\uff0c\u200b\u8ba1\u7b97\u200b\u52a0\u6743\u200b\u548c\u200b\u518d\u200b\u52a0\u4e0a\u200b\u504f\u7f6e\u200b\uff1a</p> \\[ z = \\sum_{i=1}^n w_i x_i + b \\] <p>\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b \\(f(z)\\) \u200b\u5f97\u5230\u200b\u8f93\u51fa\u200b\uff1a</p> \\[ a = f(z) \\] <p>\u200b\u5e38\u89c1\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\uff1a</p> \u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b \u200b\u8868\u8fbe\u5f0f\u200b \u200b\u7279\u70b9\u200b Sigmoid \\(f(z) = \\frac{1}{1+e^{-z}}\\) \u200b\u5e73\u6ed1\u200b\u3001\u200b\u9002\u5408\u200b\u4e8c\u200b\u5206\u7c7b\u200b\uff0c\u200b\u4f46\u200b\u53ef\u80fd\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b ReLU \\(f(z) = \\max(0, z)\\) \u200b\u5e38\u7528\u200b\u3001\u200b\u6536\u655b\u200b\u5feb\u200b Tanh \\(f(z) = \\tanh(z)\\) \u200b\u8f93\u51fa\u200b\u8303\u56f4\u200b \\((-1,1)\\)\uff0c\u200b\u5bf9\u79f0\u6027\u200b\u597d\u200b Softmax \\(f_i(z) = \\frac{e^{z_i}}{\\sum_j e^{z_j}}\\) \u200b\u591a\u200b\u5206\u7c7b\u200b\u8f93\u51fa"},{"location":"deeplearning/interview/#2-network-architecture","title":"2\ufe0f\u20e3 \u200b\u7f51\u7edc\u7ed3\u6784\u200b\uff08Network Architecture\uff09","text":"<p>\u200b\u5178\u578b\u200b\u524d\u9988\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7ed3\u6784\u200b\uff1a</p> \\[ \\text{Input} \\rightarrow \\text{Hidden Layers} \\rightarrow \\text{Output} \\] <p>\u200b\u6bcf\u200b\u4e00\u5c42\u200b\u7684\u200b\u8f93\u51fa\u200b\u4f5c\u4e3a\u200b\u4e0b\u200b\u4e00\u5c42\u200b\u7684\u200b\u8f93\u5165\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\u4e00\u4e2a\u200b\u4e24\u5c42\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff1a</p> <ul> <li>\u200b\u8f93\u5165\u200b\u5c42\u200b\uff1a\\(x \\in \\mathbb{R}^n\\)</li> <li>\u200b\u9690\u85cf\u200b\u5c42\u200b\uff1a\\(h = f(W_1 x + b_1)\\)</li> <li>\u200b\u8f93\u51fa\u200b\u5c42\u200b\uff1a\\(\\hat{y} = g(W_2 h + b_2)\\)</li> </ul>"},{"location":"deeplearning/interview/#_4","title":"\u2699\ufe0f \u200b\u4e8c\u200b\u3001\u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":""},{"location":"deeplearning/interview/#1-forward-propagation","title":"1\ufe0f\u20e3 \u200b\u524d\u5411\u200b\u4f20\u64ad\u200b\uff08Forward Propagation\uff09","text":"<p>\u200b\u8f93\u5165\u200b \\(x\\) \u200b\u7ecf\u5404\u5c42\u200b\u7ebf\u6027\u53d8\u6362\u200b + \u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\uff1a $$ z^{(l)} = W^{(l)} a^{(l-1)} + b^{(l)} \\ a^{(l)} = f^{(l)}(z^{(l)}) $$</p> <p>\u200b\u6700\u7ec8\u200b\u8f93\u51fa\u200b\u9884\u6d4b\u200b\uff1a $$ \\hat{y} = a^{(L)} $$ \u200b\u5176\u4e2d\u200b \\(L\\) \u200b\u662f\u200b\u7f51\u7edc\u200b\u7684\u200b\u5c42\u6570\u200b\u3002</p>"},{"location":"deeplearning/interview/#2-loss-function","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff08Loss Function\uff09","text":""},{"location":"deeplearning/interview/#1","title":"\uff081\uff09\u200b\u56de\u5f52\u200b\u95ee\u9898","text":"<p>\u200b\u5e38\u7528\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE\uff09\uff1a $$ L = \\frac{1}{2m}\\sum_{i=1}^{m} (\\hat{y}_i - y_i)^2 $$</p>"},{"location":"deeplearning/interview/#2","title":"\uff082\uff09\u200b\u5206\u7c7b\u200b\u95ee\u9898","text":"<p>\u200b\u5e38\u7528\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b\uff08Cross-Entropy\uff09\uff1a $$ L = -\\frac{1}{m} \\sum_{i=1}^{m} \\sum_{k=1}^{K} y_{ik} \\log(\\hat{y}_{ik}) $$</p>"},{"location":"deeplearning/interview/#3-backpropagation","title":"3\ufe0f\u20e3 \u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\uff08Backpropagation\uff09","text":"<p>\u200b\u76ee\u6807\u200b\uff1a\u200b\u6700\u5c0f\u5316\u200b\u635f\u5931\u200b\u51fd\u6570\u200b \\(L\\)\u3002 \u200b\u4f7f\u7528\u200b \u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6cd5\u200b\uff08Gradient Descent\uff09 \u200b\u66f4\u65b0\u200b\u53c2\u6570\u200b\u3002</p> <p>\u200b\u5bf9\u200b\u6743\u91cd\u200b\u6c42\u5bfc\u200b\uff1a $$ \\frac{\\partial L}{\\partial W^{(l)}} = \\frac{\\partial L}{\\partial a^{(l)}} \\cdot \\frac{\\partial a^{(l)}}{\\partial z^{(l)}} \\cdot \\frac{\\partial z^{(l)}}{\\partial W^{(l)}} $$</p> <p>\u200b\u66f4\u65b0\u200b\u53c2\u6570\u200b\uff1a $$ W^{(l)} := W^{(l)} - \\eta \\frac{\\partial L}{\\partial W^{(l)}}, \\quad b^{(l)} := b^{(l)} - \\eta \\frac{\\partial L}{\\partial b^{(l)}} $$</p> <p>\u200b\u5176\u4e2d\u200b \\(\\eta\\) \u200b\u4e3a\u200b\u5b66\u4e60\u200b\u7387\u200b\uff08learning rate\uff09\u3002</p>"},{"location":"deeplearning/interview/#_5","title":"\ud83d\udcca \u200b\u4e09\u200b\u3001\u200b\u8bc4\u4f30\u200b\u6307\u6807","text":"\u7c7b\u578b\u200b \u200b\u6307\u6807\u200b \u200b\u516c\u5f0f\u200b \u200b\u5206\u7c7b\u200b \u200b\u51c6\u786e\u7387\u200b\uff08Accuracy\uff09 \\(\\text{Accuracy} = \\frac{TP + TN}{TP + TN + FP + FN}\\) \u200b\u5206\u7c7b\u200b \u200b\u7cbe\u786e\u200b\u7387\u200b\uff08Precision\uff09 \\(\\text{Precision} = \\frac{TP}{TP + FP}\\) \u200b\u5206\u7c7b\u200b \u200b\u53ec\u56de\u200b\u7387\u200b\uff08Recall\uff09 \\(\\text{Recall} = \\frac{TP}{TP + FN}\\) \u200b\u5206\u7c7b\u200b F1 \u200b\u5206\u6570\u200b \\(F1 = 2 \\times \\frac{P \\times R}{P + R}\\) \u200b\u56de\u5f52\u200b \u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE\uff09 \\(\\text{MSE} = \\frac{1}{n}\\sum(\\hat{y} - y)^2\\) \u200b\u56de\u5f52\u200b \\(R^2\\) \\(R^2 = 1 - \\frac{\\sum(\\hat{y}-y)^2}{\\sum(y-\\bar{y})^2}\\)"},{"location":"deeplearning/interview/#pytorch","title":"\ud83d\udcbb \u200b\u56db\u200b\u3001\u200b\u5b9e\u73b0\u200b\u4ee3\u7801\u200b\uff08PyTorch\uff09","text":"<p>\u200b\u4ee5\u4e0b\u200b\u793a\u4f8b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u4e24\u5c42\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u5b9e\u73b0\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u3002</p> <pre><code>import torch\nimport torch.nn as nn\nimport torch.optim as optim\nfrom sklearn.datasets import make_moons\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\n# 1. \u200b\u6570\u636e\u200b\u51c6\u5907\u200b\nX, y = make_moons(n_samples=1000, noise=0.2, random_state=42)\nscaler = StandardScaler()\nX = scaler.fit_transform(X)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\nX_train = torch.FloatTensor(X_train)\ny_train = torch.LongTensor(y_train)\nX_test = torch.FloatTensor(X_test)\ny_test = torch.LongTensor(y_test)\n\n# 2. \u200b\u6a21\u578b\u200b\u5b9a\u4e49\u200b\nclass NeuralNetwork(nn.Module):\n    def __init__(self, input_dim, hidden_dim, output_dim):\n        super(NeuralNetwork, self).__init__()\n        self.fc1 = nn.Linear(input_dim, hidden_dim)\n        self.relu = nn.ReLU()\n        self.fc2 = nn.Linear(hidden_dim, output_dim)\n\n    def forward(self, x):\n        x = self.fc1(x)\n        x = self.relu(x)\n        x = self.fc2(x)\n        return x\n\nmodel = NeuralNetwork(2, 16, 2)\n\n# 3. \u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4e0e\u200b\u4f18\u5316\u200b\u5668\u200b\ncriterion = nn.CrossEntropyLoss()\noptimizer = optim.Adam(model.parameters(), lr=0.01)\n\n# 4. \u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\nfor epoch in range(200):\n    outputs = model(X_train)\n    loss = criterion(outputs, y_train)\n\n    optimizer.zero_grad()\n    loss.backward()\n    optimizer.step()\n\n    if (epoch+1) % 20 == 0:\n        print(f\"Epoch [{epoch+1}/200], Loss: {loss.item():.4f}\")\n\n# 5. \u200b\u8bc4\u4f30\u200b\nwith torch.no_grad():\n    y_pred = model(X_test)\n    acc = (y_pred.argmax(1) == y_test).float().mean()\n    print(f\"Test Accuracy: {acc:.4f}\")\n</code></pre>"},{"location":"deeplearning/interview/#_6","title":"\ud83e\udde9 \u200b\u4e94\u200b\u3001\u200b\u6a21\u578b\u200b\u4f18\u5316\u200b\u65b9\u6cd5","text":"\u65b9\u6cd5\u200b \u200b\u8bf4\u660e\u200b \u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u6574\u200b\uff08LR Scheduler\uff09 \u200b\u63a7\u5236\u200b\u5b66\u4e60\u200b\u7387\u200b\u8870\u51cf\u200b \u200b\u6743\u91cd\u200b\u521d\u59cb\u5316\u200b Xavier\u3001He \u200b\u521d\u59cb\u5316\u200b\u80fd\u200b\u6539\u5584\u200b\u6536\u655b\u200b \u200b\u6b63\u5219\u200b\u5316\u200b L2 \u200b\u6b63\u5219\u200b\u3001Dropout \u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b Batch Normalization \u200b\u7a33\u5b9a\u200b\u5206\u5e03\u200b\uff0c\u200b\u52a0\u901f\u200b\u8bad\u7ec3\u200b \u200b\u65e9\u200b\u505c\u6cd5\u200b\uff08Early Stopping\uff09 \u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b \u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\uff08Data Augmentation\uff09 \u200b\u6269\u5145\u200b\u6837\u672c\u200b\u96c6\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u6cdb\u5316\u200b\u6027"},{"location":"deeplearning/interview/#_7","title":"\u26a0\ufe0f \u200b\u516d\u200b\u3001\u200b\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u9700\u200b\u6807\u51c6\u5316\u200b\u6216\u200b\u5f52\u4e00\u5316\u200b\uff1b</li> <li>\u200b\u907f\u514d\u200b\u5b66\u4e60\u200b\u7387\u8fc7\u200b\u5927\u200b\u6216\u200b\u8fc7\u200b\u5c0f\u200b\uff1b</li> <li>ReLU \u200b\u53ef\u200b\u89e3\u51b3\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\uff0c\u200b\u4f46\u200b\u6ce8\u610f\u200b \u201cReLU \u200b\u6b7b\u4ea1\u200b\u201d \u200b\u95ee\u9898\u200b\uff1b</li> <li>\u200b\u7f51\u7edc\u5c42\u200b\u6570\u8fc7\u200b\u591a\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u8fc7\u200b\u62df\u5408\u200b\uff1b</li> <li>\u200b\u4f7f\u7528\u200b GPU \u200b\u53ef\u200b\u663e\u8457\u200b\u52a0\u901f\u200b\u8bad\u7ec3\u200b\uff1b</li> <li>\u200b\u5408\u7406\u200b\u9009\u62e9\u200b\u6279\u200b\u5927\u5c0f\u200b\uff08batch size\uff09\u3002</li> </ol>"},{"location":"deeplearning/interview/#_8","title":"\u2696\ufe0f \u200b\u4e03\u200b\u3001\u200b\u4f18\u7f3a\u70b9\u200b\u603b\u7ed3","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u80fd\u200b\u5b66\u4e60\u200b\u590d\u6742\u200b\u975e\u7ebf\u6027\u200b\u5173\u7cfb\u200b \u200b\u9700\u8981\u200b\u5927\u91cf\u200b\u6570\u636e\u200b\u548c\u200b\u8ba1\u7b97\u8d44\u6e90\u200b \u200b\u6cdb\u5316\u200b\u80fd\u529b\u200b\u5f3a\u200b \u200b\u4e0d\u6613\u200b\u89e3\u91ca\u200b\uff08\u200b\u9ed1\u7bb1\u200b\uff09 \u200b\u9002\u7528\u8303\u56f4\u200b\u5e7f\u200b\uff08\u200b\u5206\u7c7b\u200b\u3001\u200b\u56de\u5f52\u200b\u3001\u200b\u751f\u6210\u200b\uff09 \u200b\u8d85\u200b\u53c2\u6570\u200b\u8c03\u8282\u200b\u56f0\u96be\u200b \u200b\u53ef\u7aef\u200b\u5230\u200b\u7aef\u200b\u5b66\u4e60\u200b \u200b\u5bb9\u6613\u200b\u8fc7\u200b\u62df\u5408"},{"location":"deeplearning/interview/#_9","title":"\ud83e\udded \u200b\u516b\u200b\u3001\u200b\u5b66\u4e60\u200b\u5efa\u8bae\u200b\u4e0e\u200b\u8fdb\u9636\u200b\u8def\u7ebf","text":"\u9636\u6bb5\u200b \u200b\u5b66\u4e60\u200b\u5185\u5bb9\u200b \u200b\u5de5\u5177\u200b \u200b\u5165\u95e8\u200b \u200b\u611f\u77e5\u673a\u200b\u3001\u200b\u524d\u5411\u200b\u4f20\u64ad\u200b\u3001\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b Numpy \u200b\u8fdb\u9636\u200b \u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\u3001\u200b\u4f18\u5316\u200b\u5668\u200b\u3001\u200b\u6b63\u5219\u200b\u5316\u200b PyTorch \u200b\u63d0\u5347\u200b CNN\u3001RNN\u3001LSTM PyTorch / TensorFlow \u200b\u9ad8\u9636\u200b Transformer\u3001\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b HuggingFace Transformers \u200b\u90e8\u7f72\u200b ONNX\u3001TensorRT\u3001Triton \u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u90e8\u7f72\u200b\u6846\u67b6"},{"location":"deeplearning/interview/#cnn","title":"\u4e8c\u200b\u3001CNN","text":""},{"location":"deeplearning/interview/#cnn-convolutional-neural-network","title":"\ud83e\udde0 \u200b\u4e00\u200b\u3001CNN \u200b\u539f\u7406\u200b\uff08Convolutional Neural Network\uff09","text":"<p>\u200b\u5377\u79ef\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff08CNN\uff09\u200b\u662f\u200b\u4e00\u7c7b\u200b\u4e13\u200b\u4e3a\u200b\u5904\u7406\u200b\u5177\u6709\u200b\u7f51\u683c\u200b\u7ed3\u6784\u200b\u6570\u636e\u200b\uff08\u200b\u5982\u200b\u56fe\u50cf\u200b\uff09\u200b\u8bbe\u8ba1\u200b\u7684\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u3002 \u200b\u4f20\u7edf\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u5bf9\u200b\u8f93\u5165\u200b\u7279\u5f81\u200b\u5b8c\u5168\u200b\u8fde\u63a5\u200b\uff0c\u200b\u800c\u200b CNN \u200b\u901a\u8fc7\u200b \u200b\u5c40\u90e8\u200b\u611f\u53d7\u200b\u91ce\u200b\uff08local receptive field\uff09 \u200b\u548c\u200b \u200b\u6743\u503c\u200b\u5171\u4eab\u200b\uff08weight sharing\uff09\uff0c\u200b\u663e\u8457\u200b\u51cf\u5c11\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u5e76\u200b\u63d0\u5347\u200b\u7279\u5f81\u63d0\u53d6\u200b\u80fd\u529b\u200b\u3002</p>"},{"location":"deeplearning/interview/#1-cnn","title":"1\ufe0f\u20e3 CNN \u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3","text":"<ol> <li>\u200b\u5377\u79ef\u200b\u5c42\u200b\uff08Convolution Layer\uff09\uff1a\u200b\u63d0\u53d6\u200b\u5c40\u90e8\u200b\u7279\u5f81\u200b</li> <li>\u200b\u6c60\u5316\u5c42\u200b\uff08Pooling Layer\uff09\uff1a\u200b\u964d\u7ef4\u200b\u4e0e\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b</li> <li>\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\uff08Fully Connected Layer\uff09\uff1a\u200b\u6574\u5408\u200b\u7279\u5f81\u200b\u8fdb\u884c\u200b\u5206\u7c7b\u200b\u6216\u200b\u56de\u5f52\u200b</li> </ol> <p>\u200b\u5178\u578b\u200b\u7ed3\u6784\u200b\uff1a</p> \\[ \\text{Input} \\rightarrow [\\text{Conv + ReLU + Pool}]^n \\rightarrow \\text{FC} \\rightarrow \\text{Output} \\]"},{"location":"deeplearning/interview/#2-convolution-operation","title":"2\ufe0f\u20e3 \u200b\u5377\u79ef\u200b\u64cd\u4f5c\u200b\uff08Convolution Operation\uff09","text":"<p>\u200b\u4ee5\u200b\u4e8c\u7ef4\u200b\u5377\u79ef\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u7ed9\u5b9a\u200b\u8f93\u5165\u200b\u77e9\u9635\u200b \\(X\\) \u200b\u548c\u200b\u5377\u79ef\u200b\u6838\u200b\uff08\u200b\u6743\u91cd\u200b\u77e9\u9635\u200b\uff09\\(K\\)\uff1a</p> \\[ Y(i,j) = \\sum_m \\sum_n X(i+m, j+n) \\cdot K(m,n) \\] <p>\u200b\u8be5\u200b\u64cd\u4f5c\u200b\u79f0\u4e3a\u200b\u5377\u79ef\u200b\uff08Convolution\uff09\u3002 \u200b\u5377\u79ef\u200b\u5c42\u200b\u901a\u8fc7\u200b\u6ed1\u52a8\u200b\u5377\u79ef\u200b\u6838\u5728\u200b\u8f93\u5165\u200b\u4e0a\u200b\u63d0\u53d6\u200b\u5c40\u90e8\u200b\u7279\u5f81\u200b\uff0c\u200b\u5982\u200b\u8fb9\u7f18\u200b\u3001\u200b\u7eb9\u7406\u200b\u7b49\u200b\u3002</p>"},{"location":"deeplearning/interview/#3-feature-map","title":"3\ufe0f\u20e3 \u200b\u7279\u5f81\u200b\u56fe\u200b\uff08Feature Map\uff09","text":"<p>\u200b\u6bcf\u4e2a\u200b\u5377\u79ef\u200b\u6838\u53ef\u200b\u5b66\u4e60\u200b\u4e00\u79cd\u200b\u7279\u5f81\u200b\u6a21\u5f0f\u200b\u3002 \u200b\u4e00\u4e2a\u200b\u5377\u79ef\u200b\u5c42\u200b\u53ef\u4ee5\u200b\u5305\u542b\u200b\u591a\u4e2a\u200b\u5377\u79ef\u200b\u6838\u200b\uff0c\u200b\u4ece\u800c\u200b\u751f\u6210\u200b\u591a\u4e2a\u200b\u7279\u5f81\u200b\u56fe\u200b\uff08Feature Map\uff09\u3002</p> <p>\u200b\u4f8b\u5982\u200b\u8f93\u5165\u200b\u5927\u5c0f\u200b\u4e3a\u200b \\((H, W, C_{\\text{in}})\\)\uff0c\u200b\u5377\u79ef\u200b\u6838\u200b\u5927\u5c0f\u200b\u4e3a\u200b \\((k, k, C_{\\text{in}}, C_{\\text{out}})\\)\uff0c\u200b\u5219\u200b\u8f93\u51fa\u200b\u7279\u5f81\u200b\u56fe\u200b\u5927\u5c0f\u200b\u4e3a\u200b\uff1a</p> \\[ H_{\\text{out}} = \\frac{H - k + 2p}{s} + 1, \\quad W_{\\text{out}} = \\frac{W - k + 2p}{s} + 1 \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(p\\)\uff1apadding\uff08\u200b\u586b\u5145\u200b\uff09</li> <li>\\(s\\)\uff1astride\uff08\u200b\u6b65\u5e45\u200b\uff09</li> </ul>"},{"location":"deeplearning/interview/#4-pooling-layer","title":"4\ufe0f\u20e3 \u200b\u6c60\u5316\u5c42\u200b\uff08Pooling Layer\uff09","text":"<p>\u200b\u7528\u4e8e\u200b\u964d\u7ef4\u200b\u4e0e\u200b\u7279\u5f81\u200b\u4e0d\u53d8\u6027\u200b\u63d0\u53d6\u200b\u3002</p> <p>\u200b\u5e38\u89c1\u200b\u6c60\u5316\u200b\u65b9\u5f0f\u200b\uff1a</p> <ul> <li>\u200b\u6700\u5927\u200b\u6c60\u5316\u200b\uff08Max Pooling\uff09\uff1a\u200b\u53d6\u200b\u7a97\u53e3\u200b\u5185\u200b\u6700\u5927\u503c\u200b</li> <li>\u200b\u5e73\u5747\u200b\u6c60\u5316\u200b\uff08Average Pooling\uff09\uff1a\u200b\u53d6\u200b\u7a97\u53e3\u200b\u5185\u200b\u5747\u503c\u200b</li> </ul> <p>\u200b\u516c\u5f0f\u200b\uff1a</p> \\[ Y(i,j) = \\max_{m,n} X(i+m, j+n) \\]"},{"location":"deeplearning/interview/#5","title":"5\ufe0f\u20e3 \u200b\u6fc0\u6d3b\u200b\u51fd\u6570","text":"<p>\u200b\u5377\u79ef\u200b\u5c42\u200b\u8f93\u51fa\u200b\u540e\u200b\u901a\u5e38\u200b\u63a5\u200b ReLU\uff1a $$ f(z) = \\max(0, z) $$</p> <p>ReLU \u200b\u89e3\u51b3\u200b\u4e86\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\u95ee\u9898\u200b\uff0c\u200b\u52a0\u5feb\u200b\u7f51\u7edc\u200b\u6536\u655b\u200b\u3002</p>"},{"location":"deeplearning/interview/#6-fully-connected-layer","title":"6\ufe0f\u20e3 \u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\uff08Fully Connected Layer\uff09","text":"<p>\u200b\u5377\u79ef\u200b\u5c42\u200b\u8f93\u51fa\u200b\u7684\u200b\u7279\u5f81\u200b\u5c55\u5e73\u200b\u540e\u200b\u8f93\u5165\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\u8fdb\u884c\u200b\u5206\u7c7b\u200b\uff1a $$ z = W \\cdot a + b, \\quad \\hat{y} = \\text{Softmax}(z) $$</p>"},{"location":"deeplearning/interview/#_10","title":"\ud83e\uddee \u200b\u4e8c\u200b\u3001\u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u4e0e\u200b\u635f\u5931\u200b\u51fd\u6570","text":""},{"location":"deeplearning/interview/#1-forward-propagation_1","title":"1\ufe0f\u20e3 \u200b\u524d\u5411\u200b\u4f20\u64ad\u200b\uff08Forward Propagation\uff09","text":"<p>\u200b\u5bf9\u4e8e\u200b\u5377\u79ef\u200b\u5c42\u200b\uff1a $$ z_{i,j}^{(l)} = \\sum_{m,n,c} a_{m+i, n+j, c}^{(l-1)} \\cdot w_{m,n,c}^{(l)} + b^{(l)} $$ $$ a_{i,j}^{(l)} = f(z_{i,j}^{(l)}) $$</p> <p>\u200b\u5bf9\u4e8e\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\uff1a $$ a^{(L)} = f(W^{(L)}a^{(L-1)} + b^{(L)}) $$</p>"},{"location":"deeplearning/interview/#2-loss-function_1","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff08Loss Function\uff09","text":"<p>\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u5e38\u7528\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b\uff1a $$ L = -\\frac{1}{m}\\sum_{i=1}^{m}\\sum_{k=1}^{K}y_{ik}\\log(\\hat{y}_{ik}) $$</p>"},{"location":"deeplearning/interview/#3-backpropagation_1","title":"3\ufe0f\u20e3 \u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\uff08Backpropagation\uff09","text":"<p>\u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\u901a\u8fc7\u200b\u94fe\u5f0f\u6cd5\u5219\u200b\u8ba1\u7b97\u200b\u68af\u5ea6\u200b\u3002 \u200b\u5bf9\u4e8e\u200b\u5377\u79ef\u200b\u5c42\u4e2d\u200b\u7684\u200b\u6743\u91cd\u200b\u68af\u5ea6\u200b\uff1a</p> \\[ \\frac{\\partial L}{\\partial w_{m,n,c}} = \\sum_{i,j} \\frac{\\partial L}{\\partial z_{i,j}} \\cdot a_{i+m, j+n, c}^{(l-1)} \\] <p>\u200b\u5bf9\u4e8e\u200b\u504f\u7f6e\u200b\uff1a $$ \\frac{\\partial L}{\\partial b} = \\sum_{i,j} \\frac{\\partial L}{\\partial z_{i,j}} $$</p>"},{"location":"deeplearning/interview/#_11","title":"\ud83d\udcca \u200b\u4e09\u200b\u3001\u200b\u8bc4\u4f30\u200b\u6307\u6807","text":"\u4efb\u52a1\u200b\u7c7b\u578b\u200b \u200b\u5e38\u7528\u200b\u6307\u6807\u200b \u200b\u5206\u7c7b\u200b Accuracy, Precision, Recall, F1, AUC \u200b\u56de\u5f52\u200b MSE, RMSE, MAE, \\(R^2\\) \u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b mAP\uff08mean Average Precision\uff09 \u200b\u56fe\u50cf\u200b\u5206\u5272\u200b IoU\uff08Intersection over Union\uff09"},{"location":"deeplearning/interview/#pytorch_1","title":"\ud83d\udcbb \u200b\u56db\u200b\u3001\u200b\u5b9e\u73b0\u200b\u4ee3\u7801\u200b\uff08PyTorch\uff09","text":"<p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7ecf\u5178\u200b\u7684\u200b CNN \u200b\u56fe\u50cf\u200b\u5206\u7c7b\u200b\u793a\u4f8b\u200b\uff08\u200b\u4f7f\u7528\u200b MNIST \u200b\u6570\u636e\u200b\u96c6\u200b\uff09\uff1a</p> <pre><code>import torch\nimport torch.nn as nn\nimport torch.optim as optim\nfrom torchvision import datasets, transforms\nfrom torch.utils.data import DataLoader\n\n# 1. \u200b\u6570\u636e\u200b\u51c6\u5907\u200b\ntransform = transforms.Compose([\n    transforms.ToTensor(),\n    transforms.Normalize((0.5,), (0.5,))\n])\ntrain_data = datasets.MNIST(root='./data', train=True, transform=transform, download=True)\ntest_data = datasets.MNIST(root='./data', train=False, transform=transform)\ntrain_loader = DataLoader(train_data, batch_size=64, shuffle=True)\ntest_loader = DataLoader(test_data, batch_size=1000, shuffle=False)\n\n# 2. \u200b\u6a21\u578b\u200b\u5b9a\u4e49\u200b\nclass CNN(nn.Module):\n    def __init__(self):\n        super(CNN, self).__init__()\n        self.conv1 = nn.Conv2d(1, 32, 3, 1)   # 28x28 -&gt; 26x26\n        self.conv2 = nn.Conv2d(32, 64, 3, 1)  # 26x26 -&gt; 24x24\n        self.pool = nn.MaxPool2d(2)           # 24x24 -&gt; 12x12\n        self.fc1 = nn.Linear(64*12*12, 128)\n        self.fc2 = nn.Linear(128, 10)\n        self.relu = nn.ReLU()\n\n    def forward(self, x):\n        x = self.relu(self.conv1(x))\n        x = self.relu(self.conv2(x))\n        x = self.pool(x)\n        x = torch.flatten(x, 1)\n        x = self.relu(self.fc1(x))\n        x = self.fc2(x)\n        return x\n\nmodel = CNN()\ncriterion = nn.CrossEntropyLoss()\noptimizer = optim.Adam(model.parameters(), lr=0.001)\n\n# 3. \u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\nfor epoch in range(5):\n    for data, target in train_loader:\n        optimizer.zero_grad()\n        output = model(data)\n        loss = criterion(output, target)\n        loss.backward()\n        optimizer.step()\n    print(f\"Epoch [{epoch+1}/5], Loss: {loss.item():.4f}\")\n\n# 4. \u200b\u6d4b\u8bd5\u200b\u8bc4\u4f30\u200b\ncorrect = 0\ntotal = 0\nwith torch.no_grad():\n    for data, target in test_loader:\n        output = model(data)\n        _, pred = torch.max(output.data, 1)\n        total += target.size(0)\n        correct += (pred == target).sum().item()\n\nprint(f\"Test Accuracy: {100 * correct / total:.2f}%\")\n</code></pre>"},{"location":"deeplearning/interview/#_12","title":"\ud83e\udde9 \u200b\u4e94\u200b\u3001\u200b\u6a21\u578b\u200b\u4f18\u5316\u200b\u6280\u5de7","text":"\u4f18\u5316\u200b\u65b9\u6cd5\u200b \u200b\u8bf4\u660e\u200b \u200b\u6570\u636e\u200b\u589e\u5f3a\u200b \u200b\u7ffb\u8f6c\u200b\u3001\u200b\u65cb\u8f6c\u200b\u3001\u200b\u88c1\u526a\u200b\u7b49\u200b\u65b9\u5f0f\u200b\u6269\u5145\u200b\u6570\u636e\u200b Dropout \u200b\u968f\u673a\u200b\u4e22\u5f03\u200b\u795e\u7ecf\u5143\u200b\uff0c\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b Batch Normalization \u200b\u7a33\u5b9a\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u6536\u655b\u200b\u901f\u5ea6\u200b \u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u6574\u200b \u200b\u4f7f\u7528\u200b\u8c03\u5ea6\u200b\u5668\u200b\uff08\u200b\u5982\u200b StepLR\u3001ReduceLROnPlateau\uff09 \u200b\u6743\u91cd\u200b\u521d\u59cb\u5316\u200b He \u200b\u521d\u59cb\u5316\u200b\u5e38\u7528\u200b\u4e8e\u200b ReLU \u200b\u8fc1\u79fb\u200b\u5b66\u4e60\u200b \u200b\u4f7f\u7528\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b ResNet\u3001VGG\uff09\u200b\u5fae\u8c03"},{"location":"deeplearning/interview/#_13","title":"\u26a0\ufe0f \u200b\u516d\u200b\u3001\u200b\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u9700\u200b \u200b\u5f52\u4e00\u5316\u200b\uff08Normalization\uff09\uff1b</li> <li>\u200b\u5c0f\u200b\u5377\u79ef\u200b\u6838\u200b\uff08\u200b\u5982\u200b 3\u00d73\uff09\u200b\u901a\u5e38\u200b\u6548\u679c\u200b\u66f4\u597d\u200b\uff1b</li> <li>\u200b\u589e\u52a0\u200b\u5377\u79ef\u200b\u5c42\u6570\u200b\u53ef\u200b\u63d0\u53d6\u200b\u66f4\u200b\u62bd\u8c61\u200b\u7684\u200b\u7279\u5f81\u200b\uff1b</li> <li>\u200b\u907f\u514d\u200b\u5377\u79ef\u200b\u6838\u200b\u6570\u91cf\u200b\u8fc7\u5927\u200b\u5bfc\u81f4\u200b\u8ba1\u7b97\u200b\u91cf\u200b\u66b4\u589e\u200b\uff1b</li> <li>\u200b\u5c3d\u91cf\u200b\u4f7f\u7528\u200b GPU \u200b\u52a0\u901f\u200b\u8bad\u7ec3\u200b\uff1b</li> <li>\u200b\u4f7f\u7528\u200b Dropout \u200b\u548c\u200b BN \u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b\u3002</li> </ol>"},{"location":"deeplearning/interview/#_14","title":"\u2696\ufe0f \u200b\u4e03\u200b\u3001\u200b\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u81ea\u52a8\u200b\u63d0\u53d6\u200b\u7279\u5f81\u200b\uff0c\u200b\u65e0\u9700\u200b\u624b\u5de5\u200b\u8bbe\u8ba1\u200b \u200b\u8bad\u7ec3\u200b\u65f6\u95f4\u200b\u957f\u200b \u200b\u53c2\u6570\u200b\u5171\u4eab\u200b\uff0c\u200b\u51cf\u5c11\u200b\u53c2\u200b\u6570\u91cf\u200b \u200b\u5bf9\u200b\u5c0f\u200b\u6570\u636e\u200b\u96c6\u6613\u200b\u8fc7\u200b\u62df\u5408\u200b \u200b\u5bf9\u200b\u5e73\u79fb\u200b\u3001\u200b\u7f29\u653e\u200b\u7b49\u200b\u5177\u6709\u200b\u9c81\u68d2\u6027\u200b \u200b\u4e0d\u6613\u200b\u89e3\u91ca\u200b\uff08\u200b\u9ed1\u7bb1\u200b\uff09 \u200b\u9002\u5408\u200b\u56fe\u50cf\u200b\u3001\u200b\u8bed\u97f3\u200b\u3001\u200b\u89c6\u9891\u200b\u4efb\u52a1\u200b \u200b\u7ed3\u6784\u8bbe\u8ba1\u200b\u4f9d\u8d56\u200b\u7ecf\u9a8c"},{"location":"deeplearning/interview/#cnn_1","title":"\ud83d\udcc8 \u200b\u516b\u200b\u3001\u200b\u7ecf\u5178\u200b CNN \u200b\u67b6\u6784\u200b\u53d1\u5c55","text":"\u6a21\u578b\u200b \u200b\u5e74\u4efd\u200b \u200b\u7279\u70b9\u200b LeNet-5 1998 \u200b\u6700\u65e9\u200b\u7684\u200b CNN\uff0c\u200b\u624b\u5199\u200b\u6570\u5b57\u200b\u8bc6\u522b\u200b AlexNet 2012 ReLU + Dropout + GPU \u200b\u8bad\u7ec3\u200b VGG 2014 \u200b\u4f7f\u7528\u200b\u5c0f\u200b\u5377\u79ef\u200b\u6838\u200b\u5806\u53e0\u200b GoogLeNet 2014 \u200b\u5f15\u5165\u200b Inception \u200b\u6a21\u5757\u200b ResNet 2015 \u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b\u89e3\u51b3\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b DenseNet 2017 \u200b\u7279\u5f81\u200b\u590d\u7528\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u68af\u5ea6\u200b\u6d41"},{"location":"deeplearning/interview/#_15","title":"\ud83e\udded \u200b\u4e5d\u200b\u3001\u200b\u5b66\u4e60\u200b\u4e0e\u200b\u8fdb\u9636\u200b\u8def\u7ebf","text":"\u9636\u6bb5\u200b \u200b\u5b66\u4e60\u200b\u5185\u5bb9\u200b \u200b\u5b9e\u8df5\u200b\u65b9\u5411\u200b \u200b\u5165\u95e8\u200b \u200b\u5377\u79ef\u200b\u3001\u200b\u6c60\u5316\u200b\u3001\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b MNIST \u200b\u624b\u5199\u200b\u8bc6\u522b\u200b \u200b\u8fdb\u9636\u200b BatchNorm\u3001Dropout\u3001\u200b\u4f18\u5316\u200b\u5668\u200b CIFAR-10 \u200b\u5206\u7c7b\u200b \u200b\u63d0\u5347\u200b ResNet\u3001VGG\u3001\u200b\u8fc1\u79fb\u200b\u5b66\u4e60\u200b ImageNet \u200b\u9ad8\u9636\u200b Faster R-CNN\u3001YOLO\u3001U-Net \u200b\u68c0\u6d4b\u200b\u4e0e\u200b\u5206\u5272"},{"location":"deeplearning/interview/#rnn","title":"\u4e09\u200b\u3001RNN","text":""},{"location":"deeplearning/interview/#rnn-recurrent-neural-network","title":"\ud83e\udde0 \u200b\u4e00\u200b\u3001RNN \u200b\u539f\u7406\u200b\uff08Recurrent Neural Network\uff09","text":""},{"location":"deeplearning/interview/#1_1","title":"1\ufe0f\u20e3 \u200b\u57fa\u672c\u200b\u601d\u60f3","text":"<p>\u200b\u4f20\u7edf\u200b\u524d\u9988\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff08\u200b\u5982\u200b MLP\u3001CNN\uff09\u200b\u8f93\u5165\u200b\u4e0e\u200b\u8f93\u51fa\u200b\u72ec\u7acb\u200b\uff0c\u200b\u4f46\u200b\u5bf9\u4e8e\u200b\u5e8f\u5217\u200b\u6570\u636e\u200b\uff08\u200b\u5982\u200b\u6587\u672c\u200b\u3001\u200b\u8bed\u97f3\u200b\u3001\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\uff09\uff1a</p> <p>\u200b\u5f53\u524d\u200b\u65f6\u523b\u200b\u7684\u200b\u8f93\u51fa\u200b\u4e0d\u4ec5\u200b\u53d6\u51b3\u4e8e\u200b\u5f53\u524d\u200b\u8f93\u5165\u200b\uff0c\u200b\u8fd8\u200b\u4f9d\u8d56\u4e8e\u200b\u524d\u9762\u200b\u65f6\u523b\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u56e0\u6b64\u200b\uff0cRNN \u200b\u5f15\u5165\u200b\u4e86\u200b\u5faa\u73af\u200b\u7ed3\u6784\u200b\uff08Recurrent Structure\uff09\uff0c\u200b\u80fd\u591f\u200b\u201c\u200b\u8bb0\u4f4f\u200b\u201d\u200b\u524d\u200b\u4e00\u200b\u65f6\u523b\u200b\u7684\u200b\u4fe1\u606f\u200b\u3002</p>"},{"location":"deeplearning/interview/#2_1","title":"2\ufe0f\u20e3 \u200b\u7ed3\u6784\u56fe\u200b\uff08\u200b\u6838\u5fc3\u200b\u6982\u5ff5\u200b\uff09","text":"<p>RNN \u200b\u7684\u200b\u57fa\u672c\u200b\u5355\u5143\u200b\u53ef\u200b\u8868\u793a\u200b\u4e3a\u200b\uff1a</p> \\[ h_t = f(W_{xh}x_t + W_{hh}h_{t-1} + b_h) \\] \\[ \\hat{y}*t = g(W*{hy}h_t + b_y) \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(x_t\\)\uff1a\u200b\u65f6\u523b\u200b \\(t\\) \u200b\u7684\u200b\u8f93\u5165\u200b</li> <li>\\(h_t\\)\uff1a\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b\uff08\u200b\u9690\u542b\u200b\u8bb0\u5fc6\u200b\uff09</li> <li>\\(\\hat{y}_t\\)\uff1a\u200b\u8f93\u51fa\u200b</li> <li>\\(W_{xh}\\)\uff1a\u200b\u8f93\u5165\u200b\u5230\u200b\u9690\u85cf\u200b\u5c42\u200b\u7684\u200b\u6743\u91cd\u200b</li> <li>\\(W_{hh}\\)\uff1a\u200b\u9690\u85cf\u200b\u5c42\u5230\u200b\u9690\u85cf\u200b\u5c42\u200b\u7684\u200b\u6743\u91cd\u200b\uff08\u200b\u5faa\u73af\u200b\uff09</li> <li>\\(W_{hy}\\)\uff1a\u200b\u9690\u85cf\u200b\u5c42\u5230\u200b\u8f93\u51fa\u200b\u5c42\u200b\u7684\u200b\u6743\u91cd\u200b</li> </ul>"},{"location":"deeplearning/interview/#_16","title":"\u2699\ufe0f \u200b\u4e8c\u200b\u3001\u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":""},{"location":"deeplearning/interview/#1-forward-propagation_2","title":"1\ufe0f\u20e3 \u200b\u524d\u5411\u200b\u4f20\u64ad\u200b\uff08Forward Propagation\uff09","text":"<p>\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b \\(x = [x_1, x_2, ..., x_T]\\)\uff1a</p> <p>\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\uff1a $$ h_t = f(W_{xh}x_t + W_{hh}h_{t-1} + b_h) $$</p> <p>\u200b\u8f93\u51fa\u200b\uff1a $$ \\hat{y}t = g(W{hy}h_t + b_y) $$</p> <p>\u200b\u5176\u4e2d\u200b \\(f\\) \u200b\u901a\u5e38\u200b\u4e3a\u200b \\(\\tanh\\) \u200b\u6216\u200b \\(\\text{ReLU}\\)\uff0c\\(g\\) \u200b\u5e38\u4e3a\u200b \\(\\text{Softmax}\\)\u3002</p>"},{"location":"deeplearning/interview/#2-loss-function_2","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff08Loss Function\uff09","text":"<p>\u200b\u5bf9\u4e8e\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff0c\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200b \u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b\uff1a</p> \\[ L = -\\frac{1}{T}\\sum_{t=1}^{T} y_t \\log(\\hat{y}_t) \\]"},{"location":"deeplearning/interview/#3-backpropagation-through-time-bptt","title":"3\ufe0f\u20e3 \u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\uff08Backpropagation Through Time, BPTT\uff09","text":"<p>RNN \u200b\u7684\u200b\u68af\u5ea6\u200b\u8981\u200b\u6cbf\u200b\u65f6\u95f4\u200b\u5c55\u5f00\u200b\uff0c\u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\u5230\u200b\u6bcf\u4e2a\u200b\u65f6\u95f4\u200b\u6b65\u200b\u3002</p> <p>\u200b\u68af\u5ea6\u200b\u8ba1\u7b97\u516c\u5f0f\u200b\uff1a</p> \\[ \\frac{\\partial L}{\\partial W_{hh}} = \\sum_{t=1}^{T} \\frac{\\partial L_t}{\\partial h_t} \\cdot \\frac{\\partial h_t}{\\partial W_{hh}} \\] <p>\u200b\u800c\u200b\u7531\u4e8e\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b\u95f4\u200b\u5b58\u5728\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\uff1a</p> \\[ \\frac{\\partial h_t}{\\partial W_{hh}} = \\frac{\\partial h_t}{\\partial h_{t-1}} \\cdot \\frac{\\partial h_{t-1}}{\\partial W_{hh}} + \\frac{\\partial h_t}{\\partial W_{hh}} \\] <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u4f1a\u200b\u51fa\u73b0\u200b \u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b / \u200b\u68af\u5ea6\u200b\u7206\u70b8\u200b \u200b\u95ee\u9898\u200b\u3002 \u200b\u89e3\u51b3\u65b9\u6848\u200b\uff1a\u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\uff08Gradient Clipping\uff09\u3001LSTM\u3001GRU\u3002</p>"},{"location":"deeplearning/interview/#_17","title":"\ud83d\udcca \u200b\u4e09\u200b\u3001\u200b\u8bc4\u4f30\u200b\u6307\u6807","text":"\u4efb\u52a1\u200b\u7c7b\u578b\u200b \u200b\u5e38\u7528\u200b\u6307\u6807\u200b \u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b Accuracy, Precision, Recall, F1-score \u200b\u5e8f\u5217\u200b\u751f\u6210\u200b Perplexity (\u200b\u56f0\u60d1\u200b\u5ea6\u200b) \u200b\u56de\u5f52\u200b\u4efb\u52a1\u200b MSE, RMSE \u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b BLEU, ROUGE\uff08\u200b\u81ea\u7136\u8bed\u8a00\u200b\u751f\u6210\u200b\uff09"},{"location":"deeplearning/interview/#pytorch_2","title":"\ud83d\udcbb \u200b\u56db\u200b\u3001\u200b\u5b9e\u73b0\u200b\u4ee3\u7801\u200b\uff08PyTorch\uff09","text":"<p>\u200b\u4ee5\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b\u5e8f\u5217\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u4e3a\u4f8b\u200b\uff08RNN \u200b\u57fa\u672c\u200b\u7ed3\u6784\u200b\uff09\uff1a</p> <pre><code>import torch\nimport torch.nn as nn\nimport torch.optim as optim\n\n# \u200b\u6a21\u578b\u200b\u5b9a\u4e49\u200b\nclass RNNModel(nn.Module):\n    def __init__(self, input_dim, hidden_dim, output_dim, num_layers=1):\n        super(RNNModel, self).__init__()\n        self.rnn = nn.RNN(input_dim, hidden_dim, num_layers, batch_first=True)\n        self.fc = nn.Linear(hidden_dim, output_dim)\n\n    def forward(self, x):\n        out, _ = self.rnn(x)\n        out = out[:, -1, :]  # \u200b\u53d6\u200b\u6700\u540e\u200b\u65f6\u523b\u200b\u7684\u200b\u8f93\u51fa\u200b\n        out = self.fc(out)\n        return out\n\n# \u200b\u6a21\u62df\u200b\u6570\u636e\u200b\nX = torch.randn(100, 10, 8)  # (batch, seq_len, input_dim)\ny = torch.randint(0, 2, (100,))\n\n# \u200b\u8d85\u200b\u53c2\u6570\u200b\ninput_dim = 8\nhidden_dim = 32\noutput_dim = 2\n\nmodel = RNNModel(input_dim, hidden_dim, output_dim)\ncriterion = nn.CrossEntropyLoss()\noptimizer = optim.Adam(model.parameters(), lr=0.01)\n\n# \u200b\u8bad\u7ec3\u200b\nfor epoch in range(50):\n    optimizer.zero_grad()\n    outputs = model(X)\n    loss = criterion(outputs, y)\n    loss.backward()\n    optimizer.step()\n\n    if (epoch + 1) % 10 == 0:\n        print(f\"Epoch [{epoch+1}/50], Loss: {loss.item():.4f}\")\n</code></pre>"},{"location":"deeplearning/interview/#rnn_1","title":"\ud83e\udde9 \u200b\u4e94\u200b\u3001RNN \u200b\u7684\u200b\u5e38\u89c1\u200b\u53d8\u4f53","text":"\u6a21\u578b\u200b \u200b\u7279\u70b9\u200b \u200b\u516c\u5f0f\u200b LSTM\uff08\u200b\u957f\u77ed\u671f\u200b\u8bb0\u5fc6\u200b\uff09 \u200b\u5f15\u5165\u200b\u201c\u200b\u95e8\u63a7\u200b\u673a\u5236\u200b\u201d\u200b\u9632\u6b62\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b \\(f_t, i_t, o_t, c_t\\) GRU\uff08\u200b\u95e8\u63a7\u200b\u5faa\u73af\u200b\u5355\u5143\u200b\uff09 \u200b\u7b80\u5316\u200b LSTM \u200b\u7ed3\u6784\u200b\uff0c\u200b\u53c2\u6570\u200b\u66f4\u200b\u5c11\u200b \\(z_t, r_t\\) Bi-RNN\uff08\u200b\u53cc\u5411\u200b RNN\uff09 \u200b\u540c\u65f6\u200b\u8003\u8651\u200b\u524d\u540e\u200b\u4fe1\u606f\u200b \\(h_t = [\\overrightarrow{h_t}, \\overleftarrow{h_t}]\\)"},{"location":"deeplearning/interview/#_18","title":"\ud83e\uddee \u200b\u516d\u200b\u3001\u200b\u6a21\u578b\u200b\u4f18\u5316\u200b\u65b9\u6cd5","text":"\u4f18\u5316\u200b\u624b\u6bb5\u200b \u200b\u8bf4\u660e\u200b \u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b\uff08Gradient Clipping\uff09 \u200b\u9650\u5236\u200b\u68af\u5ea6\u200b\u8303\u6570\u200b\uff0c\u200b\u9632\u6b62\u200b\u68af\u5ea6\u200b\u7206\u70b8\u200b \u200b\u4f7f\u7528\u200b LSTM / GRU \u200b\u89e3\u51b3\u200b\u957f\u671f\u200b\u4f9d\u8d56\u200b\u4e0e\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\u95ee\u9898\u200b Batch Normalization \u200b\u52a0\u901f\u200b\u6536\u655b\u200b Dropout \u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b \u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u6574\u200b\uff08LR Scheduler\uff09 \u200b\u52a8\u6001\u200b\u8c03\u6574\u200b\u5b66\u4e60\u200b\u7387\u200b Embedding \u200b\u5c42\u200b \u200b\u5bf9\u200b\u79bb\u6563\u200b\u8f93\u5165\u200b\uff08\u200b\u5982\u8bcd\u200b\uff09\u200b\u505a\u200b\u7a20\u5bc6\u200b\u8868\u793a"},{"location":"deeplearning/interview/#_19","title":"\u26a0\ufe0f \u200b\u4e03\u200b\u3001\u200b\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u9700\u200b\u7edf\u4e00\u200b\u957f\u5ea6\u200b\uff0c\u200b\u53ef\u200b\u4f7f\u7528\u200b padding\uff1b</li> <li>\u200b\u8bad\u7ec3\u200b\u65f6\u200b\u53ef\u200b\u4f7f\u7528\u200b PackedSequence \u200b\u63d0\u5347\u200b\u6548\u7387\u200b\uff1b</li> <li>\u200b\u907f\u514d\u200b\u65f6\u95f4\u200b\u6b65\u200b\u8fc7\u957f\u200b\uff0c\u200b\u5426\u5219\u200b\u68af\u5ea6\u200b\u4f20\u64ad\u200b\u56f0\u96be\u200b\uff1b</li> <li>\u200b\u9002\u5f53\u200b\u4f7f\u7528\u200b Dropout / LayerNorm\uff1b</li> <li>\u200b\u82e5\u200b\u662f\u200b\u6587\u672c\u200b\u4efb\u52a1\u200b\uff0c\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b LSTM / GRU\uff1b</li> <li>\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b GPU\uff08CUDA\uff09\u200b\u52a0\u901f\u200b\u3002</li> </ol>"},{"location":"deeplearning/interview/#_20","title":"\u2696\ufe0f \u200b\u516b\u200b\u3001\u200b\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u80fd\u200b\u6355\u83b7\u200b\u5e8f\u5217\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b \u200b\u957f\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b \u200b\u53c2\u6570\u200b\u5171\u4eab\u200b\uff0c\u200b\u6a21\u578b\u200b\u89c4\u6a21\u8f83\u200b\u5c0f\u200b \u200b\u8bad\u7ec3\u200b\u65f6\u95f4\u200b\u957f\u200b \u200b\u80fd\u200b\u5904\u7406\u200b\u53d8\u200b\u957f\u200b\u8f93\u5165\u200b \u200b\u65e0\u6cd5\u200b\u5e76\u884c\u8ba1\u7b97\u200b \u200b\u5bf9\u200b\u65f6\u5e8f\u200b\u4efb\u52a1\u200b\u6548\u679c\u200b\u597d\u200b \u200b\u5bf9\u957f\u200b\u4f9d\u8d56\u200b\u5efa\u6a21\u200b\u6709\u9650\u200b\uff08\u200b\u9700\u200b LSTM/GRU \u200b\u6539\u8fdb\u200b\uff09"},{"location":"deeplearning/interview/#_21","title":"\ud83d\udcc8 \u200b\u4e5d\u200b\u3001\u200b\u5178\u578b\u200b\u5e94\u7528\u200b\u573a\u666f","text":"\u5e94\u7528\u200b \u200b\u4efb\u52a1\u200b\u7c7b\u578b\u200b \u200b\u793a\u4f8b\u200b \u200b\u8bed\u8a00\u200b\u5efa\u6a21\u200b \u200b\u5e8f\u5217\u200b\u9884\u6d4b\u200b \u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8bcd\u200b\u9884\u6d4b\u200b \u200b\u6587\u672c\u200b\u5206\u7c7b\u200b \u200b\u5206\u7c7b\u200b \u200b\u60c5\u611f\u200b\u5206\u6790\u200b \u200b\u5e8f\u5217\u200b\u6807\u6ce8\u200b \u200b\u6807\u6ce8\u200b \u200b\u547d\u540d\u200b\u5b9e\u4f53\u200b\u8bc6\u522b\u200b\uff08NER\uff09 \u200b\u8bed\u97f3\u200b\u8bc6\u522b\u200b \u200b\u5e8f\u5217\u200b\u5230\u200b\u5e8f\u5217\u200b \u200b\u97f3\u9891\u200b\u8f6c\u200b\u6587\u5b57\u200b \u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u9884\u6d4b\u200b \u200b\u56de\u5f52\u200b \u200b\u80a1\u7968\u200b/\u200b\u5929\u6c14\u200b\u9884\u6d4b"},{"location":"deeplearning/interview/#_22","title":"\ud83e\udded \u200b\u5341\u200b\u3001\u200b\u5b66\u4e60\u200b\u8def\u7ebf\u200b\u5efa\u8bae","text":"\u9636\u6bb5\u200b \u200b\u5185\u5bb9\u200b \u200b\u5b9e\u8df5\u200b\u4efb\u52a1\u200b \u200b\u5165\u95e8\u200b \u200b\u57fa\u672c\u200b RNN \u200b\u7406\u8bba\u200b\u4e0e\u200b\u7ed3\u6784\u200b \u200b\u7b80\u5355\u200b\u5e8f\u5217\u200b\u5206\u7c7b\u200b \u200b\u8fdb\u9636\u200b LSTM\u3001GRU \u200b\u7406\u89e3\u200b\u4e0e\u200b\u5b9e\u73b0\u200b \u200b\u6587\u672c\u200b\u5206\u7c7b\u200b \u200b\u63d0\u5347\u200b \u200b\u53cc\u5411\u200b RNN\u3001Seq2Seq \u200b\u673a\u5668\u7ffb\u8bd1\u200b \u200b\u9ad8\u9636\u200b Attention\u3001Transformer \u200b\u9ad8\u7ea7\u200b NLP \u200b\u4efb\u52a1"},{"location":"deeplearning/interview/#lstm","title":"\u56db\u200b\u3001LSTM","text":""},{"location":"deeplearning/interview/#lstm-long-short-term-memory","title":"\ud83e\udde0 \u200b\u4e00\u200b\u3001LSTM \u200b\u539f\u7406\u200b\uff08Long Short-Term Memory\uff09","text":""},{"location":"deeplearning/interview/#1-lstm","title":"1\ufe0f\u20e3 \u200b\u4e3a\u4ec0\u4e48\u200b\u9700\u8981\u200b LSTM\uff1f","text":"<p>\u200b\u5728\u200b\u666e\u901a\u200b RNN \u200b\u4e2d\u200b\uff1a $$ h_t = f(W_{xh}x_t + W_{hh}h_{t-1}) $$</p> <p>\u200b\u68af\u5ea6\u200b\u5728\u200b\u65f6\u95f4\u200b\u4e0a\u200b\u4f20\u9012\u200b\u65f6\u200b\u5bb9\u6613\u200b\uff1a</p> <ul> <li>\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\uff08\u200b\u957f\u671f\u200b\u4f9d\u8d56\u200b\u4fe1\u606f\u200b\u65e0\u6cd5\u200b\u4fdd\u7559\u200b\uff09</li> <li>\u200b\u68af\u5ea6\u200b\u7206\u70b8\u200b\uff08\u200b\u8bad\u7ec3\u200b\u4e0d\u200b\u7a33\u5b9a\u200b\uff09</li> </ul> <p>\ud83d\udd39 LSTM \u200b\u901a\u8fc7\u200b\u5f15\u5165\u200b\u201c\u200b\u95e8\u63a7\u200b\u673a\u5236\u200b\uff08Gating Mechanism\uff09\u201d\u200b\u6765\u200b\u89e3\u51b3\u200b\u8fd9\u4e00\u200b\u95ee\u9898\u200b\uff0c \u200b\u4f7f\u5f97\u200b\u7f51\u7edc\u200b\u80fd\u591f\u200b\u201c\u200b\u51b3\u5b9a\u200b\u201d\u200b\u54ea\u4e9b\u200b\u4fe1\u606f\u200b\u4fdd\u7559\u200b\u3001\u200b\u54ea\u4e9b\u200b\u9057\u5fd8\u200b\u3002</p>"},{"location":"deeplearning/interview/#2-lstm","title":"2\ufe0f\u20e3 LSTM \u200b\u7ed3\u6784\u56fe","text":"<p>LSTM \u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5355\u5143\u200b\u7531\u200b\u4e09\u4e2a\u200b\u95e8\u200b\uff08Gate\uff09\u200b\u548c\u200b\u4e00\u4e2a\u200b\u8bb0\u5fc6\u200b\u5355\u5143\u200b\uff08Cell State\uff09\u200b\u7ec4\u6210\u200b\uff1a</p> <pre><code>            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\nx_t \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 \u200b\u8f93\u5165\u200b\u95e8\u200b i_t   \u2502\nh_{t-1} \u2500\u2500\u2500\u25b6\u2502 \u200b\u9057\u5fd8\u200b\u95e8\u200b f_t   \u2502\u2500\u2500\u2500\u2510\n            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n                               \u25bc\n                          c_{t-1}\n                               \u2502\n                               \u25bc\n                        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                        \u2502 \u200b\u7ec6\u80de\u200b\u72b6\u6001\u200b c_t\u2502\n                        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                               \u2502\n                               \u25bc\n                        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                        \u2502 \u200b\u8f93\u51fa\u200b\u95e8\u200b o_t  \u2502\n                        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                               \u2502\n                               \u25bc\n                              h_t\n</code></pre>"},{"location":"deeplearning/interview/#lstm_1","title":"\u2699\ufe0f \u200b\u4e8c\u200b\u3001LSTM \u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":"<p>\u200b\u5728\u200b\u65f6\u95f4\u200b\u6b65\u200b \\(t\\)\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a\\(x_t\\)\u3001\u200b\u524d\u200b\u4e00\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b \\(h_{t-1}\\)\u3001\u200b\u524d\u200b\u4e00\u200b\u7ec6\u80de\u200b\u72b6\u6001\u200b \\(c_{t-1}\\)\u3002</p>"},{"location":"deeplearning/interview/#1_2","title":"1\ufe0f\u20e3 \u200b\u95e8\u63a7\u200b\u673a\u5236\u200b\u516c\u5f0f","text":""},{"location":"deeplearning/interview/#1forget-gate","title":"\uff081\uff09\u200b\u9057\u5fd8\u200b\u95e8\u200b\uff08Forget Gate\uff09","text":"<p>\u200b\u51b3\u5b9a\u200b\u8981\u200b\u201c\u200b\u5fd8\u8bb0\u200b\u201d\u200b\u591a\u5c11\u200b\u65e7\u200b\u4fe1\u606f\u200b\uff1a</p> \\[ f_t = \\sigma(W_f \\cdot [h_{t-1}, x_t] + b_f) \\]"},{"location":"deeplearning/interview/#2input-gate","title":"\uff082\uff09\u200b\u8f93\u5165\u200b\u95e8\u200b\uff08Input Gate\uff09","text":"<p>\u200b\u51b3\u5b9a\u200b\u8981\u200b\u6dfb\u52a0\u200b\u591a\u5c11\u200b\u65b0\u200b\u4fe1\u606f\u200b\uff1a</p> \\[ i_t = \\sigma(W_i \\cdot [h_{t-1}, x_t] + b_i) \\]"},{"location":"deeplearning/interview/#3candidate-cell","title":"\uff083\uff09\u200b\u5019\u9009\u200b\u72b6\u6001\u200b\uff08Candidate Cell\uff09","text":"<p>\u200b\u8ba1\u7b97\u200b\u5f53\u524d\u200b\u8f93\u5165\u200b\u7684\u200b\u5019\u9009\u200b\u8bb0\u5fc6\u200b\uff1a</p> \\[ \\tilde{c}*t = \\tanh(W_c \\cdot [h*{t-1}, x_t] + b_c) \\]"},{"location":"deeplearning/interview/#2_2","title":"2\ufe0f\u20e3 \u200b\u72b6\u6001\u200b\u66f4\u65b0","text":""},{"location":"deeplearning/interview/#4cell-state","title":"\uff084\uff09\u200b\u66f4\u65b0\u200b\u7ec6\u80de\u200b\u72b6\u6001\u200b\uff08Cell State\uff09","text":"<p>\u200b\u5c06\u200b\u65e7\u200b\u8bb0\u5fc6\u200b\u4e0e\u200b\u65b0\u200b\u8bb0\u5fc6\u200b\u7ed3\u5408\u200b\uff1a</p> \\[ c_t = f_t \\odot c_{t-1} + i_t \\odot \\tilde{c}_t \\]"},{"location":"deeplearning/interview/#5output-gate","title":"\uff085\uff09\u200b\u8f93\u51fa\u200b\u95e8\u200b\uff08Output Gate\uff09","text":"<p>\u200b\u51b3\u5b9a\u200b\u8f93\u51fa\u200b\u591a\u5c11\u200b\u5185\u90e8\u200b\u8bb0\u5fc6\u200b\uff1a</p> \\[ o_t = \\sigma(W_o \\cdot [h_{t-1}, x_t] + b_o) \\]"},{"location":"deeplearning/interview/#6hidden-state","title":"\uff086\uff09\u200b\u8ba1\u7b97\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b\uff08Hidden State\uff09","text":"\\[ h_t = o_t \\odot \\tanh(c_t) \\]"},{"location":"deeplearning/interview/#3","title":"3\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570","text":"<p>\u200b\u5bf9\u4e8e\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff08\u200b\u5982\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\uff09\uff0c\u200b\u5e38\u200b\u4f7f\u7528\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b\uff1a</p> \\[ L = -\\sum_{t=1}^{T} y_t \\log(\\hat{y}_t) \\] <p>\u200b\u82e5\u200b\u8f93\u51fa\u200b\u4e3a\u200b\u8fde\u7eed\u200b\u503c\u200b\uff08\u200b\u56de\u5f52\u200b\u4efb\u52a1\u200b\uff09\uff0c\u200b\u5219\u200b\u4f7f\u7528\u200b MSE\uff1a</p> \\[ L = \\frac{1}{T} \\sum_{t=1}^{T} (y_t - \\hat{y}_t)^2 \\]"},{"location":"deeplearning/interview/#4-bptt","title":"4\ufe0f\u20e3 \u200b\u68af\u5ea6\u200b\u4f20\u64ad\u200b\uff08BPTT\uff09","text":"<p>LSTM \u200b\u4ecd\u200b\u901a\u8fc7\u200b\u201c\u200b\u65f6\u95f4\u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\uff08Backpropagation Through Time, BPTT\uff09\u201d\u200b\u8bad\u7ec3\u200b\u3002 \u200b\u4e0d\u540c\u4e8e\u200b RNN \u200b\u7684\u200b\u68af\u5ea6\u200b\u8fde\u4e58\u200b\uff0cLSTM \u200b\u7684\u200b \u200b\u7ec6\u80de\u200b\u72b6\u6001\u200b \\(c_t\\) \u200b\u80fd\u200b\u901a\u8fc7\u200b\u201c\u200b\u6052\u7b49\u200b\u4f20\u9012\u200b\u201d\u200b\u90e8\u5206\u200b\u68af\u5ea6\u200b\uff0c\u200b\u56e0\u6b64\u200b\u7f13\u89e3\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\u3002</p>"},{"location":"deeplearning/interview/#_23","title":"\ud83d\udcca \u200b\u4e09\u200b\u3001\u200b\u8bc4\u4f30\u200b\u6307\u6807","text":"\u4efb\u52a1\u200b\u7c7b\u578b\u200b \u200b\u5e38\u7528\u200b\u6307\u6807\u200b \u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b Accuracy, Precision, Recall, F1-score \u200b\u56de\u5f52\u200b\u4efb\u52a1\u200b MSE, MAE, RMSE \u200b\u5e8f\u5217\u200b\u9884\u6d4b\u200b Perplexity, BLEU, ROUGE"},{"location":"deeplearning/interview/#pytorch_3","title":"\ud83d\udcbb \u200b\u56db\u200b\u3001PyTorch \u200b\u5b9e\u73b0\u200b\u4ee3\u7801","text":"<p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e2a\u200b LSTM \u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>import torch\nimport torch.nn as nn\nimport torch.optim as optim\n\n# LSTM \u200b\u6a21\u578b\u200b\u5b9a\u4e49\u200b\nclass LSTMModel(nn.Module):\n    def __init__(self, input_dim, hidden_dim, output_dim, num_layers=1):\n        super(LSTMModel, self).__init__()\n        self.lstm = nn.LSTM(input_dim, hidden_dim, num_layers, batch_first=True)\n        self.fc = nn.Linear(hidden_dim, output_dim)\n\n    def forward(self, x):\n        out, (h_n, c_n) = self.lstm(x)\n        out = self.fc(out[:, -1, :])  # \u200b\u53d6\u200b\u6700\u540e\u200b\u65f6\u523b\u200b\u8f93\u51fa\u200b\n        return out\n\n# \u200b\u6a21\u62df\u200b\u6570\u636e\u200b\nX = torch.randn(64, 10, 8)  # (batch, seq_len, input_dim)\ny = torch.randint(0, 2, (64,))\n\n# \u200b\u8d85\u200b\u53c2\u6570\u200b\nmodel = LSTMModel(input_dim=8, hidden_dim=32, output_dim=2)\ncriterion = nn.CrossEntropyLoss()\noptimizer = optim.Adam(model.parameters(), lr=0.01)\n\n# \u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\nfor epoch in range(30):\n    optimizer.zero_grad()\n    outputs = model(X)\n    loss = criterion(outputs, y)\n    loss.backward()\n    optimizer.step()\n\n    if (epoch + 1) % 5 == 0:\n        print(f\"Epoch [{epoch+1}/30], Loss: {loss.item():.4f}\")\n</code></pre>"},{"location":"deeplearning/interview/#lstm-rnn","title":"\ud83e\udde9 \u200b\u4e94\u200b\u3001LSTM \u200b\u4e0e\u200b RNN \u200b\u7684\u200b\u533a\u522b","text":"\u7279\u6027\u200b RNN LSTM \u200b\u8bb0\u5fc6\u200b\u673a\u5236\u200b \u200b\u5355\u4e00\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b \\(h_t\\) \u200b\u62e5\u6709\u200b\u7ec6\u80de\u200b\u72b6\u6001\u200b \\(c_t\\) \u200b\u4e0e\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b \\(h_t\\) \u200b\u957f\u671f\u200b\u4f9d\u8d56\u200b\u80fd\u529b\u200b \u200b\u5dee\u200b\uff08\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\uff09 \u200b\u5f3a\u200b\uff08\u200b\u901a\u8fc7\u200b\u95e8\u63a7\u200b\u673a\u5236\u200b\u63a7\u5236\u200b\uff09 \u200b\u53c2\u200b\u6570\u91cf\u200b \u200b\u5c11\u200b \u200b\u591a\u200b \u200b\u8ba1\u7b97\u200b\u5f00\u9500\u200b \u200b\u5c0f\u200b \u200b\u5927\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b \u200b\u77ed\u200b\u5e8f\u5217\u200b\u3001\u200b\u7b80\u5355\u200b\u5173\u7cfb\u200b \u200b\u957f\u200b\u5e8f\u5217\u200b\u3001\u200b\u590d\u6742\u200b\u4f9d\u8d56"},{"location":"deeplearning/interview/#_24","title":"\ud83e\uddee \u200b\u516d\u200b\u3001\u200b\u6a21\u578b\u200b\u4f18\u5316\u200b\u7b56\u7565","text":"\u65b9\u6cd5\u200b \u200b\u8bf4\u660e\u200b \u200b\u68af\u5ea6\u200b\u88c1\u526a\u200b \u200b\u9650\u5236\u200b\u68af\u5ea6\u200b\u8303\u6570\u200b\uff0c\u200b\u9632\u6b62\u200b\u68af\u5ea6\u200b\u7206\u70b8\u200b Dropout \u200b\u907f\u514d\u200b\u8fc7\u200b\u62df\u5408\u200b\uff08LSTM \u200b\u5185\u7f6e\u200b\u652f\u6301\u200b\uff09 \u200b\u53cc\u5411\u200b LSTM \u200b\u540c\u65f6\u200b\u6355\u83b7\u200b\u524d\u540e\u6587\u200b\u4fe1\u606f\u200b \u200b\u591a\u5c42\u200b LSTM \u200b\u63d0\u9ad8\u200b\u7279\u5f81\u200b\u8868\u8fbe\u80fd\u529b\u200b BatchNorm / LayerNorm \u200b\u52a0\u901f\u200b\u6536\u655b\u200b\u3001\u200b\u7a33\u5b9a\u200b\u8bad\u7ec3\u200b \u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u5ea6\u200b \u200b\u4f7f\u7528\u200b CosineAnnealing / StepLR \u200b\u7b49\u200b\u7b56\u7565\u200b \u200b\u9884\u200b\u8bad\u7ec3\u200b\u8bcd\u200b\u5411\u91cf\u200b \u200b\u4f7f\u7528\u200b Word2Vec\u3001GloVe\u3001BERT Embedding"},{"location":"deeplearning/interview/#_25","title":"\u26a0\ufe0f \u200b\u4e03\u200b\u3001\u200b\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u5e8f\u5217\u200b\u957f\u5ea6\u200b\u8fc7\u957f\u200b \u200b\u65f6\u200b\u8bad\u7ec3\u200b\u56f0\u96be\u200b\uff0c\u200b\u53ef\u200b\u4f7f\u7528\u200b\u622a\u65ad\u200b BPTT\uff1b</li> <li>Batch \u200b\u5185\u200b\u5e8f\u5217\u200b\u957f\u5ea6\u200b\u4e0d\u200b\u4e00\u200b \u200b\u65f6\u200b\uff0c\u200b\u7528\u200b <code>pack_padded_sequence</code>\uff1b</li> <li>\u200b\u82e5\u200b\u4efb\u52a1\u200b\u9700\u8981\u200b\u53cc\u5411\u200b\u4fe1\u606f\u200b\uff0c\u200b\u7528\u200b <code>bidirectional=True</code>\uff1b</li> <li>\u200b\u8f93\u51fa\u200b\u7ef4\u5ea6\u200b\u8981\u200b\u5339\u914d\u200b\u4efb\u52a1\u200b\uff08\u200b\u5206\u7c7b\u200b vs \u200b\u56de\u5f52\u200b\uff09\uff1b</li> <li>\u200b\u5c3d\u91cf\u200b\u4f7f\u7528\u200b GPU\uff1b</li> <li>\u200b\u907f\u514d\u200b\u5b66\u4e60\u200b\u7387\u8fc7\u200b\u5927\u200b\uff1b</li> <li>Dropout \u200b\u4e0d\u5b9c\u200b\u8fc7\u9ad8\u200b\uff08\u200b\u4e00\u822c\u200b 0.3\uff5e0.5\uff09\u3002</li> </ol>"},{"location":"deeplearning/interview/#_26","title":"\u2696\ufe0f \u200b\u516b\u200b\u3001\u200b\u4f18\u7f3a\u70b9\u200b\u603b\u7ed3","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u80fd\u200b\u6355\u6349\u200b\u957f\u8ddd\u79bb\u200b\u4f9d\u8d56\u200b \u200b\u8bad\u7ec3\u200b\u6162\u200b\uff0c\u200b\u53c2\u6570\u200b\u591a\u200b \u200b\u89e3\u51b3\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\u95ee\u9898\u200b \u200b\u5bf9\u957f\u200b\u5e8f\u5217\u200b\u4ecd\u200b\u6709\u200b\u9650\u5236\u200b \u200b\u6cdb\u5316\u200b\u80fd\u529b\u200b\u5f3a\u200b \u200b\u4e0d\u200b\u652f\u6301\u200b\u5e76\u884c\u8ba1\u7b97\u200b\uff08\u200b\u76f8\u200b\u8f83\u200b Transformer\uff09 \u200b\u8868\u8fbe\u80fd\u529b\u200b\u9ad8\u200b \u200b\u8c03\u53c2\u8f83\u200b\u590d\u6742"},{"location":"deeplearning/interview/#_27","title":"\ud83d\udcc8 \u200b\u4e5d\u200b\u3001\u200b\u5178\u578b\u200b\u5e94\u7528\u200b\u573a\u666f","text":"\u9886\u57df\u200b \u200b\u4efb\u52a1\u200b \u200b\u793a\u4f8b\u200b NLP \u200b\u6587\u672c\u200b\u5206\u7c7b\u200b \u200b\u60c5\u611f\u200b\u5206\u6790\u200b NLP \u200b\u5e8f\u5217\u200b\u751f\u6210\u200b \u200b\u673a\u5668\u7ffb\u8bd1\u200b \u200b\u8bed\u97f3\u200b \u200b\u8bed\u97f3\u200b\u8bc6\u522b\u200b ASR \u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b \u200b\u9884\u6d4b\u200b \u200b\u80a1\u7968\u200b\u3001\u200b\u5929\u6c14\u200b\u3001\u200b\u4f20\u611f\u5668\u200b \u200b\u533b\u7597\u200b \u200b\u751f\u7406\u200b\u4fe1\u53f7\u200b\u5206\u6790\u200b ECG \u200b\u5fc3\u7535\u56fe\u200b\u9884\u6d4b"},{"location":"deeplearning/interview/#_28","title":"\ud83e\udded \u200b\u5341\u200b\u3001\u200b\u5b66\u4e60\u200b\u62d3\u5c55\u200b\u8def\u5f84","text":"\u9636\u6bb5\u200b \u200b\u5185\u5bb9\u200b \u200b\u63a8\u8350\u200b\u5b66\u4e60\u200b \u200b\u5165\u95e8\u200b LSTM \u200b\u7406\u8bba\u200b\u4e0e\u200b\u7ed3\u6784\u200b \u200b\u7406\u89e3\u200b\u4e09\u95e8\u200b\u673a\u5236\u200b \u200b\u8fdb\u9636\u200b \u200b\u591a\u5c42\u200b / \u200b\u53cc\u5411\u200b LSTM \u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b \u200b\u63d0\u5347\u200b Seq2Seq + LSTM \u200b\u673a\u5668\u7ffb\u8bd1\u200b \u200b\u9ad8\u9636\u200b Attention + LSTM \u200b\u6587\u672c\u200b\u751f\u6210\u200b / \u200b\u5bf9\u8bdd\u200b\u7cfb\u7edf\u200b \u200b\u62d3\u5c55\u200b Transformer \u200b\u8d85\u8d8a\u200b LSTM \u200b\u7684\u200b\u5e8f\u5217\u200b\u5efa\u6a21"},{"location":"deeplearning/interview/#gan","title":"\u4e94\u200b\u3001GAN","text":""},{"location":"deeplearning/interview/#gan-generative-adversarial-network","title":"\ud83e\udde0 \u200b\u4e00\u200b\u3001GAN \u200b\u539f\u7406\u200b\uff08Generative Adversarial Network\uff09","text":""},{"location":"deeplearning/interview/#1_3","title":"1\ufe0f\u20e3 \u200b\u57fa\u672c\u200b\u601d\u60f3","text":"<p>GAN \u200b\u7531\u200b \u200b\u751f\u6210\u5668\u200b\uff08Generator, G\uff09 \u200b\u548c\u200b \u200b\u5224\u522b\u200b\u5668\u200b\uff08Discriminator, D\uff09 \u200b\u7ec4\u6210\u200b\u3002</p> <ul> <li>\u200b\u751f\u6210\u5668\u200b G\uff1a\u200b\u8bd5\u56fe\u200b\u4ece\u200b\u566a\u58f0\u200b\u4e2d\u200b\u751f\u6210\u200b\u903c\u771f\u200b\u7684\u200b\u6837\u672c\u200b\uff0c\u200b\u6b3a\u9a97\u200b\u5224\u522b\u200b\u5668\u200b\uff1b</li> <li>\u200b\u5224\u522b\u200b\u5668\u200b D\uff1a\u200b\u8bd5\u56fe\u200b\u533a\u5206\u200b\u8f93\u5165\u200b\u6837\u672c\u200b\u662f\u200b\u771f\u5b9e\u200b\u6570\u636e\u200b\u8fd8\u662f\u200b\u751f\u6210\u200b\u6570\u636e\u200b\u3002</li> </ul> <p>\u200b\u4e24\u8005\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b \u200b\u5bf9\u6297\u200b\u535a\u5f08\u200b\uff08minimax game\uff09\uff1a</p> <p>G \u200b\u60f3\u200b\u201c\u200b\u9a97\u8fc7\u200b\u201d D\uff0c\u200b\u800c\u200b D \u200b\u60f3\u200b\u201c\u200b\u8bc6\u7834\u200b\u201d G\u3002 \u200b\u6700\u7ec8\u200b\u8fbe\u5230\u200b\u4e00\u4e2a\u200b\u7eb3\u4ec0\u200b\u5e73\u8861\u200b\uff1aG \u200b\u751f\u6210\u200b\u7684\u200b\u6837\u672c\u200b\u4e0e\u200b\u771f\u5b9e\u200b\u6570\u636e\u200b\u51e0\u4e4e\u200b\u65e0\u6cd5\u200b\u533a\u5206\u200b\u3002</p>"},{"location":"deeplearning/interview/#2-gan","title":"2\ufe0f\u20e3 GAN \u200b\u7ed3\u6784\u200b\u793a\u610f\u56fe","text":"<pre><code>      \u200b\u968f\u673a\u566a\u58f0\u200b z ~ p(z)\n               \u2502\n               \u25bc\n         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n         \u2502  \u200b\u751f\u6210\u5668\u200b G   \u2502\u2500\u2500\u2500\u25b6 \u200b\u751f\u6210\u200b\u6837\u672c\u200b G(z)\n         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 \u2502\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502         \u200b\u5224\u522b\u200b\u5668\u200b D          \u2502\n     \u2502  \u200b\u8f93\u51fa\u200b\uff1aP(\u200b\u771f\u5b9e\u200b or \u200b\u4f2a\u9020\u200b)   \u2502\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 \u25b2\n         \u200b\u771f\u5b9e\u200b\u6837\u672c\u200b x ~ p_data(x)\n</code></pre>"},{"location":"deeplearning/interview/#_29","title":"\u2699\ufe0f \u200b\u4e8c\u200b\u3001\u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":""},{"location":"deeplearning/interview/#1-minimax","title":"1\ufe0f\u20e3 \u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\uff08Minimax \u200b\u5bf9\u6297\u200b\uff09","text":"<p>GAN \u200b\u7684\u200b\u6838\u5fc3\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\u4e3a\u200b\uff1a</p> \\[ \\min_G \\max_D V(D, G) = \\mathbb{E}*{x \\sim p*{\\text{data}}(x)}[\\log D(x)] + \\mathbb{E}_{z \\sim p_z(z)}[\\log(1 - D(G(z)))] \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(D(x)\\) \u200b\u8868\u793a\u200b\u8f93\u5165\u200b\u4e3a\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u7684\u200b\u6982\u7387\u200b\uff1b</li> <li>\\(G(z)\\) \u200b\u8868\u793a\u200b\u751f\u6210\u200b\u7684\u200b\u4f2a\u200b\u6837\u672c\u200b\uff1b</li> <li>\\(p_{\\text{data}}\\) \u200b\u662f\u200b\u771f\u5b9e\u200b\u6570\u636e\u5206\u5e03\u200b\uff1b</li> <li>\\(p_z\\) \u200b\u662f\u200b\u566a\u58f0\u200b\u5206\u5e03\u200b\uff08\u200b\u5982\u200b\u9ad8\u65af\u5206\u5e03\u200b\uff09\u3002</li> </ul>"},{"location":"deeplearning/interview/#2_3","title":"2\ufe0f\u20e3 \u200b\u5224\u522b\u200b\u5668\u200b\u76ee\u6807","text":"<p>\u200b\u56fa\u5b9a\u200b\u751f\u6210\u5668\u200b \\(G\\) \u200b\u65f6\u200b\uff0c\u200b\u5224\u522b\u200b\u5668\u200b \\(D\\) \u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u4e3a\u200b\uff1a</p> \\[ D^*(x) = \\frac{p_{\\text{data}}(x)}{p_{\\text{data}}(x) + p_g(x)} \\] <p>\u200b\u5176\u4e2d\u200b \\(p_g(x)\\) \u200b\u662f\u200b\u751f\u6210\u5668\u200b\u5206\u5e03\u200b\u3002</p>"},{"location":"deeplearning/interview/#3_1","title":"3\ufe0f\u20e3 \u200b\u6700\u4f18\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u7684\u200b\u76ee\u6807\u503c","text":"<p>\u200b\u5c06\u200b \\(D^*(x)\\) \u200b\u4ee3\u5165\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\uff0c\u200b\u6709\u200b\uff1a</p> \\[ V(G, D^*) = -\\log 4 + 2 \\cdot \\text{JSD}(p_{\\text{data}} \\parallel p_g) \\] <p>\u200b\u5373\u200b\uff0cGAN \u200b\u7684\u200b\u8bad\u7ec3\u200b\u7b49\u4ef7\u200b\u4e8e\u200b \u200b\u6700\u5c0f\u5316\u200b\u6570\u636e\u5206\u5e03\u200b\u4e0e\u200b\u751f\u6210\u200b\u5206\u5e03\u200b\u7684\u200b Jensen\u2013Shannon \u200b\u6563\u5ea6\u200b\uff08JSD\uff09\u3002</p>"},{"location":"deeplearning/interview/#4","title":"4\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u5f62\u5f0f","text":"<p>\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200b\u4e24\u4e2a\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff1a</p> <ul> <li> <p>\u200b\u5224\u522b\u200b\u5668\u200b\u635f\u5931\u200b\uff1a   $$   L_D = -\\mathbb{E}{x \\sim p{\\text{data}}}[\\log D(x)] - \\mathbb{E}_{z \\sim p_z}[\\log(1 - D(G(z)))]   $$</p> </li> <li> <p>\u200b\u751f\u6210\u5668\u200b\u635f\u5931\u200b\uff08\u200b\u539f\u59cb\u200b\u5f62\u5f0f\u200b\uff09\uff1a   $$   L_G = -\\mathbb{E}_{z \\sim p_z}[\\log(1 - D(G(z)))]   $$</p> </li> </ul> <p>\u200b\u4f46\u200b\u5b9e\u8df5\u200b\u4e2d\u200b\u5e38\u7528\u200b \u200b\u975e\u9971\u548c\u200b\u5f62\u5f0f\u200b\uff1a $$ L_G = -\\mathbb{E}_{z \\sim p_z}[\\log D(G(z))] $$ \u200b\u8fd9\u6837\u200b\u53ef\u4ee5\u200b\u7f13\u89e3\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"deeplearning/interview/#_30","title":"\ud83d\udcca \u200b\u4e09\u200b\u3001\u200b\u8bc4\u4f30\u200b\u6307\u6807","text":"\u6307\u6807\u200b \u200b\u542b\u4e49\u200b \u200b\u8bf4\u660e\u200b FID (Fr\u00e9chet Inception Distance) \u200b\u8861\u91cf\u200b\u751f\u6210\u200b\u56fe\u50cf\u200b\u4e0e\u200b\u771f\u5b9e\u200b\u56fe\u50cf\u200b\u7684\u200b\u7279\u5f81\u200b\u5206\u5e03\u200b\u5dee\u8ddd\u200b \u200b\u8d8a\u4f4e\u200b\u8d8a\u200b\u597d\u200b IS (Inception Score) \u200b\u8861\u91cf\u200b\u751f\u6210\u200b\u6837\u672c\u200b\u7684\u200b\u591a\u6837\u6027\u200b\u4e0e\u200b\u8d28\u91cf\u200b \u200b\u8d8a\u9ad8\u8d8a\u200b\u597d\u200b Precision / Recall for GANs \u200b\u8861\u91cf\u200b\u771f\u5b9e\u6027\u200b\u4e0e\u200b\u591a\u6837\u6027\u200b \u200b\u5e73\u8861\u200b\u6307\u6807\u200b \u200b\u89c6\u89c9\u200b\u8bc4\u4f30\u200b \u200b\u4eba\u5de5\u200b\u4e3b\u89c2\u200b\u8d28\u91cf\u200b \u200b\u5e38\u7528\u200b\u4e8e\u200b\u56fe\u50cf\u200b\u4efb\u52a1"},{"location":"deeplearning/interview/#pytorch_4","title":"\ud83d\udcbb \u200b\u56db\u200b\u3001PyTorch \u200b\u5b9e\u73b0\u200b\u4ee3\u7801","text":"<p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u6700\u5c0f\u200b\u53ef\u200b\u8fd0\u884c\u200b\u7684\u200b GAN \u200b\u5b9e\u4f8b\u200b\uff08MNIST \u200b\u6570\u636e\u200b\u96c6\u200b\uff09\uff1a</p> <pre><code>import torch\nimport torch.nn as nn\nimport torch.optim as optim\nfrom torchvision import datasets, transforms\n\n# 1. \u200b\u5b9a\u4e49\u200b\u751f\u6210\u5668\u200b\nclass Generator(nn.Module):\n    def __init__(self, noise_dim=100, output_dim=784):\n        super(Generator, self).__init__()\n        self.net = nn.Sequential(\n            nn.Linear(noise_dim, 256),\n            nn.ReLU(),\n            nn.Linear(256, 512),\n            nn.ReLU(),\n            nn.Linear(512, output_dim),\n            nn.Tanh()\n        )\n\n    def forward(self, z):\n        return self.net(z)\n\n# 2. \u200b\u5b9a\u4e49\u200b\u5224\u522b\u200b\u5668\u200b\nclass Discriminator(nn.Module):\n    def __init__(self, input_dim=784):\n        super(Discriminator, self).__init__()\n        self.net = nn.Sequential(\n            nn.Linear(input_dim, 512),\n            nn.LeakyReLU(0.2),\n            nn.Linear(512, 256),\n            nn.LeakyReLU(0.2),\n            nn.Linear(256, 1),\n            nn.Sigmoid()\n        )\n\n    def forward(self, x):\n        return self.net(x)\n\n# 3. \u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b\u4e0e\u200b\u4f18\u5316\u200b\u5668\u200b\nG = Generator()\nD = Discriminator()\ncriterion = nn.BCELoss()\noptimizer_G = optim.Adam(G.parameters(), lr=0.0002)\noptimizer_D = optim.Adam(D.parameters(), lr=0.0002)\n\n# 4. \u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\ntransform = transforms.Compose([transforms.ToTensor(), transforms.Normalize((0.5,), (0.5,))])\ndata_loader = torch.utils.data.DataLoader(\n    datasets.MNIST('.', train=True, download=True, transform=transform),\n    batch_size=64, shuffle=True\n)\n\n# 5. \u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\nfor epoch in range(10):\n    for real_imgs, _ in data_loader:\n        bs = real_imgs.size(0)\n        real_imgs = real_imgs.view(bs, -1)\n        z = torch.randn(bs, 100)\n        fake_imgs = G(z)\n\n        # \u200b\u6807\u7b7e\u200b\n        real_label = torch.ones(bs, 1)\n        fake_label = torch.zeros(bs, 1)\n\n        # --- \u200b\u5224\u522b\u200b\u5668\u200b\u8bad\u7ec3\u200b ---\n        optimizer_D.zero_grad()\n        real_loss = criterion(D(real_imgs), real_label)\n        fake_loss = criterion(D(fake_imgs.detach()), fake_label)\n        d_loss = real_loss + fake_loss\n        d_loss.backward()\n        optimizer_D.step()\n\n        # --- \u200b\u751f\u6210\u5668\u200b\u8bad\u7ec3\u200b ---\n        optimizer_G.zero_grad()\n        g_loss = criterion(D(fake_imgs), real_label)\n        g_loss.backward()\n        optimizer_G.step()\n\n    print(f\"Epoch [{epoch+1}/10]  D Loss: {d_loss.item():.4f}  G Loss: {g_loss.item():.4f}\")\n</code></pre>"},{"location":"deeplearning/interview/#gan_1","title":"\ud83e\udde9 \u200b\u4e94\u200b\u3001\u200b\u5e38\u89c1\u200b GAN \u200b\u53d8\u4f53","text":"\u6a21\u578b\u200b \u200b\u7279\u70b9\u200b \u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u6539\u8fdb\u200b DCGAN \u200b\u5377\u79ef\u200b\u7ed3\u6784\u200b\uff08\u200b\u56fe\u50cf\u200b\u751f\u6210\u200b\uff09 \u200b\u7a33\u5b9a\u200b\u8bad\u7ec3\u200b WGAN \u200b\u4f7f\u7528\u200b Wasserstein \u200b\u8ddd\u79bb\u200b \u200b\u6539\u5584\u200b\u6a21\u5f0f\u200b\u5d29\u6e83\u200b WGAN-GP \u200b\u52a0\u5165\u200b\u68af\u5ea6\u200b\u60e9\u7f5a\u200b \u200b\u6536\u655b\u200b\u66f4\u200b\u7a33\u5b9a\u200b Conditional GAN (cGAN) \u200b\u6761\u4ef6\u200b\u751f\u6210\u200b \\(G(z, y), D(x, y)\\) CycleGAN \u200b\u65e0\u9700\u200b\u914d\u5bf9\u200b\u6837\u672c\u200b\u7684\u200b\u56fe\u50cf\u200b\u8f6c\u6362\u200b \u200b\u7528\u200b\u5faa\u73af\u200b\u4e00\u81f4\u6027\u200b\u635f\u5931\u200b StyleGAN \u200b\u63a7\u5236\u200b\u751f\u6210\u200b\u56fe\u50cf\u200b\u98ce\u683c\u200b \u200b\u9ad8\u8d28\u91cf\u200b\u56fe\u50cf\u200b\u751f\u6210"},{"location":"deeplearning/interview/#_31","title":"\ud83e\uddee \u200b\u516d\u200b\u3001\u200b\u6a21\u578b\u200b\u4f18\u5316\u200b\u6280\u5de7","text":"\u65b9\u6cd5\u200b \u200b\u8bf4\u660e\u200b \u200b\u6807\u7b7e\u200b\u5e73\u6ed1\u200b\uff08Label Smoothing\uff09 \u200b\u5c06\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\u4ece\u200b 1 \u200b\u6539\u4e3a\u200b 0.9\uff0c\u200b\u7a33\u5b9a\u200b\u8bad\u7ec3\u200b \u200b\u7279\u5f81\u200b\u5339\u914d\u200b\uff08Feature Matching\uff09 \u200b\u7528\u200b\u4e2d\u95f4\u200b\u7279\u5f81\u200b\u5c42\u200b\u8bad\u7ec3\u200b\u751f\u6210\u5668\u200b \u200b\u4f7f\u7528\u200b Wasserstein \u200b\u635f\u5931\u200b \u200b\u7f13\u89e3\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\u3001\u200b\u6a21\u5f0f\u200b\u5d29\u6e83\u200b \u200b\u68af\u5ea6\u200b\u60e9\u7f5a\u200b\uff08Gradient Penalty\uff09 \u200b\u4fdd\u8bc1\u200b 1-Lipschitz \u200b\u6761\u4ef6\u200b \u200b\u8c31\u200b\u5f52\u4e00\u5316\u200b\uff08Spectral Norm\uff09 \u200b\u9650\u5236\u200b\u6743\u91cd\u200b\u8303\u6570\u200b \u200b\u5b66\u4e60\u200b\u7387\u200b\u5206\u79bb\u200b G \u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u7565\u9ad8\u4e8e\u200b D"},{"location":"deeplearning/interview/#_32","title":"\u26a0\ufe0f \u200b\u4e03\u200b\u3001\u200b\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>GAN \u200b\u8bad\u7ec3\u200b \u200b\u6781\u200b\u4e0d\u200b\u7a33\u5b9a\u200b\uff1b</li> <li>D \u200b\u592a\u5f3a\u200b \u21d2 G \u200b\u65e0\u200b\u68af\u5ea6\u200b\uff1bD \u200b\u592a\u5f31\u200b \u21d2 G \u200b\u6b3a\u9a97\u200b\u5bb9\u6613\u200b\uff1b</li> <li>\u200b\u521d\u59cb\u200b\u5b66\u4e60\u200b\u7387\u200b\u9700\u5c0f\u200b\uff1b</li> <li>\u200b\u9700\u200b\u540c\u65f6\u200b\u76d1\u63a7\u200b D \u200b\u4e0e\u200b G \u200b\u7684\u200b\u635f\u5931\u200b\uff1b</li> <li>\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b WGAN / WGAN-GP\uff1b</li> <li>\u200b\u5bf9\u200b\u56fe\u50cf\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b\uff0c\u200b\u63a8\u8350\u200b DCGAN \u200b\u67b6\u6784\u200b\uff1b</li> <li>\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\u53ef\u200b\u52a8\u6001\u200b\u8c03\u6574\u200b\u5224\u522b\u200b\u5668\u200b\u8bad\u7ec3\u200b\u6b21\u6570\u200b\u3002</li> </ol>"},{"location":"deeplearning/interview/#_33","title":"\u2696\ufe0f \u200b\u516b\u200b\u3001\u200b\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u751f\u6210\u200b\u8d28\u91cf\u200b\u9ad8\u200b \u200b\u8bad\u7ec3\u200b\u4e0d\u200b\u7a33\u5b9a\u200b \u200b\u65e0\u9700\u200b\u663e\u5f0f\u200b\u5efa\u6a21\u200b\u6982\u7387\u5bc6\u5ea6\u200b \u200b\u6a21\u5f0f\u200b\u5d29\u6e83\u200b\uff08\u200b\u751f\u6210\u200b\u6837\u672c\u200b\u5355\u4e00\u200b\uff09 \u200b\u7406\u8bba\u200b\u4e0a\u200b\u53ef\u200b\u751f\u6210\u200b\u4efb\u610f\u200b\u5206\u5e03\u200b \u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\u4e0d\u200b\u5b8c\u7f8e\u200b \u200b\u5e94\u7528\u200b\u5e7f\u6cdb\u200b \u200b\u5bf9\u8d85\u200b\u53c2\u6570\u200b\u654f\u611f"},{"location":"deeplearning/interview/#_34","title":"\ud83d\udcc8 \u200b\u4e5d\u200b\u3001\u200b\u5178\u578b\u200b\u5e94\u7528\u200b\u573a\u666f","text":"\u9886\u57df\u200b \u200b\u5e94\u7528\u200b \u200b\u793a\u4f8b\u200b \u200b\u56fe\u50cf\u200b\u751f\u6210\u200b \u200b\u624b\u5199\u200b\u6570\u5b57\u200b\u3001\u200b\u4eba\u8138\u200b\u751f\u6210\u200b DCGAN, StyleGAN \u200b\u56fe\u50cf\u200b\u5230\u200b\u56fe\u50cf\u200b\u8f6c\u6362\u200b \u200b\u9a6c\u200b\u2194\u200b\u6591\u9a6c\u200b\u3001\u200b\u590f\u200b\u2194\u200b\u51ac\u200b CycleGAN \u200b\u8d85\u200b\u5206\u8fa8\u7387\u200b\u91cd\u5efa\u200b SRGAN \u200b\u56fe\u50cf\u200b\u6e05\u6670\u5316\u200b \u200b\u6570\u636e\u200b\u589e\u5f3a\u200b \u200b\u533b\u5b66\u5f71\u50cf\u200b\u3001\u200b\u8bed\u97f3\u200b\u751f\u6210\u200b cGAN \u200b\u6587\u672c\u200b\u5230\u200b\u56fe\u50cf\u200b Text2Image GAN \u200b\u6587\u672c\u200b\u751f\u6210\u200b\u56fe\u50cf"},{"location":"deeplearning/interview/#_35","title":"\ud83e\udded \u200b\u5341\u200b\u3001\u200b\u5b66\u4e60\u200b\u62d3\u5c55\u200b\u8def\u7ebf","text":"\u9636\u6bb5\u200b \u200b\u5b66\u4e60\u200b\u76ee\u6807\u200b \u200b\u793a\u4f8b\u200b \u200b\u5165\u95e8\u200b \u200b\u7406\u89e3\u200b GAN \u200b\u5bf9\u6297\u200b\u673a\u5236\u200b \u200b\u8bad\u7ec3\u200b\u539f\u59cb\u200b GAN \u200b\u8fdb\u9636\u200b DCGAN / WGAN-GP \u200b\u7406\u89e3\u200b \u200b\u56fe\u50cf\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b \u200b\u63d0\u5347\u200b \u200b\u6761\u4ef6\u200b\u751f\u6210\u200b\u3001CycleGAN \u200b\u98ce\u683c\u200b\u8fc1\u79fb\u200b \u200b\u9ad8\u9636\u200b StyleGAN, Diffusion \u200b\u9ad8\u5206\u8fa8\u7387\u200b\u4eba\u8138\u200b\u751f\u6210\u200b \u200b\u7814\u7a76\u200b\u65b9\u5411\u200b \u200b\u7406\u8bba\u200b\u7a33\u5b9a\u6027\u200b\u3001\u200b\u5bf9\u6297\u200b\u9c81\u68d2\u6027\u200b GAN \u200b\u7406\u8bba\u200b\u5206\u6790"},{"location":"llm/deploy/Gradio/tutorial/","title":"Gradio","text":""},{"location":"llm/deploy/Gradio/tutorial/#gradio","title":"\ud83d\ude80 \u200b\u7b2c\u4e00\u7ae0\u200b\uff1aGradio \u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f","text":"<p>Gradio \u200b\u662f\u200b\u4e00\u4e2a\u200b Python \u200b\u5e93\u200b\uff0c\u200b\u7528\u200b\u6781\u5c11\u200b\u4ee3\u7801\u200b\u5c31\u200b\u80fd\u200b\u7ed9\u200b\u4f60\u200b\u7684\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u6216\u200b\u4efb\u610f\u200b\u51fd\u6570\u200b\u521b\u5efa\u200b\u4ea4\u4e92\u5f0f\u200b Web \u200b\u754c\u9762\u200b\u3002 \u200b\u65e0\u9700\u200b\u524d\u7aef\u200b\u77e5\u8bc6\u200b\uff0c\u200b\u4e0d\u7528\u200b\u642d\u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b React \u200b\u7684\u200b\u7075\u9b42\u200b\u51fa\u7a8d\u200b\u3002</p> <p>\u200b\u4e00\u53e5\u200b\u8bdd\u200b\uff1a\u200b\u8ba9\u200b\u522b\u4eba\u200b\u7528\u200b\u9f20\u6807\u200b\u70b9\u70b9\u200b\u4f60\u200b\u7684\u200b AI\uff01</p> <p>\u200b\u793a\u610f\u200b\u4f8b\u5b50\u200b\uff1a</p> <pre><code>import gradio as gr\n\ndef hello(name):\n    return f\"\u200b\u4f60\u597d\u200b\uff0c{name}\uff01\"\n\ngr.Interface(fn=hello, inputs=\"text\", outputs=\"text\").launch()\n</code></pre> <p>\u200b\u8fd0\u884c\u200b\u540e\u200b\uff0c\u200b\u5b83\u4f1a\u200b\u81ea\u52a8\u200b\u5728\u200b\u672c\u5730\u200b\u5f00\u200b\u4e00\u4e2a\u200b Web \u200b\u754c\u9762\u200b\uff0c\u200b\u53ef\u80fd\u200b\u8fd8\u200b\u987a\u4fbf\u200b\u9001\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u516c\u7f51\u200b\u5206\u4eab\u200b\u94fe\u63a5\u200b\u3002</p>"},{"location":"llm/deploy/Gradio/tutorial/#inputs-outputs","title":"\ud83d\udd2e \u200b\u7b2c\u4e8c\u7ae0\u200b\uff1a\u200b\u57fa\u7840\u200b\u7ec4\u4ef6\u200b\uff08inputs / outputs\uff09","text":"<p>\u200b\u5e38\u89c1\u200b\u8f93\u5165\u200b\u63a7\u4ef6\u200b\uff1a</p> \u200b\u7c7b\u578b\u200b \u200b\u540d\u5b57\u200b \u200b\u793a\u4f8b\u200b \u200b\u6587\u672c\u200b <code>\"text\"</code> \u200b\u8f93\u5165\u200b\u4e00\u53e5\u200b\u8bdd\u200b \u200b\u56fe\u50cf\u200b <code>\"image\"</code> \u200b\u4e0a\u4f20\u200b\u6216\u200b\u62cd\u7167\u200b \u200b\u6570\u5b57\u200b <code>\"number\"</code> \u200b\u8f93\u5165\u200b\u6570\u503c\u200b \u200b\u6ed1\u6761\u200b <code>\"slider\"</code> \u200b\u9009\u62e9\u200b\u8303\u56f4\u200b\u503c\u200b \u200b\u4e0b\u62c9\u83dc\u5355\u200b <code>\"dropdown\"</code> \u200b\u591a\u9009\u200b\u4e00\u200b <p>\u200b\u5e38\u89c1\u200b\u8f93\u51fa\u200b\u63a7\u4ef6\u200b\uff1a</p> \u200b\u7c7b\u578b\u200b \u200b\u540d\u5b57\u200b \u200b\u793a\u4f8b\u200b <code>\"text\"</code> \u200b\u6587\u672c\u200b\u7ed3\u679c\u200b <code>\"label\"</code> \u200b\u5206\u7c7b\u200b\u6807\u7b7e\u200b <code>\"image\"</code> \u200b\u56fe\u50cf\u200b\u8f93\u51fa\u200b <code>\"plot\"</code> \u200b\u7ed8\u56fe\u200b <p>\u200b\u7b80\u5355\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>import gradio as gr\nimport numpy as np\n\ndef invert(image):\n    return 255 - image\n\ngr.Interface(fn=invert, inputs=\"image\", outputs=\"image\").launch()\n</code></pre> <p>AI \u200b\u7167\u76f8\u9986\u200b\uff1a\u200b\u628a\u200b\u56fe\u7247\u200b\u53d8\u6210\u200b\u53cd\u8272\u200b\u4e16\u754c\u200b\u3002</p>"},{"location":"llm/deploy/Gradio/tutorial/#blocks","title":"\ud83c\udf9b \u200b\u7b2c\u4e09\u7ae0\u200b\uff1aBlocks \u2014\u2014 \u200b\u5b9a\u5236\u200b\u5316\u200b\u754c\u9762","text":"<p>Interface \u200b\u662f\u200b\u50bb\u74dc\u5f0f\u200b\u4e00\u628a\u200b\u68ad\u200b\u3002 Blocks \u200b\u5219\u200b\u662f\u200b\u79ef\u6728\u200b\uff1a\u200b\u4f60\u200b\u60f3\u200b\u600e\u4e48\u200b\u642d\u200b\u90fd\u884c\u200b\u3002</p> <p>\u200b\u4f8b\u5b50\u200b\uff1a\u200b\u4e24\u4e2a\u200b\u8f93\u5165\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u8f93\u51fa\u200b\uff0c\u200b\u4e00\u9897\u200b\u6309\u94ae\u200b\u638c\u63a7\u200b\u4e7e\u5764\u200b\u3002</p> <pre><code>import gradio as gr\n\ndef calculate(a, b):\n    return a + b\n\nwith gr.Blocks() as demo:\n    gr.Markdown(\"# \u200b\u7b80\u6613\u200b\u52a0\u6cd5\u5668\u200b\")\n    x = gr.Number(label=\"\u200b\u6570\u5b57\u200b A\")\n    y = gr.Number(label=\"\u200b\u6570\u5b57\u200b B\")\n    btn = gr.Button(\"\u200b\u5f00\u59cb\u200b\u8ba1\u7b97\u200b\")\n    result = gr.Textbox(label=\"\u200b\u7ed3\u679c\u200b\")\n\n    btn.click(fn=calculate, inputs=[x, y], outputs=result)\n\ndemo.launch()\n</code></pre> <p>Blocks \u200b\u8ba9\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u6392\u7248\u200b\u3001\u200b\u4e8b\u4ef6\u200b\u89e6\u53d1\u200b\u3001\u200b\u8fdb\u5ea6\u6761\u200b\u3001\u200b\u804a\u5929\u200b\u754c\u9762\u200b\u7b49\u200b\u3002</p>"},{"location":"llm/deploy/Gradio/tutorial/#ai","title":"\ud83e\udd16 \u200b\u7b2c\u56db\u7ae0\u200b\uff1a\u200b\u6587\u672c\u200b\u751f\u6210\u200b / AI \u200b\u6a21\u578b\u200b\u793a\u4f8b","text":"<p>\u200b\u63a5\u200b\u4e00\u4e2a\u200b Hugging Face Transformers \u200b\u6587\u672c\u200b\u751f\u6210\u200b\u6a21\u578b\u200b\uff1a</p> <pre><code>import gradio as gr\nfrom transformers import pipeline\n\ngenerator = pipeline(\"text-generation\", model=\"gpt2\")\n\ndef generate(prompt):\n    return generator(prompt, max_length=50)[0][\"generated_text\"]\n\ngr.Interface(fn=generate, inputs=\"text\", outputs=\"text\").launch()\n</code></pre> <p>\u200b\u4f60\u200b\u505a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u8ff7\u4f60\u200b ChatGPT\uff08\u200b\u8bed\u8a00\u200b\u80fd\u529b\u200b\u5c0f\u5b66\u751f\u200b\u7248\u200b\uff09\u3002</p>"},{"location":"llm/deploy/Gradio/tutorial/#_1","title":"\ud83c\udfa8 \u200b\u7b2c\u4e94\u7ae0\u200b\uff1a\u200b\u56fe\u50cf\u5904\u7406\u200b\u793a\u4f8b\u200b\uff08\u200b\u4e0a\u4f20\u200b+\u200b\u663e\u793a\u200b\u7ed3\u679c\u200b\uff09","text":"<pre><code>import gradio as gr\nfrom PIL import Image\n\ndef flip(img):\n    return img.transpose(Image.FLIP_LEFT_RIGHT)\n\ngr.Interface(fn=flip, inputs=\"image\", outputs=\"image\").launch()\n</code></pre> <p>\u200b\u955c\u50cf\u200b\u7ffb\u8f6c\u200b\uff0c\u200b\u81ea\u62cd\u200b\u7684\u200b\u5de6\u8138\u200b\u548c\u200b\u53f3\u200b\u8138\u200b\u4e92\u6362\u200b\u547d\u8fd0\u200b\u3002</p>"},{"location":"llm/deploy/Gradio/tutorial/#_2","title":"\ud83d\udce1 \u200b\u7b2c\u516d\u7ae0\u200b\uff1a\u200b\u90e8\u7f72\u200b\u5206\u4eab","text":"<p>Gradio \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\uff1a</p> <ul> <li>\u200b\u672c\u200b\u673a\u200b URL\uff08localhost\uff09</li> <li>\u200b\u53ef\u200b\u516c\u7f51\u200b\u8bbf\u95ee\u200b\u7684\u200b share \u200b\u94fe\u63a5\u200b</li> </ul> <p>\u200b\u547d\u4ee4\u884c\u200b\u90e8\u7f72\u200b\uff1a</p> <pre><code>gradio app.py\n</code></pre> <p>\u200b\u60f3\u200b\u7ed9\u200b\u670b\u53cb\u200b\u70ab\u200b\u4e00\u4e0b\u200b\u6a21\u578b\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u53d1\u5916\u200b\u94fe\u200b\u4e00\u6837\u200b\u7b80\u5355\u200b\u3002</p> <p>\u200b\u7ebf\u4e0a\u200b\u90e8\u7f72\u200b\u53ef\u4ee5\u200b\u7528\u200b Hugging Face Spaces\uff08\u200b\u514d\u8d39\u200b\uff09\u3002</p>"},{"location":"llm/deploy/Gradio/tutorial/#chatbot","title":"\ud83e\udde0 \u200b\u7b2c\u4e03\u7ae0\u200b\uff1a\u200b\u591a\u8f6e\u200b\u5bf9\u8bdd\u200b\uff08Chatbot\uff09","text":"<p>\u200b\u4f8b\u5b50\u200b\uff1a\u200b\u5e26\u200b\u804a\u5929\u8bb0\u5f55\u200b\u7684\u200b\u56de\u58f0\u200b\u673a\u5668\u4eba\u200b\u3002</p> <pre><code>import gradio as gr\n\ndef chat(message, history):\n    history = history or []\n    response = f\"\u200b\u4f60\u200b\u8bf4\u200b\u7684\u200b\u662f\u200b\uff1a{message}\"\n    history.append((message, response))\n    return history, history\n\nwith gr.Blocks() as demo:\n    chatbot = gr.Chatbot()\n    msg = gr.Textbox()\n    btn = gr.Button(\"\u200b\u53d1\u9001\u200b\")\n    btn.click(chat, [msg, chatbot], [chatbot, chatbot])\n\ndemo.launch()\n</code></pre> <p>\u200b\u7b80\u5355\u200b\u5374\u200b\u5145\u6ee1\u200b\u65e0\u9650\u200b\u53ef\u80fd\u200b\u3002</p>"},{"location":"llm/deploy/Gradio/tutorial/#_3","title":"\ud83d\udd25 \u200b\u7b2c\u516b\u7ae0\u200b\uff1a\u200b\u6587\u4ef6\u200b\u8f93\u5165\u200b / \u200b\u8f93\u51fa","text":"<pre><code>import gradio as gr\n\ndef file_info(file):\n    return f\"\u200b\u6587\u4ef6\u540d\u200b\uff1a{file.name}\"\n\ninterface = gr.Interface(fn=file_info, inputs=\"file\", outputs=\"text\")\ninterface.launch()\n</code></pre> <p>\u200b\u63a5\u6536\u200b\u6587\u4ef6\u200b \u2192 \u200b\u8f93\u51fa\u200b\u4fe1\u606f\u200b\u3002</p>"},{"location":"llm/deploy/Gradio/tutorial/#_4","title":"\ud83c\udf93 \u200b\u8fdb\u9636\u200b\u6280\u5de7","text":"<ol> <li>\u200b\u81ea\u5b9a\u4e49\u200b CSS</li> <li>\u200b\u5b9e\u65f6\u200b\u66f4\u65b0\u200b\uff08live=True\uff09</li> <li>\u200b\u5e76\u53d1\u200b\u63a7\u5236\u200b queue()</li> <li>\u200b\u4e8b\u4ef6\u200b\u94fe\u63a5\u200b\uff1achange / submit</li> <li>\u200b\u6743\u91cd\u200b\u7f13\u5b58\u200b + GPU \u200b\u52a0\u901f\u200b</li> </ol> <p>\u200b\u793a\u610f\u200b queue\uff1a</p> <pre><code>demo.queue().launch()\n</code></pre> <p>\u200b\u907f\u514d\u200b\u9ad8\u200b\u5e76\u53d1\u200b\u201c\u200b\u70b8\u673a\u200b\u201d\u3002</p>"},{"location":"llm/deploy/Gradio/tutorial/#_5","title":"\ud83e\udde9 \u200b\u5c0f\u200b\u6311\u6218\u200b\uff08\u200b\u82e5\u200b\u4f60\u200b\u60f3\u200b\u7ee7\u7eed\u200b\u5347\u7ea7\u200b\uff09","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8bd5\u8bd5\u200b\uff1a</p> <ul> <li>\u200b\u505a\u200b\u4e00\u4e2a\u200b\u8bed\u97f3\u200b\u8bc6\u522b\u200b + \u200b\u8bed\u97f3\u200b\u56de\u590d\u200b\u7684\u200b AI \u200b\u52a9\u624b\u200b</li> <li>\u200b\u505a\u200b\u4e00\u4e2a\u200b\u56fe\u50cf\u200b\u5206\u7c7b\u5668\u200b\u5e76\u200b\u52a0\u4e0a\u200b Grad-CAM \u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\u53ef\u89c6\u5316\u200b</li> <li>\u200b\u505a\u200b\u4e00\u4e2a\u200b\u804a\u5929\u200b\u5927\u200b\u6a21\u578b\u200b\u7684\u200b UI\uff0c\u200b\u652f\u6301\u200b\u601d\u7ef4\u200b\u94fe\u200b\u5c55\u793a\u200b</li> </ul> <p>\u200b\u6bcf\u4e2a\u200b\u65b9\u5411\u200b\u90fd\u200b\u662f\u200b\u65b0\u200b\u7684\u200b\u5192\u9669\u5c9b\u200b\u3002</p>"},{"location":"llm/deploy/Gradio/tutorial/#_6","title":"\u2705 \u200b\u603b\u7ed3","text":"<p>Gradio \u200b\u8ba9\u200b\u6a21\u578b\u200b\u201c\u200b\u53ef\u89c1\u200b\u3001\u200b\u53ef\u89e6\u200b\u3001\u200b\u53ef\u73a9\u200b\u201d\u3002 \u200b\u5b83\u200b\u5c31\u200b\u50cf\u200b\u7ed9\u200b\u4f60\u200b\u7684\u200b\u4ee3\u7801\u200b\u63d2\u4e0a\u200b UI \u200b\u7684\u200b\u7fc5\u8180\u200b\uff0c\u200b\u8ba9\u200b\u522b\u4eba\u200b\u770b\u89c1\u200b\u4f60\u200b\u7684\u200b\u8111\u6d1e\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u613f\u610f\u200b\uff0c\u200b\u6211\u200b\u53ef\u4ee5\u200b\u7ee7\u7eed\u200b\u6269\u5c55\u200b\uff1a</p> <ul> <li>\u200b\u6df1\u5ea6\u200b Blocks \u200b\u6280\u5de7\u200b</li> <li>\u200b\u66f4\u200b\u590d\u6742\u200b\u5e03\u5c40\u200b\uff08Tabs\u3001Column\u3001Row\uff09</li> <li>\u200b\u4e0a\u200b\u4f20\u5230\u200b Hugging Face Spaces \u200b\u90e8\u7f72\u200b\u5b8c\u6574\u200b\u9879\u76ee\u200b</li> <li>\u200b\u52a0\u200b\u5b89\u5168\u200b\u8ba4\u8bc1\u200b\u3001\u200b\u6570\u636e\u5e93\u200b\u3001\u200b\u7528\u6237\u200b\u7ba1\u7406\u200b</li> </ul> <p>\u200b\u7ee7\u7eed\u200b\u73a9\u200b\u4e0b\u53bb\u200b\uff0c\u200b\u4f60\u200b\u4f1a\u200b\u62e5\u6709\u200b\u81ea\u5df1\u200b\u7684\u200b AI \u200b\u5e94\u7528\u200b\u5546\u5e97\u200b\u3002</p>"},{"location":"llm/deploy/Streamlit/tutorial/","title":"Streamlit \u200b\u5b8c\u6574\u200b\u6559\u7a0b\u200b\uff1a\u200b\u4ece\u200b\u57fa\u7840\u200b\u5230\u200b\u9ad8\u7ea7","text":""},{"location":"llm/deploy/Streamlit/tutorial/#_1","title":"\u6982\u5ff5\u200b\u4ecb\u7ecd","text":""},{"location":"llm/deploy/Streamlit/tutorial/#streamlit_1","title":"\u4ec0\u4e48\u200b\u662f\u200b Streamlit\uff1f","text":"<p>Streamlit \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f00\u6e90\u200b\u7684\u200b Python \u200b\u6846\u67b6\u200b\uff0c\u200b\u4e13\u95e8\u200b\u7528\u4e8e\u200b\u5feb\u901f\u200b\u6784\u5efa\u200b\u548c\u200b\u5206\u4eab\u200b\u6570\u636e\u200b\u79d1\u5b66\u200b\u548c\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b Web \u200b\u5e94\u7528\u200b\u3002\u200b\u5b83\u200b\u8ba9\u200b\u6570\u636e\u200b\u79d1\u5b66\u5bb6\u200b\u548c\u200b\u5de5\u7a0b\u5e08\u200b\u80fd\u591f\u200b\u7528\u200b\u7b80\u5355\u200b\u7684\u200b Python \u200b\u811a\u672c\u200b\u521b\u5efa\u200b\u4ea4\u4e92\u5f0f\u200b\u3001\u200b\u7f8e\u89c2\u200b\u7684\u200b Web \u200b\u5e94\u7528\u200b\uff0c\u200b\u800c\u200b\u65e0\u9700\u200b\u524d\u7aef\u5f00\u53d1\u200b\u7ecf\u9a8c\u200b\u3002</p>"},{"location":"llm/deploy/Streamlit/tutorial/#_2","title":"\u6838\u5fc3\u200b\u7279\u70b9","text":"<ul> <li>\u200b\u7b80\u5355\u200b\u6613\u7528\u200b\uff1a\u200b\u53ea\u200b\u9700\u200b\u51e0\u884c\u200b Python \u200b\u4ee3\u7801\u200b</li> <li>\u200b\u5b9e\u65f6\u200b\u66f4\u65b0\u200b\uff1a\u200b\u4ee3\u7801\u200b\u4fdd\u5b58\u200b\u540e\u200b\u5e94\u7528\u200b\u7acb\u5373\u200b\u66f4\u65b0\u200b</li> <li>\u200b\u4e30\u5bcc\u200b\u7ec4\u4ef6\u200b\uff1a\u200b\u5185\u7f6e\u200b\u591a\u79cd\u200b\u4ea4\u4e92\u5f0f\u200b\u7ec4\u4ef6\u200b</li> <li>\u200b\u65e0\u9700\u200b\u524d\u7aef\u200b\uff1a\u200b\u7eaf\u200b Python\uff0c\u200b\u65e0\u9700\u200b HTML/CSS/JavaScript</li> <li>\u200b\u6570\u636e\u200b\u96c6\u6210\u200b\uff1a\u200b\u5b8c\u7f8e\u200b\u652f\u6301\u200b Pandas\u3001Matplotlib\u3001Plotly \u200b\u7b49\u200b</li> </ul>"},{"location":"llm/deploy/Streamlit/tutorial/#_3","title":"\u57fa\u7840\u200b\u4ee3\u7801\u200b\u793a\u4f8b","text":""},{"location":"llm/deploy/Streamlit/tutorial/#1","title":"1. \u200b\u5b89\u88c5\u200b\u548c\u200b\u57fa\u7840\u200b\u5e94\u7528","text":"<pre><code># \u200b\u5b89\u88c5\u200b streamlit\n# pip install streamlit\n\nimport streamlit as st\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# \u200b\u8bbe\u7f6e\u200b\u9875\u9762\u200b\u914d\u7f6e\u200b\uff08\u200b\u5fc5\u987b\u200b\u5728\u200b\u6700\u200b\u524d\u9762\u200b\uff09\nst.set_page_config(\n    page_title=\"\u200b\u6211\u200b\u7684\u200b Streamlit \u200b\u5e94\u7528\u200b\",\n    page_icon=\"\ud83d\ude80\",\n    layout=\"wide\",  # \"wide\" \u200b\u6216\u200b \"centered\"\n    initial_sidebar_state=\"expanded\",  # \"auto\", \"expanded\", \"collapsed\"\n    menu_items={\n        'Get Help': 'https://docs.streamlit.io/',\n        'Report a bug': \"https://github.com/streamlit/streamlit/issues\",\n        'About': \"# \u200b\u8fd9\u200b\u662f\u200b\u6211\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b Streamlit \u200b\u5e94\u7528\u200b!\"\n    }\n)\n\n# \u200b\u6807\u9898\u200b\u548c\u200b\u6587\u672c\u200b\nst.title(\"\ud83c\udfaf \u200b\u6211\u200b\u7684\u200b Streamlit \u200b\u6559\u7a0b\u200b\u5e94\u7528\u200b\")\nst.header(\"\u200b\u8fd9\u200b\u662f\u200b\u4e3b\u200b\u6807\u9898\u200b\")\nst.subheader(\"\u200b\u8fd9\u662f\u200b\u526f\u6807\u9898\u200b\")\n\n# Markdown \u200b\u652f\u6301\u200b\nst.markdown(\"\"\"\n\u200b\u8fd9\u662f\u200b **\u200b\u7c97\u4f53\u200b** \u200b\u548c\u200b *\u200b\u659c\u4f53\u200b* \u200b\u6587\u672c\u200b\n- \u200b\u5217\u8868\u200b\u9879\u200b 1\n- \u200b\u5217\u8868\u200b\u9879\u200b 2\n- \u200b\u5217\u8868\u200b\u9879\u200b 3\n\n[\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u94fe\u63a5\u200b](https://streamlit.io)\n\"\"\")\n\n# \u200b\u4ee3\u7801\u200b\u5757\u200b\nst.code(\"\"\"\nimport streamlit as st\nst.write('Hello World!')\n\"\"\", language='python')\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#_4","title":"\u9875\u9762\u200b\u5e03\u5c40\u200b\u8be6\u89e3","text":""},{"location":"llm/deploy/Streamlit/tutorial/#2","title":"2. \u200b\u4fa7\u8fb9\u200b\u680f\u200b\u5e03\u5c40","text":"<pre><code># \u200b\u4fa7\u8fb9\u200b\u680f\u200b - \u200b\u6240\u6709\u200b\u4ee5\u200b st.sidebar \u200b\u5f00\u5934\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u90fd\u200b\u4f1a\u200b\u663e\u793a\u200b\u5728\u200b\u4fa7\u8fb9\u200b\u680f\u200b\nst.sidebar.title(\"\ud83c\udf9b\ufe0f \u200b\u63a7\u5236\u9762\u677f\u200b\")\nst.sidebar.markdown(\"\u200b\u8fd9\u91cc\u200b\u662f\u200b\u5e94\u7528\u200b\u7684\u200b\u914d\u7f6e\u200b\u9009\u9879\u200b\")\n\n# \u200b\u4fa7\u8fb9\u200b\u680f\u200b\u7ec4\u4ef6\u200b\nsidebar_option = st.sidebar.radio(\n    \"\u200b\u9009\u62e9\u200b\u529f\u80fd\u200b\",\n    [\"\u200b\u6570\u636e\u200b\u67e5\u770b\u200b\", \"\u200b\u6570\u636e\u5206\u6790\u200b\", \"\u200b\u6570\u636e\u200b\u53ef\u89c6\u5316\u200b\"]\n)\n\n# \u200b\u4fa7\u8fb9\u200b\u680f\u200b\u6587\u4ef6\u200b\u4e0a\u4f20\u200b\nuploaded_file = st.sidebar.file_uploader(\n    \"\u200b\u4e0a\u4f20\u200b\u6570\u636e\u6587\u4ef6\u200b\",\n    type=['csv', 'xlsx', 'txt']\n)\n\n# \u200b\u4fa7\u8fb9\u200b\u680f\u200b\u4e0b\u8f7d\u200b\u6309\u94ae\u200b\nif st.sidebar.button(\"\u200b\u4e0b\u8f7d\u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\"):\n    # \u200b\u521b\u5efa\u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\u4f9b\u200b\u4e0b\u8f7d\u200b\n    sample_data = pd.DataFrame({\n        'x': range(100),\n        'y': np.random.randn(100)\n    })\n    csv = sample_data.to_csv(index=False)\n    st.sidebar.download_button(\n        label=\"\u200b\u4e0b\u8f7d\u200b CSV\",\n        data=csv,\n        file_name=\"sample_data.csv\",\n        mime=\"text/csv\"\n    )\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#3","title":"3. \u200b\u5217\u200b\u5e03\u5c40","text":"<pre><code># \u200b\u5217\u200b\u5e03\u5c40\u200b\u793a\u4f8b\u200b\nst.header(\"\ud83d\udcd0 \u200b\u5217\u200b\u5e03\u5c40\u200b\u793a\u4f8b\u200b\")\n\n# \u200b\u521b\u5efa\u200b\u7b49\u200b\u5bbd\u5217\u200b\ncol1, col2, col3 = st.columns(3)\n\nwith col1:\n    st.subheader(\"\u200b\u7b2c\u4e00\u5217\u200b\")\n    st.metric(\"\u200b\u6e29\u5ea6\u200b\", \"25\u00b0C\", \"1.2\u00b0C\")\n    st.button(\"\u200b\u5217\u200b1\u200b\u6309\u94ae\u200b\", key=\"btn1\")\n\nwith col2:\n    st.subheader(\"\u200b\u7b2c\u4e8c\u5217\u200b\")\n    st.metric(\"\u200b\u6e7f\u5ea6\u200b\", \"60%\", \"-5%\")\n    st.button(\"\u200b\u5217\u200b2\u200b\u6309\u94ae\u200b\", key=\"btn2\")\n\nwith col3:\n    st.subheader(\"\u200b\u7b2c\u4e09\u5217\u200b\")\n    st.metric(\"\u200b\u538b\u529b\u200b\", \"1013 hPa\", \"2 hPa\")\n    st.button(\"\u200b\u5217\u200b3\u200b\u6309\u94ae\u200b\", key=\"btn3\")\n\n# \u200b\u521b\u5efa\u200b\u4e0d\u200b\u7b49\u200b\u5bbd\u5217\u200b\nst.header(\"\u200b\u4e0d\u200b\u7b49\u200b\u5bbd\u5217\u200b\u5e03\u5c40\u200b\")\nwide_col, narrow_col = st.columns([3, 1])\n\nwith wide_col:\n    st.subheader(\"\u200b\u4e3b\u8981\u200b\u5185\u5bb9\u200b\u533a\u200b\")\n    # \u200b\u751f\u6210\u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\n    data = pd.DataFrame({\n        '\u200b\u59d3\u540d\u200b': ['\u200b\u5f20\u4e09\u200b', '\u200b\u674e\u56db\u200b', '\u200b\u738b\u4e94\u200b', '\u200b\u8d75\u516d\u200b'],\n        '\u200b\u5e74\u9f84\u200b': [25, 30, 35, 28],\n        '\u200b\u57ce\u5e02\u200b': ['\u200b\u5317\u4eac\u200b', '\u200b\u4e0a\u6d77\u200b', '\u200b\u5e7f\u5dde\u200b', '\u200b\u6df1\u5733\u200b'],\n        '\u200b\u5206\u6570\u200b': [85, 92, 78, 96]\n    })\n    st.dataframe(data, use_container_width=True)\n\nwith narrow_col:\n    st.subheader(\"\u200b\u63a7\u5236\u533a\u200b\")\n    show_age = st.checkbox(\"\u200b\u663e\u793a\u200b\u5e74\u9f84\u200b\")\n    show_city = st.checkbox(\"\u200b\u663e\u793a\u200b\u57ce\u5e02\u200b\")\n    theme = st.selectbox(\"\u200b\u4e3b\u9898\u200b\", [\"\u200b\u6d45\u8272\u200b\", \"\u200b\u6df1\u8272\u200b\"])\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#4","title":"4. \u200b\u5bb9\u5668\u200b\u548c\u200b\u6269\u5c55\u5668","text":"<pre><code># \u200b\u5bb9\u5668\u200b\u793a\u4f8b\u200b\nst.header(\"\ud83d\udce6 \u200b\u5bb9\u5668\u200b\u548c\u200b\u6269\u5c55\u5668\u200b\")\n\n# \u200b\u4f7f\u7528\u200b\u5bb9\u5668\u200b\u7ec4\u7ec7\u200b\u76f8\u5173\u200b\u5185\u5bb9\u200b\nwith st.container():\n    st.subheader(\"\u200b\u76f8\u5173\u200b\u529f\u80fd\u200b\u7ec4\u200b\")\n    col1, col2 = st.columns(2)\n\n    with col1:\n        name = st.text_input(\"\u200b\u59d3\u540d\u200b\")\n        email = st.text_input(\"\u200b\u90ae\u7bb1\u200b\")\n\n    with col2:\n        phone = st.text_input(\"\u200b\u7535\u8bdd\u200b\")\n        department = st.selectbox(\"\u200b\u90e8\u95e8\u200b\", [\"\u200b\u6280\u672f\u200b\", \"\u200b\u5e02\u573a\u200b\", \"\u200b\u9500\u552e\u200b\", \"\u200b\u4eba\u4e8b\u200b\"])\n\n    st.info(\"\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u4fe1\u606f\u200b\u5bb9\u5668\u200b\uff0c\u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b\u53ef\u4ee5\u200b\u653e\u5728\u200b\u4e00\u8d77\u200b\")\n\n# \u200b\u6269\u5c55\u5668\u200b\uff08\u200b\u53ef\u6298\u53e0\u200b\u5185\u5bb9\u200b\uff09\nwith st.expander(\"\ud83d\udcca \u200b\u70b9\u51fb\u200b\u67e5\u770b\u200b\u8be6\u7ec6\u200b\u7edf\u8ba1\u200b\u4fe1\u606f\u200b\", expanded=False):\n    st.write(\"### \u200b\u6570\u636e\u200b\u7edf\u8ba1\u200b\")\n    if 'data' in locals():\n        st.write(f\"\u200b\u6570\u636e\u200b\u884c\u200b\u6570\u200b: {len(data)}\")\n        st.write(f\"\u200b\u6570\u636e\u200b\u5217\u6570\u200b: {len(data.columns)}\")\n        st.write(\"\u200b\u6570\u636e\u7c7b\u578b\u200b:\")\n        st.write(data.dtypes)\n\n    # \u200b\u5728\u200b\u6269\u5c55\u5668\u200b\u5185\u90e8\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u6709\u200b\u56fe\u8868\u200b\n    fig, ax = plt.subplots()\n    if 'data' in locals() and '\u200b\u5e74\u9f84\u200b' in data.columns:\n        ax.hist(data['\u200b\u5e74\u9f84\u200b'], bins=10, alpha=0.7, color='skyblue')\n        ax.set_title('\u200b\u5e74\u9f84\u200b\u5206\u5e03\u200b')\n        st.pyplot(fig)\n\n# \u200b\u591a\u4e2a\u200b\u6269\u5c55\u5668\u200b\nexpander1 = st.expander(\"\ud83d\udcdd \u200b\u4f7f\u7528\u200b\u8bf4\u660e\u200b\")\nwith expander1:\n    st.write(\"\"\"\n    \u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b Streamlit \u200b\u5e94\u7528\u200b\u7684\u200b\u4f7f\u7528\u200b\u8bf4\u660e\u200b\uff1a\n    1. \u200b\u9996\u5148\u200b\u5728\u200b\u4fa7\u8fb9\u200b\u680f\u200b\u4e0a\u4f20\u200b\u6570\u636e\u200b\n    2. \u200b\u7136\u540e\u200b\u9009\u62e9\u200b\u5206\u6790\u200b\u529f\u80fd\u200b\n    3. \u200b\u67e5\u770b\u200b\u7ed3\u679c\u200b\u548c\u200b\u53ef\u89c6\u5316\u200b\n    \"\"\")\n\nexpander2 = st.expander(\"\u2699\ufe0f \u200b\u9ad8\u7ea7\u200b\u8bbe\u7f6e\u200b\")\nwith expander2:\n    precision = st.slider(\"\u200b\u8ba1\u7b97\u7cbe\u5ea6\u200b\", 1, 10, 2)\n    auto_refresh = st.checkbox(\"\u200b\u81ea\u52a8\u200b\u5237\u65b0\u200b\")\n    refresh_interval = st.number_input(\"\u200b\u5237\u65b0\u200b\u95f4\u9694\u200b(\u200b\u79d2\u200b)\", 1, 60, 5)\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#5","title":"5. \u200b\u6807\u7b7e\u200b\u9875\u200b\u5e03\u5c40","text":"<pre><code># \u200b\u6807\u7b7e\u200b\u9875\u200b\u5e03\u5c40\u200b (Streamlit 1.23.0+)\nst.header(\"\ud83d\udcd1 \u200b\u6807\u7b7e\u200b\u9875\u200b\u5e03\u5c40\u200b\")\n\ntab1, tab2, tab3, tab4 = st.tabs([\"\ud83d\udcca \u200b\u6570\u636e\u200b\", \"\ud83d\udcc8 \u200b\u56fe\u8868\u200b\", \"\ud83d\udd27 \u200b\u8bbe\u7f6e\u200b\", \"\u2139\ufe0f \u200b\u5173\u4e8e\u200b\"])\n\nwith tab1:\n    st.subheader(\"\u200b\u6570\u636e\u7ba1\u7406\u200b\")\n    if 'data' in locals():\n        st.dataframe(data, use_container_width=True)\n\n        # \u200b\u6570\u636e\u200b\u7f16\u8f91\u200b\u529f\u80fd\u200b\n        st.subheader(\"\u200b\u6570\u636e\u200b\u7f16\u8f91\u200b\")\n        edited_data = st.data_editor(data, num_rows=\"dynamic\")\n        if st.button(\"\u200b\u4fdd\u5b58\u200b\u66f4\u6539\u200b\"):\n            st.success(\"\u200b\u6570\u636e\u200b\u5df2\u200b\u66f4\u65b0\u200b\uff01\")\n\nwith tab2:\n    st.subheader(\"\u200b\u6570\u636e\u200b\u53ef\u89c6\u5316\u200b\")\n\n    if 'data' in locals():\n        chart_type = st.selectbox(\"\u200b\u9009\u62e9\u200b\u56fe\u8868\u200b\u7c7b\u578b\u200b\", [\"\u200b\u6298\u7ebf\u56fe\u200b\", \"\u200b\u67f1\u72b6\u56fe\u200b\", \"\u200b\u6563\u70b9\u56fe\u200b\"])\n\n        if chart_type == \"\u200b\u6298\u7ebf\u56fe\u200b\":\n            st.line_chart(data.set_index('\u200b\u59d3\u540d\u200b')['\u200b\u5206\u6570\u200b'])\n        elif chart_type == \"\u200b\u67f1\u72b6\u56fe\u200b\":\n            st.bar_chart(data.set_index('\u200b\u59d3\u540d\u200b')['\u200b\u5206\u6570\u200b'])\n        elif chart_type == \"\u200b\u6563\u70b9\u56fe\u200b\":\n            fig = px.scatter(data, x='\u200b\u5e74\u9f84\u200b', y='\u200b\u5206\u6570\u200b', text='\u200b\u59d3\u540d\u200b')\n            st.plotly_chart(fig, use_container_width=True)\n\nwith tab3:\n    st.subheader(\"\u200b\u5e94\u7528\u200b\u8bbe\u7f6e\u200b\")\n\n    # \u200b\u4e3b\u9898\u200b\u8bbe\u7f6e\u200b\n    theme = st.selectbox(\"\u200b\u9009\u62e9\u200b\u4e3b\u9898\u200b\", [\"\u200b\u6d45\u8272\u200b\", \"\u200b\u6df1\u8272\u200b\", \"\u200b\u7cfb\u7edf\u200b\u9ed8\u8ba4\u200b\"])\n\n    # \u200b\u6570\u636e\u200b\u8bbe\u7f6e\u200b\n    st.subheader(\"\u200b\u6570\u636e\u200b\u8bbe\u7f6e\u200b\")\n    decimal_places = st.slider(\"\u200b\u5c0f\u6570\u4f4d\u200b\u6570\u200b\", 0, 6, 2)\n    date_format = st.selectbox(\"\u200b\u65e5\u671f\u200b\u683c\u5f0f\u200b\", [\"YYYY-MM-DD\", \"DD/MM/YYYY\", \"MM/DD/YYYY\"])\n\n    # \u200b\u4fdd\u5b58\u200b\u8bbe\u7f6e\u200b\n    if st.button(\"\u200b\u5e94\u7528\u200b\u8bbe\u7f6e\u200b\"):\n        st.success(\"\u200b\u8bbe\u7f6e\u200b\u5df2\u200b\u4fdd\u5b58\u200b\uff01\")\n\nwith tab4:\n    st.subheader(\"\u200b\u5173\u4e8e\u200b\u5e94\u7528\u200b\")\n    st.write(\"\"\"\n    ## Streamlit \u200b\u6570\u636e\u200b\u4eea\u8868\u677f\u200b\n\n    **\u200b\u7248\u672c\u200b**: 1.0.0\n    **\u200b\u4f5c\u8005\u200b**: Your Name\n    **\u200b\u63cf\u8ff0\u200b**: \u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u6570\u636e\u5206\u6790\u200b\u548c\u200b\u53ef\u89c6\u5316\u200b\u7684\u200b Streamlit \u200b\u5e94\u7528\u200b\n\n    ### \u200b\u529f\u80fd\u200b\u7279\u6027\u200b\n    - \u200b\u6570\u636e\u200b\u4e0a\u4f20\u200b\u548c\u200b\u67e5\u770b\u200b\n    - \u200b\u4ea4\u4e92\u5f0f\u200b\u6570\u636e\u5206\u6790\u200b\n    - \u200b\u591a\u79cd\u200b\u53ef\u89c6\u5316\u200b\u56fe\u8868\u200b\n    - \u200b\u53ef\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u8bbe\u7f6e\u200b\n    \"\"\")\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#session-state","title":"Session State \u200b\u8be6\u89e3","text":""},{"location":"llm/deploy/Streamlit/tutorial/#6-session-state","title":"6. Session State \u200b\u57fa\u7840","text":"<pre><code># Session State \u200b\u7ba1\u7406\u200b\u5e94\u7528\u200b\u72b6\u6001\u200b\nst.header(\"\ud83d\udcbe Session State \u200b\u7ba1\u7406\u200b\")\n\n# \u200b\u521d\u59cb\u5316\u200b session state\nif 'counter' not in st.session_state:\n    st.session_state.counter = 0\nif 'user_data' not in st.session_state:\n    st.session_state.user_data = {}\nif 'app_state' not in st.session_state:\n    st.session_state.app_state = {\n        'theme': 'light',\n        'language': 'zh',\n        'data_loaded': False\n    }\n\n# \u200b\u8ba1\u6570\u5668\u200b\u793a\u4f8b\u200b\ncol1, col2, col3 = st.columns(3)\n\nwith col1:\n    if st.button(\"\u200b\u589e\u52a0\u200b\u8ba1\u6570\u200b\"):\n        st.session_state.counter += 1\n\nwith col2:\n    if st.button(\"\u200b\u51cf\u5c11\u200b\u8ba1\u6570\u200b\"):\n        st.session_state.counter -= 1\n\nwith col3:\n    if st.button(\"\u200b\u91cd\u7f6e\u200b\u8ba1\u6570\u200b\"):\n        st.session_state.counter = 0\n\nst.metric(\"\u200b\u5f53\u524d\u200b\u8ba1\u6570\u200b\", st.session_state.counter)\n\n# \u200b\u663e\u793a\u200b\u6240\u6709\u200b session state\nwith st.expander(\"\u200b\u67e5\u770b\u200b\u6240\u6709\u200b Session State\"):\n    st.write(\"\u200b\u8ba1\u6570\u5668\u200b:\", st.session_state.counter)\n    st.write(\"\u200b\u7528\u6237\u200b\u6570\u636e\u200b:\", st.session_state.user_data)\n    st.write(\"\u200b\u5e94\u7528\u200b\u72b6\u6001\u200b:\", st.session_state.app_state)\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#7-session-state","title":"7. Session State \u200b\u9ad8\u7ea7\u200b\u7528\u6cd5","text":"<pre><code># \u200b\u590d\u6742\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\nst.header(\"\ud83d\udd04 \u200b\u590d\u6742\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\")\n\n# \u200b\u7528\u6237\u200b\u4f1a\u8bdd\u200b\u7ba1\u7406\u200b\nif 'user_session' not in st.session_state:\n    st.session_state.user_session = {\n        'logged_in': False,\n        'username': '',\n        'preferences': {},\n        'history': []\n    }\n\n# \u200b\u767b\u5f55\u200b\u7cfb\u7edf\u200b\nst.subheader(\"\u200b\u7528\u6237\u200b\u4f1a\u8bdd\u200b\u7ba1\u7406\u200b\")\n\nif not st.session_state.user_session['logged_in']:\n    with st.form(\"login_form\"):\n        username = st.text_input(\"\u200b\u7528\u6237\u540d\u200b\")\n        password = st.text_input(\"\u200b\u5bc6\u7801\u200b\", type=\"password\")\n        submit = st.form_submit_button(\"\u200b\u767b\u5f55\u200b\")\n\n        if submit:\n            if username and password:  # \u200b\u7b80\u5355\u200b\u9a8c\u8bc1\u200b\n                st.session_state.user_session.update({\n                    'logged_in': True,\n                    'username': username,\n                    'login_time': pd.Timestamp.now()\n                })\n                st.success(f\"\u200b\u6b22\u8fce\u200b {username}!\")\n                st.rerun()\nelse:\n    st.success(f\"\u200b\u5df2\u200b\u767b\u5f55\u200b\u4e3a\u200b: {st.session_state.user_session['username']}\")\n\n    # \u200b\u7528\u6237\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b\n    with st.form(\"preferences_form\"):\n        st.subheader(\"\u200b\u7528\u6237\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b\")\n        theme = st.selectbox(\"\u200b\u4e3b\u9898\u200b\", [\"\u200b\u6d45\u8272\u200b\", \"\u200b\u6df1\u8272\u200b\", \"\u200b\u81ea\u52a8\u200b\"])\n        language = st.selectbox(\"\u200b\u8bed\u8a00\u200b\", [\"\u200b\u4e2d\u6587\u200b\", \"\u200b\u82f1\u6587\u200b\"])\n        notifications = st.checkbox(\"\u200b\u542f\u7528\u200b\u901a\u77e5\u200b\")\n\n        if st.form_submit_button(\"\u200b\u4fdd\u5b58\u200b\u504f\u597d\u200b\"):\n            st.session_state.user_session['preferences'] = {\n                'theme': theme,\n                'language': language,\n                'notifications': notifications\n            }\n            st.success(\"\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b\u5df2\u200b\u4fdd\u5b58\u200b!\")\n\n    # \u200b\u9000\u51fa\u200b\u767b\u5f55\u200b\n    if st.button(\"\u200b\u9000\u51fa\u200b\u767b\u5f55\u200b\"):\n        # \u200b\u4fdd\u5b58\u200b\u5386\u53f2\u8bb0\u5f55\u200b\n        if 'history' not in st.session_state.user_session:\n            st.session_state.user_session['history'] = []\n\n        st.session_state.user_session['history'].append({\n            'action': 'logout',\n            'time': pd.Timestamp.now()\n        })\n\n        st.session_state.user_session['logged_in'] = False\n        st.info(\"\u200b\u5df2\u200b\u9000\u51fa\u200b\u767b\u5f55\u200b\")\n        st.rerun()\n\n# \u200b\u8d2d\u7269\u8f66\u200b\u793a\u4f8b\u200b\nst.subheader(\"\u200b\u8d2d\u7269\u8f66\u200b\u793a\u4f8b\u200b\")\n\nif 'shopping_cart' not in st.session_state:\n    st.session_state.shopping_cart = []\n\nproducts = [\n    {\"id\": 1, \"name\": \"\u200b\u7b14\u8bb0\u672c\u7535\u8111\u200b\", \"price\": 5999},\n    {\"id\": 2, \"name\": \"\u200b\u65e0\u7ebf\u200b\u9f20\u6807\u200b\", \"price\": 199},\n    {\"id\": 3, \"name\": \"\u200b\u673a\u68b0\u200b\u952e\u76d8\u200b\", \"price\": 599},\n    {\"id\": 4, \"name\": \"\u200b\u663e\u793a\u5668\u200b\", \"price\": 1299},\n]\n\n# \u200b\u663e\u793a\u200b\u5546\u54c1\u200b\u5217\u8868\u200b\nst.write(\"### \u200b\u5546\u54c1\u200b\u5217\u8868\u200b\")\nfor product in products:\n    col1, col2, col3 = st.columns([3, 1, 1])\n    with col1:\n        st.write(f\"**{product['name']}** - \u00a5{product['price']}\")\n    with col2:\n        if st.button(f\"\u200b\u52a0\u5165\u200b\u8d2d\u7269\u8f66\u200b\", key=f\"add_{product['id']}\"):\n            st.session_state.shopping_cart.append(product)\n            st.success(f\"\u200b\u5df2\u200b\u6dfb\u52a0\u200b {product['name']} \u200b\u5230\u200b\u8d2d\u7269\u8f66\u200b\")\n    with col3:\n        if st.button(f\"\u200b\u79fb\u9664\u200b\", key=f\"remove_{product['id']}\"):\n            # \u200b\u79fb\u9664\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5339\u914d\u200b\u7684\u200b\u5546\u54c1\u200b\n            for i in range(len(st.session_state.shopping_cart)-1, -1, -1):\n                if st.session_state.shopping_cart[i]['id'] == product['id']:\n                    st.session_state.shopping_cart.pop(i)\n                    st.info(f\"\u200b\u5df2\u200b\u79fb\u9664\u200b {product['name']}\")\n                    break\n\n# \u200b\u663e\u793a\u200b\u8d2d\u7269\u8f66\u200b\nst.write(\"### \u200b\u8d2d\u7269\u8f66\u200b\")\nif st.session_state.shopping_cart:\n    cart_df = pd.DataFrame(st.session_state.shopping_cart)\n    st.dataframe(cart_df)\n\n    total_price = sum(item['price'] for item in st.session_state.shopping_cart)\n    st.metric(\"\u200b\u603b\u4ef7\u200b\", f\"\u00a5{total_price}\")\n\n    if st.button(\"\u200b\u6e05\u7a7a\u200b\u8d2d\u7269\u8f66\u200b\"):\n        st.session_state.shopping_cart = []\n        st.rerun()\nelse:\n    st.info(\"\u200b\u8d2d\u7269\u8f66\u200b\u4e3a\u7a7a\u200b\")\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#8","title":"8. \u200b\u8868\u5355\u200b\u548c\u200b\u72b6\u6001\u200b\u7ed3\u5408","text":"<pre><code># \u200b\u8868\u5355\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\nst.header(\"\ud83d\udcdd \u200b\u8868\u5355\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\")\n\n# \u200b\u591a\u200b\u6b65\u9aa4\u200b\u8868\u5355\u200b\nif 'form_step' not in st.session_state:\n    st.session_state.form_step = 1\nif 'form_data' not in st.session_state:\n    st.session_state.form_data = {}\n\n# \u200b\u6b65\u9aa4\u200b\u6307\u793a\u5668\u200b\nsteps = [\"\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b\", \"\u200b\u8be6\u7ec6\u8d44\u6599\u200b\", \"\u200b\u786e\u8ba4\u200b\u4fe1\u606f\u200b\"]\ncurrent_step = st.session_state.form_step\n\n# \u200b\u663e\u793a\u200b\u8fdb\u5ea6\u200b\nprogress = current_step / len(steps)\nst.progress(progress)\nst.write(f\"\u200b\u6b65\u9aa4\u200b {current_step}/{len(steps)}: {steps[current_step-1]}\")\n\n# \u200b\u591a\u200b\u6b65\u9aa4\u200b\u8868\u5355\u200b\u5185\u5bb9\u200b\nif current_step == 1:\n    with st.form(\"step1_form\"):\n        st.subheader(\"\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b\")\n        name = st.text_input(\"\u200b\u59d3\u540d\u200b\", value=st.session_state.form_data.get('name', ''))\n        email = st.text_input(\"\u200b\u90ae\u7bb1\u200b\", value=st.session_state.form_data.get('email', ''))\n\n        if st.form_submit_button(\"\u200b\u4e0b\u200b\u4e00\u6b65\u200b\"):\n            st.session_state.form_data.update({\n                'name': name,\n                'email': email\n            })\n            st.session_state.form_step = 2\n            st.rerun()\n\nelif current_step == 2:\n    with st.form(\"step2_form\"):\n        st.subheader(\"\u200b\u8be6\u7ec6\u8d44\u6599\u200b\")\n        age = st.number_input(\"\u200b\u5e74\u9f84\u200b\", min_value=0, max_value=150, \n                             value=st.session_state.form_data.get('age', 25))\n        city = st.selectbox(\"\u200b\u57ce\u5e02\u200b\", [\"\u200b\u5317\u4eac\u200b\", \"\u200b\u4e0a\u6d77\u200b\", \"\u200b\u5e7f\u5dde\u200b\", \"\u200b\u6df1\u5733\u200b\", \"\u200b\u5176\u4ed6\u200b\"],\n                           index=st.session_state.form_data.get('city_index', 0))\n\n        col1, col2 = st.columns(2)\n        with col1:\n            if st.form_submit_button(\"\u200b\u4e0a\u200b\u4e00\u6b65\u200b\"):\n                st.session_state.form_step = 1\n                st.rerun()\n        with col2:\n            if st.form_submit_button(\"\u200b\u4e0b\u200b\u4e00\u6b65\u200b\"):\n                st.session_state.form_data.update({\n                    'age': age,\n                    'city': city\n                })\n                st.session_state.form_step = 3\n                st.rerun()\n\nelif current_step == 3:\n    st.subheader(\"\u200b\u786e\u8ba4\u200b\u4fe1\u606f\u200b\")\n    st.write(\"\u200b\u8bf7\u200b\u786e\u8ba4\u200b\u60a8\u200b\u8f93\u5165\u200b\u7684\u200b\u4fe1\u606f\u200b:\")\n    st.json(st.session_state.form_data)\n\n    col1, col2 = st.columns(2)\n    with col1:\n        if st.button(\"\u200b\u8fd4\u56de\u200b\u4fee\u6539\u200b\"):\n            st.session_state.form_step = 2\n            st.rerun()\n    with col2:\n        if st.button(\"\u200b\u63d0\u4ea4\u200b\"):\n            st.success(\"\u200b\u8868\u5355\u200b\u63d0\u4ea4\u200b\u6210\u529f\u200b!\")\n            # \u200b\u91cd\u7f6e\u200b\u8868\u5355\u200b\n            st.session_state.form_step = 1\n            st.session_state.form_data = {}\n            st.rerun()\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#9","title":"9. \u200b\u7f13\u5b58\u200b\u548c\u200b\u6027\u80fd\u200b\u4f18\u5316","text":"<pre><code># \u200b\u7f13\u5b58\u200b\u673a\u5236\u200b\nst.header(\"\u26a1 \u200b\u7f13\u5b58\u200b\u548c\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\")\n\n# \u200b\u6570\u636e\u200b\u7f13\u5b58\u200b\n@st.cache_data(ttl=3600)  # \u200b\u7f13\u5b58\u200b1\u200b\u5c0f\u65f6\u200b\ndef load_large_dataset(file_path):\n    \"\"\"\u200b\u6a21\u62df\u200b\u52a0\u8f7d\u200b\u5927\u578b\u200b\u6570\u636e\u200b\u96c6\u200b\"\"\"\n    st.info(\"\u200b\u6b63\u5728\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b...\")\n    time.sleep(2)  # \u200b\u6a21\u62df\u200b\u8017\u65f6\u200b\u64cd\u4f5c\u200b\n    return pd.DataFrame({\n        'id': range(1000),\n        'value': np.random.randn(1000),\n        'category': np.random.choice(['A', 'B', 'C'], 1000)\n    })\n\n# \u200b\u8d44\u6e90\u200b\u7f13\u5b58\u200b\n@st.cache_resource\ndef get_expensive_model():\n    \"\"\"\u200b\u6a21\u62df\u200b\u52a0\u8f7d\u200b\u6602\u8d35\u200b\u6a21\u578b\u200b\"\"\"\n    st.info(\"\u200b\u6b63\u5728\u200b\u52a0\u8f7d\u200b\u6a21\u578b\u200b...\")\n    time.sleep(3)\n    return \"\u200b\u6a21\u62df\u200b\u7684\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\"\n\n# \u200b\u7f13\u5b58\u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nif st.button(\"\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b(\u200b\u4f7f\u7528\u200b\u7f13\u5b58\u200b)\"):\n    data = load_large_dataset(\"dummy_path.csv\")\n    st.write(f\"\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u5b8c\u6210\u200b\uff0c\u200b\u5171\u200b {len(data)} \u200b\u884c\u200b\")\n\nif st.button(\"\u200b\u52a0\u8f7d\u200b\u6a21\u578b\u200b(\u200b\u4f7f\u7528\u200b\u7f13\u5b58\u200b)\"):\n    model = get_expensive_model()\n    st.success(f\"\u200b\u6a21\u578b\u200b\u52a0\u8f7d\u200b\u5b8c\u6210\u200b: {model}\")\n\n# \u200b\u6e05\u7a7a\u200b\u7f13\u5b58\u200b\nif st.button(\"\u200b\u6e05\u7a7a\u200b\u6240\u6709\u200b\u7f13\u5b58\u200b\"):\n    st.cache_data.clear()\n    st.cache_resource.clear()\n    st.success(\"\u200b\u7f13\u5b58\u200b\u5df2\u200b\u6e05\u7a7a\u200b!\")\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#_5","title":"\u5b8c\u6574\u200b\u5e94\u7528\u200b\u793a\u4f8b","text":""},{"location":"llm/deploy/Streamlit/tutorial/#10","title":"10. \u200b\u7efc\u5408\u200b\u5e94\u7528\u200b\uff1a\u200b\u6570\u636e\u5206\u6790\u200b\u4eea\u8868\u677f","text":"<pre><code>import streamlit as st\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom datetime import datetime, timedelta\n\n# \u200b\u5e94\u7528\u200b\u914d\u7f6e\u200b\nst.set_page_config(\n    page_title=\"\u200b\u9ad8\u7ea7\u200b\u6570\u636e\u5206\u6790\u200b\u4eea\u8868\u677f\u200b\",\n    page_icon=\"\ud83d\udcca\",\n    layout=\"wide\",\n    initial_sidebar_state=\"expanded\"\n)\n\n# \u200b\u521d\u59cb\u5316\u200b session state\nif 'dashboard' not in st.session_state:\n    st.session_state.dashboard = {\n        'data_loaded': False,\n        'current_view': 'overview',\n        'filters': {},\n        'charts_config': {}\n    }\n\ndef main():\n    # \u200b\u6807\u9898\u200b\u548c\u200b\u63cf\u8ff0\u200b\n    st.title(\"\ud83d\udcca \u200b\u9ad8\u7ea7\u200b\u6570\u636e\u5206\u6790\u200b\u4eea\u8868\u677f\u200b\")\n    st.markdown(\"---\")\n\n    # \u200b\u4fa7\u8fb9\u200b\u680f\u200b\n    with st.sidebar:\n        st.header(\"\u200b\u63a7\u5236\u9762\u677f\u200b\")\n\n        # \u200b\u6570\u636e\u200b\u4e0a\u4f20\u200b\n        uploaded_file = st.file_uploader(\n            \"\u200b\u4e0a\u4f20\u200b\u6570\u636e\u6587\u4ef6\u200b (CSV)\",\n            type=['csv'],\n            key=\"file_uploader\"\n        )\n\n        if uploaded_file is not None:\n            try:\n                data = pd.read_csv(uploaded_file)\n                st.session_state.dashboard['data'] = data\n                st.session_state.dashboard['data_loaded'] = True\n                st.success(f\"\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u6210\u529f\u200b! \u200b\u5171\u200b {len(data)} \u200b\u884c\u200b, {len(data.columns)} \u200b\u5217\u200b\")\n            except Exception as e:\n                st.error(f\"\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u5931\u8d25\u200b: {e}\")\n\n        # \u200b\u89c6\u56fe\u200b\u9009\u62e9\u200b\n        if st.session_state.dashboard['data_loaded']:\n            view_options = {\n                \"overview\": \"\u200b\u6570\u636e\u200b\u6982\u89c8\u200b\",\n                \"explore\": \"\u200b\u6570\u636e\u200b\u63a2\u7d22\u200b\", \n                \"visualize\": \"\u200b\u6570\u636e\u200b\u53ef\u89c6\u5316\u200b\",\n                \"analyze\": \"\u200b\u9ad8\u7ea7\u200b\u5206\u6790\u200b\"\n            }\n\n            selected_view = st.radio(\n                \"\u200b\u9009\u62e9\u200b\u89c6\u56fe\u200b\",\n                options=list(view_options.keys()),\n                format_func=lambda x: view_options[x]\n            )\n            st.session_state.dashboard['current_view'] = selected_view\n\n    # \u200b\u4e3b\u200b\u5185\u5bb9\u200b\u533a\u200b\n    if st.session_state.dashboard['data_loaded']:\n        data = st.session_state.dashboard['data']\n        current_view = st.session_state.dashboard['current_view']\n\n        if current_view == 'overview':\n            show_data_overview(data)\n        elif current_view == 'explore':\n            show_data_exploration(data)\n        elif current_view == 'visualize':\n            show_data_visualization(data)\n        elif current_view == 'analyze':\n            show_advanced_analysis(data)\n    else:\n        show_welcome_screen()\n\ndef show_welcome_screen():\n    \"\"\"\u200b\u6b22\u8fce\u200b\u754c\u9762\u200b\"\"\"\n    st.header(\"\u200b\u6b22\u8fce\u200b\u4f7f\u7528\u200b\u6570\u636e\u5206\u6790\u200b\u4eea\u8868\u677f\u200b\")\n\n    col1, col2 = st.columns(2)\n\n    with col1:\n        st.info(\"\"\"\n        ### \ud83d\ude80 \u200b\u529f\u80fd\u200b\u7279\u6027\u200b\n        - \u200b\u6570\u636e\u200b\u4e0a\u4f20\u200b\u548c\u200b\u9884\u89c8\u200b\n        - \u200b\u4ea4\u4e92\u5f0f\u200b\u6570\u636e\u200b\u63a2\u7d22\u200b\n        - \u200b\u591a\u79cd\u200b\u53ef\u89c6\u5316\u200b\u56fe\u8868\u200b\n        - \u200b\u9ad8\u7ea7\u200b\u7edf\u8ba1\u5206\u6790\u200b\n        - \u200b\u5b9e\u65f6\u200b\u6570\u636e\u200b\u8fc7\u6ee4\u200b\n        \"\"\")\n\n    with col2:\n        st.warning(\"\"\"\n        ### \ud83d\udcdd \u200b\u4f7f\u7528\u200b\u8bf4\u660e\u200b\n        1. \u200b\u5728\u200b\u5de6\u4fa7\u200b\u8fb9\u680f\u200b\u4e0a\u4f20\u200b CSV \u200b\u6587\u4ef6\u200b\n        2. \u200b\u9009\u62e9\u200b\u4e0d\u540c\u200b\u7684\u200b\u89c6\u56fe\u200b\u6a21\u5f0f\u200b\n        3. \u200b\u4f7f\u7528\u200b\u4ea4\u4e92\u5f0f\u200b\u63a7\u4ef6\u200b\u63a2\u7d22\u200b\u6570\u636e\u200b\n        4. \u200b\u4fdd\u5b58\u200b\u548c\u200b\u5bfc\u51fa\u200b\u5206\u6790\u200b\u7ed3\u679c\u200b\n        \"\"\")\n\n    # \u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\n    if st.button(\"\u200b\u52a0\u8f7d\u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\"):\n        # \u200b\u751f\u6210\u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\n        np.random.seed(42)\n        sample_data = pd.DataFrame({\n            '\u200b\u65e5\u671f\u200b': pd.date_range('2023-01-01', periods=100),\n            '\u200b\u9500\u552e\u989d\u200b': np.random.normal(1000, 200, 100).cumsum(),\n            '\u200b\u5ba2\u6237\u200b\u6570\u200b': np.random.poisson(50, 100),\n            '\u200b\u4ea7\u54c1\u7c7b\u522b\u200b': np.random.choice(['\u200b\u7535\u5b50\u4ea7\u54c1\u200b', '\u200b\u670d\u88c5\u200b', '\u200b\u98df\u54c1\u200b', '\u200b\u5bb6\u5c45\u200b'], 100),\n            '\u200b\u5730\u533a\u200b': np.random.choice(['\u200b\u534e\u5317\u200b', '\u200b\u534e\u4e1c\u200b', '\u200b\u534e\u5357\u200b', '\u200b\u897f\u90e8\u200b'], 100)\n        })\n        st.session_state.dashboard['data'] = sample_data\n        st.session_state.dashboard['data_loaded'] = True\n        st.rerun()\n\ndef show_data_overview(data):\n    \"\"\"\u200b\u6570\u636e\u200b\u6982\u89c8\u200b\u89c6\u56fe\u200b\"\"\"\n    st.header(\"\ud83d\udcc8 \u200b\u6570\u636e\u200b\u6982\u89c8\u200b\")\n\n    # \u200b\u5173\u952e\u200b\u6307\u6807\u200b\n    col1, col2, col3, col4 = st.columns(4)\n\n    with col1:\n        st.metric(\"\u200b\u603b\u884c\u200b\u6570\u200b\", len(data))\n    with col2:\n        st.metric(\"\u200b\u603b\u5217\u6570\u200b\", len(data.columns))\n    with col3:\n        st.metric(\"\u200b\u7f3a\u5931\u200b\u503c\u200b\", data.isnull().sum().sum())\n    with col4:\n        st.metric(\"\u200b\u5185\u5b58\u200b\u4f7f\u7528\u200b\", f\"{data.memory_usage(deep=True).sum() / 1024**2:.2f} MB\")\n\n    # \u200b\u6570\u636e\u200b\u9884\u89c8\u200b\n    st.subheader(\"\u200b\u6570\u636e\u200b\u9884\u89c8\u200b\")\n    tab1, tab2, tab3 = st.tabs([\"\u200b\u524d\u200b\u51e0\u884c\u200b\", \"\u200b\u540e\u200b\u51e0\u884c\u200b\", \"\u200b\u968f\u673a\u6837\u672c\u200b\"])\n\n    with tab1:\n        st.dataframe(data.head(10), use_container_width=True)\n    with tab2:\n        st.dataframe(data.tail(10), use_container_width=True)\n    with tab3:\n        st.dataframe(data.sample(10), use_container_width=True)\n\n    # \u200b\u6570\u636e\u7c7b\u578b\u200b\u4fe1\u606f\u200b\n    st.subheader(\"\u200b\u6570\u636e\u7c7b\u578b\u200b\u4fe1\u606f\u200b\")\n    dtype_info = pd.DataFrame({\n        '\u200b\u5217\u540d\u200b': data.columns,\n        '\u200b\u6570\u636e\u7c7b\u578b\u200b': data.dtypes,\n        '\u200b\u975e\u200b\u7a7a\u503c\u200b\u6570\u91cf\u200b': data.count(),\n        '\u200b\u7a7a\u503c\u200b\u6570\u91cf\u200b': data.isnull().sum()\n    })\n    st.dataframe(dtype_info, use_container_width=True)\n\ndef show_data_exploration(data):\n    \"\"\"\u200b\u6570\u636e\u200b\u63a2\u7d22\u200b\u89c6\u56fe\u200b\"\"\"\n    st.header(\"\ud83d\udd0d \u200b\u6570\u636e\u200b\u63a2\u7d22\u200b\")\n\n    # \u200b\u5217\u200b\u9009\u62e9\u5668\u200b\n    col1, col2 = st.columns(2)\n\n    with col1:\n        selected_columns = st.multiselect(\n            \"\u200b\u9009\u62e9\u200b\u8981\u200b\u5206\u6790\u200b\u7684\u200b\u5217\u200b\",\n            options=data.columns.tolist(),\n            default=data.columns.tolist()[:3] if len(data.columns) &gt;= 3 else data.columns.tolist()\n        )\n\n    with col2:\n        # \u200b\u6570\u636e\u200b\u8fc7\u6ee4\u200b\n        st.subheader(\"\u200b\u6570\u636e\u200b\u8fc7\u6ee4\u200b\")\n        filter_col = st.selectbox(\"\u200b\u8fc7\u6ee4\u200b\u5217\u200b\", [None] + data.select_dtypes(include=[np.number]).columns.tolist())\n        if filter_col:\n            min_val, max_val = float(data[filter_col].min()), float(data[filter_col].max())\n            filter_range = st.slider(\n                f\"\u200b\u9009\u62e9\u200b {filter_col} \u200b\u8303\u56f4\u200b\",\n                min_val, max_val, (min_val, max_val)\n            )\n            filtered_data = data[(data[filter_col] &gt;= filter_range[0]) &amp; (data[filter_col] &lt;= filter_range[1])]\n        else:\n            filtered_data = data\n\n    if selected_columns:\n        # \u200b\u663e\u793a\u200b\u9009\u4e2d\u200b\u7684\u200b\u5217\u200b\u6570\u636e\u200b\n        st.subheader(\"\u200b\u9009\u4e2d\u200b\u7684\u200b\u6570\u636e\u200b\")\n        st.dataframe(filtered_data[selected_columns], use_container_width=True)\n\n        # \u200b\u63cf\u8ff0\u6027\u200b\u7edf\u8ba1\u200b\n        st.subheader(\"\u200b\u63cf\u8ff0\u6027\u200b\u7edf\u8ba1\u200b\")\n        st.dataframe(filtered_data[selected_columns].describe(), use_container_width=True)\n\n        # \u200b\u76f8\u5173\u6027\u200b\u5206\u6790\u200b\uff08\u200b\u5982\u679c\u200b\u6709\u200b\u591a\u5217\u200b\u6570\u503c\u6570\u636e\u200b\uff09\n        numeric_cols = filtered_data[selected_columns].select_dtypes(include=[np.number]).columns\n        if len(numeric_cols) &gt; 1:\n            st.subheader(\"\u200b\u76f8\u5173\u6027\u200b\u77e9\u9635\u200b\")\n            corr_matrix = filtered_data[numeric_cols].corr()\n            fig = px.imshow(corr_matrix, text_auto=True, aspect=\"auto\")\n            st.plotly_chart(fig, use_container_width=True)\n\ndef show_data_visualization(data):\n    \"\"\"\u200b\u6570\u636e\u200b\u53ef\u89c6\u5316\u200b\u89c6\u56fe\u200b\"\"\"\n    st.header(\"\ud83d\udcca \u200b\u6570\u636e\u200b\u53ef\u89c6\u5316\u200b\")\n\n    # \u200b\u56fe\u8868\u200b\u7c7b\u578b\u200b\u9009\u62e9\u200b\n    chart_type = st.selectbox(\n        \"\u200b\u9009\u62e9\u200b\u56fe\u8868\u200b\u7c7b\u578b\u200b\",\n        [\"\u200b\u6563\u70b9\u56fe\u200b\", \"\u200b\u6298\u7ebf\u56fe\u200b\", \"\u200b\u67f1\u72b6\u56fe\u200b\", \"\u200b\u76f4\u65b9\u56fe\u200b\", \"\u200b\u7bb1\u200b\u7ebf\u56fe\u200b\", \"\u200b\u70ed\u200b\u529b\u56fe\u200b\"]\n    )\n\n    col1, col2 = st.columns(2)\n\n    with col1:\n        # X \u200b\u8f74\u200b\u9009\u62e9\u200b\n        x_axis = st.selectbox(\"X \u200b\u8f74\u200b\", data.columns.tolist())\n\n    with col2:\n        # Y \u200b\u8f74\u200b\u9009\u62e9\u200b\uff08\u200b\u5982\u679c\u200b\u662f\u200b\u6570\u503c\u200b\u578b\u200b\u56fe\u8868\u200b\uff09\n        if chart_type in [\"\u200b\u6563\u70b9\u56fe\u200b\", \"\u200b\u6298\u7ebf\u56fe\u200b\", \"\u200b\u67f1\u72b6\u56fe\u200b\"]:\n            y_axis = st.selectbox(\"Y \u200b\u8f74\u200b\", data.select_dtypes(include=[np.number]).columns.tolist())\n        else:\n            y_axis = None\n\n    # \u200b\u989c\u8272\u200b\u5206\u7ec4\u200b\n    color_by = st.selectbox(\"\u200b\u6309\u200b\u989c\u8272\u200b\u5206\u7ec4\u200b\", [None] + data.select_dtypes(include=['object']).columns.tolist())\n\n    # \u200b\u751f\u6210\u200b\u56fe\u8868\u200b\n    if chart_type == \"\u200b\u6563\u70b9\u56fe\u200b\" and y_axis:\n        fig = px.scatter(data, x=x_axis, y=y_axis, color=color_by, hover_data=data.columns)\n        st.plotly_chart(fig, use_container_width=True)\n\n    elif chart_type == \"\u200b\u6298\u7ebf\u56fe\u200b\" and y_axis:\n        # \u200b\u5982\u679c\u200b x \u200b\u8f74\u200b\u662f\u200b\u65e5\u671f\u200b\uff0c\u200b\u81ea\u52a8\u200b\u6392\u5e8f\u200b\n        if pd.api.types.is_datetime64_any_dtype(data[x_axis]):\n            sorted_data = data.sort_values(x_axis)\n        else:\n            sorted_data = data\n        fig = px.line(sorted_data, x=x_axis, y=y_axis, color=color_by)\n        st.plotly_chart(fig, use_container_width=True)\n\n    elif chart_type == \"\u200b\u67f1\u72b6\u56fe\u200b\" and y_axis:\n        fig = px.bar(data, x=x_axis, y=y_axis, color=color_by)\n        st.plotly_chart(fig, use_container_width=True)\n\n    elif chart_type == \"\u200b\u76f4\u65b9\u56fe\u200b\":\n        fig = px.histogram(data, x=x_axis, color=color_by, nbins=20)\n        st.plotly_chart(fig, use_container_width=True)\n\n    elif chart_type == \"\u200b\u7bb1\u200b\u7ebf\u56fe\u200b\" and y_axis:\n        fig = px.box(data, x=x_axis, y=y_axis, color=color_by)\n        st.plotly_chart(fig, use_container_width=True)\n\n    elif chart_type == \"\u200b\u70ed\u200b\u529b\u56fe\u200b\":\n        numeric_data = data.select_dtypes(include=[np.number])\n        if len(numeric_data.columns) &gt; 1:\n            fig = px.imshow(numeric_data.corr(), text_auto=True, aspect=\"auto\")\n            st.plotly_chart(fig, use_container_width=True)\n        else:\n            st.warning(\"\u200b\u9700\u8981\u200b\u81f3\u5c11\u200b\u4e24\u4e2a\u200b\u6570\u503c\u200b\u5217\u6765\u200b\u751f\u6210\u200b\u70ed\u200b\u529b\u56fe\u200b\")\n\ndef show_advanced_analysis(data):\n    \"\"\"\u200b\u9ad8\u7ea7\u200b\u5206\u6790\u200b\u89c6\u56fe\u200b\"\"\"\n    st.header(\"\ud83e\udde0 \u200b\u9ad8\u7ea7\u200b\u5206\u6790\u200b\")\n\n    # \u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u5206\u6790\u200b\uff08\u200b\u5982\u679c\u200b\u6570\u636e\u200b\u5305\u542b\u200b\u65e5\u671f\u200b\u5217\u200b\uff09\n    date_columns = data.select_dtypes(include=['datetime64']).columns\n    if len(date_columns) &gt; 0:\n        st.subheader(\"\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u5206\u6790\u200b\")\n\n        date_col = st.selectbox(\"\u200b\u9009\u62e9\u200b\u65e5\u671f\u200b\u5217\u200b\", date_columns)\n        value_col = st.selectbox(\"\u200b\u9009\u62e9\u200b\u6570\u503c\u200b\u5217\u200b\", data.select_dtypes(include=[np.number]).columns)\n\n        if date_col and value_col:\n            # \u200b\u786e\u4fdd\u200b\u6570\u636e\u200b\u6309\u200b\u65e5\u671f\u200b\u6392\u5e8f\u200b\n            time_series_data = data.sort_values(date_col).set_index(date_col)\n\n            # \u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b\n            window = st.slider(\"\u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b\u7a97\u53e3\u200b\", 1, 30, 7)\n            time_series_data[f'{value_col}_MA'] = time_series_data[value_col].rolling(window=window).mean()\n\n            # \u200b\u7ed8\u5236\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u548c\u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b\n            fig = go.Figure()\n            fig.add_trace(go.Scatter(\n                x=time_series_data.index,\n                y=time_series_data[value_col],\n                name='\u200b\u539f\u59cb\u6570\u636e\u200b',\n                line=dict(color='blue')\n            ))\n            fig.add_trace(go.Scatter(\n                x=time_series_data.index,\n                y=time_series_data[f'{value_col}_MA'],\n                name=f'{window}\u200b\u671f\u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b',\n                line=dict(color='red', dash='dash')\n            ))\n            fig.update_layout(title=f\"{value_col} \u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u5206\u6790\u200b\")\n            st.plotly_chart(fig, use_container_width=True)\n\n    # \u200b\u805a\u7c7b\u5206\u6790\u200b\n    st.subheader(\"\u200b\u805a\u7c7b\u5206\u6790\u200b\")\n    if st.checkbox(\"\u200b\u542f\u7528\u200b\u805a\u7c7b\u5206\u6790\u200b\"):\n        numeric_cols = data.select_dtypes(include=[np.number]).columns.tolist()\n        if len(numeric_cols) &gt;= 2:\n            from sklearn.cluster import KMeans\n            from sklearn.preprocessing import StandardScaler\n\n            selected_cluster_cols = st.multiselect(\n                \"\u200b\u9009\u62e9\u200b\u805a\u7c7b\u200b\u7279\u5f81\u200b\",\n                numeric_cols,\n                default=numeric_cols[:2]\n            )\n\n            n_clusters = st.slider(\"\u200b\u805a\u7c7b\u200b\u6570\u91cf\u200b\", 2, 10, 3)\n\n            if len(selected_cluster_cols) &gt;= 2:\n                # \u200b\u51c6\u5907\u200b\u6570\u636e\u200b\n                cluster_data = data[selected_cluster_cols].dropna()\n                scaler = StandardScaler()\n                scaled_data = scaler.fit_transform(cluster_data)\n\n                # \u200b\u6267\u884c\u200b\u805a\u7c7b\u200b\n                kmeans = KMeans(n_clusters=n_clusters, random_state=42)\n                clusters = kmeans.fit_predict(scaled_data)\n\n                # \u200b\u53ef\u89c6\u5316\u200b\u7ed3\u679c\u200b\n                cluster_data['Cluster'] = clusters\n                fig = px.scatter(\n                    cluster_data, \n                    x=selected_cluster_cols[0], \n                    y=selected_cluster_cols[1],\n                    color='Cluster',\n                    title=\"K-means \u200b\u805a\u7c7b\u200b\u7ed3\u679c\u200b\"\n                )\n                st.plotly_chart(fig, use_container_width=True)\n        else:\n            st.warning(\"\u200b\u9700\u8981\u200b\u81f3\u5c11\u200b\u4e24\u4e2a\u200b\u6570\u503c\u200b\u5217\u200b\u8fdb\u884c\u200b\u805a\u7c7b\u5206\u6790\u200b\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#_6","title":"\u8fd0\u884c\u200b\u5e94\u7528","text":"<p>\u200b\u8981\u200b\u8fd0\u884c\u200b Streamlit \u200b\u5e94\u7528\u200b\uff0c\u200b\u5728\u200b\u7ec8\u7aef\u200b\u4e2d\u200b\u6267\u884c\u200b\uff1a</p> <pre><code>streamlit run your_app.py\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#_7","title":"\u90e8\u7f72\u200b\u5e94\u7528","text":""},{"location":"llm/deploy/Streamlit/tutorial/#_8","title":"\u672c\u5730\u200b\u90e8\u7f72","text":"<pre><code>streamlit run app.py\n</code></pre>"},{"location":"llm/deploy/Streamlit/tutorial/#streamlit-cloud","title":"\u90e8\u7f72\u200b\u5230\u200b Streamlit Cloud","text":"<ol> <li>\u200b\u5c06\u200b\u4ee3\u7801\u200b\u63a8\u9001\u200b\u5230\u200b GitHub</li> <li>\u200b\u8bbf\u95ee\u200b share.streamlit.io</li> <li>\u200b\u8fde\u63a5\u200b GitHub \u200b\u4ed3\u5e93\u200b</li> <li>\u200b\u9009\u62e9\u200b\u5206\u652f\u200b\u548c\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b</li> </ol>"},{"location":"llm/deploy/Streamlit/tutorial/#_9","title":"\u90e8\u7f72\u200b\u5230\u200b\u5176\u4ed6\u200b\u5e73\u53f0","text":"<ul> <li>Heroku: \u200b\u4f7f\u7528\u200b Procfile \u200b\u548c\u200b requirements.txt</li> <li>AWS/Azure: \u200b\u4f7f\u7528\u200b Docker \u200b\u5bb9\u5668\u200b</li> <li>Hugging Face: \u200b\u652f\u6301\u200b Streamlit \u200b\u7a7a\u95f4\u200b</li> </ul>"},{"location":"llm/deploy/Streamlit/tutorial/#_10","title":"\u603b\u7ed3","text":"<p>\u200b\u8fd9\u4e2a\u200b\u5b8c\u6574\u200b\u6559\u7a0b\u200b\u6db5\u76d6\u200b\u4e86\u200b Streamlit \u200b\u7684\u200b\u6240\u6709\u200b\u91cd\u8981\u200b\u6982\u5ff5\u200b\uff1a</p>"},{"location":"llm/deploy/Streamlit/tutorial/#_11","title":"\u6838\u5fc3\u200b\u6982\u5ff5\u200b\u638c\u63e1\u200b\uff1a","text":"<ol> <li>\u200b\u9875\u9762\u200b\u5e03\u5c40\u200b\uff1a\u200b\u4fa7\u8fb9\u200b\u680f\u200b\u3001\u200b\u5217\u200b\u3001\u200b\u5bb9\u5668\u200b\u3001\u200b\u6807\u7b7e\u200b\u9875\u200b\u3001\u200b\u6269\u5c55\u5668\u200b</li> <li>Session State\uff1a\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u3001\u200b\u7528\u6237\u200b\u4f1a\u8bdd\u200b\u3001\u200b\u8868\u5355\u200b\u72b6\u6001\u200b\u3001\u200b\u8d2d\u7269\u8f66\u200b\u6a21\u5f0f\u200b</li> <li>\u200b\u6570\u636e\u200b\u5c55\u793a\u200b\uff1a\u200b\u8868\u683c\u200b\u3001\u200b\u56fe\u8868\u200b\u3001\u200b\u6307\u6807\u200b\u3001\u200b\u4ea4\u4e92\u200b\u7ec4\u4ef6\u200b</li> <li>\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\uff1a\u200b\u7f13\u5b58\u200b\u673a\u5236\u200b\u3001\u200b\u61d2\u200b\u52a0\u8f7d\u200b</li> <li>\u200b\u90e8\u7f72\u200b\u53d1\u5e03\u200b\uff1a\u200b\u591a\u200b\u5e73\u53f0\u200b\u90e8\u7f72\u200b\u9009\u9879\u200b</li> </ol>"},{"location":"llm/deploy/Streamlit/tutorial/#_12","title":"\u6700\u4f73\u200b\u5b9e\u8df5\u200b\uff1a","text":"<ul> <li>\u200b\u5408\u7406\u200b\u4f7f\u7528\u200b Session State \u200b\u7ba1\u7406\u200b\u5e94\u7528\u200b\u72b6\u6001\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u7f13\u5b58\u200b\u4f18\u5316\u200b\u6027\u80fd\u200b</li> <li>\u200b\u91c7\u7528\u200b\u6a21\u5757\u5316\u200b\u8bbe\u8ba1\u200b\u7ec4\u7ec7\u200b\u4ee3\u7801\u200b</li> <li>\u200b\u63d0\u4f9b\u200b\u6e05\u6670\u200b\u7684\u200b\u7528\u6237\u200b\u5f15\u5bfc\u200b\u548c\u200b\u53cd\u9988\u200b</li> <li>\u200b\u8003\u8651\u200b\u54cd\u5e94\u200b\u5f0f\u200b\u5e03\u5c40\u200b\u8bbe\u8ba1\u200b</li> </ul> <p>\u200b\u8fd9\u4e2a\u200b\u6559\u7a0b\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4ece\u200b\u57fa\u7840\u200b\u5230\u200b\u9ad8\u7ea7\u200b\u7684\u200b\u5b8c\u6574\u200b\u5b66\u4e60\u200b\u8def\u5f84\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u57fa\u4e8e\u200b\u8fd9\u4e9b\u200b\u6a21\u5f0f\u200b\u6784\u5efa\u200b\u590d\u6742\u200b\u7684\u200b\u6570\u636e\u200b\u5e94\u7528\u200b\uff01</p>"},{"location":"llm/tunning/peft/chinese%20peft/","title":"\u4e2d\u6587\u200bPEFT\u200b\u5fae\u8c03\u200b\u5b9e\u6218","text":"<p>\u200b\u592a\u597d\u4e86\u200b\uff0c\u200b\u51fa\u53d1\u200b\uff01 \u200b\u6211\u4eec\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u5b8c\u6574\u200b\u3001\u200b\u5b9e\u7528\u200b\u7684\u200b \u200b\u4e2d\u6587\u200b\u4efb\u52a1\u200b\uff1a\u200b\u60c5\u611f\u200b\u5206\u7c7b\u200b + LoRA \u200b\u53c2\u6570\u200b\u9ad8\u6548\u200b\u5fae\u8c03\u200b\uff08PEFT\uff09 \u200b\u7684\u200b\u793a\u8303\u200b\u5de5\u7a0b\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b\u81ea\u5df1\u200b\u7684\u200b\u7535\u8111\u200b\u6216\u200b Colab \u200b\u4e0a\u200b\u5b8c\u6210\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u5e76\u200b\u6700\u7ec8\u200b\u628a\u200b\u6a21\u578b\u200b\u90e8\u7f72\u200b\u51fa\u6765\u200b\u3002</p>"},{"location":"llm/tunning/peft/chinese%20peft/#peft","title":"\u2705 \u200b\u4e2d\u6587\u200b PEFT \u200b\u5fae\u8c03\u200b\u5b8c\u6574\u200b\u6559\u7a0b","text":"<p>\u200b\u4efb\u52a1\u200b\u9009\u62e9\u200b\uff1a\u200b\u4e2d\u6587\u200b\u60c5\u611f\u200b\u5206\u6790\u200b\uff08\u200b\u6b63\u5411\u200b / \u200b\u8d1f\u200b\u5411\u200b\uff09 \u200b\u6a21\u578b\u200b\u9009\u62e9\u200b\uff1aChinese-BERT\uff08\u200b\u5982\u200b bert-base-chinese\uff09 \u200b\u65b9\u6cd5\u200b\u9009\u62e9\u200b\uff1aLoRA\uff08PEFT\uff09</p> <p>\u200b\u8fd9\u4efd\u200b\u6559\u7a0b\u200b\u8be6\u7ec6\u200b\u89e3\u91ca\u200b\u6bcf\u200b\u4e00\u6b65\u200b\uff0c\u200b\u4fbf\u4e8e\u200b\u7406\u89e3\u200b\u548c\u200b\u62d3\u5c55\u200b\u3002</p>"},{"location":"llm/tunning/peft/chinese%20peft/#_1","title":"\u7b2c\u4e00\u6b65\u200b\uff1a\u200b\u5b89\u88c5\u200b\u4f9d\u8d56","text":"<pre><code>pip install torch transformers datasets peft accelerate\n</code></pre> <p>\u200b\u5982\u200b\u6709\u200b GPU \u200b\u73af\u5883\u200b\u66f4\u4f73\u200b\u3002</p>"},{"location":"llm/tunning/peft/chinese%20peft/#_2","title":"\u7b2c\u4e8c\u6b65\u200b\uff1a\u200b\u51c6\u5907\u200b\u6570\u636e\u200b\u96c6\u200b\uff08\u200b\u4e2d\u6587\u200b\u60c5\u611f\u200b\u5206\u7c7b\u200b\uff09","text":"<p>\u200b\u793a\u4f8b\u200b\u4f7f\u7528\u200b Hugging Face \u200b\u81ea\u5e26\u200b\u7684\u200b\u4e2d\u6587\u200b\u8bc4\u8bba\u200b\u6570\u636e\u200b\u96c6\u200b\uff08ChnSentiCorp\uff09\u3002</p> <pre><code>from datasets import load_dataset\n\ndataset = load_dataset(\"chnsenticorp\")\ndataset\n</code></pre> <p>\u200b\u6570\u636e\u683c\u5f0f\u200b\uff1a</p> <ul> <li><code>text</code>\uff1a\u200b\u8bc4\u8bba\u200b\u5185\u5bb9\u200b</li> <li><code>label</code>\uff1a0 = \u200b\u8d1f\u9762\u200b\uff0c1 = \u200b\u6b63\u9762\u200b</li> </ul> <p>\u200b\u4e3a\u4e86\u200b\u66f4\u200b\u5feb\u200b\u6f14\u793a\u200b\uff0c\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\uff1a</p> <pre><code>dataset = dataset.shuffle(seed=42).select(range(3000))  # \u200b\u5c0f\u200b\u6837\u672c\u200b\u6d4b\u8bd5\u200b\n</code></pre>"},{"location":"llm/tunning/peft/chinese%20peft/#tokenizer","title":"\u7b2c\u4e09\u6b65\u200b\uff1a\u200b\u52a0\u8f7d\u200b\u6a21\u578b\u200b\u548c\u200b tokenizer","text":"<pre><code>from transformers import AutoModelForSequenceClassification, AutoTokenizer\n\nmodel_name = \"bert-base-chinese\"\n\ntokenizer = AutoTokenizer.from_pretrained(model_name)\nmodel = AutoModelForSequenceClassification.from_pretrained(\n    model_name,\n    num_labels=2\n)\n</code></pre>"},{"location":"llm/tunning/peft/chinese%20peft/#tokenize","title":"\u7b2c\u56db\u6b65\u200b\uff1a\u200b\u6570\u636e\u200b\u9884\u5904\u7406\u200b\uff08tokenize\uff09","text":"<pre><code>def tokenize_fn(batch):\n    return tokenizer(batch[\"text\"], padding=\"max_length\", truncation=True, max_length=128)\n\nencoded = dataset.map(tokenize_fn, batched=True)\nencoded = encoded.remove_columns([\"text\"])\nencoded.set_format(\"torch\")\n</code></pre>"},{"location":"llm/tunning/peft/chinese%20peft/#peftlora","title":"\u7b2c\u4e94\u6b65\u200b\uff1a\u200b\u914d\u7f6e\u200b PEFT\uff08LoRA\uff09","text":"<pre><code>from peft import LoraConfig, TaskType, get_peft_model\n\npeft_config = LoraConfig(\n    task_type=TaskType.SEQUENCE_CLASSIFICATION,  \n    r=8,\n    lora_alpha=16,\n    lora_dropout=0.05,\n    bias=\"none\"\n)\n\nmodel = get_peft_model(model, peft_config)\nmodel.print_trainable_parameters()\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u793a\u4f8b\u200b\uff1a \u200b\u53ef\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b &lt; \u200b\u603b\u200b\u53c2\u6570\u200b\u7684\u200b 1% \u200b\u8fd9\u200b\u5c31\u662f\u200b\u7701\u200b\u8d44\u6e90\u200b\u7684\u200b\u9b54\u6cd5\u200b\uff01</p>"},{"location":"llm/tunning/peft/chinese%20peft/#trainer","title":"\u7b2c\u516d\u6b65\u200b\uff1a\u200b\u8bad\u7ec3\u200b\uff08Trainer\uff09","text":"<pre><code>from transformers import TrainingArguments, Trainer\n\ntraining_args = TrainingArguments(\n    output_dir=\"./peft-bert-chinese\",\n    evaluation_strategy=\"epoch\",\n    save_strategy=\"epoch\",\n    per_device_train_batch_size=16,\n    num_train_epochs=2,\n    logging_steps=50,\n    load_best_model_at_end=True,\n)\n\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=encoded[\"train\"],\n    eval_dataset=encoded[\"validation\"]\n)\n\ntrainer.train()\n</code></pre>"},{"location":"llm/tunning/peft/chinese%20peft/#_3","title":"\u7b2c\u4e03\u6b65\u200b\uff1a\u200b\u8bc4\u4f30\u200b\u6a21\u578b","text":"<pre><code>metrics = trainer.evaluate(encoded[\"test\"])\nmetrics\n</code></pre> <p>\u200b\u5982\u679c\u200b\u8bad\u7ec3\u200b\u6b63\u5e38\u200b\uff0c\u200b\u51c6\u786e\u7387\u200b\u901a\u5e38\u200b\u80fd\u200b &gt; 90%</p>"},{"location":"llm/tunning/peft/chinese%20peft/#lora-adapter","title":"\u7b2c\u516b\u6b65\u200b\uff1a\u200b\u4fdd\u5b58\u200b LoRA adapter","text":"<pre><code>model.save_pretrained(\"peft_lora_chnsentic\")\ntokenizer.save_pretrained(\"peft_lora_chnsentic\")\n</code></pre> <p>\u200b\u5f97\u5230\u200b\u7684\u200b\u5c0f\u200b\u76ee\u5f55\u200b\u5c31\u662f\u200b LoRA \u200b\u6a21\u5757\u200b\uff0c\u200b\u5b83\u200b\u6781\u200b\u8f7b\u91cf\u200b\u53ef\u200b\u90e8\u7f72\u200b\u3002</p>"},{"location":"llm/tunning/peft/chinese%20peft/#adapter","title":"\u7b2c\u4e5d\u6b65\u200b\uff1a\u200b\u63a8\u7406\u200b\u6d4b\u8bd5\u200b\uff08\u200b\u52a0\u8f7d\u200b Adapter\uff09","text":"<pre><code>from peft import PeftModel\n\nbase_model = AutoModelForSequenceClassification.from_pretrained(model_name)\nlora_model = PeftModel.from_pretrained(base_model, \"peft_lora_chnsentic\")\n\ntext = \"\u200b\u8fd9\u5bb6\u200b\u9910\u5385\u200b\u7684\u200b\u83dc\u200b\u592a\u200b\u96be\u5403\u200b\u4e86\u200b\uff01\"\ntokens = tokenizer(text, return_tensors=\"pt\")\noutput = lora_model(**tokens)\nprint(output.logits.argmax().item())  # 0 \u2192 \u200b\u8d1f\u9762\u200b\n</code></pre> <p>\u200b\u6d4b\u8bd5\u200b\u6210\u529f\u200b \u2705</p>"},{"location":"llm/tunning/peft/chinese%20peft/#bonus-web-gradio","title":"\u2705 Bonus\uff1a\u200b\u90e8\u7f72\u200b\u6210\u200b Web \u200b\u5e94\u7528\u200b\uff08\u200b\u914d\u200b Gradio\uff09","text":"<pre><code>import gradio as gr\nimport torch\n\ndef classify(text):\n    inputs = tokenizer(text, return_tensors=\"pt\")\n    logits = lora_model(**inputs).logits\n    label_id = logits.argmax().item()\n    return \"\u200b\u6b63\u9762\u200b\ud83d\udc4d\" if label_id == 1 else \"\u200b\u8d1f\u9762\u200b\ud83d\udc4e\"\n\niface = gr.Interface(fn=classify, inputs=\"text\", outputs=\"text\", title=\"\u200b\u4e2d\u6587\u200b\u60c5\u611f\u200b\u8bc6\u522b\u200b LoRA \u200b\u6a21\u578b\u200b\")\niface.launch()\n</code></pre> <p>\u200b\u7acb\u523b\u200b\u4f53\u9a8c\u200b\uff1a\u201c\u200b\u8fd9\u4e2a\u200b\u6a21\u578b\u200b\u771f\u68d2\u200b\uff01\u201d vs \u201c\u200b\u8fa3\u9e21\u200b\u9879\u76ee\u200b\uff01\u201d</p>"},{"location":"llm/tunning/peft/chinese%20peft/#_4","title":"\ud83c\udf1f\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5ef6\u4f38\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u65b9\u5411","text":"<ul> <li>\u200b\u6362\u200b\u4efb\u52a1\u200b\uff1a\u200b\u6458\u8981\u200b\u3001\u200b\u7ffb\u8bd1\u200b\u3001\u200b\u5bf9\u8bdd\u200b\u3001\u200b\u5173\u952e\u8bcd\u200b\u63d0\u53d6\u200b</li> <li>\u200b\u6362\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b\uff1aRoBERTa\u3001BERT-wwm-ext\u3001Chinese-LLM</li> <li>\u200b\u52a0\u901f\u200b\u7b56\u7565\u200b\uff1a\u200b\u91cf\u5316\u200b 8bit/4bit + LoRA\uff08\u200b\u8d85\u7701\u200b\u663e\u5b58\u200b\uff09</li> <li>\u200b\u90e8\u7f72\u200b\uff1aHugging Face Spaces + CI/CD</li> </ul> <p>\u200b\u901a\u8fc7\u200b PEFT\uff0c\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u638c\u63e1\u200b\u4e86\u200b \u201c\u200b\u5c0f\u200b\u6210\u672c\u200b\u9a6f\u670d\u200b\u5927\u200b\u6a21\u578b\u200b\u201d \u200b\u7684\u200b\u6280\u80fd\u200b\u3002\u200b\u672a\u6765\u200b\u4e0d\u7528\u200b\u671b\u200b\u7740\u200b 130B \u200b\u53c2\u6570\u200b\u6a21\u578b\u200b\u6d41\u6cea\u200b\uff1a</p> <p>\u200b\u4f60\u200b\u6709\u200b Adapter\uff0c\u200b\u5b83\u200b\u8f7b\u200b\uff0c\u200b\u4e5f\u200b\u806a\u660e\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\uff0c\u200b\u6211\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7ed9\u200b\u4f60\u200b\uff1a</p> <p>\u2705 \u200b\u4e2d\u6587\u200b\u6458\u8981\u200b\u751f\u6210\u200b \u2014 PEFT + T5 \u2705 \u200b\u4e2d\u6587\u200b\u5bf9\u8bdd\u200b\u6a21\u578b\u200b \u2014 PEFT + LLaMA/Mistral/Qwen \u2705 \u200b\u591a\u200b\u6a21\u6001\u200b\uff08\u200b\u56fe\u50cf\u200b+\u200b\u6587\u672c\u200b\uff09 PEFT \u2705 \u200b\u5b8c\u6574\u200b\u9879\u76ee\u200b\u7ed3\u6784\u200b\uff08\u200b\u5305\u542b\u200b\u6570\u636e\u200b\u6e05\u6d17\u200b\u3001\u200b\u65e5\u5fd7\u200b\u3001\u200b\u5b9e\u9a8c\u200b\u8bb0\u5f55\u200b\uff09</p> <p>\u200b\u4f60\u200b\u5bf9\u200b\u54ea\u4e2a\u200b\u65b9\u5411\u200b\u66f4\u200b\u6709\u200b\u5174\u8da3\u200b\uff1f\u200b\u6211\u200b\u53ef\u4ee5\u200b\u7ee7\u7eed\u200b\u4e3a\u200b\u4f60\u200b\u5b9a\u5236\u200b\u5b8c\u6574\u200b\u5b66\u4e60\u200b\u8def\u7ebf\u200b\u3002</p>"},{"location":"llm/tunning/peft/quick%20start/","title":"\u5feb\u901f\u200b\u5165\u95e8","text":""},{"location":"llm/tunning/peft/quick%20start/#peft","title":"\u7b2c\u4e00\u200b\u90e8\u5206\u200b\uff1aPEFT \u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f\u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u7528\u200b\uff1f","text":""},{"location":"llm/tunning/peft/quick%20start/#_1","title":"\u6982\u5ff5","text":"<ul> <li>PEFT \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7531\u200b Transformers\uff08Hugging Face \u200b\u51fa\u54c1\u200b\uff09\u200b\u751f\u6001\u200b\uff0f\u200b\u793e\u533a\u200b\u7ef4\u62a4\u200b\u7684\u200b\u5e93\u200b\uff0c\u200b\u4e13\u7528\u200b\u4e8e\u200b \u200b\u964d\u4f4e\u200b\u5fae\u8c03\u200b\u5927\u578b\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff08LLM\uff09\u200b\u65f6\u200b\u6240\u200b\u9700\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b\uff0f\u200b\u663e\u5b58\u200b\uff0f\u200b\u5b58\u50a8\u200b\u6210\u672c\u200b\u3002 (Hugging Face)</li> <li>\u200b\u5b83\u200b\u7684\u200b\u6838\u5fc3\u200b\u601d\u8def\u200b\uff1a\u200b\u4e0d\u8981\u200b\u53bb\u200b\u66f4\u65b0\u200b\u6a21\u578b\u200b\u4e2d\u200b\u6240\u6709\u200b\u7684\u200b\u6743\u91cd\u200b\uff0c\u200b\u800c\u662f\u200b\u201c\u200b\u51bb\u7ed3\u200b\u201d\u200b\u4e3b\u8981\u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u90e8\u5206\u200b\uff0c\u200b\u4ec5\u200b\u589e\u52a0\u200b\uff0f\u200b\u5fae\u8c03\u200b\u4e00\u4e2a\u200b\u5c0f\u200b\u6a21\u5757\u200b\uff0fAdapter\uff0f\u200b\u63d0\u793a\u200b\uff08Prompt\uff09\u200b\u7b49\u200b\uff0c\u200b\u4ece\u800c\u200b\u8ba9\u200b\u6a21\u578b\u200b\u9002\u914d\u200b\u4e0b\u6e38\u200b\u4efb\u52a1\u200b\u3002 (Hugging Face)</li> <li>\u200b\u4e3e\u4f8b\u6765\u8bf4\u200b\uff0c\u200b\u539f\u672c\u200b\u4f60\u200b\u53ef\u80fd\u200b\u8981\u200b\u5bf9\u200b\u4e00\u4e2a\u200b 100 \u200b\u4ebf\u200b\u53c2\u6570\u200b\u7684\u200b\u6a21\u578b\u200b\u505a\u200b\u5fae\u8c03\u200b\uff0c\u200b\u4f46\u7528\u200b PEFT \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4f60\u200b\u53ef\u80fd\u200b\u53ea\u200b\u8bad\u7ec3\u200b\u51e0\u767e\u4e07\u200b\u3001\u200b\u51e0\u5343\u4e07\u200b\u53c2\u6570\u200b\u3002 (GitHub)</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#_2","title":"\u4e3a\u4ec0\u4e48\u200b\u7528\u200b\uff1f\u200b\u4f18\u70b9","text":"<ul> <li>\u200b\u8282\u7701\u200b\u8d44\u6e90\u200b\uff1a\u200b\u663e\u5b58\u200b\uff0b\u200b\u5b58\u50a8\u200b\u90fd\u200b\u5c11\u200b\u5f88\u591a\u200b\u3002\u200b\u6bd4\u5982\u200b\u6587\u6863\u200b\u4e2d\u200b\u63d0\u5230\u200b\uff1a\u200b\u4f7f\u7528\u200b LoRA (\u200b\u4e00\u79cd\u200b PEFT \u200b\u65b9\u6cd5\u200b) \u200b\u5bf9\u200b 12 B \u200b\u53c2\u6570\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u5fae\u8c03\u200b\u65f6\u200b\uff0c\u200b\u663e\u5b58\u200b\uff0f\u200b\u5b58\u50a8\u200b\u8fdc\u200b\u4f4e\u4e8e\u200b\u5168\u200b\u5fae\u8c03\u200b\u3002 (GitHub)</li> <li>\u200b\u5feb\u901f\u200b\u8fed\u4ee3\u200b\uff1a\u200b\u56e0\u4e3a\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b\u5c11\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u66f4\u5feb\u200b\u505a\u200b\u5b9e\u9a8c\u200b\u3002</li> <li>\u200b\u591a\u4efb\u52a1\u200b\uff0f\u200b\u591a\u57df\u200b\u9002\u914d\u200b\u66f4\u200b\u7075\u6d3b\u200b\uff1a\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4e00\u4e2a\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b + \u200b\u591a\u4e2a\u200b\u5c0f\u200b Adapter\uff0c\u200b\u4e3a\u200b\u4e0d\u540c\u200b\u4efb\u52a1\u200b\u5207\u6362\u200b\u3002</li> <li>\u200b\u907f\u514d\u200b\u201c\u200b\u707e\u96be\u6027\u200b\u9057\u5fd8\u200b\u201d\uff08catastrophic forgetting\uff09\uff1a\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b\u7684\u200b\u6743\u91cd\u200b\u88ab\u200b\u51bb\u7ed3\u200b\uff0c\u200b\u51cf\u5c11\u200b\u6539\u53d8\u200b\u5176\u9884\u200b\u8bad\u7ec3\u200b\u77e5\u8bc6\u200b\u7684\u200b\u98ce\u9669\u200b\u3002 (Hugging Face)</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#_3","title":"\u4f55\u65f6\u200b\u9002\u5408\u200b\u7528\u200b\uff1f","text":"<ul> <li>\u200b\u5f53\u200b\u4f60\u200b\u624b\u5934\u200b\u786c\u4ef6\u200b\u6709\u9650\u200b\uff08\u200b\u663e\u5b58\u200b/\u200b\u8d44\u6e90\u200b\u5c11\u200b\uff09\u3002</li> <li>\u200b\u5f53\u200b\u4f60\u200b\u6709\u200b\u591a\u4e2a\u200b\u4efb\u52a1\u200b\u90fd\u200b\u60f3\u200b\u57fa\u4e8e\u200b\u540c\u4e00\u4e2a\u200b\u5927\u578b\u200b\u6a21\u578b\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u60f3\u200b\u6bcf\u4e2a\u200b\u90fd\u200b\u505a\u200b\u5b8c\u6574\u200b\u5fae\u8c03\u200b\u3002</li> <li>\u200b\u5f53\u200b\u4f60\u200b\u5e0c\u671b\u200b\u5fae\u8c03\u200b\u540e\u200b\u7684\u200b\u6a21\u578b\u200b\u4f53\u79ef\u200b\uff0f\u200b\u5b58\u50a8\u200b\uff0f\u200b\u90e8\u7f72\u200b\u6210\u672c\u4f4e\u200b\u3002</li> <li>\u200b\u5f53\u200b\u6570\u636e\u91cf\u200b\u53ef\u80fd\u200b\u8f83\u200b\u5c11\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u6574\u4e2a\u200b\u6a21\u578b\u200b\u5bb9\u6613\u200b\u8fc7\u200b\u62df\u5408\u200b\u3002</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#_4","title":"\u7b2c\u4e8c\u200b\u90e8\u5206\u200b\uff1a\u200b\u5b89\u88c5\u200b\u4e0e\u200b\u5feb\u901f\u200b\u4e0a\u200b\u624b","text":""},{"location":"llm/tunning/peft/quick%20start/#_5","title":"\u5b89\u88c5","text":"<pre><code>pip install peft\n</code></pre> <p>\uff08\u200b\u786e\u4fdd\u200b\u4f60\u200b\u540c\u65f6\u200b\u5b89\u88c5\u200b\u4e86\u200b Transformers\u3001Datasets\u3001Accelerate \u200b\u7b49\u200b\u6839\u636e\u200b\u4efb\u52a1\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u7684\u200b\u5e93\u200b\uff09 (GitHub)</p>"},{"location":"llm/tunning/peft/quick%20start/#_6","title":"\u5feb\u901f\u200b\u542f\u52a8\u200b\u4ee3\u7801\u200b\u793a\u4f8b","text":"<p>\u200b\u5047\u8bbe\u200b\u4f60\u200b\u52a0\u8f7d\u200b\u4e00\u4e2a\u200b\u9884\u200b\u8bad\u7ec3\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\uff0c\u200b\u7136\u540e\u200b\u7528\u200b LoRA\uff08Low-Rank Adaptation\uff09\u200b\u8fd9\u79cd\u200b PEFT \u200b\u65b9\u6cd5\u200b\u3002</p> <pre><code>import torch\nfrom transformers import AutoModelForCausalLM, AutoTokenizer\nfrom peft import LoraConfig, TaskType, get_peft_model\n\nmodel_name = \"your-base-model-name\"\ntokenizer = AutoTokenizer.from_pretrained(model_name)\nmodel = AutoModelForCausalLM.from_pretrained(model_name)\n\npeft_config = LoraConfig(\n    task_type=TaskType.CAUSAL_LM,\n    r=16,\n    lora_alpha=32,\n    lora_dropout=0.1\n)\n\nmodel = get_peft_model(model, peft_config)\nmodel.print_trainable_parameters()\n</code></pre> <p>\u200b\u5982\u200b\u6587\u6863\u200b\u4e2d\u200b\u6240\u793a\u200b\uff0c\u200b\u8fd9\u6837\u200b\u505a\u540e\u200b\uff0c\u201c\u200b\u53ef\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b / \u200b\u603b\u200b\u53c2\u6570\u200b\u201d\u200b\u7684\u200b\u6bd4\u4f8b\u200b\u4f1a\u200b\u975e\u5e38\u4f4e\u200b\u3002 (GitHub)</p>"},{"location":"llm/tunning/peft/quick%20start/#_7","title":"\u7b80\u5355\u200b\u8bf4\u660e","text":"<ul> <li><code>LoraConfig</code> \u200b\u5b9a\u4e49\u200b\u4e86\u200b LoRA \u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b\uff0c\u200b\u6bd4\u5982\u200b r\uff08\u200b\u79e9\u6570\u200b\uff09\u3001alpha\u3001dropout \u200b\u7b49\u200b\u3002</li> <li><code>get_peft_model()</code> \u200b\u628a\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b\u5305\u200b\u8d77\u6765\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u5e26\u200b Adapter \u200b\u7684\u200b\u6a21\u578b\u200b\uff1b\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b\u5927\u90e8\u5206\u200b\u6743\u91cd\u200b\u88ab\u200b \u201c\u200b\u51bb\u7ed3\u200b\u201d\u3002</li> <li>\u200b\u4e4b\u540e\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u50cf\u200b\u6807\u51c6\u200b\u8bad\u7ec3\u200b\u6d41\u7a0b\u200b\u90a3\u6837\u200b\uff08\u200b\u5b9a\u4e49\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b\u3001Trainer\u3001Dataset \u200b\u7b49\u200b\uff09\u200b\u8fdb\u884c\u200b\u5fae\u8c03\u200b\u3002</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#peft_1","title":"\u7b2c\u4e09\u200b\u90e8\u5206\u200b\uff1a\u200b\u4e3b\u8981\u200b PEFT \u200b\u65b9\u6cd5\u200b &amp; \u200b\u5185\u90e8\u200b\u673a\u5236","text":""},{"location":"llm/tunning/peft/quick%20start/#_8","title":"\u5e38\u89c1\u200b\u65b9\u6cd5","text":"<p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5f53\u524d\u200b\u6bd4\u8f83\u200b\u5e38\u89c1\u200b\u7684\u200b\u6280\u672f\u200b\uff08PEFT \u200b\u6240\u200b\u652f\u6301\u200b\uff0f\u200b\u6587\u6863\u200b\u63d0\u5230\u200b\u7684\u200b\uff09\uff1a</p> \u200b\u65b9\u6cd5\u200b \u200b\u7c7b\u578b\u200b \u200b\u7b80\u5355\u200b\u8bf4\u660e\u200b LoRA (Low-Rank Adaptation) \u200b\u589e\u6dfb\u200b\u5c11\u91cf\u200b\u53ef\u200b\u8bad\u7ec3\u200b\u4f4e\u200b\u79e9\u200b\u77e9\u9635\u200b \u200b\u5c06\u200b\u6ce8\u610f\u529b\u200b\u5c42\u200b\u6216\u200b\u7ebf\u6027\u200b\u5c42\u4e2d\u200b\u7684\u200b\u66f4\u65b0\u200b\u53c2\u6570\u200b\u5206\u89e3\u200b\u4e3a\u200b\u4f4e\u200b\u79e9\u200b\u77e9\u9635\u200b\uff0c\u200b\u4ece\u800c\u200b\u6781\u5927\u200b\u7f29\u51cf\u200b\u53ef\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b\u6570\u200b\u3002 (Hugging Face) Prompt Tuning / Soft-Prompting \u200b\u5728\u200b\u8f93\u5165\u200b\u5c42\u200b\u6216\u200b embedding \u200b\u5c42\u200b\u6dfb\u52a0\u200b\u53ef\u200b\u8bad\u7ec3\u200b prompt \u200b\u5411\u91cf\u200b \u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\u57fa\u672c\u200b\u51bb\u7ed3\u200b\uff0c\u200b\u4ec5\u200b\u8bad\u7ec3\u200b\u201c\u200b\u63d0\u793a\u200b\u201d\u200b\u90e8\u5206\u200b\u3002 (Hugging Face) Prefix-Tuning \u200b\u5728\u200b Transformer \u200b\u6a21\u578b\u200b\u524d\u200b\u52a0\u5165\u200b\u53ef\u200b\u8bad\u7ec3\u200b prefix\uff08\u200b\u524d\u7f00\u200b\uff09 \u200b\u7c7b\u4f3c\u200b prompt\uff0c\u200b\u4f46\u200b\u66f4\u200b\u591a\u200b\u5730\u200b\u4f5c\u7528\u200b\u4e8e\u200b\u5185\u90e8\u200b\u9690\u85cf\u200b\u5c42\u200b\u3002 Adapter\uff08\u200b\u74f6\u9888\u200b\u9002\u914d\u5668\u200b\uff09 \u200b\u63d2\u5165\u200b\u5c0f\u200b\u6a21\u5757\u200b\u5230\u200b\u7f51\u7edc\u200b\u4e2d\u200b\uff0c\u200b\u4e2d\u95f4\u200b\u51bb\u7ed3\u200b\u4e3b\u5e72\u200b\u7f51\u7edc\u200b \u200b\u8bad\u7ec3\u200b\u5c11\u91cf\u200b\u53c2\u6570\u200b\u5373\u53ef\u200b\u9002\u914d\u200b\u4efb\u52a1\u200b\u3002"},{"location":"llm/tunning/peft/quick%20start/#lora","title":"LoRA \u200b\u7684\u200b\u5de5\u4f5c\u200b\u673a\u5236\u200b\uff08\u200b\u7565\u5fae\u200b\u6df1\u5165\u200b\uff09","text":"<p>\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u201c\u200b\u7406\u8bba\u200b\u80cc\u666f\u200b\u201d\u200b\u90e8\u5206\u200b\uff0c\u200b\u867d\u200b\u975e\u5fc5\u8981\u200b\u4f46\u200b\u6709\u52a9\u4e8e\u200b\u7406\u89e3\u200b\u3002</p> <ul> <li>\u200b\u5728\u200b Transformer \u200b\u7684\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200b (Self-Attention) \u200b\u6216\u200b\u524d\u9988\u200b (Feed-Forward) \u200b\u7ebf\u6027\u200b\u5c42\u4e2d\u200b\uff0cLoRA \u200b\u63d2\u5165\u200b\u4e24\u4e2a\u200b\u53ef\u200b\u8bad\u7ec3\u200b\u77e9\u9635\u200b A \u200b\u548c\u200b B\uff0c\u200b\u4f7f\u5f97\u200b\u539f\u200b\u6743\u91cd\u200b W \u200b\u66f4\u65b0\u200b\u4e3a\u200b W + B \u00d7 A\u3002</li> <li>\u200b\u56e0\u4e3a\u200b A \u200b\u548c\u200b B \u200b\u7684\u200b\u79e9\u200b(r)\u200b\u5f88\u5c0f\u200b\uff0c\u200b\u6240\u4ee5\u200b\u4f60\u200b\u5b9e\u9645\u4e0a\u200b\u53ea\u200b\u8bad\u7ec3\u200b A \u200b\u548c\u200b B\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b W \u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u3002\u200b\u8fd9\u6837\u200b\u53ef\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u5927\u5e45\u200b\u51cf\u5c11\u200b\u3002 (Hugging Face)</li> <li>\u200b\u5728\u200b\u63a8\u7406\u200b\u9636\u6bb5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u628a\u200b B \u00d7 A \u200b\u4e0e\u200b\u539f\u200b W \u200b\u5408\u5e76\u200b\uff0c\u200b\u4ece\u800c\u200b\u201c\u200b\u65e0\u200b\u989d\u5916\u200b\u5f00\u9500\u200b\u201d\u200b\u5730\u200b\u8fd0\u884c\u200b\u3002 (Hugging Face)</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#_9","title":"\u603b\u7ed3\u200b\u673a\u5236\u200b\u8981\u70b9","text":"<ul> <li>\u200b\u5927\u200b\u6a21\u578b\u200b\u7684\u200b\u4e3b\u4f53\u200b\u6743\u91cd\u200b\u57fa\u672c\u200b\u51bb\u7ed3\u200b \u2192 \u200b\u8bad\u7ec3\u200b\u5c0f\u200b\u6a21\u5757\u200b</li> <li>\u200b\u6a21\u578b\u200b\u4f53\u79ef\u200b\u4fdd\u5b58\u200b\u5c0f\u200b\u3001\u200b\u5207\u6362\u200b\u4efb\u52a1\u200b\u5feb\u200b\u3001\u200b\u8d44\u6e90\u200b\u6d88\u8017\u200b\u5c11\u200b</li> <li>\u200b\u67d0\u4e9b\u200b\u65b9\u6cd5\u200b\u53ef\u200b\u591a\u4efb\u52a1\u200b\u5171\u4eab\u200b\u540c\u4e00\u200b\u4e3b\u5e72\u200b\u6a21\u578b\u200b + \u200b\u591a\u4e2a\u200b Adapter</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#_10","title":"\u7b2c\u56db\u200b\u90e8\u5206\u200b\uff1a\u200b\u5b8c\u6574\u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b \u2014 \u200b\u4efb\u52a1\u200b\u5fae\u8c03","text":"<p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u7528\u200b\u4e00\u4e2a\u200b\u7a0d\u200b\u5b8c\u6574\u200b\uff08\u200b\u4f46\u200b\u8fd8\u200b\u7b80\u5316\u7248\u200b\uff09\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a\u200b\u7528\u200b PEFT \u200b\u7684\u200b LoRA \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5bf9\u200b\u4e00\u4e2a\u200b\u56e0\u679c\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\uff08CausalLM\uff09\u200b\u8fdb\u884c\u200b\u5fae\u8c03\u200b\u3002</p>"},{"location":"llm/tunning/peft/quick%20start/#_11","title":"\u4ee3\u7801\u200b\uff08\u200b\u7565\u200b\u7b80\u5316\u200b\uff09","text":"<pre><code>import torch\nfrom datasets import load_dataset\nfrom transformers import AutoTokenizer, AutoModelForCausalLM, Trainer, TrainingArguments\nfrom peft import LoraConfig, TaskType, get_peft_model\n\n# 1. \u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\u96c6\u200b\uff08\u200b\u4f8b\u5982\u200b\u67d0\u200b\u5bf9\u8bdd\u200b\uff0f\u200b\u6587\u672c\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b\uff09\ndataset = load_dataset(\"wikitext\", \"wikitext-2-v1\")  # \u200b\u4e3e\u4f8b\u200b\n\n# 2. \u200b\u52a0\u8f7d\u200b tokenizer \u200b\u548c\u200b\u6a21\u578b\u200b\nmodel_name = \"gpt2\"\ntokenizer = AutoTokenizer.from_pretrained(model_name)\nmodel = AutoModelForCausalLM.from_pretrained(model_name)\n\n# 3. \u200b\u9884\u5904\u7406\u200b\u6570\u636e\u200b\uff08tokenize\uff09\ndef tokenize_fn(examples):\n    return tokenizer(examples[\"text\"], truncation=True, padding=\"max_length\", max_length=128)\n\ntokenized = dataset.map(tokenize_fn, batched=True)\ntrain_dataset = tokenized[\"train\"]\n\n# 4. \u200b\u914d\u7f6e\u200b PEFT\npeft_config = LoraConfig(\n    task_type=TaskType.CAUSAL_LM,\n    r=8,\n    lora_alpha=16,\n    lora_dropout=0.05\n)\n\nmodel = get_peft_model(model, peft_config)\nmodel.print_trainable_parameters()\n\n# 5. \u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b\ntraining_args = TrainingArguments(\n    output_dir=\"peft_lora_gpt2\",\n    num_train_epochs=1,\n    per_device_train_batch_size=4,\n    save_steps=500,\n    logging_steps=100\n)\n\n# 6. Trainer\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=train_dataset,\n)\n\n# 7. \u200b\u8bad\u7ec3\u200b\ntrainer.train()\n\n# 8. \u200b\u4fdd\u5b58\u200b\nmodel.save_pretrained(\"peft_lora_gpt2_adapter\")\ntokenizer.save_pretrained(\"peft_lora_gpt2_adapter\")\n</code></pre>"},{"location":"llm/tunning/peft/quick%20start/#_12","title":"\u8bf4\u660e","text":"<ul> <li>\u200b\u6211\u7528\u200b\u4e86\u200b GPT-2 \u200b\u4f5c\u4e3a\u200b\u201c\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b\u201d\uff08\u200b\u53ea\u662f\u200b\u6f14\u793a\u200b\u7528\u200b\uff0c\u200b\u5c0f\u200b\u6a21\u578b\u200b\uff09\u3002</li> <li>\u200b\u6570\u636e\u200b\u96c6\u7528\u200b\u7684\u200b\u662f\u200b WikiText2\uff08\u200b\u4e5f\u200b\u662f\u200b\u6f14\u793a\u200b\uff09\u3002</li> <li>\u200b\u6ce8\u610f\u200b <code>model.print_trainable_parameters()</code> \u200b\u80fd\u200b\u5e2e\u200b\u4f60\u200b\u786e\u8ba4\u200b\u201c\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b vs \u200b\u603b\u200b\u53c2\u6570\u200b\u201d\u200b\u7684\u200b\u6bd4\u4f8b\u200b\u3002</li> <li>\u200b\u6700\u540e\u200b\u4f60\u200b\u4fdd\u5b58\u200b\u7684\u200b\u76ee\u5f55\u200b\u4e3b\u8981\u200b\u5305\u542b\u200b Adapter \u200b\u6743\u91cd\u200b\uff08\u200b\u800c\u200b\u4e0d\u662f\u200b\u6574\u4e2a\u200b\u5927\u578b\u200b\u6a21\u578b\u200b\u539a\u91cd\u200b\u7684\u200b\u68c0\u67e5\u70b9\u200b\uff09\u3002</li> <li>\u200b\u63a8\u7406\u200b\u6216\u200b\u90e8\u7f72\u200b\u65f6\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u52a0\u8f7d\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b + adapter \u200b\u6743\u91cd\u200b\u3002\u200b\u6587\u6863\u200b\u4e2d\u6709\u200b\u76f8\u5e94\u200b\u8bf4\u660e\u200b\u3002 (Hugging Face)</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#_13","title":"\u7b2c\u4e94\u200b\u90e8\u5206\u200b\uff1a\u200b\u8fdb\u9636\u200b\u6280\u5de7\u200b &amp;\u200b\u90e8\u7f72\u200b\u8981\u70b9","text":""},{"location":"llm/tunning/peft/quick%20start/#adapter","title":"\u5408\u5e76\u200b Adapter\u3001\u200b\u90e8\u7f72","text":"<ul> <li>\u200b\u8bad\u7ec3\u200b\u5b8c\u540e\u200b\uff0c\u200b\u5982\u679c\u200b\u4f60\u200b\u4e0d\u200b\u5e0c\u671b\u200b\u5728\u200b\u6bcf\u6b21\u200b\u63a8\u7406\u200b\u65f6\u200b\u90fd\u200b\u52a0\u8f7d\u200b adapter \u200b\u548c\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b\u5206\u79bb\u200b\u7ed3\u6784\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b adapter \u201c\u200b\u5408\u5e76\u200b\u201d\u200b\u56de\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b\u3002\u200b\u6587\u6863\u200b\u4e2d\u200b\u4ecb\u7ecd\u200b\u4e86\u200b <code>merge_and_unload()</code> \u200b\u7b49\u200b\u65b9\u6cd5\u200b\u3002 (Hugging Face)</li> <li>\u200b\u5408\u5e76\u200b\u540e\u200b\u4f60\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u201c\u200b\u666e\u901a\u200b\u6a21\u578b\u200b\u201d\u200b\u4f46\u200b\u4ecd\u7136\u200b\u4fdd\u7559\u200b\u4e86\u200b\u4efb\u52a1\u200b-\u200b\u7279\u5b9a\u200b\u7684\u200b\u6743\u91cd\u200b\u4fee\u6539\u200b\uff0c\u200b\u90e8\u7f72\u200b\u66f4\u200b\u7b80\u4fbf\u200b\u3002</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#_14","title":"\u4e0e\u200b\u91cf\u5316\u200b\uff0f\u200b\u4f4e\u200b\u7cbe\u5ea6\u200b\uff0f\u200b\u5927\u200b\u6a21\u578b\u200b\u534f\u4f5c","text":"<ul> <li>PEFT \u200b\u65b9\u6cd5\u200b\u975e\u5e38\u9002\u5408\u200b\u4e0e\u200b\u91cf\u5316\u200b\uff08Quantization\uff0c\u200b\u4f8b\u5982\u200b 4-bit\uff0f8-bit\uff09\u200b\u7ed3\u5408\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4ece\u800c\u200b\u5728\u200b\u8d44\u6e90\u200b\u6781\u9650\u200b\u73af\u5883\u200b\uff08\u200b\u5982\u5c0f\u200b\u663e\u5b58\u200b GPU\uff09\u200b\u4e5f\u200b\u80fd\u200b\u5fae\u8c03\u200b\uff0f\u200b\u90e8\u7f72\u200b\u3002 (GitHub)</li> <li>\u200b\u5982\u679c\u200b\u6a21\u578b\u200b\u975e\u5e38\u200b\u5de8\u5927\u200b\uff0c\u200b\u4f60\u200b\u53ef\u80fd\u200b\u8fd8\u8981\u200b\u7528\u200b\u5206\u5e03\u5f0f\u200b\u8bad\u7ec3\u200b\u3001\u200b\u6df7\u5408\u200b\u7cbe\u5ea6\u200b\u3001Gradient Checkpointing \u200b\u7b49\u200b\u6280\u672f\u200b\uff0c\u200b\u8fd9\u91cc\u200b PEFT \u200b\u51cf\u5c11\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u597d\u200b\u7684\u200b\u52a9\u529b\u200b\u3002</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#adapter_1","title":"\u591a\u4efb\u52a1\u200b &amp;\u200b\u5207\u6362\u200b Adapter","text":"<ul> <li>\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b + \u200b\u591a\u4e2a\u200b Adapter\uff1a\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u9488\u5bf9\u200b\u4e0d\u540c\u200b\u4efb\u52a1\u200b\u8bad\u7ec3\u200b\u591a\u4e2a\u200b\u5c0f\u200b\u6a21\u5757\u200b\uff0c\u200b\u90e8\u7f72\u200b\u65f6\u200b\u53ea\u200b\u52a0\u8f7d\u200b\u5bf9\u5e94\u200b adapter\u3002</li> <li>\u200b\u8fd9\u6837\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4e00\u5957\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b\u670d\u52a1\u200b\u591a\u79cd\u200b\u4efb\u52a1\u200b\uff0c\u200b\u51cf\u5c11\u200b\u91cd\u590d\u200b\u5b58\u50a8\u200b\u3002</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#_15","title":"\u6ce8\u610f\u4e8b\u9879\u200b\uff0f\u200b\u5c40\u9650\u6027","text":"<ul> <li>\u200b\u867d\u7136\u200b PEFT \u200b\u5728\u200b\u5f88\u591a\u200b\u573a\u666f\u200b\u4e2d\u200b\u8868\u73b0\u200b\u826f\u597d\u200b\uff0c\u200b\u4f46\u200b\u5e76\u975e\u200b\u603b\u80fd\u200b\u5b8c\u5168\u200b\u8fbe\u5230\u200b\u201c\u200b\u5168\u200b\u5fae\u8c03\u200b\u201d\u200b\u7684\u200b\u6027\u80fd\u200b\u3002\u200b\u4f60\u200b\u9700\u8981\u200b\u505a\u200b\u9a8c\u8bc1\u200b\u3002</li> <li>\u200b\u9009\u53d6\u200b\u5408\u9002\u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b\uff08\u200b\u6bd4\u5982\u200b r\u3001alpha\u3001dropout\uff09\u200b\u4ecd\u65e7\u200b\u5f88\u200b\u91cd\u8981\u200b\u3002</li> <li>\u200b\u67d0\u4e9b\u200b\u6a21\u578b\u200b\u7ed3\u6784\u200b\u53ef\u80fd\u200b\u4e0d\u200b\u5b8c\u5168\u200b\u517c\u5bb9\u200b\u6240\u6709\u200b PEFT \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u9700\u67e5\u200b\u6587\u6863\u200b\u6216\u200b\u505a\u200b\u5b9e\u9a8c\u200b\u3002</li> <li>\u200b\u90e8\u7f72\u200b\u65f6\u8981\u200b\u6ce8\u610f\u200b Adapter \u200b\u548c\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b\u7684\u200b\u7248\u672c\u200b\u4e00\u81f4\u200b\u3001tokenizer \u200b\u914d\u7f6e\u200b\u4e00\u81f4\u200b\u3001\u200b\u8bbe\u5907\u200b\uff0f\u200b\u7cbe\u5ea6\u200b\u4e00\u81f4\u200b\u3002</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#_16","title":"\u7b2c\u516d\u200b\u90e8\u5206\u200b\uff1a\u200b\u603b\u7ed3\u200b +\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u5efa\u8bae","text":""},{"location":"llm/tunning/peft/quick%20start/#_17","title":"\u603b\u7ed3","text":"<p>PEFT \u200b\u662f\u200b\u4e00\u4e2a\u200b\u975e\u5e38\u200b\u5f3a\u5927\u200b\u7684\u200b\u6280\u672f\u200b\u5de5\u5177\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u6211\u4eec\u200b\u7528\u200b\u66f4\u200b\u5c11\u200b\u7684\u200b\u8d44\u6e90\u200b\u3001\u200b\u4ee5\u200b\u66f4\u200b\u7075\u6d3b\u200b\u7684\u200b\u65b9\u5f0f\u200b\u9002\u914d\u200b\u5927\u200b\u6a21\u578b\u200b\u3002\u200b\u5b83\u200b\u9002\u5408\u200b\uff1a\u200b\u8d44\u6e90\u200b\u53d7\u9650\u200b\u3001\u200b\u4efb\u52a1\u200b\u591a\u6837\u200b\u3001\u200b\u5feb\u901f\u200b\u8fed\u4ee3\u200b\u8fd9\u4e9b\u200b\u573a\u666f\u200b\u3002 \u200b\u901a\u8fc7\u200b\u672c\u200b\u6559\u7a0b\u200b\uff0c\u200b\u4f60\u200b\u5e94\u5f53\u200b\u7406\u89e3\u200b\u4e86\u200b\uff1a</p> <ul> <li>\u200b\u4ec0\u4e48\u200b\u662f\u200b PEFT\u3001\u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u7528\u200b\uff1b</li> <li>\u200b\u5982\u4f55\u200b\u5b89\u88c5\u200b\u5e76\u200b\u505a\u200b\u7b80\u5355\u200b\u4e0a\u200b\u624b\u200b\uff1b</li> <li>\u200b\u5e38\u89c1\u200b\u65b9\u6cd5\u200b\uff08LoRA\u3001Prompt Tuning \u200b\u7b49\u200b\uff09\u200b\u53ca\u5176\u200b\u4f5c\u7528\u200b\u673a\u5236\u200b\uff1b</li> <li>\u200b\u5982\u4f55\u200b\u7528\u200b\u4e00\u6bb5\u200b\u4ee3\u7801\u200b\u5fae\u8c03\u200b\u6a21\u578b\u200b\uff1b</li> <li>\u200b\u8fdb\u9636\u200b\u90e8\u7f72\u200b\uff0f\u200b\u91cf\u5316\u200b\uff0f\u200b\u591a\u4efb\u52a1\u200b\u4e0b\u200b\u7684\u200b\u5b9e\u7528\u6280\u5de7\u200b\u3002</li> </ul>"},{"location":"llm/tunning/peft/quick%20start/#_18","title":"\u4e0b\u200b\u4e00\u6b65\u200b\u5efa\u8bae","text":"<ul> <li>\u200b\u9009\u200b\u4e00\u4e2a\u200b\u4f60\u200b\u5173\u5fc3\u200b\u7684\u200b\u4efb\u52a1\u200b\uff08\u200b\u4f8b\u5982\u200b\u4e2d\u6587\u200b\u6587\u672c\u200b\u751f\u6210\u200b\u3001\u200b\u6458\u8981\u200b\u3001\u200b\u5206\u7c7b\u200b\u3001\u200b\u95ee\u7b54\u200b\uff09\uff0c\u200b\u5c1d\u8bd5\u200b\u7528\u200b PEFT \u200b\u65b9\u6cd5\u200b\u5fae\u8c03\u200b\u4e00\u4e2a\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b\u3002</li> <li>\u200b\u5b9e\u9a8c\u200b\u4e0d\u540c\u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b\uff1a\u200b\u6bd4\u5982\u200b LoRA \u200b\u7684\u200b r \u200b\u503c\u200b\u3001dropout \u200b\u7387\u200b\u3001\u200b\u8bad\u7ec3\u200b\u6279\u6b21\u200b\u3001\u200b\u6570\u636e\u91cf\u200b\uff0c\u200b\u770b\u200b\u54ea\u4e2a\u200b\u7ec4\u5408\u200b\u6548\u679c\u200b\u597d\u200b\u3002</li> <li>\u200b\u63a2\u7d22\u200b\u5c06\u200b\u91cf\u5316\u200b\uff08\u200b\u4f8b\u5982\u200b 8-bit\uff09\u200b\u4e0e\u200b PEFT \u200b\u7ed3\u5408\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5728\u200b\u8f83\u200b\u4f4e\u200b\u663e\u5b58\u200b\u7684\u200b GPU \u200b\u4e0a\u200b\u5fae\u8c03\u200b\u3002</li> <li>\u200b\u90e8\u7f72\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b demo\uff1a\u200b\u5c06\u200b\u5fae\u8c03\u200b\u540e\u200b\u7684\u200b\u6a21\u578b\u200b\u5305\u88c5\u200b\u5728\u200b\u4e00\u4e2a\u200b Web UI\uff08\u200b\u6bd4\u5982\u200b\u7528\u200b Gradio\uff09\u200b\u91cc\u200b\uff0c\u200b\u4f53\u9a8c\u200b\u771f\u5b9e\u200b\u4ea4\u4e92\u200b\u3002</li> <li>\u200b\u9605\u8bfb\u200b PEFT \u200b\u7684\u200b \u201cConceptual guides\u201d \u200b\u548c\u200b \u201cHow-to guides\u201d \u200b\u6765\u200b\u6df1\u5165\u200b\u4e86\u89e3\u200b\u4e0d\u540c\u200b\u4efb\u52a1\u200b\uff08\u200b\u56fe\u50cf\u200b\u3001\u200b\u97f3\u9891\u200b\u3001\u200b\u591a\u200b\u6a21\u6001\u200b\uff09\u200b\u4e0b\u200b\u7684\u200b\u5e94\u7528\u200b\u3002 (Hugging Face)</li> </ul> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u613f\u610f\u200b\uff0c\u200b\u6211\u200b\u53ef\u4ee5\u200b \u200b\u4e3a\u200b\u4f60\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u4e13\u95e8\u200b\u9488\u5bf9\u200b\u4e2d\u6587\u200b\u4efb\u52a1\u200b\uff08\u200b\u5982\u200b\u4e2d\u6587\u200b\u60c5\u611f\u200b\u5206\u6790\u200b\u6216\u200b\u4e2d\u6587\u200b\u6458\u8981\u200b\u751f\u6210\u200b\uff09\u200b\u7684\u200b PEFT \u200b\u5fae\u8c03\u200b\u4ee3\u7801\u200b\u6a21\u677f\u200b\uff0c\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u914d\u200b\u4e0a\u200b \u201c\u200b\u6570\u636e\u200b\u51c6\u5907\u200b \u2192 \u200b\u5fae\u8c03\u200b \u2192\u200b\u90e8\u7f72\u200b\u201d \u200b\u5168\u200b\u6d41\u7a0b\u200b\u3002\u200b\u8981\u200b\u5417\u200b\uff1f</p>"},{"location":"llm/tunning/transformers/quick%20start/","title":"\u5feb\u901f\u200b\u5165\u95e8","text":""},{"location":"llm/tunning/transformers/quick%20start/#transformers","title":"\u7b2c\u4e00\u200b\u90e8\u5206\u200b\uff1a\u200b\u4ec0\u4e48\u200b\u662f\u200b Transformers\uff1f","text":""},{"location":"llm/tunning/transformers/quick%20start/#_1","title":"\u6982\u5ff5\u200b\u8bf4\u660e","text":"<ul> <li>Transformers \u200b\u5e93\u662f\u200b\u4e00\u4e2a\u200b\u7edf\u4e00\u200b\u63a5\u53e3\u200b\uff0c\u200b\u7528\u6765\u200b\u8c03\u7528\u200b \u201c\u200b\u5df2\u9884\u200b\u8bad\u7ec3\u200b\uff08pre-trained\uff09\u201d \u200b\u7684\u200b Transformer \u200b\u6a21\u578b\u200b\uff08\u200b\u4f8b\u5982\u200b\u6587\u672c\u200b\u3001\u200b\u56fe\u50cf\u200b\u3001\u200b\u97f3\u9891\u200b\u3001\u200b\u591a\u200b\u6a21\u6001\u200b\u7b49\u200b\uff09\u200b\u7528\u4e8e\u200b \u200b\u63a8\u7406\u200b\uff08inference\uff09 \u200b\u6216\u200b \u200b\u8bad\u7ec3\u200b\uff0f\u200b\u5fae\u8c03\u200b\uff08training/fine-tuning\uff09\u3002(Hugging Face)</li> <li>\u200b\u5b83\u200b\u7684\u200b\u8bbe\u8ba1\u200b\u539f\u5219\u200b\u5305\u62ec\u200b\uff1a\u200b\u5feb\u901f\u200b\u4e0a\u200b\u624b\u200b\u3001\u200b\u517c\u5bb9\u200b\u4e3b\u6d41\u200b\u6846\u67b6\u200b\uff08\u200b\u5982\u200b PyTorch\uff09\u3001\u200b\u63d0\u4f9b\u200b\u4e30\u5bcc\u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u4ee5\u200b\u8282\u7701\u200b\u7b97\u529b\u200b/\u200b\u65f6\u95f4\u200b\u6210\u672c\u200b\u3002(Hugging Face)</li> <li>\u200b\u5b83\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u8bb8\u591a\u200b\u9ad8\u5c42\u200b API\uff08\u200b\u4f8b\u5982\u200b <code>Pipeline</code>\u3001<code>Trainer</code>\u3001<code>generate</code> \u200b\u7b49\u200b\uff09\u200b\u6765\u200b\u7b80\u5316\u200b\u5e38\u89c1\u200b\u4efb\u52a1\u200b\u3002(Hugging Face)</li> </ul>"},{"location":"llm/tunning/transformers/quick%20start/#_2","title":"\u4e3a\u4ec0\u4e48\u200b\u7528\u200b\u5b83\u200b\uff1f","text":"<ul> <li>\u200b\u5982\u679c\u200b\u4f60\u200b\u4e0d\u60f3\u200b\u4ece\u5934\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b\uff0c\u200b\u800c\u662f\u200b\u60f3\u200b\u62ff\u200b\u4e00\u4e2a\u200b\u9884\u200b\u8bad\u7ec3\u200b\u597d\u200b\u7684\u200b\u6a21\u578b\u200b\uff08\u200b\u6bd4\u5982\u200b BERT\u3001GPT\u3001T5\u3001Vision Transformer\uff09\u200b\u7acb\u523b\u200b\u7528\u200b\u8d77\u6765\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u5e93\u200b\u975e\u5e38\u200b\u65b9\u4fbf\u200b\u3002</li> <li>\u200b\u5b83\u200b\u5e2e\u200b\u4f60\u200b\u8de8\u8d8a\u200b \u201c\u200b\u6a21\u578b\u200b\u5b9a\u4e49\u200b\u201d\u201c\u200b\u9884\u5904\u7406\u200b\u201d\u201c\u200b\u63a8\u7406\u200b\u201d\u201c\u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\u201d \u200b\u8fd9\u4e9b\u200b\u7e41\u6742\u200b\u7ec6\u8282\u200b\u3002</li> <li>\u200b\u793e\u533a\u200b\u6a21\u578b\u200b\u8d44\u6e90\u200b\u4e30\u5bcc\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4ece\u200b Hugging Face Hub \u200b\u88c5\u8f7d\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b\u3002(Hugging Face)</li> </ul>"},{"location":"llm/tunning/transformers/quick%20start/#_3","title":"\u7b2c\u4e8c\u200b\u90e8\u5206\u200b\uff1a\u200b\u5b89\u88c5\u200b\u4e0e\u200b\u73af\u5883\u200b\u51c6\u5907","text":""},{"location":"llm/tunning/transformers/quick%20start/#_4","title":"\u5b89\u88c5","text":"<p>\u200b\u9996\u5148\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u5b89\u88c5\u200b Transformers \u200b\u5e93\u200b\uff08\u200b\u4ee5\u53ca\u200b\u53ef\u80fd\u200b\u7684\u200b\u4f9d\u8d56\u200b\uff0c\u200b\u6bd4\u5982\u200b <code>torch</code>\uff09\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>pip install transformers\n</code></pre> <p>\u200b\u6216\u200b\u5982\u679c\u200b\u4f60\u200b\u8fd8\u200b\u6ca1\u88c5\u200b PyTorch\uff1a</p> <pre><code>pip install torch transformers\n</code></pre> <p>\u200b\u6839\u636e\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\u3002(Hugging Face)</p>"},{"location":"llm/tunning/transformers/quick%20start/#_5","title":"\u79bb\u7ebf\u200b\uff0f\u200b\u7f13\u5b58\u200b\u6a21\u5f0f\u200b\uff08\u200b\u53ef\u200b\u9009\u200b\uff09","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u662f\u200b\u5728\u200b\u65e0\u200b\u7f51\u7edc\u200b\u6216\u200b\u79bb\u7ebf\u200b\u73af\u5883\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b\u7f13\u5b58\u200b\u6216\u200b\u4f7f\u7528\u200b <code>local_files_only=True</code> \u200b\u53c2\u6570\u200b\u6765\u200b\u52a0\u8f7d\u200b\u5df2\u200b\u4e0b\u8f7d\u200b\u597d\u200b\u7684\u200b\u6a21\u578b\u200b\u3002(Hugging Face)</p>"},{"location":"llm/tunning/transformers/quick%20start/#quickstart","title":"\u7b2c\u4e09\u200b\u90e8\u5206\u200b\uff1a\u200b\u5feb\u901f\u200b\u4e0a\u200b\u624b\u200b\uff08Quickstart\uff09","text":"<p>\u200b\u6211\u4eec\u200b\u6765\u200b\u505a\u200b\u4e00\u4e2a\u200b\u975e\u5e38\u7b80\u5355\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff1a\u200b\u52a0\u8f7d\u200b\u4e00\u4e2a\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff0c\u200b\u7528\u200b <code>Pipeline</code> \u200b\u505a\u200b\u6587\u672c\u200b\u751f\u6210\u200b\uff08\u200b\u6216\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\uff09\u2014\u2014\u200b\u5148\u8bd5\u200b \u201c\u200b\u63a8\u7406\u200b\u201d \u200b\u800c\u200b\u4e0d\u662f\u200b\u8bad\u7ec3\u200b\u3002</p>"},{"location":"llm/tunning/transformers/quick%20start/#_6","title":"\u4ee3\u7801\u200b\u793a\u4f8b\u200b\uff08\u200b\u6587\u672c\u200b\u751f\u6210\u200b\uff09\uff1a","text":"<pre><code>from transformers import pipeline\n\ngenerator = pipeline(\"text-generation\", model=\"gpt2\")\n\nprompt = \"Once upon a time\"\nresult = generator(prompt, max_length=50, num_return_sequences=1)\n\nprint(result[0][\"generated_text\"])\n</code></pre> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <ul> <li><code>pipeline(\"text-generation\", model=\"gpt2\")</code> \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u4e0b\u8f7d\u200b\u6a21\u578b\u200b \u201cgpt2\u201d \u200b\u53ca\u5176\u200b tokenizer\u3002</li> <li><code>generator(prompt, max_length=50)</code> \u200b\u8868\u793a\u200b\u4ece\u200b prompt \u200b\u5f00\u59cb\u200b\u751f\u6210\u200b\u76f4\u5230\u200b\u603b\u957f\u5ea6\u200b 50\u3002</li> <li>\u200b\u8f93\u51fa\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b57\u5178\u200b\u7684\u200b\u5217\u8868\u200b\uff0c\u200b\u53d6\u200b\u7b2c\u4e00\u4e2a\u200b\u7684\u200b <code>\"generated_text\"</code>\u3002</li> </ul>"},{"location":"llm/tunning/transformers/quick%20start/#_7","title":"\u4ee3\u7801\u200b\u793a\u4f8b\u200b\uff08\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\uff09\uff1a","text":"<pre><code>from transformers import pipeline\n\nclassifier = pipeline(\"sentiment-analysis\")\n\nresult = classifier(\"I love using Hugging Face Transformers!\")\nprint(result)\n</code></pre> <p>\u200b\u8fd9\u6837\u200b\u4f60\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u7acb\u523b\u200b\u5f00\u59cb\u200b\u4f53\u9a8c\u200b\uff1a\u200b\u8f93\u5165\u200b\u4e00\u53e5\u200b\u8bdd\u200b\uff0c\u200b\u5f97\u5230\u200b\u60c5\u611f\u200b\u5206\u7c7b\u200b\u7ed3\u679c\u200b\u3002</p>"},{"location":"llm/tunning/transformers/quick%20start/#_8","title":"\u5feb\u901f\u200b\u4e0a\u200b\u624b\u200b\u8bf4\u660e","text":"<p>\u200b\u5b98\u65b9\u200b\u79f0\u200b\uff0c\u200b\u5728\u200b Quickstart \u200b\u90e8\u5206\u200b\u4f60\u200b\u53ea\u8981\u200b\u505a\u200b\u4e24\u4ef6\u200b\u4e3b\u8981\u200b\u4e8b\u60c5\u200b\uff1a</p> <ul> <li>\u200b\u52a0\u8f7d\u200b\u4e00\u4e2a\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b</li> <li>\u200b\u7528\u200b Pipeline \u200b\u6216\u8005\u200b\u7528\u200b\u7b80\u5355\u200b\u7684\u200b\u6a21\u578b\u200b + tokenizer \u200b\u6765\u200b\u8fd0\u884c\u200b\u63a8\u7406\u200b\u3002(Hugging Face)</li> </ul> <p>\u200b\u6240\u4ee5\u200b\uff0c\u200b\u4e0a\u9762\u200b\u5c31\u662f\u200b\u5165\u95e8\u200b\u6b65\u9aa4\u200b\u3002</p>"},{"location":"llm/tunning/transformers/quick%20start/#_9","title":"\u7b2c\u56db\u200b\u90e8\u5206\u200b\uff1a\u200b\u57fa\u7840\u200b\u6784\u6210\u200b \u2013 \u200b\u6a21\u578b\u200b\uff0f\u200b\u914d\u7f6e\u200b\uff0f\u200b\u9884\u200b\u5904\u7406\u5668","text":"<p>\u200b\u5728\u200b\u4f60\u200b\u6df1\u5165\u200b\u8bad\u7ec3\u200b\u6216\u200b\u81ea\u5b9a\u4e49\u200b\u6a21\u578b\u200b\u4e4b\u524d\u200b\uff0c\u200b\u7406\u89e3\u200b Transformers \u200b\u7684\u200b\u4e09\u5927\u200b\u6838\u5fc3\u200b\u7c7b\u200b\u7ed3\u6784\u200b\u4f1a\u200b\u5f88\u200b\u6709\u200b\u5e2e\u52a9\u200b\uff08\u200b\u5b98\u65b9\u200b\u4e5f\u200b\u5f3a\u8c03\u200b\u8fd9\u200b\u4e00\u70b9\u200b\uff09\u3002(Hugging Face)</p> <ul> <li>Configuration\uff08\u200b\u914d\u7f6e\u200b\uff09\uff1a\u200b\u4fdd\u5b58\u200b\u6a21\u578b\u200b\u7ed3\u6784\u200b\u3001\u200b\u8d85\u200b\u53c2\u6570\u200b\u3001\u200b\u8bcd\u6c47\u8868\u200b\u5927\u5c0f\u200b\u7b49\u200b\u4fe1\u606f\u200b\u3002</li> <li>Tokenizer\uff0fPreprocessor\uff08\u200b\u9884\u200b\u5904\u7406\u5668\u200b\uff09\uff1a\u200b\u8d1f\u8d23\u200b\u628a\u200b\u539f\u59cb\u200b\u8f93\u5165\u200b\uff08\u200b\u5982\u200b\u6587\u672c\u200b\uff09\u200b\u8f6c\u4e3a\u200b\u6a21\u578b\u200b\u80fd\u200b\u7406\u89e3\u200b\u7684\u200b \u201ctoken ids\u201d \u200b\u4ee5\u53ca\u200b\u505a\u200b padding/truncation \u200b\u7b49\u200b\u3002</li> <li>Model\uff08\u200b\u6a21\u578b\u200b\uff09\uff1a\u200b\u5b9e\u9645\u200b\u7684\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u6743\u91cd\u200b\uff0b\u200b\u7ed3\u6784\u200b\uff0c\u200b\u6bd4\u5982\u200b <code>BertForSequenceClassification</code>\uff0c\u200b\u6216\u8005\u200b <code>AutoModelForCausalLM</code>\u3002</li> </ul> <p>\u200b\u7406\u89e3\u200b\u8fd9\u4e09\u7c7b\u200b\uff0c\u200b\u4f1a\u200b\u8ba9\u200b\u4f60\u200b\u77e5\u9053\u200b\uff1a\u200b\u4ece\u200b \u201c\u200b\u539f\u59cb\u6570\u636e\u200b\u201d \u2192 \u201ctokenizer\u201d \u2192 \u201c\u200b\u8f93\u5165\u200b\u6a21\u578b\u200b\u201d \u2192 \u201c\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b\u201d \u200b\u7684\u200b\u6d41\u7a0b\u200b\u3002</p>"},{"location":"llm/tunning/transformers/quick%20start/#fine-tuning","title":"\u7b2c\u4e94\u200b\u90e8\u5206\u200b\uff1a\u200b\u5fae\u8c03\u200b (Fine-Tuning) \u200b\u4e0e\u200b\u8bad\u7ec3","text":"<p>\u200b\u5f53\u200b\u4f60\u200b\u60f3\u200b\u8ba9\u200b\u6a21\u578b\u200b\u9002\u5e94\u200b \u200b\u7279\u5b9a\u200b\u4efb\u52a1\u200b\uff08\u200b\u800c\u200b\u4e0d\u4ec5\u4ec5\u200b\u901a\u7528\u200b\u63a8\u7406\u200b\uff09\u200b\u65f6\u200b\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u7528\u5230\u200b\u5fae\u8c03\u200b\u3002\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\u8bf4\u660e\u200b\uff1a\u201c\u200b\u5fae\u8c03\u200b\u8ba9\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u9002\u7528\u200b\u4e8e\u200b\u4e00\u4e2a\u200b\u66f4\u200b\u5177\u4f53\u200b\u7684\u200b\u5c0f\u200b\u6570\u636e\u200b\u96c6\u200b\u4efb\u52a1\u200b\uff0c\u200b\u8017\u65f6\u200b\uff0f\u200b\u786c\u4ef6\u200b \u200b\u6bd4\u200b\u4ece\u5934\u200b\u8bad\u7ec3\u200b\u5c11\u200b\u5f88\u591a\u200b\u3002\u201d(Hugging Face)</p>"},{"location":"llm/tunning/transformers/quick%20start/#_10","title":"\u5fae\u8c03\u200b\u6d41\u7a0b\u200b\uff08\u200b\u5927\u81f4\u200b\u6b65\u9aa4\u200b\uff09","text":"<ol> <li>\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\u96c6\u200b\uff08\u200b\u4f8b\u5982\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u3001\u200b\u95ee\u7b54\u200b\u3001\u200b\u6458\u8981\u200b\u7b49\u200b\u4efb\u52a1\u200b\uff09</li> </ol> <pre><code>from datasets import load_dataset\ndataset = load_dataset(\"yelp_review_full\")\n</code></pre> <ol> <li>\u200b\u52a0\u8f7d\u200b tokenizer</li> </ol> <pre><code>from transformers import AutoTokenizer\ntokenizer = AutoTokenizer.from_pretrained(\"google-bert/bert-base-cased\")\n</code></pre> <ol> <li>\u200b\u5bf9\u200b\u6570\u636e\u200b\u505a\u200b\u9884\u5904\u7406\u200b\uff08tokenize\u3001padding\u3001truncation\uff09</li> </ol> <pre><code>def tokenize_fn(examples):\n    return tokenizer(examples[\"text\"], padding=\"max_length\", truncation=True)\ndataset = dataset.map(tokenize_fn, batched=True)\n</code></pre> <ol> <li>\u200b\u52a0\u8f7d\u200b\u6a21\u578b\u200b\uff08\u200b\u4efb\u52a1\u200b\u7279\u5b9a\u200b\uff0c\u200b\u6bd4\u5982\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff09</li> </ol> <pre><code>from transformers import AutoModelForSequenceClassification\nmodel = AutoModelForSequenceClassification.from_pretrained(\n    \"google-bert/bert-base-cased\", num_labels=5\n)\n</code></pre> <p>\uff08\u200b\u6ce8\u610f\u200b\uff1a\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b head \u200b\u901a\u5e38\u200b\u88ab\u200b\u66ff\u6362\u200b\u4e3a\u200b\u4e0e\u200b\u4f60\u200b\u4efb\u52a1\u200b\u5bf9\u5e94\u200b\u7684\u200b head\u3002\uff09(Hugging Face) 5. \u200b\u5b9a\u4e49\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b\uff08<code>TrainingArguments</code>\uff09</p> <pre><code>from transformers import TrainingArguments\ntraining_args = TrainingArguments(\n    output_dir=\"yelp_review_classifier\",\n    eval_strategy=\"epoch\",\n    push_to_hub=True\n)\n</code></pre> <ol> <li>\u200b\u521b\u5efa\u200b Trainer \u200b\u5e76\u200b\u8bad\u7ec3\u200b</li> </ol> <pre><code>from transformers import Trainer\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=dataset[\"train\"],\n    eval_dataset=dataset[\"test\"]\n)\ntrainer.train()\n</code></pre> <ol> <li>\u200b\u8bc4\u4f30\u200b\uff0f\u200b\u4fdd\u5b58\u200b\uff0f\u200b\u4e0a\u4f20\u200b\u6a21\u578b\u200b</li> </ol>"},{"location":"llm/tunning/transformers/quick%20start/#_11","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u5fae\u8c03\u200b\u4ecd\u7136\u200b\u9700\u8981\u200b GPU\uff0f\u200b\u5927\u91cf\u200b\u5185\u5b58\u200b\uff0c\u200b\u5426\u5219\u200b\u8bad\u7ec3\u200b\u4f1a\u200b\u975e\u5e38\u200b\u6162\u200b\u3002</li> <li>\u200b\u6570\u636e\u200b\u9884\u5904\u7406\u200b\uff08tokenization\uff09\u200b\u5f80\u5f80\u200b\u662f\u200b\u74f6\u9888\u200b\uff0c\u200b\u9700\u8981\u200b\u4f18\u5316\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u6a21\u578b\u200b\u5f88\u5927\u200b\uff08\u200b\u5982\u200b\u6570\u5341\u4ebf\u200b\u53c2\u6570\u200b\uff09\uff0c\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b \u201c\u200b\u53c2\u6570\u200b\u9ad8\u6548\u200b\u5fae\u8c03\u200b\uff08PEFT\uff09\u201d \u200b\u7b49\u200b\u6280\u672f\u200b\u3002(OpenAI Cookbook)</li> </ul>"},{"location":"llm/tunning/transformers/quick%20start/#_12","title":"\u7b2c\u516d\u200b\u90e8\u5206\u200b\uff1a\u200b\u5b9e\u6218\u200b\u793a\u4f8b\u200b\uff1a\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b + \u200b\u6587\u672c\u200b\u751f\u6210","text":"<p>\u200b\u6211\u4eec\u200b\u6765\u200b\u5199\u200b\u4e24\u4e2a\u200b\u7a0d\u200b\u590d\u6742\u200b\u4e00\u70b9\u200b\u7684\u200b\u5b8c\u6574\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b\u7247\u6bb5\u200b\u3002</p>"},{"location":"llm/tunning/transformers/quick%20start/#a","title":"\u793a\u4f8b\u200b A\uff1a\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u5fae\u8c03\u200b\uff08\u200b\u60c5\u611f\u200b\u5206\u6790\u200b\uff09","text":"<pre><code>from datasets import load_dataset\nfrom transformers import AutoTokenizer, AutoModelForSequenceClassification, TrainingArguments, Trainer\n\n# 1. \u200b\u6570\u636e\u200b\u96c6\u200b\ndataset = load_dataset(\"yelp_review_full\")\n\n# 2. tokenizer\ntokenizer = AutoTokenizer.from_pretrained(\"google-bert/bert-base-cased\")\n\n# 3. \u200b\u9884\u5904\u7406\u200b\ndef tokenize_fn(examples):\n    return tokenizer(examples[\"text\"], padding=\"max_length\", truncation=True)\n\ndataset = dataset.map(tokenize_fn, batched=True)\ndataset = dataset.shuffle(seed=42).select(range(2000))  # \u200b\u5c0f\u200b\u6837\u672c\u200b\u505a\u200b\u6d4b\u8bd5\u200b\n\n# 4. \u200b\u6a21\u578b\u200b\nmodel = AutoModelForSequenceClassification.from_pretrained(\n    \"google-bert/bert-base-cased\", num_labels=5\n)\n\n# 5. \u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b\ntraining_args = TrainingArguments(\n    output_dir=\"yelp_classifier\",\n    evaluation_strategy=\"epoch\",\n    push_to_hub=False,\n    num_train_epochs=1,\n    per_device_train_batch_size=8\n)\n\n# 6. Trainer\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=dataset[\"train\"],\n    eval_dataset=dataset[\"test\"]\n)\n\n# 7. \u200b\u8bad\u7ec3\u200b\ntrainer.train()\n</code></pre>"},{"location":"llm/tunning/transformers/quick%20start/#b-prompt","title":"\u793a\u4f8b\u200b B\uff1a\u200b\u6587\u672c\u200b\u751f\u6210\u200b\uff0b\u200b\u5b9a\u5236\u200b prompt","text":"<pre><code>from transformers import pipeline\n\ngenerator = pipeline(\"text-generation\", model=\"gpt2\")\n\nprompt = \"In a distant future, humanity has colonized Mars. The first Martian city was built on \"\nresult = generator(prompt, max_length=100, num_return_sequences=1)\nprint(result[0][\"generated_text\"])\n</code></pre> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u628a\u200b\u8fd9\u4e2a\u200b\u4f5c\u4e3a\u200b \u201c\u200b\u751f\u6210\u200b\u6545\u4e8b\u200b\u201d\u201c\u200b\u5199\u8bd7\u200b\u201d\u201c\u200b\u751f\u6210\u200b\u5bf9\u8bdd\u200b\u201d \u200b\u7684\u200b\u8d77\u70b9\u200b\u3002</p>"},{"location":"llm/tunning/transformers/quick%20start/#_13","title":"\u7b2c\u4e03\u200b\u90e8\u5206\u200b\uff1a\u200b\u8fdb\u9636\u200b\u4e3b\u9898\u200b\uff0f\u200b\u5b9e\u7528\u6280\u5de7","text":"<ul> <li>\u200b\u5bfc\u51fa\u200b\u6a21\u578b\u200b\uff0f\u200b\u90e8\u7f72\u200b\uff1a \u200b\u8bad\u7ec3\u200b\u5b8c\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4f60\u200b\u53ef\u80fd\u200b\u60f3\u200b\u628a\u200b\u6a21\u578b\u200b\u5bfc\u51fa\u200b\uff08\u200b\u4f8b\u5982\u200b ONNX\u3001TorchScript\uff09\u200b\u6216\u200b\u90e8\u7f72\u200b\u5230\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u3002</li> <li>\u200b\u91cf\u5316\u200b\uff0f\u200b\u526a\u679d\u200b\uff08Quantization/Pruning\uff09\uff1a \u200b\u5bf9\u6a21\u578b\u200b\u505a\u200b\u8f7b\u91cf\u5316\u200b\u5904\u7406\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u5728\u200b\u8d44\u6e90\u200b\u53d7\u9650\u200b\u73af\u5883\u200b\u8fd0\u884c\u200b\u3002</li> <li>\u200b\u591a\u200b\u6a21\u6001\u200b\uff0f\u200b\u89c6\u89c9\u200b\uff0f\u200b\u97f3\u9891\u200b\u4efb\u52a1\u200b\uff1a Transformers \u200b\u4e0d\u4ec5\u200b\u7528\u4e8e\u200b\u6587\u672c\u200b\uff0c\u200b\u8fd8\u200b\u652f\u6301\u200b\u56fe\u50cf\u200b\u3001\u200b\u97f3\u9891\u200b\u3001\u200b\u591a\u200b\u6a21\u6001\u200b\u3002</li> <li>\u200b\u5927\u89c4\u6a21\u200b\u8bad\u7ec3\u200b\uff0f\u200b\u5206\u5e03\u5f0f\u200b\u8bad\u7ec3\u200b\uff1a \u200b\u4f7f\u7528\u200b <code>Trainer</code> \u200b\u652f\u6301\u200b\u591a\u200bGPU\uff0f\u200b\u6df7\u5408\u200b\u7cbe\u5ea6\u200b\u8bad\u7ec3\u200b\u3002</li> <li>\u200b\u53c2\u6570\u200b\u9ad8\u6548\u200b\u5fae\u8c03\u200b\uff08PEFT\uff09\u200b\u7b49\u200b\uff1a \u200b\u5982\u679c\u200b\u6a21\u578b\u200b\u592a\u200b\u5927\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u6210\u672c\u200b\u592a\u9ad8\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b LoRA\u3001Adapter\u3001Prefix-tuning \u200b\u7b49\u200b\u6280\u672f\u200b\u3002(OpenAI Cookbook)</li> <li>\u200b\u5229\u7528\u200b Hub\uff1a \u200b\u628a\u200b\u4f60\u200b\u7684\u200b\u8bad\u7ec3\u200b\u7ed3\u679c\u200b\u4e0a\u200b\u4f20\u5230\u200b Hugging Face Hub \u200b\u4e0e\u200b\u793e\u533a\u200b\u5171\u4eab\u200b\u3002</li> </ul>"},{"location":"llm/tunning/transformers/quick%20start/#_14","title":"\u7b2c\u516b\u200b\u90e8\u5206\u200b\uff1a\u200b\u603b\u7ed3\u200b + \u200b\u4e0b\u200b\u4e00\u6b65\u200b\u5efa\u8bae","text":""},{"location":"llm/tunning/transformers/quick%20start/#_15","title":"\u603b\u7ed3","text":"<ul> <li>Transformers \u200b\u662f\u200b\u5f3a\u5927\u200b\u4e14\u200b\u901a\u7528\u200b\u7684\u200b\u5e93\u200b\uff0c\u200b\u80fd\u200b\u5e2e\u200b\u4f60\u200b\u5feb\u901f\u200b\u7528\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u505a\u200b\u63a8\u7406\u200b\u6216\u200b\u8bad\u7ec3\u200b\uff0f\u200b\u5fae\u8c03\u200b\u3002</li> <li>\u200b\u5165\u95e8\u200b\u975e\u5e38\u5bb9\u6613\u200b\uff08\u200b\u5b89\u88c5\u200b + pipeline + model\uff09\uff0c\u200b\u4f46\u200b\u8981\u200b\u73a9\u200b\u5f97\u200b\u6e9c\u200b\uff0c\u200b\u5c31\u200b\u9700\u8981\u200b\u7406\u89e3\u200b\u9884\u5904\u7406\u200b\u3001tokenizer\u3001\u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\u8fd9\u4e9b\u200b\u7ec6\u8282\u200b\u3002</li> <li>\u200b\u5b9e\u6218\u200b\u65b9\u5411\u200b\u5f88\u591a\u200b\uff1a\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u3001\u200b\u751f\u6210\u200b\u3001\u200b\u6458\u8981\u200b\u3001\u200b\u95ee\u7b54\u200b\u3001\u200b\u7ffb\u8bd1\u200b\u3001\u200b\u591a\u200b\u6a21\u6001\u200b\u2026</li> <li>\u200b\u8d44\u6e90\u200b\u4e30\u5bcc\u200b\uff0c\u200b\u793e\u533a\u200b\u6d3b\u8dc3\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u57fa\u4e8e\u200b\u5df2\u6709\u200b\u6a21\u578b\u200b\u6539\u9020\u200b\u3002</li> </ul>"},{"location":"llm/tunning/transformers/quick%20start/#_16","title":"\u4e0b\u200b\u4e00\u6b65\u200b\u5efa\u8bae","text":"<ul> <li>\u200b\u6311\u9009\u200b\u4e00\u4e2a\u200b\u4efb\u52a1\u200b\uff1a\u200b\u6bd4\u5982\u200b \u200b\u95ee\u7b54\u200b \u200b\u6216\u200b \u200b\u6458\u8981\u200b\uff0c\u200b\u7136\u540e\u200b\u52a8\u624b\u200b\u5fae\u8c03\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b\u3002</li> <li>\u200b\u9605\u8bfb\u200b\u5b98\u65b9\u200b\u300cTasks\u300d\uff08\u200b\u4efb\u52a1\u200b\uff09\u200b\u9875\u9762\u200b\uff0c\u200b\u770b\u770b\u200b \u201c\u200b\u95ee\u7b54\u200b\uff08QA\uff09\u201d\u201c\u200b\u6458\u8981\u200b\uff08Summarization\uff09\u201d\u201c\u200b\u7ffb\u8bd1\u200b\uff08Translation\uff09\u201d \u200b\u7b49\u200b\u5177\u4f53\u200b\u573a\u666f\u200b\u3002</li> <li>\u200b\u5c1d\u8bd5\u200b\u5728\u200b\u81ea\u5df1\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8bad\u7ec3\u200b\uff1b\u200b\u5c06\u200b\u7ed3\u679c\u200b\u90e8\u7f72\u200b\u6210\u200b Web \u200b\u5e94\u7528\u200b\uff08\u200b\u53ef\u4ee5\u200b\u7ed3\u5408\u200b\u50cf\u200b Gradio \u200b\u8fd9\u6837\u200b\u7684\u200b\u5de5\u5177\u200b\uff09\u3002</li> <li>\u200b\u5b66\u4e60\u200b\u66f4\u200b\u9ad8\u7ea7\u200b\u6280\u5de7\u200b\uff1a\u200b\u6bd4\u5982\u200b\u591a\u200b\u6a21\u6001\u200b\u3001\u200b\u91cf\u5316\u200b\u3001PEFT\u3001\u200b\u5206\u5e03\u5f0f\u200b\u8bad\u7ec3\u200b\u3002</li> </ul> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u613f\u610f\u200b\uff0c\u200b\u6211\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u4f60\u200b \u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u4e13\u95e8\u200b\u9488\u5bf9\u200b\u4e2d\u6587\u200b\u6587\u672c\u200b\u4efb\u52a1\u200b\uff08\u200b\u4f8b\u5982\u200b\u60c5\u611f\u200b\u5206\u6790\u200b\u6216\u200b\u6458\u8981\u200b\u751f\u6210\u200b\uff09\u200b\u7684\u200b\u5b8c\u6574\u200b\u4ee3\u7801\u200b notebook \u200b\u6a21\u677f\u200b\uff0c\u200b\u4f60\u200b\u8981\u200b\u4e0d\u8981\u200b\uff1f</p>"},{"location":"llmapps/apps/langchain/RAG%20agent/","title":"\u57fa\u4e8e\u200bLangChain\u200b\u521b\u5efa\u200bRAG agent","text":""},{"location":"llmapps/apps/langchain/RAG%20agent/#_1","title":"\u9879\u76ee\u200b\u6982\u8ff0","text":"<p>\u200b\u57fa\u4e8e\u200b\u8fd9\u7bc7\u200b\u535a\u5ba2\u200b https://lilianweng.github.io/posts/2023-06-23-agent/ \u200b\u4f5c\u4e3a\u200b\u6570\u636e\u6e90\u200b\uff0c\u200b\u5efa\u7acb\u200bRAG agent\u3002</p>"},{"location":"llmapps/apps/langchain/RAG%20agent/#_2","title":"\u9879\u76ee\u200b\u5b9e\u73b0","text":""},{"location":"llmapps/apps/langchain/RAG%20agent/#1","title":"1\ufe0f\u20e3 \u200b\u642d\u5efa\u200b\u57fa\u7840\u200b\u73af\u5883","text":"<pre><code>import os\n\nos.environ['LANGSMITH_TRACING'] ='true'\nos.environ['LANGSMITH_API_KEY'] = ''\n</code></pre>"},{"location":"llmapps/apps/langchain/RAG%20agent/#2","title":"2\ufe0f\u20e3 \u200b\u52a0\u8f7d\u200b\u6587\u6863","text":"<pre><code>import bs4\nfrom langchain_community.document_loaders import WebBaseLoader\n\n# \u200b\u53ea\u200b\u4fdd\u7559\u200b \u200b\u6587\u7ae0\u200b\u7684\u200b\u540d\u79f0\u200b\u3001\u200b\u6807\u9898\u200b\u548c\u200b\u5185\u5bb9\u200b\nbs4_strainer = bs4.SoupStrainer(class_=(\"post-title\", \"post-header\", \"post-content\"))\nloader = WebBaseLoader(\n    web_path=(\"https://lilianweng.github.io/posts/2023-06-23-agent/\",),\n    bs_kwargs={\"parse_only\": bs4_strainer},\n)\n\ndocs = loader.load() # \u200b\u52a0\u8f7d\u200b\u6587\u6863\u200b\n\nassert len(docs) == 1\nprint(f\"\u200b\u603b\u200b\u5b57\u6570\u200b\uff1a{len(docs[0].page_content)}\")\nprint(f\"\u200b\u524d\u200b500\u200b\u4e2a\u200b\u5b57\u200b\u7684\u200b\u5185\u5bb9\u200b\uff1a{docs[0].page_content[:500]}\")\n</code></pre>"},{"location":"llmapps/apps/langchain/RAG%20agent/#3","title":"3\ufe0f\u20e3 \u200b\u6587\u6863\u200b\u5206\u5272","text":"<pre><code>from langchain_text_splitters import RecursiveCharacterTextSplitter\n\ntext_spliter = RecursiveCharacterTextSplitter(\n    chunk_size=1000,\n    chunk_overlap=200,\n    add_start_index=True\n)\n\nall_splits = text_spliter.split_documents(docs)\nprint(f\"\u200b\u628a\u200b\u6587\u6863\u200b\u62c6\u200b\u5206\u6210\u200b{len(all_splits)}\u200b\u4e2a\u5b50\u200b\u6587\u6863\u200b\")\n</code></pre>"},{"location":"llmapps/apps/langchain/RAG%20agent/#4","title":"4\ufe0f\u20e3 \u200b\u5b58\u50a8\u200b\u6587\u6863","text":"<pre><code>from langchain_milvus import Milvus\nfrom langchain_ollama import OllamaEmbeddings\n\n# \u200b\u5d4c\u5165\u200b\nembeddings = OllamaEmbeddings(model=\"llama3.2:latest\") # \u200b\u5d4c\u5165\u200b\n\n# \u200b\u5411\u91cf\u200b\u6570\u636e\u5e93\u200b\nuri = 'http://localhost:19530'\nvector_store = Milvus(\n    embedding_function=embeddings,\n    connection_args={'uri':uri}\n)\n\n# \u200b\u5b58\u5165\u200b\u5230\u200b\u5411\u91cf\u200b\u5e93\u4e2d\u200b\ndocument_ids = vector_store.add_documents(documents=all_splits)\nprint(f\"\u200b\u524d\u200b\u4e09\u4e2a\u200bdocument_ids:{document_ids[:3]}\")\n</code></pre>"},{"location":"llmapps/apps/langchain/RAG%20agent/#5-agent","title":"5\ufe0f\u20e3 \u200b\u521b\u5efa\u200bAgent","text":""},{"location":"llmapps/apps/langchain/RAG%20agent/#51","title":"5.1 \u200b\u5b9a\u4e49\u200b\u5de5\u5177","text":"<pre><code>from langchain.tools import tool\n\n@tool(response_format=\"content_and_artifact\")\ndef retrieve_context(query:str):\n    '''\u200b\u68c0\u7d22\u200b\u4e0a\u4e0b\u6587\u200b\u5e2e\u52a9\u200b\u95ee\u9898\u200b\u56de\u7b54\u200b'''\n    retrieved_docs = vector_store.similarity_search(query=query,k=2) # \u200b\u68c0\u7d22\u200b\u6587\u7ae0\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b2\u200b\u4e2a\u200b\u6587\u6863\u200b\n    serialized = \"\\n\\n\".join([\n        (f\"Source:{doc.metadata}\\nContent:{doc.page_content}\")\n        for doc in retrieved_docs\n    ])\n    return serialized,retrieved_docs\n</code></pre>"},{"location":"llmapps/apps/langchain/RAG%20agent/#52","title":"5.2 \u200b\u521b\u5efa\u200b\u667a\u80fd\u200b\u4f53","text":"<pre><code>from langchain.agents import create_agent\nfrom langchain_ollama import ChatOllama\nfrom langchain.messages import HumanMessage\n# \u200b\u5de5\u5177\u96c6\u200b\ntools = [retrieve_context]\n# \u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\u8bcd\u200b\nsystem_prompt = (\n    \"You have access to a tool that retrieves context from a blog post. \"\n    \"Use the tool to help answer user queries.\"\n)\n\n# \u200b\u9009\u62e9\u200b\u6a21\u578b\u200b\nmodel = ChatOllama(\n    model=\"qwen3:1.7b\",\n    temperature=0.8\n)\n\n# \u200b\u521b\u5efa\u200bagent\nagent = create_agent(model=model, system_prompt=system_prompt,tools=tools)\n\nquery = (\n    \"What is the standard method for Task Decomposition?\\n\\n\"\n    \"Once you get the answer, look up common extensions of that method.\"\n)\n\nfor event in agent.stream(\n    {\"messages\": [{\"role\": \"user\", \"content\": query}]},\n    stream_mode=\"values\",\n):\n    event[\"messages\"][-1].pretty_print()\n</code></pre>"},{"location":"llmapps/apps/langchain/humain_middleware/","title":"\u4eba\u5de5\u200b\u5ba1\u6838","text":"<pre><code>import streamlit as st\nfrom langchain_ollama import ChatOllama\nfrom langchain.agents import create_agent\nfrom langchain.tools import tool\nfrom langchain.messages import HumanMessage\nfrom langchain.agents.middleware import HumanInTheLoopMiddleware\nfrom langgraph.types import Command\nfrom langgraph.checkpoint.memory import InMemorySaver\n\n@tool\ndef add_num(a: int, b: int) -&gt; int:\n    '''\u200b\u52a0\u6cd5\u200b'''\n    return a + b\n\n@tool\ndef minus_num(a: int, b: int) -&gt; int:\n    '''\u200b\u51cf\u6cd5\u200b'''\n    return a - b\n\nmodel = ChatOllama(\n    model='qwen3:4b'\n)\n\nsystem_prompt = '''\n        \u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6570\u5b66\u8ba1\u7b97\u200b\u52a9\u624b\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u7528\u6237\u200b\u8fdb\u884c\u200b\u52a0\u6cd5\u200b\u548c\u200b\u51cf\u6cd5\u200b\u8fd0\u7b97\u200b\u3002\n        \u200b\u5f53\u200b\u7528\u6237\u200b\u8bf7\u6c42\u200b\u8ba1\u7b97\u200b\u65f6\u200b\uff0c\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u5de5\u5177\u200b\u5e76\u200b\u6267\u884c\u200b\u8ba1\u7b97\u200b\u3002\n        \u200b\u6240\u6709\u200b\u8ba1\u7b97\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u9700\u8981\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\u786e\u8ba4\u200b\u3002\n'''\n\nagent = create_agent(\n    model=model,\n    tools=[add_num, minus_num],\n    system_prompt=system_prompt,\n    middleware=[\n        HumanInTheLoopMiddleware(\n            interrupt_on={'add_num':True, 'minus_num':True},\n            description_prefix=\"\u200b\u8ba1\u7b97\u200b\u5f85\u200b\u5ba1\u6838\u200b\",\n        ),\n    ],\n    checkpointer=InMemorySaver(),\n)\n\n## \u200b\u4f7f\u7528\u200bstreamlit\u200b\u5e03\u5c40\u200b\u9875\u9762\u200b\n\nst.set_page_config(page_title=\"SQL Agent Demo\", page_icon=\"\ud83e\udde0\")\nst.title('LangChain\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\u793a\u4f8b\u200b')\n\nif \"thread_id\" not in st.session_state:\n    st.session_state.thread_id = \"thread-1\"\n\nconfig = {\"configurable\": {\"thread_id\": st.session_state.thread_id}}\n\nquestion = st.text_input('\u200b\u8bf7\u200b\u8f93\u5165\u200b\u8981\u200b\u8ba1\u7b97\u200b\u7684\u200b\u6570\u5b66\u516c\u5f0f\u200b\uff1a')\n\nif st.button(\"\u200b\u5f00\u59cb\u200b\u8ba1\u7b97\u200b\"):\n    st.session_state.result = []\n    st.session_state.pending = None\n\n    for step in agent.stream({'messages':[HumanMessage(question)]},config=config,stream_mode='values'):\n\n        # \u200b\u4e2d\u65ad\u200b\u7b49\u5f85\u200b\u5ba1\u6838\u200b\n        if '__interrupt__' in step:\n            interrupt = step['__interrupt__'][0]\n            st.session_state.pending = interrupt\n            st.error('\u200b\u8ba1\u7b97\u200b\u5df2\u200b\u6682\u505c\u200b\uff0c\u200b\u7b49\u5f85\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b')\n            break\n\n        if 'messages' in step:\n            st.session_state.result.append(step['messages'][-1].content)\n\n# \u2705 \u200b\u4eba\u5de5\u200b\u6279\u51c6\u200b\u7ee7\u7eed\u6267\u884c\u200b\nif \"pending\" in st.session_state and st.session_state.pending:\n    if st.button(\"\u2705 \u200b\u6279\u51c6\u200b\u6267\u884c\u200b\u8ba1\u7b97\u200b\"):\n        for step in agent.stream(\n            Command(resume={\"decisions\": [{\"type\": \"approve\"}]}),\n            config=config,\n            stream_mode=\"values\"\n        ):\n            if \"messages\" in step:\n                st.session_state.result.append(step[\"messages\"][-1].content)\n\n        st.session_state.pending = None\n        st.success(\"\u2705 \u200b\u5ba1\u6838\u200b\u5b8c\u6210\u200b\uff0c\u200b\u6267\u884c\u200b\u6210\u529f\u200b\")\n\n# \u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b\nif \"result\" in st.session_state:\n    for r in st.session_state.result:\n        st.write(f'\u200b\u8fd0\u7b97\u200b\u7ed3\u679c\u200b\uff1a{r}')\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/","title":"\u4f7f\u7528\u200bLangChain\u200b\u6784\u5efa\u200b\u8bed\u4e49\u200b\u641c\u7d22\u5f15\u64ce\u200b\u6559\u7a0b","text":""},{"location":"llmapps/apps/langchain/semantic%20search/#_1","title":"\u6982\u8ff0","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u5c06\u200b\u5e2e\u52a9\u200b\u60a8\u200b\u719f\u6089\u200bLangChain\u200b\u7684\u200b\u6587\u6863\u200b\u52a0\u8f7d\u200b\u5668\u200b\u3001\u200b\u5d4c\u5165\u200b\u6a21\u578b\u200b\u548c\u200b\u5411\u91cf\u200b\u5b58\u50a8\u200b\u62bd\u8c61\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u62bd\u8c61\u200b\u7ec4\u4ef6\u200b\u65e8\u5728\u200b\u652f\u6301\u200b\u4ece\u200b\uff08\u200b\u5411\u91cf\u200b\uff09\u200b\u6570\u636e\u5e93\u200b\u548c\u200b\u5176\u4ed6\u200b\u6765\u6e90\u200b\u68c0\u7d22\u200b\u6570\u636e\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u4e0e\u200bLLM\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u96c6\u6210\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u9700\u8981\u200b\u83b7\u53d6\u6570\u636e\u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\uff08\u200b\u5982\u200b\u68c0\u7d22\u200b\u589e\u5f3a\u200b\u751f\u6210\u200bRAG\uff09\u200b\u6765\u8bf4\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u7ec4\u4ef6\u200b\u975e\u5e38\u200b\u91cd\u8981\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u5c06\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u57fa\u4e8e\u200bPDF\u200b\u6587\u6863\u200b\u7684\u200b\u641c\u7d22\u5f15\u64ce\u200b\uff0c\u200b\u4f7f\u200b\u6211\u4eec\u200b\u80fd\u591f\u200b\u68c0\u7d22\u200b\u4e0e\u200b\u8f93\u5165\u200b\u67e5\u8be2\u200b\u76f8\u4f3c\u200b\u7684\u200bPDF\u200b\u6bb5\u843d\u200b\u3002\u200b\u672c\u200b\u6307\u5357\u200b\u8fd8\u200b\u5305\u62ec\u200b\u5728\u200b\u641c\u7d22\u5f15\u64ce\u200b\u57fa\u7840\u200b\u4e0a\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u6700\u5c0f\u5316\u200b\u7684\u200bRAG\u200b\u5e94\u7528\u200b\u3002</p>"},{"location":"llmapps/apps/langchain/semantic%20search/#_2","title":"\u6838\u5fc3\u200b\u6982\u5ff5","text":"<p>\u200b\u672c\u200b\u6307\u5357\u200b\u4e13\u6ce8\u200b\u4e8e\u200b\u6587\u672c\u200b\u6570\u636e\u68c0\u7d22\u200b\uff0c\u200b\u6db5\u76d6\u200b\u4ee5\u4e0b\u200b\u6982\u5ff5\u200b\uff1a</p> <ul> <li>\u200b\u6587\u6863\u200b\u548c\u200b\u6587\u6863\u200b\u52a0\u8f7d\u200b\u5668\u200b</li> <li>\u200b\u6587\u672c\u200b\u5206\u5272\u5668\u200b</li> <li>\u200b\u5d4c\u5165\u200b\u6a21\u578b\u200b</li> <li>\u200b\u5411\u91cf\u200b\u5b58\u50a8\u200b\u548c\u200b\u68c0\u7d22\u200b\u5668\u200b</li> </ul>"},{"location":"llmapps/apps/langchain/semantic%20search/#_3","title":"\u73af\u5883\u200b\u8bbe\u7f6e","text":""},{"location":"llmapps/apps/langchain/semantic%20search/#_4","title":"\u5b89\u88c5\u200b\u4f9d\u8d56","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u9700\u8981\u200b\u5b89\u88c5\u200b<code>langchain-community</code>\u200b\u548c\u200b<code>pypdf</code>\u200b\u5305\u200b\uff1a</p> <pre><code>pip install langchain-community pypdf\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/#langsmith","title":"LangSmith\u200b\u914d\u7f6e\u200b\uff08\u200b\u53ef\u200b\u9009\u200b\uff09","text":"<p>\u200b\u4e3a\u4e86\u200b\u66f4\u597d\u200b\u5730\u200b\u8c03\u8bd5\u200b\u548c\u200b\u76d1\u63a7\u200bLangChain\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\uff0c\u200b\u5efa\u8bae\u200b\u8bbe\u7f6e\u200bLangSmith\uff1a</p> <pre><code>import getpass\nimport os\n\nos.environ[\"LANGSMITH_TRACING\"] = \"true\"\nos.environ[\"LANGSMITH_API_KEY\"] = getpass.getpass(\"\u200b\u8bf7\u200b\u8f93\u5165\u200bLangSmith API\u200b\u5bc6\u94a5\u200b\uff1a\")\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/#_5","title":"\u6559\u7a0b\u200b\u6b65\u9aa4","text":""},{"location":"llmapps/apps/langchain/semantic%20search/#1","title":"1. \u200b\u6587\u6863\u200b\u548c\u200b\u6587\u6863\u200b\u52a0\u8f7d\u200b\u5668","text":"<p>LangChain\u200b\u4f7f\u7528\u200bDocument\u200b\u62bd\u8c61\u200b\u6765\u200b\u8868\u793a\u200b\u6587\u672c\u200b\u5355\u5143\u200b\u53ca\u5176\u200b\u5143\u200b\u6570\u636e\u200b\uff0c\u200b\u5305\u542b\u200b\u4e09\u4e2a\u200b\u5c5e\u6027\u200b\uff1a - <code>page_content</code>\uff1a\u200b\u6587\u672c\u200b\u5185\u5bb9\u200b\u5b57\u7b26\u4e32\u200b - <code>metadata</code>\uff1a\u200b\u5305\u542b\u200b\u4efb\u610f\u200b\u5143\u200b\u6570\u636e\u200b\u7684\u200b\u5b57\u5178\u200b - <code>id</code>\uff1a\uff08\u200b\u53ef\u200b\u9009\u200b\uff09\u200b\u6587\u6863\u200b\u6807\u8bc6\u7b26\u200b</p>"},{"location":"llmapps/apps/langchain/semantic%20search/#pdf","title":"\u52a0\u8f7d\u200bPDF\u200b\u6587\u6863","text":"<pre><code>from langchain_community.document_loaders import PyPDFLoader\n\n# \u200b\u52a0\u8f7d\u200bPDF\u200b\u6587\u4ef6\u200b\nfile_path = \"nke-10k-2023.pdf\"\nloader = PyPDFLoader(file_path)\ndocs = loader.load()\n\nprint(f\"\u200b\u52a0\u8f7d\u200b\u4e86\u200b {len(docs)} \u200b\u9875\u200b\u6587\u6863\u200b\")\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/#_6","title":"\u6587\u6863\u200b\u5206\u5272","text":"<p>\u200b\u4e3a\u4e86\u200b\u63d0\u9ad8\u200b\u68c0\u7d22\u200b\u7cbe\u5ea6\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5c06\u200b\u6587\u6863\u200b\u5206\u5272\u200b\u6210\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u5757\u200b\uff1a</p> <pre><code>from langchain_text_splitters import RecursiveCharacterTextSplitter\n\ntext_splitter = RecursiveCharacterTextSplitter(\n    chunk_size=1000,  # \u200b\u6bcf\u4e2a\u200b\u5757\u200b1000\u200b\u5b57\u7b26\u200b\n    chunk_overlap=200,  # \u200b\u5757\u95f4\u200b\u91cd\u53e0\u200b200\u200b\u5b57\u7b26\u200b\n    add_start_index=True  # \u200b\u4fdd\u7559\u200b\u8d77\u59cb\u200b\u7d22\u5f15\u200b\n)\nall_splits = text_splitter.split_documents(docs)\n\nprint(f\"\u200b\u5206\u5272\u200b\u6210\u200b {len(all_splits)} \u200b\u4e2a\u200b\u6587\u672c\u200b\u5757\u200b\")\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/#2","title":"2. \u200b\u5d4c\u5165\u200b\u6a21\u578b","text":"<p>\u200b\u5d4c\u5165\u200b\u6a21\u578b\u200b\u5c06\u200b\u6587\u672c\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u6570\u503c\u200b\u5411\u91cf\u200b\uff0c\u200b\u7528\u4e8e\u200b\u76f8\u4f3c\u6027\u200b\u641c\u7d22\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4f7f\u7528\u200bOpenAI\u200b\u5d4c\u5165\u200b\u6a21\u578b\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>import getpass\nimport os\nfrom langchain_openai import OpenAIEmbeddings\n\n# \u200b\u8bbe\u7f6e\u200bAPI\u200b\u5bc6\u94a5\u200b\nif not os.environ.get(\"OPENAI_API_KEY\"):\n    os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"\u200b\u8bf7\u200b\u8f93\u5165\u200bOpenAI API\u200b\u5bc6\u94a5\u200b\uff1a\")\n\n# \u200b\u521d\u59cb\u5316\u200b\u5d4c\u5165\u200b\u6a21\u578b\u200b\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n# \u200b\u6d4b\u8bd5\u200b\u5d4c\u5165\u200b\nvector_1 = embeddings.embed_query(all_splits[0].page_content)\nprint(f\"\u200b\u751f\u6210\u200b\u7684\u200b\u957f\u5ea6\u200b\u4e3a\u200b {len(vector_1)} \u200b\u7684\u200b\u5411\u91cf\u200b\")\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/#3","title":"3. \u200b\u5411\u91cf\u200b\u5b58\u50a8","text":"<p>\u200b\u9009\u62e9\u200b\u9002\u5408\u200b\u7684\u200b\u5411\u91cf\u200b\u5b58\u50a8\u200b\u65b9\u6848\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4ee5\u200b\u5185\u5b58\u200b\u5411\u91cf\u200b\u5b58\u50a8\u200b\u4e3a\u4f8b\u200b\uff1a</p> <pre><code>from langchain_core.vectorstores import InMemoryVectorStore\n\n# \u200b\u521d\u59cb\u5316\u200b\u5411\u91cf\u200b\u5b58\u50a8\u200b\nvector_store = InMemoryVectorStore(embeddings)\n\n# \u200b\u6dfb\u52a0\u200b\u6587\u6863\u200b\u5230\u200b\u5411\u91cf\u200b\u5b58\u50a8\u200b\nids = vector_store.add_documents(documents=all_splits)\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/#_7","title":"\u67e5\u8be2\u200b\u5411\u91cf\u200b\u5b58\u50a8","text":"<pre><code># \u200b\u57fa\u4e8e\u200b\u76f8\u4f3c\u6027\u200b\u7684\u200b\u641c\u7d22\u200b\nresults = vector_store.similarity_search(\n    \"\u200b\u8010\u514b\u200b\u5728\u200b\u7f8e\u56fd\u200b\u6709\u200b\u591a\u5c11\u200b\u4e2a\u200b\u5206\u9500\u200b\u4e2d\u5fc3\u200b\uff1f\"\n)\n\nprint(results[0].page_content)\n\n# \u200b\u5e26\u5206\u6570\u200b\u7684\u200b\u641c\u7d22\u200b\nresults_with_score = vector_store.similarity_search_with_score(\n    \"\u200b\u8010\u514b\u200b2023\u200b\u5e74\u200b\u7684\u200b\u6536\u5165\u200b\u662f\u200b\u591a\u5c11\u200b\uff1f\"\n)\ndoc, score = results_with_score[0]\nprint(f\"\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u5206\u6570\u200b\uff1a{score}\")\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/#4","title":"4. \u200b\u68c0\u7d22\u200b\u5668","text":"<p>\u200b\u68c0\u7d22\u200b\u5668\u662f\u200bRunnable\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8f7b\u677e\u200b\u96c6\u6210\u200b\u5230\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b\u5e94\u7528\u200b\u4e2d\u200b\uff1a</p> <pre><code># \u200b\u4ece\u200b\u5411\u91cf\u200b\u5b58\u50a8\u200b\u521b\u5efa\u200b\u68c0\u7d22\u200b\u5668\u200b\nretriever = vector_store.as_retriever(\n    search_type=\"similarity\",\n    search_kwargs={\"k\": 1}  # \u200b\u8fd4\u56de\u200b\u6700\u200b\u76f8\u4f3c\u200b\u7684\u200b1\u200b\u4e2a\u200b\u6587\u6863\u200b\n)\n\n# \u200b\u6279\u91cf\u200b\u67e5\u8be2\u200b\nresults = retriever.batch([\n    \"\u200b\u8010\u514b\u200b\u5728\u200b\u7f8e\u56fd\u200b\u6709\u200b\u591a\u5c11\u200b\u4e2a\u200b\u5206\u9500\u200b\u4e2d\u5fc3\u200b\uff1f\",\n    \"\u200b\u8010\u514b\u200b\u662f\u200b\u4ec0\u4e48\u200b\u65f6\u5019\u200b\u6210\u7acb\u200b\u7684\u200b\uff1f\"\n])\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/#_8","title":"\u6784\u5efa\u200b\u5b8c\u6574\u200b\u7684\u200b\u8bed\u4e49\u200b\u641c\u7d22\u5f15\u64ce","text":"<p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5b8c\u6574\u200b\u7684\u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>import os\nfrom langchain_community.document_loaders import PyPDFLoader\nfrom langchain_text_splitters import RecursiveCharacterTextSplitter\nfrom langchain_openai import OpenAIEmbeddings\nfrom langchain_core.vectorstores import InMemoryVectorStore\n\ndef build_semantic_search_engine(pdf_path, api_key):\n    \"\"\"\u200b\u6784\u5efa\u200b\u8bed\u4e49\u200b\u641c\u7d22\u5f15\u64ce\u200b\"\"\"\n\n    # 1. \u200b\u8bbe\u7f6e\u200bAPI\u200b\u5bc6\u94a5\u200b\n    os.environ[\"OPENAI_API_KEY\"] = api_key\n\n    # 2. \u200b\u52a0\u8f7d\u200b\u6587\u6863\u200b\n    print(\"\u200b\u6b63\u5728\u200b\u52a0\u8f7d\u200bPDF\u200b\u6587\u6863\u200b...\")\n    loader = PyPDFLoader(pdf_path)\n    docs = loader.load()\n\n    # 3. \u200b\u5206\u5272\u200b\u6587\u6863\u200b\n    print(\"\u200b\u6b63\u5728\u200b\u5206\u5272\u200b\u6587\u6863\u200b...\")\n    text_splitter = RecursiveCharacterTextSplitter(\n        chunk_size=1000,\n        chunk_overlap=200,\n        add_start_index=True\n    )\n    all_splits = text_splitter.split_documents(docs)\n\n    # 4. \u200b\u521d\u59cb\u5316\u200b\u5d4c\u5165\u200b\u6a21\u578b\u200b\n    print(\"\u200b\u6b63\u5728\u200b\u521d\u59cb\u5316\u200b\u5d4c\u5165\u200b\u6a21\u578b\u200b...\")\n    embeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n    # 5. \u200b\u521b\u5efa\u200b\u5411\u91cf\u200b\u5b58\u50a8\u200b\n    print(\"\u200b\u6b63\u5728\u200b\u6784\u5efa\u200b\u5411\u91cf\u200b\u7d22\u5f15\u200b...\")\n    vector_store = InMemoryVectorStore(embeddings)\n    vector_store.add_documents(documents=all_splits)\n\n    # 6. \u200b\u521b\u5efa\u200b\u68c0\u7d22\u200b\u5668\u200b\n    retriever = vector_store.as_retriever(\n        search_type=\"similarity\",\n        search_kwargs={\"k\": 3}  # \u200b\u8fd4\u56de\u200b\u6700\u200b\u76f8\u4f3c\u200b\u7684\u200b3\u200b\u4e2a\u200b\u6587\u6863\u200b\n    )\n\n    print(\"\u200b\u8bed\u4e49\u200b\u641c\u7d22\u5f15\u64ce\u200b\u6784\u5efa\u200b\u5b8c\u6210\u200b\uff01\")\n    return retriever\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nif __name__ == \"__main__\":\n    # \u200b\u6784\u5efa\u200b\u641c\u7d22\u5f15\u64ce\u200b\n    search_engine = build_semantic_search_engine(\n        pdf_path=\"nke-10k-2023.pdf\",\n        api_key=\"your-openai-api-key\"\n    )\n\n    # \u200b\u8fdb\u884c\u200b\u67e5\u8be2\u200b\n    query = \"\u200b\u8010\u514b\u200b2023\u200b\u5e74\u200b\u7684\u200b\u8d22\u52a1\u200b\u8868\u73b0\u200b\u5982\u4f55\u200b\uff1f\"\n    results = search_engine.invoke(query)\n\n    print(f\"\u200b\u67e5\u8be2\u200b\uff1a{query}\")\n    print(\"\u200b\u68c0\u7d22\u200b\u7ed3\u679c\u200b\uff1a\")\n    for i, doc in enumerate(results, 1):\n        print(f\"\\n--- \u200b\u7ed3\u679c\u200b {i} ---\")\n        print(doc.page_content[:500] + \"...\")  # \u200b\u663e\u793a\u200b\u524d\u200b500\u200b\u4e2a\u5b57\u7b26\u200b\n        print(f\"\u200b\u6765\u6e90\u200b\uff1a{doc.metadata.get('source', '\u200b\u672a\u77e5\u200b')}\")\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/#_9","title":"\u8fdb\u9636\u200b\u529f\u80fd","text":""},{"location":"llmapps/apps/langchain/semantic%20search/#_10","title":"\u6700\u5927\u200b\u8fb9\u9645\u200b\u76f8\u5173\u6027\u200b\u641c\u7d22","text":"<p>\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200b\u8fd4\u56de\u200b\u8fc7\u4e8e\u200b\u76f8\u4f3c\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bMMR\u200b\u641c\u7d22\u200b\uff1a</p> <pre><code>retriever = vector_store.as_retriever(\n    search_type=\"mmr\",\n    search_kwargs={\"k\": 3, \"fetch_k\": 10}  # \u200b\u4ece\u200b10\u200b\u4e2a\u200b\u5019\u9009\u200b\u4e2d\u200b\u9009\u62e9\u200b3\u200b\u4e2a\u200b\u6700\u200b\u4e0d\u540c\u200b\u7684\u200b\n)\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/#_11","title":"\u76f8\u4f3c\u200b\u5ea6\u200b\u9608\u503c\u200b\u8fc7\u6ee4","text":"<pre><code>retriever = vector_store.as_retriever(\n    search_type=\"similarity_score_threshold\",\n    search_kwargs={\"k\": 3, \"score_threshold\": 0.7}  # \u200b\u53ea\u200b\u8fd4\u56de\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u5927\u4e8e\u200b0.7\u200b\u7684\u200b\u6587\u6863\u200b\n)\n</code></pre>"},{"location":"llmapps/apps/langchain/semantic%20search/#_12","title":"\u6545\u969c\u200b\u6392\u9664","text":"<ol> <li>\u200b\u5185\u5b58\u4e0d\u8db3\u200b\uff1a\u200b\u5bf9\u4e8e\u200b\u5927\u578b\u200b\u6587\u6863\u200b\uff0c\u200b\u8003\u8651\u200b\u4f7f\u7528\u200b\u6301\u4e45\u200b\u5316\u200b\u5411\u91cf\u200b\u5b58\u50a8\u200b\uff08\u200b\u5982\u200bChroma\u3001FAISS\uff09</li> <li>API\u200b\u9650\u5236\u200b\uff1a\u200b\u6ce8\u610f\u200b\u5d4c\u5165\u200b\u6a21\u578b\u200b\u7684\u200bAPI\u200b\u8c03\u7528\u200b\u9650\u5236\u200b\u548c\u200b\u6210\u672c\u200b</li> <li>\u200b\u5206\u5272\u200b\u7b56\u7565\u200b\uff1a\u200b\u6839\u636e\u200b\u6587\u6863\u200b\u7c7b\u578b\u200b\u8c03\u6574\u200bchunk_size\u200b\u548c\u200bchunk_overlap\u200b\u53c2\u6570\u200b</li> </ol>"},{"location":"llmapps/langchain/advanced-usage/Guardrails/","title":"\u4f7f\u7528\u200b Guardrails \u200b\u6784\u5efa\u200b\u5b89\u5168\u200b\u5408\u89c4\u200b\u7684\u200b AI \u200b\u5e94\u7528\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langchain/advanced-usage/Guardrails/#guardrails","title":"\u4ec0\u4e48\u200b\u662f\u200b Guardrails\uff1f","text":"<p>Guardrails\uff08\u200b\u5b89\u5168\u200b\u62a4\u680f\u200b\uff09\u200b\u662f\u200b\u5728\u200b AI \u200b\u4ee3\u7406\u200b\u6267\u884c\u200b\u7684\u200b\u5173\u952e\u200b\u8282\u70b9\u200b\u8fdb\u884c\u200b\u5185\u5bb9\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u8fc7\u6ee4\u200b\u7684\u200b\u5b89\u5168\u68c0\u67e5\u200b\u673a\u5236\u200b\u3002\u200b\u5b83\u4eec\u200b\u5e2e\u52a9\u200b\u5f00\u53d1\u8005\u200b\u6784\u5efa\u200b\u5b89\u5168\u200b\u3001\u200b\u5408\u89c4\u200b\u7684\u200b AI \u200b\u5e94\u7528\u200b\uff0c\u200b\u80fd\u591f\u200b\u5728\u200b\u95ee\u9898\u200b\u53d1\u751f\u200b\u524d\u200b\u68c0\u6d4b\u200b\u654f\u611f\u200b\u4fe1\u606f\u200b\u3001\u200b\u6267\u884c\u200b\u5185\u5bb9\u200b\u7b56\u7565\u200b\u3001\u200b\u9a8c\u8bc1\u200b\u8f93\u51fa\u200b\u5e76\u200b\u9632\u6b62\u200b\u4e0d\u200b\u5b89\u5168\u200b\u884c\u4e3a\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Guardrails/#_1","title":"\u4e3b\u8981\u200b\u5e94\u7528\u200b\u573a\u666f","text":"<ul> <li>\u200b\u9632\u6b62\u200b PII \u200b\u6cc4\u9732\u200b - \u200b\u4fdd\u62a4\u200b\u4e2a\u4eba\u8eab\u4efd\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u68c0\u6d4b\u200b\u548c\u200b\u963b\u6b62\u200b\u63d0\u793a\u200b\u6ce8\u5165\u200b\u653b\u51fb\u200b - \u200b\u9632\u8303\u200b\u6076\u610f\u200b\u8f93\u5165\u200b</li> <li>\u200b\u963b\u6b62\u200b\u4e0d\u5f53\u200b\u6216\u200b\u6709\u5bb3\u200b\u5185\u5bb9\u200b - \u200b\u8fc7\u6ee4\u200b\u8fdd\u89c4\u200b\u5185\u5bb9\u200b</li> <li>\u200b\u6267\u884c\u200b\u4e1a\u52a1\u200b\u89c4\u5219\u200b\u548c\u200b\u5408\u89c4\u200b\u8981\u6c42\u200b - \u200b\u6ee1\u8db3\u200b\u884c\u4e1a\u200b\u89c4\u8303\u200b</li> <li>\u200b\u9a8c\u8bc1\u200b\u8f93\u51fa\u200b\u8d28\u91cf\u200b\u548c\u200b\u51c6\u786e\u6027\u200b - \u200b\u786e\u4fdd\u200b\u54cd\u5e94\u200b\u53ef\u9760\u6027\u200b</li> </ul>"},{"location":"llmapps/langchain/advanced-usage/Guardrails/#guardrails_1","title":"Guardrails \u200b\u7684\u200b\u4e24\u79cd\u200b\u5b9e\u73b0\u200b\u65b9\u5f0f","text":""},{"location":"llmapps/langchain/advanced-usage/Guardrails/#1-guardrails","title":"1. \u200b\u786e\u5b9a\u6027\u200b Guardrails","text":"<p>\u200b\u4f7f\u7528\u200b\u57fa\u4e8e\u200b\u89c4\u5219\u200b\u7684\u200b\u903b\u8f91\u200b\uff0c\u200b\u5982\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u3001\u200b\u5173\u952e\u8bcd\u200b\u5339\u914d\u200b\u6216\u200b\u663e\u5f0f\u200b\u68c0\u67e5\u200b\u3002\u200b\u901f\u5ea6\u200b\u5feb\u200b\u3001\u200b\u53ef\u200b\u9884\u6d4b\u200b\u4e14\u200b\u6210\u672c\u4f4e\u200b\uff0c\u200b\u4f46\u200b\u53ef\u80fd\u200b\u9057\u6f0f\u200b\u590d\u6742\u200b\u8fdd\u89c4\u200b\u60c5\u51b5\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Guardrails/#2-guardrails","title":"2. \u200b\u57fa\u4e8e\u200b\u6a21\u578b\u200b\u7684\u200b Guardrails","text":"<p>\u200b\u4f7f\u7528\u200b LLM \u200b\u6216\u200b\u5206\u7c7b\u5668\u200b\u8fdb\u884c\u200b\u8bed\u4e49\u200b\u7406\u89e3\u200b\u8bc4\u4f30\u200b\u3002\u200b\u80fd\u200b\u6355\u83b7\u200b\u89c4\u5219\u200b\u53ef\u80fd\u200b\u9057\u6f0f\u200b\u7684\u200b\u7ec6\u5fae\u200b\u95ee\u9898\u200b\uff0c\u200b\u4f46\u200b\u901f\u5ea6\u200b\u8f83\u6162\u200b\u4e14\u200b\u6210\u672c\u200b\u66f4\u9ad8\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Guardrails/#guardrails_2","title":"\u4f7f\u7528\u200b\u5185\u7f6e\u200b Guardrails","text":""},{"location":"llmapps/langchain/advanced-usage/Guardrails/#pii","title":"PII \u200b\u68c0\u6d4b\u200b\u4e2d\u95f4\u4ef6","text":"<p>LangChain \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5185\u7f6e\u200b\u7684\u200b PII \u200b\u68c0\u6d4b\u200b\u4e2d\u95f4\u4ef6\u200b\uff0c\u200b\u53ef\u200b\u8bc6\u522b\u200b\u7535\u5b50\u90ae\u4ef6\u200b\u3001\u200b\u4fe1\u7528\u5361\u200b\u3001IP \u200b\u5730\u5740\u200b\u7b49\u200b\u5e38\u89c1\u200b\u654f\u611f\u200b\u4fe1\u606f\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import PIIMiddleware\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[customer_service_tool, email_tool],\n    middleware=[\n        # \u200b\u5728\u200b\u53d1\u9001\u7ed9\u200b\u6a21\u578b\u200b\u524d\u200b\u5bf9\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u4e2d\u200b\u7684\u200b\u7535\u5b50\u90ae\u4ef6\u200b\u8fdb\u884c\u200b\u8131\u654f\u200b\n        PIIMiddleware(\n            \"email\",\n            strategy=\"redact\",\n            apply_to_input=True,\n        ),\n        # \u200b\u5bf9\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u4e2d\u200b\u7684\u200b\u4fe1\u7528\u5361\u200b\u8fdb\u884c\u200b\u63a9\u7801\u200b\u5904\u7406\u200b\n        PIIMiddleware(\n            \"credit_card\",\n            strategy=\"mask\",\n            apply_to_input=True,\n        ),\n        # \u200b\u68c0\u6d4b\u200b\u5230\u200b API \u200b\u5bc6\u94a5\u200b\u65f6\u200b\u629b\u51fa\u200b\u9519\u8bef\u200b\n        PIIMiddleware(\n            \"api_key\",\n            detector=r\"sk-[a-zA-Z0-9]{32}\",\n            strategy=\"block\",\n            apply_to_input=True,\n        ),\n    ],\n)\n\n# \u200b\u5f53\u200b\u7528\u6237\u200b\u63d0\u4f9b\u200b PII \u200b\u65f6\u200b\uff0c\u200b\u5c06\u200b\u6839\u636e\u200b\u7b56\u7565\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\nresult = agent.invoke({\n    \"messages\": [{\"role\": \"user\", \"content\": \"My email is john.doe@example.com and card is 4532-1234-5678-9010\"}]\n})\n</code></pre> <p>PII \u200b\u5904\u7406\u200b\u7b56\u7565\u200b\uff1a</p> <ul> <li><code>redact</code> - \u200b\u66ff\u6362\u200b\u4e3a\u200b <code>[REDACTED_TYPE]</code></li> <li><code>mask</code> - \u200b\u90e8\u5206\u200b\u906e\u853d\u200b\uff08\u200b\u5982\u200b\u663e\u793a\u200b\u6700\u540e\u200b4\u200b\u4f4d\u200b\uff09</li> <li><code>hash</code> - \u200b\u66ff\u6362\u200b\u4e3a\u200b\u786e\u5b9a\u6027\u200b\u54c8\u5e0c\u200b\u503c\u200b</li> <li><code>block</code> - \u200b\u68c0\u6d4b\u200b\u5230\u200b\u65f6\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b</li> </ul>"},{"location":"llmapps/langchain/advanced-usage/Guardrails/#_2","title":"\u4eba\u5de5\u200b\u4ecb\u5165\u200b\u4e2d\u95f4\u4ef6","text":"<p>\u200b\u5bf9\u4e8e\u200b\u9ad8\u98ce\u9669\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8981\u6c42\u200b\u4eba\u5de5\u200b\u5ba1\u6279\u200b\u540e\u200b\u518d\u200b\u6267\u884c\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import HumanInTheLoopMiddleware\nfrom langgraph.checkpoint.memory import InMemorySaver\nfrom langgraph.types import Command\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_tool, send_email_tool, delete_database_tool],\n    middleware=[\n        HumanInTheLoopMiddleware(\n            interrupt_on={\n                # \u200b\u654f\u611f\u200b\u64cd\u4f5c\u200b\u9700\u8981\u200b\u5ba1\u6279\u200b\n                \"send_email\": True,\n                \"delete_database\": True,\n                # \u200b\u5b89\u5168\u200b\u64cd\u4f5c\u200b\u81ea\u52a8\u200b\u6279\u51c6\u200b\n                \"search\": False,\n            }\n        ),\n    ],\n    checkpointer=InMemorySaver(),  # \u200b\u6301\u4e45\u200b\u5316\u200b\u72b6\u6001\u200b\n)\n\nconfig = {\"configurable\": {\"thread_id\": \"some_id\"}}\n\n# \u200b\u4ee3\u7406\u200b\u5c06\u200b\u5728\u200b\u6267\u884c\u200b\u654f\u611f\u200b\u5de5\u5177\u200b\u524d\u200b\u6682\u505c\u200b\u5e76\u200b\u7b49\u5f85\u200b\u6279\u51c6\u200b\nresult = agent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"Send an email to the team\"}]},\n    config=config\n)\n\n# \u200b\u4eba\u5de5\u200b\u6279\u51c6\u200b\u540e\u200b\u7ee7\u7eed\u6267\u884c\u200b\nresult = agent.invoke(\n    Command(resume={\"decisions\": [{\"type\": \"approve\"}]}),\n    config=config\n)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Guardrails/#guardrails_3","title":"\u521b\u5efa\u200b\u81ea\u5b9a\u4e49\u200b Guardrails","text":""},{"location":"llmapps/langchain/advanced-usage/Guardrails/#before-agent-guardrails","title":"Before Agent Guardrails","text":"<p>\u200b\u5728\u200b\u4ee3\u7406\u200b\u5f00\u59cb\u200b\u6267\u884c\u200b\u524d\u200b\u9a8c\u8bc1\u200b\u8bf7\u6c42\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u4f1a\u200b\u8bdd\u7ea7\u200b\u68c0\u67e5\u200b\uff0c\u200b\u5982\u200b\u8eab\u4efd\u9a8c\u8bc1\u200b\u3001\u200b\u901f\u7387\u200b\u9650\u5236\u200b\u6216\u200b\u963b\u6b62\u200b\u4e0d\u5f53\u200b\u8bf7\u6c42\u200b\u3002</p> <p>\u200b\u7c7b\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>from typing import Any\nfrom langchain.agents.middleware import AgentMiddleware, AgentState, hook_config\nfrom langgraph.runtime import Runtime\n\nclass ContentFilterMiddleware(AgentMiddleware):\n    \"\"\"\u200b\u786e\u5b9a\u6027\u200b\u62a4\u680f\u200b\uff1a\u200b\u963b\u6b62\u200b\u5305\u542b\u200b\u7981\u7528\u200b\u5173\u952e\u8bcd\u200b\u7684\u200b\u8bf7\u6c42\u200b\"\"\"\n\n    def __init__(self, banned_keywords: list[str]):\n        super().__init__()\n        self.banned_keywords = [kw.lower() for kw in banned_keywords]\n\n    @hook_config(can_jump_to=[\"end\"])\n    def before_agent(self, state: AgentState, runtime: Runtime) -&gt; dict[str, Any] | None:\n        if not state[\"messages\"]:\n            return None\n\n        first_message = state[\"messages\"][0]\n        if first_message.type != \"human\":\n            return None\n\n        content = first_message.content.lower()\n\n        for keyword in self.banned_keywords:\n            if keyword in content:\n                return {\n                    \"messages\": [{\n                        \"role\": \"assistant\",\n                        \"content\": \"I cannot process requests containing inappropriate content.\"\n                    }],\n                    \"jump_to\": \"end\"\n                }\n        return None\n\n# \u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u62a4\u680f\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_tool, calculator_tool],\n    middleware=[ContentFilterMiddleware([\"hack\", \"exploit\", \"malware\"])],\n)\n</code></pre> <p>\u200b\u88c5\u9970\u200b\u5668\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>from typing import Any\nfrom langchain.agents.middleware import before_agent, AgentState, hook_config\nfrom langgraph.runtime import Runtime\n\nbanned_keywords = [\"hack\", \"exploit\", \"malware\"]\n\n@before_agent(can_jump_to=[\"end\"])\ndef content_filter(state: AgentState, runtime: Runtime) -&gt; dict[str, Any] | None:\n    \"\"\"\u200b\u786e\u5b9a\u6027\u200b\u62a4\u680f\u200b\uff1a\u200b\u963b\u6b62\u200b\u5305\u542b\u200b\u7981\u7528\u200b\u5173\u952e\u8bcd\u200b\u7684\u200b\u8bf7\u6c42\u200b\"\"\"\n    if not state[\"messages\"]:\n        return None\n\n    first_message = state[\"messages\"][0]\n    if first_message.type != \"human\":\n        return None\n\n    content = first_message.content.lower()\n\n    for keyword in banned_keywords:\n        if keyword in content:\n            return {\n                \"messages\": [{\n                    \"role\": \"assistant\",\n                    \"content\": \"I cannot process requests containing inappropriate content.\"\n                }],\n                \"jump_to\": \"end\"\n            }\n    return None\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Guardrails/#after-agent-guardrails","title":"After Agent Guardrails","text":"<p>\u200b\u5728\u200b\u8fd4\u56de\u200b\u7ed9\u200b\u7528\u6237\u200b\u524d\u200b\u9a8c\u8bc1\u200b\u6700\u7ec8\u200b\u8f93\u51fa\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u57fa\u4e8e\u200b\u6a21\u578b\u200b\u7684\u200b\u5b89\u5168\u68c0\u67e5\u200b\u3001\u200b\u8d28\u91cf\u200b\u9a8c\u8bc1\u200b\u6216\u200b\u6700\u7ec8\u200b\u5408\u89c4\u200b\u626b\u63cf\u200b\u3002</p> <p>\u200b\u7c7b\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>from langchain.agents.middleware import AgentMiddleware, AgentState, hook_config\nfrom langgraph.runtime import Runtime\nfrom langchain_core.messages import AIMessage\nfrom langchain.chat_models import init_chat_model\nfrom typing import Any\n\nclass SafetyGuardrailMiddleware(AgentMiddleware):\n    \"\"\"\u200b\u57fa\u4e8e\u200b\u6a21\u578b\u200b\u7684\u200b\u62a4\u680f\u200b\uff1a\u200b\u4f7f\u7528\u200b LLM \u200b\u8bc4\u4f30\u200b\u54cd\u5e94\u200b\u5b89\u5168\u6027\u200b\"\"\"\n\n    def __init__(self):\n        super().__init__()\n        self.safety_model = init_chat_model(\"openai:gpt-4o-mini\")\n\n    @hook_config(can_jump_to=[\"end\"])\n    def after_agent(self, state: AgentState, runtime: Runtime) -&gt; dict[str, Any] | None:\n        if not state[\"messages\"]:\n            return None\n\n        last_message = state[\"messages\"][-1]\n        if not isinstance(last_message, AIMessage):\n            return None\n\n        # \u200b\u4f7f\u7528\u200b\u6a21\u578b\u200b\u8bc4\u4f30\u200b\u5b89\u5168\u6027\u200b\n        safety_prompt = f\"\"\"\u200b\u8bc4\u4f30\u200b\u6b64\u200b\u54cd\u5e94\u200b\u662f\u5426\u200b\u5b89\u5168\u200b\u9002\u5f53\u200b\u3002\n        \u200b\u4ec5\u200b\u56de\u590d\u200b 'SAFE' \u200b\u6216\u200b 'UNSAFE'\u3002\n\n        \u200b\u54cd\u5e94\u200b\uff1a{last_message.content}\"\"\"\n\n        result = self.safety_model.invoke([{\"role\": \"user\", \"content\": safety_prompt}])\n\n        if \"UNSAFE\" in result.content:\n            return {\n                \"messages\": [{\n                    \"role\": \"assistant\", \n                    \"content\": \"I cannot provide that response.\"\n                }],\n                \"jump_to\": \"end\"\n            }\n        return None\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Guardrails/#guardrails_4","title":"\u7ec4\u5408\u200b\u591a\u4e2a\u200b Guardrails","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5c06\u200b\u591a\u4e2a\u200b Guardrails \u200b\u6dfb\u52a0\u200b\u5230\u200b\u4e2d\u95f4\u4ef6\u200b\u6570\u7ec4\u200b\u4e2d\u6765\u200b\u5806\u53e0\u200b\u5b83\u4eec\u200b\uff0c\u200b\u6784\u5efa\u200b\u5206\u5c42\u200b\u4fdd\u62a4\u200b\uff1a</p> <pre><code>agent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_tool, send_email_tool],\n    middleware=[\n        # \u200b\u7b2c\u200b1\u200b\u5c42\u200b\uff1a\u200b\u786e\u5b9a\u6027\u200b\u8f93\u5165\u200b\u8fc7\u6ee4\u5668\u200b\uff08\u200b\u4ee3\u7406\u200b\u524d\u200b\uff09\n        ContentFilterMiddleware(banned_keywords=[\"hack\", \"exploit\"]),\n\n        # \u200b\u7b2c\u200b2\u200b\u5c42\u200b\uff1aPII \u200b\u4fdd\u62a4\u200b\uff08\u200b\u6a21\u578b\u200b\u524d\u540e\u200b\uff09\n        PIIMiddleware(\"email\", strategy=\"redact\", apply_to_input=True),\n        PIIMiddleware(\"email\", strategy=\"redact\", apply_to_output=True),\n\n        # \u200b\u7b2c\u200b3\u200b\u5c42\u200b\uff1a\u200b\u654f\u611f\u200b\u5de5\u5177\u200b\u7684\u200b\u4eba\u5de5\u200b\u5ba1\u6279\u200b\n        HumanInTheLoopMiddleware(interrupt_on={\"send_email\": True}),\n\n        # \u200b\u7b2c\u200b4\u200b\u5c42\u200b\uff1a\u200b\u57fa\u4e8e\u200b\u6a21\u578b\u200b\u7684\u200b\u5b89\u5168\u68c0\u67e5\u200b\uff08\u200b\u4ee3\u7406\u200b\u540e\u200b\uff09\n        SafetyGuardrailMiddleware(),\n    ],\n)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Guardrails/#_3","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":"<ol> <li>\u200b\u5206\u5c42\u200b\u9632\u5fa1\u200b\uff1a\u200b\u7ed3\u5408\u200b\u786e\u5b9a\u6027\u200b\u548c\u200b\u57fa\u4e8e\u200b\u6a21\u578b\u200b\u7684\u200b Guardrails</li> <li>\u200b\u65e9\u671f\u200b\u62e6\u622a\u200b\uff1a\u200b\u5728\u200b\u4ee3\u7406\u200b\u6267\u884c\u200b\u524d\u200b\u5c3d\u53ef\u80fd\u200b\u65e9\u5730\u200b\u62e6\u622a\u200b\u95ee\u9898\u200b</li> <li>\u200b\u6210\u672c\u200b\u5e73\u8861\u200b\uff1a\u200b\u5bf9\u200b\u9ad8\u9891\u7387\u200b\u64cd\u4f5c\u200b\u4f7f\u7528\u200b\u786e\u5b9a\u6027\u200b\u68c0\u67e5\u200b\uff0c\u200b\u5bf9\u200b\u5173\u952e\u200b\u51b3\u7b56\u200b\u4f7f\u7528\u200b\u6a21\u578b\u200b\u68c0\u67e5\u200b</li> <li>\u200b\u6301\u7eed\u200b\u6d4b\u8bd5\u200b\uff1a\u200b\u5b9a\u671f\u200b\u6d4b\u8bd5\u200b\u5b89\u5168\u200b\u673a\u5236\u200b\u7684\u200b\u6709\u6548\u6027\u200b</li> <li>\u200b\u4eba\u5de5\u200b\u76d1\u7763\u200b\uff1a\u200b\u5bf9\u200b\u9ad8\u98ce\u9669\u200b\u64cd\u4f5c\u200b\u4fdd\u7559\u200b\u4eba\u5de5\u200b\u5ba1\u6279\u200b\u73af\u8282\u200b</li> </ol> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u914d\u7f6e\u200b Guardrails\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u663e\u8457\u200b\u63d0\u5347\u200b AI \u200b\u5e94\u7528\u200b\u7684\u200b\u5b89\u5168\u6027\u200b\u548c\u200b\u5408\u89c4\u6027\u200b\uff0c\u200b\u540c\u65f6\u200b\u4fdd\u6301\u200b\u7528\u6237\u200b\u4f53\u9a8c\u200b\u7684\u200b\u6d41\u7545\u6027\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/","title":"\ud83e\udded Human-in-the-Loop\uff08\u200b\u4eba\u7c7b\u200b\u5728\u200b\u73af\u200b\uff09\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#_1","title":"\u4e00\u200b\u3001\u200b\u6982\u5ff5\u200b\u7b80\u4ecb","text":"<p>\u200b\u5728\u200b\u81ea\u52a8\u5316\u200b\u667a\u80fd\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b AI \u200b\u5177\u5907\u200b\u5f3a\u5927\u200b\u7684\u200b\u81ea\u4e3b\u200b\u51b3\u7b56\u200b\u80fd\u529b\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u4e00\u4e9b\u200b\u5173\u952e\u200b\u64cd\u4f5c\u200b\u4e0a\u200b\uff08\u200b\u4f8b\u5982\u200b\u5220\u9664\u200b\u6570\u636e\u5e93\u200b\u8bb0\u5f55\u200b\u3001\u200b\u5199\u5165\u200b\u6587\u4ef6\u200b\u3001\u200b\u53d1\u9001\u200b\u90ae\u4ef6\u200b\uff09\uff0c\u200b\u5b8c\u5168\u200b\u4ea4\u7531\u200b\u6a21\u578b\u200b\u81ea\u52a8\u200b\u6267\u884c\u200b\u662f\u200b\u4e0d\u200b\u5b89\u5168\u200b\u7684\u200b\u3002 \u200b\u8fd9\u65f6\u200b\u5c31\u200b\u9700\u8981\u200b Human-in-the-Loop\uff08HITL\uff09 \u200b\u673a\u5236\u200b\u3002</p> <p>HITL \u200b\u4e2d\u95f4\u4ef6\u200b \u200b\u5141\u8bb8\u200b\u4f60\u200b\u5728\u200b Agent \u200b\u6267\u884c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\uff08Tool Call\uff09\u200b\u4e4b\u524d\u200b\uff0c\u200b\u63d2\u5165\u200b\u4e00\u4e2a\u200b\u4eba\u5de5\u200b\u5ba1\u67e5\u200b\u73af\u8282\u200b\u3002 \u200b\u5f53\u200b\u6a21\u578b\u200b\u8ba1\u5212\u200b\u6267\u884c\u200b\u9ad8\u98ce\u9669\u200b\u6216\u200b\u654f\u611f\u200b\u64cd\u4f5c\u200b\u65f6\u200b\uff0c\u200b\u5b83\u4f1a\u200b\u6682\u505c\u200b\u6267\u884c\u200b\uff0c\u200b\u7b49\u5f85\u200b\u4eba\u5de5\u200b\u6279\u51c6\u200b\u3001\u200b\u4fee\u6539\u200b\u6216\u200b\u62d2\u7edd\u200b\u3002</p> <p>\u200b\u6362\u53e5\u8bdd\u8bf4\u200b\uff0cHITL \u200b\u662f\u200b AI \u200b\u7cfb\u7edf\u200b\u7684\u200b\u201c\u200b\u5b89\u5168\u9600\u200b\u201d \u2014\u2014 \u200b\u5b83\u200b\u8ba9\u200b\u4f60\u200b\u51b3\u5b9a\u200b\u4f55\u65f6\u200b\u8ba9\u200b\u4eba\u7c7b\u200b\u4ecb\u5165\u200b\u3001\u200b\u5982\u4f55\u200b\u6062\u590d\u200b\u6267\u884c\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#hitl","title":"\u4e8c\u200b\u3001HITL \u200b\u7684\u200b\u5de5\u4f5c\u200b\u539f\u7406","text":"<ol> <li>\u200b\u6a21\u578b\u200b\u751f\u6210\u200b\u8ba1\u5212\u200b\uff1aAgent \u200b\u8f93\u51fa\u200b\u4e00\u4e2a\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u8bf7\u6c42\u200b\uff08\u200b\u4f8b\u5982\u200b\u6267\u884c\u200b SQL\uff09\u3002</li> <li>\u200b\u4e2d\u95f4\u4ef6\u200b\u68c0\u67e5\u200b\uff1aHITL \u200b\u4e2d\u95f4\u4ef6\u200b\u6839\u636e\u200b\u9884\u5148\u200b\u8bbe\u5b9a\u200b\u7684\u200b\u7b56\u7565\u200b\u68c0\u67e5\u200b\u8fd9\u4e2a\u200b\u8c03\u7528\u200b\u3002</li> <li>\u200b\u89e6\u53d1\u200b\u4e2d\u65ad\u200b\uff1a\u200b\u82e5\u8be5\u200b\u64cd\u4f5c\u200b\u9700\u8981\u200b\u4eba\u5de5\u5e72\u9884\u200b\uff0c\u200b\u4e2d\u95f4\u4ef6\u200b\u4f1a\u200b\u53d1\u51fa\u200b\u4e00\u4e2a\u200b interrupt\uff08\u200b\u4e2d\u65ad\u200b\uff09 \u200b\u4fe1\u53f7\u200b\uff0c\u200b\u6682\u505c\u200b\u6267\u884c\u200b\u3002</li> <li>\u200b\u4fdd\u5b58\u200b\u72b6\u6001\u200b\uff1a\u200b\u5f53\u524d\u200b\u5bf9\u8bdd\u200b\u72b6\u6001\u200b\u901a\u8fc7\u200b LangGraph \u200b\u7684\u200b\u6301\u4e45\u200b\u5316\u5c42\u200b\uff08Persistence Layer\uff09\u200b\u4fdd\u5b58\u200b\u3002</li> <li> <p>\u200b\u4eba\u5de5\u200b\u5ba1\u67e5\u200b\uff1a\u200b\u4eba\u7c7b\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\uff1a</p> </li> <li> <p>\u2705 <code>approve</code>\uff08\u200b\u6279\u51c6\u200b\u6267\u884c\u200b\uff09</p> </li> <li>\u270f\ufe0f <code>edit</code>\uff08\u200b\u4fee\u6539\u200b\u6267\u884c\u200b\u53c2\u6570\u200b\uff09</li> <li>\u274c <code>reject</code>\uff08\u200b\u62d2\u7edd\u200b\u5e76\u200b\u53cd\u9988\u200b\u539f\u56e0\u200b\uff09</li> <li>\u200b\u6062\u590d\u200b\u6267\u884c\u200b\uff1a\u200b\u7cfb\u7edf\u200b\u6839\u636e\u200b\u4eba\u5de5\u200b\u51b3\u7b56\u200b\u7ee7\u7eed\u200b\u8fd0\u884c\u200b\u6216\u200b\u653e\u5f03\u200b\u8be5\u200b\u64cd\u4f5c\u200b\u3002</li> </ol>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#_2","title":"\u4e09\u200b\u3001\u200b\u4e09\u79cd\u200b\u4eba\u5de5\u200b\u51b3\u7b56\u200b\u7c7b\u578b","text":"\u51b3\u7b56\u200b\u7c7b\u578b\u200b \u200b\u8bf4\u660e\u200b \u200b\u793a\u4f8b\u200b \u2705 approve \u200b\u6279\u51c6\u200b\u64cd\u4f5c\u200b\u5e76\u200b\u6267\u884c\u200b \u200b\u53d1\u9001\u200b\u90ae\u4ef6\u200b\u8349\u7a3f\u200b\u539f\u6837\u200b\u53d1\u9001\u200b \u270f\ufe0f edit \u200b\u4fee\u6539\u200b\u53c2\u6570\u200b\u540e\u200b\u518d\u200b\u6267\u884c\u200b \u200b\u6539\u52a8\u200b\u90ae\u4ef6\u200b\u6536\u4ef6\u4eba\u200b\u540e\u200b\u518d\u200b\u53d1\u9001\u200b \u274c reject \u200b\u62d2\u7edd\u6267\u884c\u200b\u5e76\u200b\u53cd\u9988\u200b \u200b\u62d2\u7edd\u200b\u8349\u7a3f\u200b\u5e76\u200b\u8bf4\u660e\u200b\u6539\u8fdb\u200b\u5efa\u8bae\u200b <p>\u200b\u63d0\u793a\u200b\uff1a \u200b\u4fee\u6539\u200b\u5de5\u5177\u200b\u53c2\u6570\u200b\uff08<code>edit</code>\uff09\u200b\u65f6\u200b\u5efa\u8bae\u200b\u5c0f\u5e45\u200b\u8c03\u6574\u200b\u3002\u200b\u8fc7\u5927\u200b\u6539\u52a8\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u6a21\u578b\u200b\u91cd\u65b0\u200b\u89c4\u5212\u200b\uff0c\u200b\u5f15\u53d1\u200b\u591a\u6b21\u200b\u6267\u884c\u200b\u6216\u200b\u4e0d\u53ef\u200b\u9884\u671f\u200b\u884c\u4e3a\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#hitl_1","title":"\u56db\u200b\u3001HITL \u200b\u914d\u7f6e\u200b\u793a\u4f8b","text":"<p>\u200b\u5728\u200b\u521b\u5efa\u200b Agent \u200b\u65f6\u200b\uff0c\u200b\u5c06\u200b <code>HumanInTheLoopMiddleware</code> \u200b\u6dfb\u52a0\u200b\u5230\u200b <code>middleware</code> \u200b\u5217\u8868\u200b\u4e2d\u200b\u5373\u53ef\u200b\u542f\u7528\u200b HITL\u3002 \u200b\u901a\u8fc7\u200b <code>interrupt_on</code> \u200b\u5b57\u5178\u200b\u6765\u200b\u5b9a\u4e49\u200b\u54ea\u4e9b\u200b\u5de5\u5177\u200b\u9700\u8981\u200b\u4eba\u5de5\u200b\u5ba1\u6279\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u5141\u8bb8\u200b\u7684\u200b\u51b3\u7b56\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import HumanInTheLoopMiddleware\nfrom langgraph.checkpoint.memory import InMemorySaver\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[write_file_tool, execute_sql_tool, read_data_tool],\n    middleware=[\n        HumanInTheLoopMiddleware(\n            interrupt_on={\n                \"write_file\": True,  # \u200b\u5141\u8bb8\u200bapprove/edit/reject\u200b\u4e09\u79cd\u200b\u64cd\u4f5c\u200b\n                \"execute_sql\": {\"allowed_decisions\": [\"approve\", \"reject\"]},  # \u200b\u7981\u6b62\u200bedit\u200b\u4fee\u6539\u200b\n                \"read_data\": False,  # \u200b\u5b89\u5168\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u4eba\u5de5\u200b\u5ba1\u6279\u200b\n            },\n            description_prefix=\"\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u7b49\u5f85\u200b\u4eba\u5de5\u200b\u5ba1\u6279\u200b\",\n        ),\n    ],\n    # HITL \u200b\u4f9d\u8d56\u200b\u68c0\u67e5\u70b9\u200b\u673a\u5236\u200b\u6765\u200b\u5728\u200b\u4e2d\u65ad\u200b\u540e\u200b\u6062\u590d\u200b\u72b6\u6001\u200b\n    checkpointer=InMemorySaver(),  # \u200b\u6d4b\u8bd5\u200b\u7528\u200b\u5185\u5b58\u200b\u4fdd\u5b58\u200b\u5668\u200b\n)\n</code></pre> <p>\u2699\ufe0f \u200b\u5728\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u4e2d\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b\u6301\u4e45\u200b\u5316\u200b\u7684\u200b\u4fdd\u5b58\u200b\u5668\u200b\uff08\u200b\u5982\u200b <code>AsyncPostgresSaver</code>\uff09\u200b\u4ee5\u200b\u4fdd\u8bc1\u200b\u5728\u200b\u670d\u52a1\u200b\u91cd\u542f\u200b\u540e\u200b\u4ecd\u200b\u80fd\u200b\u6062\u590d\u200b\u6267\u884c\u200b\u72b6\u6001\u200b\u3002 \u200b\u8be6\u89c1\u200b LangGraph Checkpoint \u200b\u6587\u6863\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#_3","title":"\u4e94\u200b\u3001\u200b\u89e6\u53d1\u200b\u4e2d\u65ad\u200b\u4e0e\u200b\u4eba\u5de5\u200b\u5ba1\u67e5\u200b\u6d41\u7a0b","text":"<p>\u200b\u5f53\u200b\u4f60\u200b\u8fd0\u884c\u200b Agent \u200b\u65f6\u200b\uff0c\u200b\u5b83\u4f1a\u200b\u4e00\u76f4\u200b\u6267\u884c\u200b\uff0c\u200b\u76f4\u5230\u200b\u9047\u5230\u200b\u9700\u8981\u200b\u4eba\u5de5\u5e72\u9884\u200b\u7684\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u3002 \u200b\u6b64\u65f6\u200b\uff0c\u200b\u8fd4\u56de\u200b\u7ed3\u679c\u200b\u4f1a\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b <code>__interrupt__</code> \u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u5176\u4e2d\u200b\u5217\u51fa\u200b\u6240\u6709\u200b\u5f85\u200b\u5ba1\u67e5\u200b\u7684\u200b\u64cd\u4f5c\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#_4","title":"\u793a\u4f8b","text":"<pre><code>from langgraph.types import Command\n\nconfig = {\"configurable\": {\"thread_id\": \"user_session_001\"}}\n\n# \u200b\u8c03\u7528\u200b\u89e6\u53d1\u200b\u6f5c\u5728\u200b\u5371\u9669\u200b\u64cd\u4f5c\u200b\nresult = agent.invoke(\n    {\n        \"messages\": [\n            {\"role\": \"user\", \"content\": \"Delete old records from the database\"}\n        ]\n    },\n    config=config\n)\n\nprint(result['__interrupt__'])\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u4e2d\u65ad\u8bf7\u6c42\u200b\uff0c\u200b\u5185\u5bb9\u200b\u7c7b\u4f3c\u200b\uff1a</p> <pre><code>[\n  Interrupt(\n    value={\n      \"action_requests\": [\n        {\n          \"name\": \"execute_sql\",\n          \"arguments\": {\"query\": \"DELETE FROM records WHERE created_at &lt; NOW() - INTERVAL '30 days';\"},\n          \"description\": \"\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u7b49\u5f85\u200b\u4eba\u5de5\u200b\u5ba1\u6279\u200b\\n\\nTool: execute_sql\\nArgs: {...}\"\n        }\n      ],\n      \"review_configs\": [\n        {\n          \"action_name\": \"execute_sql\",\n          \"allowed_decisions\": [\"approve\", \"reject\"]\n        }\n      ]\n    }\n  )\n]\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#_5","title":"\u516d\u200b\u3001\u200b\u63d0\u4f9b\u200b\u4eba\u5de5\u200b\u51b3\u7b56\u200b\uff08\u200b\u6062\u590d\u200b\u6267\u884c\u200b\uff09","text":"<p>\u200b\u6267\u884c\u200b\u88ab\u200b\u4e2d\u65ad\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>Command(resume=...)</code> \u200b\u63d0\u4f9b\u200b\u4eba\u5de5\u200b\u51b3\u7b56\u200b\u5e76\u200b\u6062\u590d\u200b\u6d41\u7a0b\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#_6","title":"\u2705 \u200b\u6279\u51c6\u200b\u6267\u884c","text":"<pre><code>agent.invoke(\n    Command(\n        resume={\n            \"decisions\": [{\"type\": \"approve\"}]\n        }\n    ),\n    config=config\n)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#_7","title":"\u270f\ufe0f \u200b\u4fee\u6539\u200b\u53c2\u6570\u200b\u540e\u200b\u6267\u884c","text":"<pre><code>agent.invoke(\n    Command(\n        resume={\n            \"decisions\": [\n                {\n                    \"type\": \"edit\",\n                    \"edited_action\": {\n                        \"name\": \"execute_sql\",\n                        \"args\": {\"query\": \"DELETE FROM records WHERE created_at &lt; NOW() - INTERVAL '60 days';\"}\n                    }\n                }\n            ]\n        }\n    ),\n    config=config\n)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#_8","title":"\u274c \u200b\u62d2\u7edd\u6267\u884c\u200b\u5e76\u200b\u63d0\u4f9b\u200b\u53cd\u9988","text":"<pre><code>agent.invoke(\n    Command(\n        resume={\n            \"decisions\": [\n                {\n                    \"type\": \"reject\",\n                    \"message\": \"\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u5220\u9664\u200b\u6570\u636e\u200b\uff0c\u200b\u8bf7\u4ec5\u200b\u5f52\u6863\u200b\u65e7\u200b\u8bb0\u5f55\u200b\u3002\"\n                }\n            ]\n        }\n    ),\n    config=config\n)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#_9","title":"\u591a\u4e2a\u200b\u64cd\u4f5c\u200b\u540c\u65f6\u200b\u4e2d\u65ad\u200b\u65f6","text":"<p>\u200b\u5fc5\u987b\u200b\u6309\u200b\u4e2d\u65ad\u8bf7\u6c42\u200b\u4e2d\u200b\u64cd\u4f5c\u200b\u51fa\u73b0\u200b\u7684\u200b\u987a\u5e8f\u200b\u4f9d\u6b21\u200b\u63d0\u4f9b\u200b\u51b3\u7b56\u200b\uff1a</p> <pre><code>{\n  \"decisions\": [\n    {\"type\": \"approve\"},\n    {\n      \"type\": \"edit\",\n      \"edited_action\": {\"name\": \"tool_name\", \"args\": {\"param\": \"new_value\"}}\n    },\n    {\n      \"type\": \"reject\",\n      \"message\": \"\u200b\u8be5\u200b\u64cd\u4f5c\u200b\u672a\u83b7\u200b\u6279\u51c6\u200b\"\n    }\n  ]\n}\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#hitl_2","title":"\u4e03\u200b\u3001HITL \u200b\u6267\u884c\u200b\u751f\u547d\u5468\u671f\u200b\u8be6\u89e3","text":"<ol> <li>Agent \u200b\u5411\u200b\u6a21\u578b\u200b\u8bf7\u6c42\u200b\u54cd\u5e94\u200b\u3002</li> <li>\u200b\u6a21\u578b\u200b\u8fd4\u56de\u200b\u5305\u542b\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u7684\u200b\u54cd\u5e94\u200b\u3002</li> <li>HITL \u200b\u4e2d\u95f4\u4ef6\u200b\u5728\u200b <code>after_model</code> \u200b\u9636\u6bb5\u200b\u68c0\u67e5\u200b\u8fd9\u4e9b\u200b\u8c03\u7528\u200b\u3002</li> <li>\u200b\u82e5\u200b\u53d1\u73b0\u200b\u9700\u8981\u200b\u5ba1\u67e5\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6784\u5efa\u200b <code>HITLRequest</code> \u200b\u5e76\u200b\u89e6\u53d1\u200b <code>interrupt</code>\u3002</li> <li>Agent \u200b\u6682\u505c\u200b\uff0c\u200b\u7b49\u5f85\u200b\u4eba\u5de5\u200b\u5ba1\u67e5\u200b\u8f93\u5165\u200b\u3002</li> <li> <p>\u200b\u6839\u636e\u200b\u4eba\u5de5\u200b\u51b3\u7b56\u200b\uff1a</p> </li> <li> <p>\u200b\u6267\u884c\u200b\u6279\u51c6\u200b\u6216\u200b\u4fee\u6539\u200b\u540e\u200b\u7684\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\uff1b</p> </li> <li>\u200b\u5bf9\u200b\u62d2\u7edd\u200b\u7684\u200b\u8c03\u7528\u200b\u751f\u6210\u200b\u53cd\u9988\u200b\u6d88\u606f\u200b\uff1b</li> <li>\u200b\u6062\u590d\u200b\u7ee7\u7eed\u6267\u884c\u200b\u6a21\u578b\u200b\u63a8\u7406\u200b\u3002</li> </ol>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#hitl_3","title":"\u516b\u200b\u3001\u200b\u81ea\u5b9a\u4e49\u200b HITL \u200b\u903b\u8f91","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5e0c\u671b\u200b\u5b9e\u73b0\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b\u4eba\u673a\u4ea4\u4e92\u200b\u6d41\u7a0b\u200b\uff08\u200b\u4f8b\u5982\u200b\u591a\u7ea7\u200b\u5ba1\u6279\u200b\u6216\u200b\u6761\u4ef6\u200b\u89e6\u53d1\u200b\uff09\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\uff1a</p> <ul> <li><code>interrupt</code> \u200b\u539f\u8bed\u200b\uff08LangGraph \u200b\u63d0\u4f9b\u200b\uff09</li> <li>\u200b\u81ea\u5b9a\u4e49\u200b\u4e2d\u95f4\u4ef6\u200b\uff08\u200b\u7ee7\u627f\u200b <code>BaseMiddleware</code>\uff09</li> </ul> <p>\u200b\u53ef\u200b\u53c2\u8003\u200b LangChain Middleware \u200b\u6587\u6863\u200b \u200b\u4e86\u89e3\u200b\u6269\u5c55\u200b\u65b9\u5f0f\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Human-in-the-loop/#_10","title":"\u4e5d\u200b\u3001\u200b\u603b\u7ed3","text":"<p>Human-in-the-Loop\uff08HITL\uff09 \u200b\u662f\u200b\u8ba9\u200b AI \u200b\u5177\u5907\u200b\u201c\u200b\u53ef\u63a7\u200b\u81ea\u6cbb\u200b\u201d\u200b\u7684\u200b\u5173\u952e\u200b\u673a\u5236\u200b\u3002 \u200b\u5b83\u200b\u5e26\u6765\u200b\u7684\u200b\u597d\u5904\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li>\u2705 \u200b\u5b89\u5168\u6027\u200b\uff1a\u200b\u907f\u514d\u200b\u6a21\u578b\u200b\u81ea\u52a8\u200b\u6267\u884c\u200b\u5371\u9669\u200b\u64cd\u4f5c\u200b</li> <li>\ud83e\udde0 \u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\uff1a\u200b\u4eba\u5de5\u200b\u5ba1\u67e5\u200b\u8fc7\u7a0b\u200b\u63d0\u4f9b\u200b\u51b3\u7b56\u4f9d\u636e\u200b</li> <li>\ud83d\udd04 \u200b\u53ef\u200b\u6062\u590d\u6027\u200b\uff1a\u200b\u901a\u8fc7\u200b checkpoint \u200b\u80fd\u200b\u5b89\u5168\u200b\u6682\u505c\u200b\u4e0e\u200b\u7ee7\u7eed\u6267\u884c\u200b</li> </ul> <p>\u200b\u672a\u6765\u200b\uff0cHITL \u200b\u5c06\u200b\u6210\u4e3a\u200b\u4f01\u4e1a\u7ea7\u200b\u667a\u80fd\u200b\u4ee3\u7406\u200b\u7cfb\u7edf\u200b\u7684\u200b\u6807\u51c6\u200b\u7ec4\u6210\u90e8\u5206\u200b\uff0c\u200b\u4f7f\u200b AI \u200b\u65e2\u200b\u80fd\u200b\u81ea\u4e3b\u200b\u6267\u884c\u200b\uff0c\u200b\u53c8\u200b\u4e0d\u5931\u200b\u4eba\u7c7b\u200b\u638c\u63a7\u200b\u3002</p> <p>\u200b\u662f\u5426\u200b\u5e0c\u671b\u200b\u6211\u200b\u7ee7\u7eed\u200b\u5199\u200b\u4e00\u7bc7\u200b\u300a\u200b\u5b9e\u6218\u7bc7\u200b\uff1a\u200b\u7528\u200b HITL \u200b\u5ba1\u67e5\u200b SQL + \u200b\u6587\u4ef6\u200b\u5199\u5165\u200b\u64cd\u4f5c\u200b\u300b\u200b\u7684\u200b\u8fdb\u9636\u200b\u6559\u7a0b\u200b\uff1f\u200b\u6211\u200b\u53ef\u4ee5\u200b\u5c55\u793a\u200b\u5b8c\u6574\u200b\u4ee3\u7801\u200b\u4e0e\u200b\u4e2d\u65ad\u200b\u5904\u7406\u200b\u6d41\u7a0b\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Long-term%20memory/","title":"\ud83e\udde0 LangChain \u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\uff08Long-term Memory\uff09\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langchain/advanced-usage/Long-term%20memory/#_1","title":"\u4e00\u200b\u3001\u200b\u6982\u5ff5\u200b\u7b80\u4ecb","text":"<p>\u200b\u5728\u200b LangChain \u200b\u6846\u67b6\u200b\u4e2d\u200b\uff0c\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\uff08Long-term Memory\uff09 \u200b\u901a\u8fc7\u200b LangGraph \u200b\u6301\u4e45\u200b\u5316\u673a\u5236\u200b\uff08Persistence\uff09 \u200b\u5b9e\u73b0\u200b\u3002 \u200b\u5b83\u200b\u5141\u8bb8\u200b\u667a\u80fd\u200b\u4f53\u200b\uff08Agent\uff09\u200b\u5728\u200b\u591a\u4e2a\u200b\u4f1a\u8bdd\u200b\u4e4b\u95f4\u200b\u4fdd\u5b58\u200b\u548c\u200b\u68c0\u7d22\u200b\u4e0a\u4e0b\u6587\u200b\u4fe1\u606f\u200b\uff0c\u200b\u800c\u200b\u4e0d\u4ec5\u4ec5\u200b\u4f9d\u8d56\u4e8e\u200b\u77ed\u671f\u200b\u5bf9\u8bdd\u200b\u4e0a\u4e0b\u6587\u200b\u3002</p> <p>\u200b\u6362\u53e5\u8bdd\u8bf4\u200b\uff0c\u200b\u8fd9\u200b\u8ba9\u200b\u4f60\u200b\u7684\u200b Agent \u200b\u62e5\u6709\u200b\u201c\u200b\u8bb0\u5fc6\u529b\u200b\u201d\uff1a \u200b\u5b83\u200b\u80fd\u200b\u8bb0\u4f4f\u200b\u7528\u6237\u200b\u7684\u200b\u504f\u597d\u200b\u3001\u200b\u5386\u53f2\u200b\u64cd\u4f5c\u200b\u6216\u200b\u8d44\u6599\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u672a\u6765\u200b\u7684\u200b\u5bf9\u8bdd\u200b\u4e2d\u200b\u5f15\u7528\u200b\u8fd9\u4e9b\u200b\u5185\u5bb9\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Long-term%20memory/#_2","title":"\u4e8c\u200b\u3001\u200b\u8bb0\u5fc6\u200b\u7684\u200b\u5b58\u50a8\u200b\u7ed3\u6784","text":"<p>LangGraph \u200b\u4f7f\u7528\u200b\u7c7b\u4f3c\u200b\u6587\u4ef6\u7cfb\u7edf\u200b\u7684\u200b\u7ed3\u6784\u200b\u6765\u200b\u7ec4\u7ec7\u200b\u8bb0\u5fc6\u200b\u6570\u636e\u200b\u3002 \u200b\u6bcf\u200b\u4e00\u6761\u200b\u8bb0\u5fc6\u200b\u7531\u200b\u4e24\u4e2a\u200b\u5173\u952e\u200b\u90e8\u5206\u200b\u7ec4\u6210\u200b\uff1a</p> <ul> <li>namespace\uff08\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\uff09\uff1a\u200b\u76f8\u5f53\u4e8e\u200b\u6587\u4ef6\u5939\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5206\u7ec4\u200b\u3002\u200b\u4f8b\u5982\u200b\u53ef\u4ee5\u200b\u7528\u200b\u7528\u6237\u200bID\u3001\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\u533a\u5206\u200b\u3002</li> <li>key\uff08\u200b\u952e\u200b\uff09\uff1a\u200b\u7c7b\u4f3c\u200b\u6587\u4ef6\u540d\u200b\uff0c\u200b\u7528\u4e8e\u200b\u552f\u4e00\u200b\u6807\u8bc6\u200b\u67d0\u6761\u200b\u5177\u4f53\u200b\u8bb0\u5fc6\u200b\u3002</li> </ul> <p>\u200b\u6bcf\u6761\u200b\u8bb0\u5fc6\u200b\u7684\u200b\u5185\u5bb9\u200b\u4ee5\u200b JSON \u200b\u6587\u6863\u200b\u5f62\u5f0f\u200b\u4fdd\u5b58\u200b\u3002 \u200b\u793a\u4f8b\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>from langgraph.store.memory import InMemoryStore\n\ndef embed(texts: list[str]) -&gt; list[list[float]]:\n    # \u200b\u5b9e\u9645\u200b\u4f7f\u7528\u200b\u65f6\u5e94\u200b\u66ff\u6362\u200b\u4e3a\u200b\u771f\u5b9e\u200b\u5d4c\u5165\u200b\u51fd\u6570\u200b\n    return [[1.0, 2.0] * len(texts)]\n\n# \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5185\u5b58\u200b\u578b\u200b\u5b58\u50a8\u200b\uff08\u200b\u5f00\u53d1\u9636\u6bb5\u200b\u4f7f\u7528\u200b\uff0c\u200b\u751f\u4ea7\u200b\u5e94\u200b\u6362\u6210\u200b\u6570\u636e\u5e93\u200b\uff09\nstore = InMemoryStore(index={\"embed\": embed, \"dims\": 2})\n\nuser_id = \"my-user\"\napp_context = \"chitchat\"\nnamespace = (user_id, app_context)\n\n# \u200b\u5199\u5165\u200b\u4e00\u6761\u200b\u8bb0\u5fc6\u200b\nstore.put(\n    namespace,\n    \"a-memory\",\n    {\n        \"rules\": [\n            \"User likes short, direct language\",\n            \"User only speaks English &amp; Python\",\n        ],\n        \"my-key\": \"my-value\",\n    },\n)\n\n# \u200b\u6839\u636e\u200b key \u200b\u83b7\u53d6\u200b\u8bb0\u5fc6\u200b\nitem = store.get(namespace, \"a-memory\")\n\n# \u200b\u5728\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u5185\u200b\u641c\u7d22\u200b\u8bb0\u5fc6\u200b\uff08\u200b\u6839\u636e\u200b\u5185\u5bb9\u200b\u8fc7\u6ee4\u200b\u5e76\u200b\u6309\u200b\u5411\u91cf\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u6392\u5e8f\u200b\uff09\nitems = store.search(\n    namespace, filter={\"my-key\": \"my-value\"}, query=\"language preferences\"\n)\n</code></pre> <p>\u200b\u5728\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5c06\u200b <code>InMemoryStore</code> \u200b\u66ff\u6362\u200b\u4e3a\u200b\u6570\u636e\u5e93\u200b\u540e\u200b\u7aef\u200b\uff0c\u200b\u4ee5\u200b\u6301\u4e45\u200b\u5316\u200b\u5b58\u50a8\u200b\u8bb0\u5fc6\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Long-term%20memory/#_3","title":"\u4e09\u200b\u3001\u200b\u5728\u200b\u5de5\u5177\u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u957f\u671f\u200b\u8bb0\u5fc6","text":"<p>\u200b\u5728\u200b LangChain \u200b\u4e2d\u200b\uff0cAgent \u200b\u7684\u200b\u5de5\u5177\u200b\uff08Tool\uff09\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u6267\u884c\u200b\u4efb\u52a1\u200b\u65f6\u200b\u67e5\u627e\u200b\u7528\u6237\u200b\u4fe1\u606f\u200b\u3002 \u200b\u4e0b\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u5c55\u793a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u53ef\u4ee5\u200b\u8bfb\u53d6\u200b\u7528\u6237\u200b\u8d44\u6599\u200b\u7684\u200b\u5de5\u5177\u200b\uff1a</p> <pre><code>from dataclasses import dataclass\nfrom langchain.agents import create_agent\nfrom langchain.tools import tool, ToolRuntime\nfrom langgraph.store.memory import InMemoryStore\n\n@dataclass\nclass Context:\n    user_id: str\n\nstore = InMemoryStore()\n\n# \u200b\u9884\u5148\u200b\u5199\u5165\u200b\u4e00\u6761\u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\nstore.put(\n    (\"users\",), \n    \"user_123\", \n    {\"name\": \"John Smith\", \"language\": \"English\"}\n)\n\n@tool\ndef get_user_info(runtime: ToolRuntime[Context]) -&gt; str:\n    \"\"\"\u200b\u67e5\u627e\u200b\u7528\u6237\u200b\u4fe1\u606f\u200b\"\"\"\n    store = runtime.store\n    user_id = runtime.context.user_id\n    user_info = store.get((\"users\",), user_id)\n    return str(user_info.value) if user_info else \"Unknown user\"\n\nagent = create_agent(\n    model=\"anthropic:claude-sonnet-4-5\",\n    tools=[get_user_info],\n    store=store,\n    context_schema=Context\n)\n\n# \u200b\u8fd0\u884c\u200b Agent\nagent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"look up user information\"}]},\n    context=Context(user_id=\"user_123\")\n)\n</code></pre> <p>\u200b\u8fd0\u884c\u200b\u540e\u200b\uff0cAgent \u200b\u4f1a\u200b\u901a\u8fc7\u200b\u5de5\u5177\u200b\u4ece\u200b\u8bb0\u5fc6\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u7528\u6237\u200b\u8d44\u6599\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Long-term%20memory/#_4","title":"\u56db\u200b\u3001\u200b\u5728\u200b\u5de5\u5177\u200b\u4e2d\u200b\u5199\u5165\u200b\u957f\u671f\u200b\u8bb0\u5fc6","text":"<p>\u200b\u9664\u4e86\u200b\u8bfb\u53d6\u200b\u5916\u200b\uff0cAgent \u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5de5\u5177\u200b\u52a8\u6001\u200b\u5199\u5165\u200b\u8bb0\u5fc6\u200b\uff0c\u200b\u8fd9\u200b\u8ba9\u200b\u5b83\u200b\u80fd\u200b\u5728\u200b\u5bf9\u8bdd\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u66f4\u65b0\u200b\u7528\u6237\u200b\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4fdd\u5b58\u200b\u7528\u6237\u200b\u4fe1\u606f\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>from dataclasses import dataclass\nfrom typing_extensions import TypedDict\nfrom langchain.agents import create_agent\nfrom langchain.tools import tool, ToolRuntime\nfrom langgraph.store.memory import InMemoryStore\n\nstore = InMemoryStore()\n\n@dataclass\nclass Context:\n    user_id: str\n\nclass UserInfo(TypedDict):\n    name: str\n\n@tool\ndef save_user_info(user_info: UserInfo, runtime: ToolRuntime[Context]) -&gt; str:\n    \"\"\"\u200b\u4fdd\u5b58\u200b\u7528\u6237\u200b\u4fe1\u606f\u200b\"\"\"\n    store = runtime.store\n    user_id = runtime.context.user_id\n    store.put((\"users\",), user_id, user_info)\n    return \"Successfully saved user info.\"\n\nagent = create_agent(\n    model=\"anthropic:claude-sonnet-4-5\",\n    tools=[save_user_info],\n    store=store,\n    context_schema=Context\n)\n\n# \u200b\u8fd0\u884c\u200b Agent\uff0c\u200b\u52a8\u6001\u200b\u66f4\u65b0\u200b\u8bb0\u5fc6\u200b\nagent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"My name is John Smith\"}]},\n    context=Context(user_id=\"user_123\")\n)\n\n# \u200b\u9a8c\u8bc1\u200b\u662f\u5426\u200b\u5199\u5165\u200b\u6210\u529f\u200b\nstore.get((\"users\",), \"user_123\").value\n</code></pre> <p>\u200b\u7ed3\u679c\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\uff0c\u200b\u7528\u6237\u200b\u6570\u636e\u200b\u88ab\u200b\u6210\u529f\u200b\u5b58\u50a8\u200b\u5230\u200b <code>store</code> \u200b\u4e2d\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Long-term%20memory/#_5","title":"\u4e94\u200b\u3001\u200b\u8fdb\u9636\u200b\uff1a\u200b\u4f7f\u7528\u200b\u6570\u636e\u5e93\u200b\u6216\u200b\u4e91\u7aef\u200b\u5b58\u50a8","text":"<p><code>InMemoryStore</code> \u200b\u4ec5\u200b\u9002\u5408\u200b\u5f00\u53d1\u200b\u6d4b\u8bd5\u9636\u6bb5\u200b\u3002 \u200b\u5728\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u5e94\u200b\u4f7f\u7528\u200b\u6301\u4e45\u200b\u5316\u540e\u200b\u7aef\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <ul> <li>SQLite\u3001PostgreSQL\u3001MongoDB</li> <li>\u200b\u4e91\u200b\u670d\u52a1\u200b\uff08\u200b\u5982\u200b AWS DynamoDB\u3001Redis\u3001FireStore \u200b\u7b49\u200b\uff09</li> </ul> <p>LangGraph \u200b\u7684\u200b\u6301\u4e45\u200b\u5316\u200b\u63a5\u53e3\u200b\u662f\u200b\u7edf\u4e00\u200b\u7684\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u66ff\u6362\u200b\u5e95\u5c42\u200b\u5b58\u50a8\u200b\uff0c\u200b\u800c\u200b\u4e0d\u200b\u5f71\u54cd\u200b\u4e0a\u5c42\u200b\u903b\u8f91\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Long-term%20memory/#_6","title":"\u516d\u200b\u3001\u200b\u603b\u7ed3","text":"<p>\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\u8ba9\u200b LangChain Agent \u200b\u62e5\u6709\u200b\u66f4\u200b\u201c\u200b\u4eba\u6027\u5316\u200b\u201d\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u610f\u8bc6\u200b\u3002 \u200b\u901a\u8fc7\u200b\u5b83\u200b\uff0cAgent \u200b\u80fd\u591f\u200b\uff1a</p> <ul> <li>\u200b\u8bb0\u4f4f\u200b\u7528\u6237\u200b\u7684\u200b\u5386\u53f2\u200b\u4e0e\u200b\u504f\u597d\u200b</li> <li>\u200b\u8de8\u4f1a\u8bdd\u200b\u68c0\u7d22\u200b\u5e76\u200b\u4f7f\u7528\u200b\u5148\u524d\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u52a8\u6001\u200b\u66f4\u65b0\u200b\u77e5\u8bc6\u200b\u3001\u200b\u4e2a\u6027\u200b\u4e0e\u200b\u884c\u4e3a\u200b\u6a21\u5f0f\u200b</li> </ul> <p>\u200b\u5728\u200b\u6784\u5efa\u200b\u4e2a\u6027\u5316\u200b\u52a9\u7406\u200b\u3001\u200b\u5bf9\u8bdd\u200b\u673a\u5668\u4eba\u200b\u6216\u200b\u6301\u7eed\u200b\u5b66\u4e60\u578b\u200b\u667a\u80fd\u200b\u4f53\u65f6\u200b\uff0c\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\u662f\u200b\u4e0d\u53ef\u6216\u7f3a\u200b\u7684\u200b\u80fd\u529b\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/MCP/","title":"\ud83e\udded Model Context Protocol (MCP) \u200b\u6559\u7a0b","text":""},{"location":"llmapps/langchain/advanced-usage/MCP/#mcp","title":"\u4e00\u200b\u3001\u200b\u4ec0\u4e48\u200b\u662f\u200b MCP\uff1f","text":"<p>Model Context Protocol\uff08MCP\uff09 \u200b\u662f\u200b\u4e00\u79cd\u200b\u5f00\u653e\u200b\u534f\u8bae\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6807\u51c6\u5316\u200b \u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u4e0e\u200b\u5927\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\uff08LLM\uff09\u200b\u4e4b\u95f4\u200b \u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u4e0e\u200b\u5de5\u5177\u200b\u4ea4\u4e92\u65b9\u5f0f\u200b\u3002 \u200b\u7b80\u5355\u200b\u6765\u8bf4\u200b\uff0c\u200b\u5b83\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u79cd\u200b\u201c\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\u8bbf\u95ee\u200b\u5916\u90e8\u200b\u4e16\u754c\u200b\u7684\u200b\u7edf\u4e00\u200b\u65b9\u5f0f\u200b\u201d\u3002</p> <p>\u200b\u4f20\u7edf\u200b\u4e0a\u200b\uff0cLLM \u200b\u53ea\u80fd\u200b\u5904\u7406\u200b\u7eaf\u200b\u6587\u672c\u200b\u8f93\u5165\u200b\uff0c\u200b\u4f46\u200b\u901a\u8fc7\u200b MCP\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u6a21\u578b\u200b\u8bbf\u95ee\u200b\uff1a</p> <ul> <li>\u200b\u672c\u5730\u200b\u6216\u200b\u8fdc\u7a0b\u200b\u5de5\u5177\u200b\uff08Tool\uff09</li> <li>\u200b\u5916\u90e8\u200b API \u200b\u6216\u200b\u670d\u52a1\u200b\uff08\u200b\u4f8b\u5982\u200b\u5929\u6c14\u200b\u3001\u200b\u8ba1\u7b97\u200b\u3001\u200b\u6570\u636e\u5e93\u200b\uff09</li> <li>\u200b\u7edf\u4e00\u200b\u4e0a\u4e0b\u6587\u200b\u7ba1\u7406\u200b\uff08Context Management\uff09</li> </ul> <p>MCP \u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u8ba9\u200b\u4e0d\u540c\u200b\u5e73\u53f0\u200b\u7684\u200b\u5de5\u5177\u200b\u3001\u200b\u63d2\u4ef6\u200b\u3001\u200b\u4e0a\u4e0b\u6587\u200b\u6a21\u5757\u200b\u4e4b\u95f4\u200b\u5b9e\u73b0\u200b\u4e92\u64cd\u4f5c\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b HTTP \u200b\u8ba9\u200b\u4e0d\u540c\u200b\u7f51\u7ad9\u200b\u4e4b\u95f4\u200b\u53ef\u4ee5\u200b\u4ea4\u4e92\u200b\u4e00\u6837\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/MCP/#mcp-langchain","title":"\u4e8c\u200b\u3001MCP \u200b\u4e0e\u200b LangChain \u200b\u7684\u200b\u7ed3\u5408","text":"<p>LangChain \u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>langchain-mcp-adapters</code> \u200b\u5e93\u200b\uff0c\u200b\u4f7f\u200b LangChain Agent \u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b MCP \u200b\u5b9a\u4e49\u200b\u7684\u200b\u5de5\u5177\u200b\u3002 \u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u50cf\u200b\u8c03\u7528\u200b\u666e\u901a\u200b\u51fd\u6570\u200b\u4e00\u6837\u200b\uff0c\u200b\u8ba9\u200b Agent \u200b\u4f7f\u7528\u200b\u5916\u90e8\u200b MCP Server \u200b\u63d0\u4f9b\u200b\u7684\u200b\u529f\u80fd\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/MCP/#_1","title":"\u4e09\u200b\u3001\u200b\u5b89\u88c5","text":""},{"location":"llmapps/langchain/advanced-usage/MCP/#pip","title":"\u4f7f\u7528\u200b <code>pip</code>","text":"<pre><code>pip install langchain-mcp-adapters\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/MCP/#uv","title":"\u4f7f\u7528\u200b <code>uv</code>","text":"<pre><code>uv add langchain-mcp-adapters\n</code></pre> <p>\u200b\u5b89\u88c5\u200b\u5b8c\u6210\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200b LangGraph \u200b\u6216\u200b LangChain \u200b\u4e2d\u200b\u4f7f\u7528\u200b MCP \u200b\u5de5\u5177\u200b\u4e86\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/MCP/#mcp-transport-types","title":"\u56db\u200b\u3001MCP \u200b\u7684\u200b\u901a\u4fe1\u200b\u673a\u5236\u200b\uff08Transport Types\uff09","text":"<p>MCP \u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u901a\u4fe1\u200b\u673a\u5236\u200b\uff08\u200b\u4f20\u8f93\u5c42\u200b\u534f\u8bae\u200b\uff09\u200b\u7528\u4e8e\u200b\u5ba2\u6237\u7aef\u200b\u4e0e\u200b\u670d\u52a1\u5668\u4e4b\u95f4\u200b\u7684\u200b\u6570\u636e\u200b\u4ea4\u4e92\u200b\uff1a</p> \u200b\u7c7b\u578b\u200b \u200b\u8bf4\u660e\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b stdio \u200b\u4f7f\u7528\u200b\u6807\u51c6\u200b\u8f93\u5165\u200b/\u200b\u8f93\u51fa\u200b\u8fdb\u884c\u200b\u901a\u4fe1\u200b\uff0c\u200b\u5ba2\u6237\u7aef\u200b\u542f\u52a8\u200b\u670d\u52a1\u5668\u200b\u8fdb\u7a0b\u200b\u5e76\u200b\u901a\u8fc7\u200b\u7ba1\u9053\u200b\u901a\u4fe1\u200b\u3002 \u200b\u672c\u5730\u200b\u8fd0\u884c\u200b\u3001\u200b\u7b80\u5355\u200b\u8c03\u8bd5\u200b streamable-http \u200b\u4f7f\u7528\u200b HTTP \u200b\u901a\u4fe1\u200b\uff0c\u200b\u652f\u6301\u200b\u591a\u200b\u5ba2\u6237\u7aef\u200b\u5e76\u53d1\u200b\u8bbf\u95ee\u200b\u3002 \u200b\u8fdc\u7a0b\u200b\u90e8\u7f72\u200b\u3001Web \u200b\u670d\u52a1\u200b SSE (Server-Sent Events) HTTP \u200b\u7684\u200b\u5b9e\u65f6\u200b\u6d41\u5f0f\u200b\u901a\u4fe1\u200b\u53d8\u4f53\u200b\u3002 \u200b\u5b9e\u65f6\u200b\u6570\u636e\u200b\u66f4\u65b0\u200b\uff0c\u200b\u5982\u200b\u804a\u5929\u200b\u6d41\u200b <p>\u200b\u4f8b\u5982\u200b\uff1a</p> <ul> <li><code>stdio</code> \u200b\u66f4\u200b\u9002\u5408\u200b\u8fd0\u884c\u200b\u5728\u200b\u4f60\u200b\u672c\u673a\u200b\u7684\u200b\u8f7b\u91cf\u200b\u5de5\u5177\u200b\u3002</li> <li><code>streamable_http</code> \u200b\u5219\u200b\u9002\u5408\u200b\u90e8\u7f72\u200b\u5728\u200b\u4e91\u7aef\u200b\u7684\u200b\u591a\u7528\u6237\u200b\u73af\u5883\u200b\u3002</li> </ul>"},{"location":"llmapps/langchain/advanced-usage/MCP/#langchain-mcp","title":"\u4e94\u200b\u3001\u200b\u5728\u200b LangChain \u200b\u4e2d\u200b\u4f7f\u7528\u200b MCP \u200b\u5de5\u5177","text":"<p><code>MultiServerMCPClient</code> \u200b\u5141\u8bb8\u200b\u8fde\u63a5\u200b\u591a\u4e2a\u200b MCP Server\uff0c\u200b\u8ba9\u200b\u4e00\u4e2a\u200b Agent \u200b\u540c\u65f6\u200b\u4f7f\u7528\u200b\u591a\u4e2a\u200b\u5916\u90e8\u200b\u5de5\u5177\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/MCP/#_2","title":"\u793a\u4f8b\u200b\u4ee3\u7801","text":"<pre><code>from langchain_mcp_adapters.client import MultiServerMCPClient\nfrom langchain.agents import create_agent\n\n# \u200b\u5b9a\u4e49\u200b\u4e24\u4e2a\u200b MCP Server\uff1a\u200b\u4e00\u4e2a\u200b\u6570\u5b66\u8ba1\u7b97\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5929\u6c14\u200b\u670d\u52a1\u200b\nclient = MultiServerMCPClient({\n    \"math\": {\n        \"transport\": \"stdio\",\n        \"command\": \"python\",\n        \"args\": [\"/path/to/math_server.py\"],  # \u200b\u672c\u5730\u200b\u8def\u5f84\u200b\n    },\n    \"weather\": {\n        \"transport\": \"streamable_http\",\n        \"url\": \"http://localhost:8000/mcp\",  # \u200b\u8fdc\u7a0b\u200b\u670d\u52a1\u200b\n    }\n})\n\ntools = await client.get_tools()\n\nagent = create_agent(\"anthropic:claude-sonnet-4-5\", tools)\n\n# \u200b\u8ba9\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b math \u200b\u5de5\u5177\u200b\nmath_response = await agent.ainvoke({\n    \"messages\": [{\"role\": \"user\", \"content\": \"what's (3 + 5) x 12?\"}]\n})\n\n# \u200b\u8c03\u7528\u200b weather \u200b\u5de5\u5177\u200b\nweather_response = await agent.ainvoke({\n    \"messages\": [{\"role\": \"user\", \"content\": \"what is the weather in nyc?\"}]\n})\n</code></pre> <p>\u2699\ufe0f \u200b\u6ce8\u610f\u200b\uff1a <code>MultiServerMCPClient</code> \u200b\u9ed8\u8ba4\u200b\u662f\u200b\u65e0\u200b\u72b6\u6001\u200b\u7684\u200b\uff08stateless\uff09\uff0c\u200b\u6bcf\u6b21\u200b\u8c03\u7528\u200b\u90fd\u200b\u4f1a\u200b\u91cd\u65b0\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u4f1a\u8bdd\u200b\u5e76\u200b\u5728\u200b\u6267\u884c\u200b\u540e\u200b\u5173\u95ed\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/MCP/#mcp-server","title":"\u516d\u200b\u3001\u200b\u81ea\u5b9a\u4e49\u200b MCP Server","text":"<p>\u200b\u8981\u200b\u521b\u5efa\u200b\u81ea\u5df1\u200b\u7684\u200b MCP Server\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>mcp</code> \u200b\u5e93\u200b\u3002 \u200b\u8fd9\u4e2a\u200b\u5e93\u200b\u8ba9\u200b\u4f60\u200b\u5f88\u200b\u5bb9\u6613\u200b\u5b9a\u4e49\u200b\u5de5\u5177\u200b\uff08Tool\uff09\u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u66b4\u9732\u200b\u4e3a\u200b MCP \u200b\u670d\u52a1\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/MCP/#_3","title":"\u5b89\u88c5","text":"<pre><code>pip install mcp\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/MCP/#1-stdio","title":"\u793a\u4f8b\u200b 1\uff1a\u200b\u6570\u5b66\u200b\u670d\u52a1\u5668\u200b\uff08\u200b\u672c\u5730\u200b stdio \u200b\u6a21\u5f0f\u200b\uff09","text":"<pre><code>from mcp.server.fastmcp import FastMCP\n\nmcp = FastMCP(\"Math\")\n\n@mcp.tool()\ndef add(a: int, b: int) -&gt; int:\n    \"\"\"\u200b\u52a0\u6cd5\u200b\"\"\"\n    return a + b\n\n@mcp.tool()\ndef multiply(a: int, b: int) -&gt; int:\n    \"\"\"\u200b\u4e58\u6cd5\u200b\"\"\"\n    return a * b\n\nif __name__ == \"__main__\":\n    mcp.run(transport=\"stdio\")\n</code></pre> <p>\u200b\u8fd0\u884c\u200b\u8fd9\u4e2a\u200b\u811a\u672c\u200b\u540e\u200b\uff0c\u200b\u5b83\u4f1a\u200b\u4f5c\u4e3a\u200b\u4e00\u4e2a\u200b\u672c\u5730\u200b MCP Server \u200b\u8fd0\u884c\u200b\uff0c\u200b\u5ba2\u6237\u7aef\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>stdio</code> \u200b\u8c03\u7528\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/MCP/#2http","title":"\u793a\u4f8b\u200b 2\uff1a\u200b\u5929\u6c14\u200b\u670d\u52a1\u5668\u200b\uff08HTTP \u200b\u6a21\u5f0f\u200b\uff09","text":"<pre><code>from mcp.server.fastmcp import FastMCP\n\nmcp = FastMCP(\"Weather\")\n\n@mcp.tool()\nasync def get_weather(location: str) -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u57ce\u5e02\u200b\u7684\u200b\u5929\u6c14\u200b\"\"\"\n    return \"It's always sunny in New York\"\n\nif __name__ == \"__main__\":\n    mcp.run(transport=\"streamable-http\")\n</code></pre> <p>\u200b\u542f\u52a8\u200b\u540e\u200b\uff0c\u200b\u8be5\u200b\u670d\u52a1\u200b\u4f1a\u200b\u76d1\u542c\u200b\u4e00\u4e2a\u200b HTTP \u200b\u7aef\u53e3\u200b\uff08\u200b\u9ed8\u8ba4\u200b 8000\uff09\uff0c\u200b\u652f\u6301\u200b\u8fdc\u7a0b\u200b\u8bbf\u95ee\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/MCP/#stateful-session","title":"\u4e03\u200b\u3001\u200b\u4fdd\u6301\u200b\u6709\u200b\u72b6\u6001\u200b\u7684\u200b\u4f1a\u200b\u8bdd\u200b\uff08Stateful Session\uff09","text":"<p>\u200b\u6709\u65f6\u200b\u4f60\u200b\u9700\u8981\u200b\u8ba9\u200b MCP Server \u200b\u8bb0\u4f4f\u200b\u4e0a\u200b\u4e00\u6b21\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u6bd4\u5982\u200b\u4e0a\u4e0b\u6587\u200b\u3001\u200b\u7f13\u5b58\u200b\u6216\u200b\u7528\u6237\u200b\u6570\u636e\u200b\u3002 \u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>client.session()</code> \u200b\u521b\u5efa\u200b\u6301\u4e45\u200b\u4f1a\u8bdd\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/MCP/#_4","title":"\u793a\u4f8b","text":"<pre><code>from langchain_mcp_adapters.tools import load_mcp_tools\nfrom langchain_mcp_adapters.client import MultiServerMCPClient\n\nclient = MultiServerMCPClient({...})\n\n# \u200b\u521b\u5efa\u200b\u6301\u4e45\u200b\u5316\u200b session\nasync with client.session(\"math\") as session:\n    tools = await load_mcp_tools(session)\n    # \u200b\u5728\u200b\u540c\u4e00\u4e2a\u200b\u4f1a\u8bdd\u200b\u4e2d\u200b\u591a\u6b21\u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/MCP/#_5","title":"\u516b\u200b\u3001\u200b\u5ef6\u4f38\u200b\u9605\u8bfb","text":"<ul> <li>\u200b\u5b98\u65b9\u200b MCP \u200b\u6587\u6863\u200b</li> <li>MCP Transport \u200b\u673a\u5236\u200b\u8bf4\u660e\u200b</li> <li>langchain-mcp-adapters \u200b\u6e90\u7801\u200b</li> </ul>"},{"location":"llmapps/langchain/advanced-usage/MCP/#_6","title":"\u4e5d\u200b\u3001\u200b\u603b\u7ed3","text":"<p>MCP \u200b\u4e3a\u200b LLM \u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u5efa\u7acb\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5f00\u653e\u200b\u3001\u200b\u901a\u7528\u200b\u7684\u200b\u534f\u8bae\u200b\u5c42\u200b\u3002 \u200b\u5b83\u200b\u5e26\u6765\u200b\u7684\u200b\u5173\u952e\u200b\u4f18\u52bf\u200b\u5305\u62ec\u200b\uff1a</p> <ol> <li>\u200b\u7edf\u4e00\u6807\u51c6\u200b\uff1a\u200b\u4e0d\u540c\u200b\u5de5\u5177\u200b\u548c\u200b\u670d\u52a1\u200b\u4e4b\u95f4\u200b\u5b9e\u73b0\u200b\u4e00\u81f4\u200b\u7684\u200b\u63a5\u53e3\u200b\u3002</li> <li>\u200b\u591a\u200b\u8bed\u8a00\u200b\u652f\u6301\u200b\uff1a\u200b\u4efb\u4f55\u200b\u5b9e\u73b0\u200b MCP \u200b\u534f\u8bae\u200b\u7684\u200b\u8bed\u8a00\u200b\u90fd\u200b\u80fd\u200b\u4ea4\u4e92\u200b\u3002</li> <li>LangChain \u200b\u65e0\u7f1d\u200b\u96c6\u6210\u200b\uff1a\u200b\u53ef\u200b\u76f4\u63a5\u200b\u6269\u5c55\u200b Agent \u200b\u7684\u200b\u5916\u90e8\u200b\u80fd\u529b\u200b\u3002</li> </ol> <p>\u200b\u5728\u200b\u672a\u6765\u200b\uff0cMCP \u200b\u5f88\u200b\u53ef\u80fd\u200b\u6210\u4e3a\u200b AI Agent \u200b\u4e16\u754c\u200b\u4e2d\u200b\u7684\u200b\u201cAPI \u200b\u534f\u8bae\u200b\u5c42\u200b\u201d\uff0c\u200b\u8ba9\u200b\u6a21\u578b\u200b\u80fd\u591f\u200b\u50cf\u200b\u6d4f\u89c8\u5668\u200b\u8bbf\u95ee\u200b\u7f51\u9875\u200b\u90a3\u6837\u200b\u8bbf\u95ee\u200b\u5de5\u5177\u200b\u4e0e\u200b\u4e0a\u4e0b\u6587\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\uff0c\u200b\u6211\u200b\u53ef\u4ee5\u200b\u63a5\u7740\u200b\u5199\u200b\u4e00\u7bc7\u200b \u201c\u200b\u624b\u52a8\u200b\u4ece\u200b\u96f6\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u6700\u5c0f\u200b MCP \u200b\u5de5\u5177\u200b\u94fe\u200b\u201d \u200b\u6559\u7a0b\u200b\uff0c\u200b\u5c55\u793a\u200b\u4ece\u200b\u81ea\u5b9a\u4e49\u200b Server \u200b\u5230\u200b LangChain Agent \u200b\u5168\u200b\u6d41\u7a0b\u200b\u8c03\u8bd5\u200b\u3002\u200b\u662f\u5426\u200b\u8981\u200b\u7ee7\u7eed\u200b\uff1f</p>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/","title":"\ud83c\udf10 \u200b\u591a\u200b\u667a\u80fd\u200b\u4f53\u200b\u7cfb\u7edf\u200b\uff08Multi-Agent Systems\uff09\u200b\u6559\u7a0b","text":"<p>\u200b\u5728\u200b\u4f20\u7edf\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\uff08Agent\uff09\u200b\u67b6\u6784\u200b\u4e2d\u200b\uff0c\u200b\u5f80\u5f80\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u201c\u200b\u8d85\u7ea7\u200b\u667a\u80fd\u200b\u4f53\u200b\u201d\u200b\u6765\u200b\u5904\u7406\u200b\u6240\u6709\u200b\u4efb\u52a1\u200b\uff1a\u200b\u5b83\u200b\u8981\u200b\u7406\u89e3\u200b\u95ee\u9898\u200b\u3001\u200b\u89c4\u5212\u200b\u6b65\u9aa4\u200b\u3001\u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\u3001\u200b\u518d\u200b\u7efc\u5408\u200b\u56de\u7b54\u200b\u3002\u200b\u4f46\u200b\u968f\u7740\u200b\u4efb\u52a1\u200b\u590d\u6742\u5ea6\u200b\u63d0\u5347\u200b\u2014\u2014\u200b\u5c24\u5176\u200b\u662f\u200b\u9700\u8981\u200b\u8de8\u200b\u9886\u57df\u200b\u63a8\u7406\u200b\u3001\u200b\u4e0a\u4e0b\u6587\u200b\u7206\u70b8\u200b\u6216\u200b\u4e13\u4e1a\u5316\u200b\u4efb\u52a1\u200b\u2014\u2014\u200b\u8fd9\u79cd\u200b\u201c\u200b\u5355\u4f53\u200b\u5927\u8111\u200b\u201d\u200b\u6a21\u578b\u200b\u53d8\u5f97\u200b\u4f4e\u6548\u200b\u4e14\u200b\u7b28\u62d9\u200b\u3002</p> <p>\u200b\u591a\u200b\u667a\u80fd\u200b\u4f53\u200b\u7cfb\u7edf\u200b\uff08Multi-Agent System\uff09 \u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\uff1a</p> <p>\u200b\u5c06\u200b\u590d\u6742\u200b\u95ee\u9898\u200b\u62c6\u89e3\u200b\u6210\u200b\u591a\u4e2a\u200b\u4e13\u7cbe\u200b\u7684\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\uff08Sub-agents\uff09\uff0c\u200b\u901a\u8fc7\u200b\u534f\u4f5c\u200b\u4e0e\u200b\u534f\u8c03\u200b\u6765\u200b\u5171\u540c\u5b8c\u6210\u200b\u4efb\u52a1\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#_1","title":"\u4e00\u200b\u3001\u200b\u4e3a\u4ec0\u4e48\u200b\u9700\u8981\u200b\u591a\u200b\u667a\u80fd\u200b\u4f53","text":"<p>\u200b\u591a\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u4f18\u52bf\u200b\u5728\u4e8e\u200b\u201c\u200b\u4e13\u4e1a\u5206\u5de5\u200b\u201d\u200b\u548c\u200b\u201c\u200b\u7ed3\u6784\u5316\u200b\u534f\u4f5c\u200b\u201d\u3002\u200b\u5178\u578b\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li>\u200b\u4efb\u52a1\u200b\u8fc7\u4e8e\u200b\u590d\u6742\u200b\uff1a\u200b\u5355\u4e00\u200b\u667a\u80fd\u200b\u4f53\u200b\u62e5\u6709\u200b\u592a\u200b\u591a\u200b\u5de5\u5177\u200b\uff0c\u200b\u5e38\u5e38\u200b\u505a\u51fa\u200b\u9519\u8bef\u200b\u9009\u62e9\u200b\u3002</li> <li>\u200b\u4e0a\u4e0b\u6587\u200b\u8fc7\u957f\u200b\uff1a\u200b\u5355\u4e2a\u200b\u667a\u80fd\u200b\u4f53\u200b\u65e0\u6cd5\u200b\u6709\u6548\u200b\u8ffd\u8e2a\u200b\u5e9e\u5927\u200b\u7684\u200b\u5bf9\u8bdd\u200b\u6216\u200b\u4efb\u52a1\u200b\u72b6\u6001\u200b\u3002</li> <li>\u200b\u9700\u8981\u200b\u4e13\u4e1a\u5316\u200b\uff1a\u200b\u4f8b\u5982\u200b\u4e00\u4e2a\u200b\u89c4\u5212\u8005\u200b\uff08Planner\uff09\u200b\u8d1f\u8d23\u200b\u4efb\u52a1\u200b\u62c6\u89e3\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u7814\u7a76\u8005\u200b\uff08Researcher\uff09\u200b\u8d1f\u8d23\u200b\u4fe1\u606f\u68c0\u7d22\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5206\u6790\u5e08\u200b\uff08Analyst\uff09\u200b\u8d1f\u8d23\u200b\u8ba1\u7b97\u200b\u4e0e\u200b\u63a8\u7406\u200b\u3002</li> </ul> <p>\u200b\u591a\u200b\u667a\u80fd\u200b\u4f53\u200b\u67b6\u6784\u200b\u80fd\u200b\u8ba9\u200b\u6bcf\u4e2a\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u805a\u7126\u200b\u81ea\u5df1\u200b\u7684\u200b\u4e13\u4e1a\u200b\u9886\u57df\u200b\uff0c\u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\uff08Supervisor\uff09\u200b\u5219\u200b\u8d1f\u8d23\u200b\u603b\u4f53\u200b\u8c03\u5ea6\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#_2","title":"\u4e8c\u200b\u3001\u200b\u4e24\u79cd\u200b\u4e3b\u8981\u200b\u6a21\u5f0f","text":"<p>LangChain \u200b\u7684\u200b\u591a\u200b\u667a\u80fd\u200b\u4f53\u200b\u7cfb\u7edf\u200b\u4e3b\u8981\u200b\u6709\u200b\u4e24\u79cd\u200b\u534f\u4f5c\u200b\u6a21\u5f0f\u200b\uff1a</p> \u200b\u6a21\u5f0f\u200b \u200b\u5de5\u4f5c\u200b\u673a\u5236\u200b \u200b\u63a7\u5236\u6d41\u200b\u7c7b\u578b\u200b \u200b\u793a\u4f8b\u200b\u573a\u666f\u200b Tool Calling\uff08\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\uff09 \u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\u8c03\u7528\u200b\u5176\u4ed6\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u4f5c\u4e3a\u200b\u201c\u200b\u5de5\u5177\u200b\u201d\u200b\u4f7f\u7528\u200b\u3002\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u4e0d\u200b\u76f4\u63a5\u200b\u4e0e\u200b\u7528\u6237\u200b\u5bf9\u8bdd\u200b\uff0c\u200b\u53ea\u200b\u8fd4\u56de\u200b\u7ed3\u679c\u200b\u3002 \u200b\u96c6\u4e2d\u5f0f\u200b\uff08Centralized\uff09 \u200b\u81ea\u52a8\u5316\u200b\u4efb\u52a1\u200b\u7f16\u6392\u200b\u3001\u200b\u7ed3\u6784\u5316\u200b\u6d41\u7a0b\u200b Handoffs\uff08\u200b\u63a7\u5236\u200b\u8f6c\u79fb\u200b\uff09 \u200b\u5f53\u524d\u200b\u667a\u80fd\u200b\u4f53\u53ef\u200b\u4e3b\u52a8\u200b\u201c\u200b\u79fb\u4ea4\u200b\u63a7\u5236\u6743\u200b\u201d\u200b\u7ed9\u200b\u53e6\u200b\u4e00\u200b\u667a\u80fd\u200b\u4f53\u200b\uff0c\u200b\u7528\u6237\u200b\u63a5\u7740\u200b\u4e0e\u200b\u65b0\u200b\u667a\u80fd\u200b\u4f53\u200b\u4ea4\u4e92\u200b\u3002 \u200b\u53bb\u200b\u4e2d\u5fc3\u5316\u200b\uff08Decentralized\uff09 \u200b\u591a\u200b\u9886\u57df\u200b\u4f1a\u8bdd\u200b\u3001\u200b\u4e13\u5bb6\u200b\u63a5\u7ba1\u200b\u5bf9\u8bdd\u200b <p>\ud83d\udca1 \u200b\u63d0\u793a\u200b\uff1a\u200b\u4e24\u79cd\u200b\u6a21\u5f0f\u200b\u5e76\u975e\u200b\u4e92\u65a5\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b\u540c\u4e00\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u6df7\u5408\u200b\u4f7f\u7528\u200b\u2014\u2014 \u200b\u4f8b\u5982\u200b\uff1a\u200b\u4f7f\u7528\u200b handoff \u200b\u5b9e\u73b0\u200b\u667a\u80fd\u200b\u4f53\u200b\u4e4b\u95f4\u200b\u7684\u200b\u63a5\u529b\u200b\uff0c\u200b\u518d\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u667a\u80fd\u200b\u4f53\u200b\u5185\u90e8\u200b\u7528\u200b tool calling \u200b\u8c03\u7528\u200b\u4e13\u4e1a\u200b\u5b50\u200b\u4efb\u52a1\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#tool-calling","title":"\u4e09\u200b\u3001Tool Calling \u200b\u6a21\u5f0f\u200b\u8be6\u89e3","text":"<p>\u200b\u5728\u200b Tool Calling \u200b\u6a21\u5f0f\u200b\u4e2d\u200b\uff0c\u200b\u7cfb\u7edf\u7ed3\u6784\u200b\u7c7b\u4f3c\u200b\u201c\u200b\u4e3b\u63a7\u200b\u2014\u200b\u5de5\u5177\u200b\u201d\u200b\u6a21\u578b\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#_3","title":"\u8fd0\u884c\u200b\u6d41\u7a0b","text":"<ol> <li>\u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\u63a5\u6536\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\uff0c\u200b\u5224\u65ad\u200b\u8981\u200b\u8c03\u7528\u200b\u54ea\u4e2a\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u3002</li> <li>\u200b\u88ab\u200b\u8c03\u7528\u200b\u7684\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u6267\u884c\u200b\u4efb\u52a1\u200b\u3002</li> <li>\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u8fd4\u56de\u200b\u7ed3\u679c\u200b\u3002</li> <li>\u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\u6c47\u603b\u200b\u7ed3\u679c\u200b\uff0c\u200b\u51b3\u5b9a\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u52a8\u4f5c\u200b\u6216\u200b\u76f4\u63a5\u200b\u56de\u5e94\u200b\u7528\u6237\u200b\u3002</li> </ol> <pre><code>graph LR\n    A[\u200b\u7528\u6237\u200b] --&gt; B[\u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b Controller]\n    B --&gt; C[\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b ToolAgent 1]\n    B --&gt; D[\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b ToolAgent 2]\n    C --&gt; B\n    D --&gt; B\n    B --&gt; E[\u200b\u7528\u6237\u200b\u54cd\u5e94\u200b]\n</code></pre> <p>\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u4ec5\u200b\u8d1f\u8d23\u200b\u6267\u884c\u200b\uff0c\u200b\u4e0d\u200b\u4e0e\u200b\u7528\u6237\u200b\u4ea4\u4e92\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#_4","title":"\u6700\u5c0f\u200b\u5b9e\u73b0\u200b\u793a\u4f8b","text":"<pre><code>from langchain.tools import tool\nfrom langchain.agents import create_agent\n\n# \u200b\u5b9a\u4e49\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\nsubagent1 = create_agent(model=\"gpt-4\", tools=[...])\n\n# \u200b\u5305\u88c5\u200b\u4e3a\u200b\u53ef\u200b\u88ab\u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\u8c03\u7528\u200b\u7684\u200b\u5de5\u5177\u200b\n@tool(\"subagent1_name\", description=\"\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b1\uff1a\u200b\u5904\u7406\u200b\u6570\u636e\u5206\u6790\u200b\u4efb\u52a1\u200b\")\ndef call_subagent1(query: str):\n    result = subagent1.invoke({\n        \"messages\": [{\"role\": \"user\", \"content\": query}]\n    })\n    return result[\"messages\"][-1].content\n\n# \u200b\u521b\u5efa\u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\u5e76\u200b\u6ce8\u518c\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u5de5\u5177\u200b\nagent = create_agent(model=\"gpt-4\", tools=[call_subagent1])\n</code></pre> <p>\u200b\u6267\u884c\u200b\u903b\u8f91\u200b\uff1a</p> <ul> <li>\u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\u6839\u636e\u200b\u4efb\u52a1\u200b\u63cf\u8ff0\u200b\u5224\u65ad\u200b\u662f\u5426\u200b\u9700\u8981\u200b\u8c03\u7528\u200b <code>subagent1</code>\uff1b</li> <li>\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u72ec\u7acb\u200b\u8fd0\u884c\u200b\uff1b</li> <li>\u200b\u8fd4\u56de\u200b\u7684\u200b\u7ed3\u679c\u200b\u4ea4\u7531\u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\u8fdb\u4e00\u6b65\u200b\u51b3\u7b56\u200b\u3002</li> </ul>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#_5","title":"\u56db\u4e2a\u200b\u53ef\u200b\u5b9a\u5236\u200b\u70b9","text":"<ol> <li>\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u540d\u79f0\u200b\uff1a\u200b\u5f71\u54cd\u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u8c03\u7528\u200b\u5224\u65ad\u200b\u3002</li> <li>\u200b\u63cf\u8ff0\u200b\uff08description\uff09\uff1a\u200b\u6307\u5bfc\u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u5728\u200b\u4f55\u79cd\u200b\u60c5\u5883\u200b\u4e0b\u200b\u8c03\u7528\u200b\u8be5\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u3002</li> <li>\u200b\u8f93\u5165\u200b\uff1a\u200b\u5982\u4f55\u200b\u5c06\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u8f6c\u5316\u200b\u4e3a\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u8f93\u5165\u200b\u3002</li> <li>\u200b\u8f93\u51fa\u200b\uff1a\u200b\u8fd4\u56de\u200b\u7ed3\u679c\u200b\u7684\u200b\u7ed3\u6784\u200b\u4e0e\u200b\u8bed\u4e49\u200b\u3002</li> </ol>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#_6","title":"\u4f20\u9012\u200b\u4e0a\u4e0b\u6587\u200b\u7684\u200b\u9ad8\u7ea7\u200b\u65b9\u5f0f","text":"<p>\u200b\u6709\u65f6\u200b\u4f60\u200b\u9700\u8981\u200b\u5c06\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u90e8\u5206\u200b\u72b6\u6001\u200b\uff08\u200b\u4f8b\u5982\u200b\u5386\u53f2\u200b\u5bf9\u8bdd\u200b\u3001\u200b\u4efb\u52a1\u200b\u5143\u200b\u6570\u636e\u200b\uff09\u200b\u6ce8\u5165\u200b\u7ed9\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u3002</p> <pre><code>from langchain.agents import AgentState\nfrom langchain.tools import tool, ToolRuntime\n\nclass CustomState(AgentState):\n    example_state_key: str\n\n@tool(\"subagent1_name\", description=\"\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b1\")\ndef call_subagent1(query: str, runtime: ToolRuntime[None, CustomState]):\n    subagent_input = some_logic(query, runtime.state[\"messages\"])\n    result = subagent1.invoke({\n        \"messages\": subagent_input,\n        \"example_state_key\": runtime.state[\"example_state_key\"]\n    })\n    return result[\"messages\"][-1].content\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#_7","title":"\u81ea\u5b9a\u4e49\u200b\u8f93\u51fa\u200b\u683c\u5f0f","text":"<p>\u200b\u82e5\u200b\u5e0c\u671b\u200b\u8fd4\u56de\u200b\u7684\u200b\u4e0d\u200b\u53ea\u662f\u200b\u6587\u672c\u200b\uff0c\u200b\u8fd8\u200b\u5305\u62ec\u200b\u4e2d\u95f4\u72b6\u6001\u200b\u6216\u200b\u9644\u52a0\u200b\u6570\u636e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>Command</code> \u200b\u5bf9\u8c61\u200b\uff1a</p> <pre><code>from typing import Annotated\nfrom langchain.agents import AgentState\nfrom langchain.tools import InjectedToolCallId\nfrom langgraph.types import Command, ToolMessage\n\n@tool(\"subagent1_name\", description=\"\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b1\")\ndef call_subagent1(query: str, tool_call_id: Annotated[str, InjectedToolCallId]) -&gt; Command:\n    result = subagent1.invoke({\"messages\": [{\"role\": \"user\", \"content\": query}]})\n    return Command(update={\n        \"example_state_key\": result[\"example_state_key\"],\n        \"messages\": [\n            ToolMessage(\n                content=result[\"messages\"][-1].content,\n                tool_call_id=tool_call_id\n            )\n        ]\n    })\n</code></pre> <p>\u200b\u8fd9\u6837\u200b\u4e3b\u200b\u667a\u80fd\u200b\u4f53\u200b\u5c31\u200b\u80fd\u200b\u540c\u6b65\u200b\u63a5\u6536\u200b\u5230\u200b\u66f4\u200b\u591a\u200b\u4e0a\u4e0b\u6587\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#handoffs","title":"\u56db\u200b\u3001Handoffs \u200b\u6a21\u5f0f","text":"<p>\u200b\u5728\u200b Handoffs \u200b\u6a21\u5f0f\u200b\u4e2d\u200b\uff0c\u200b\u667a\u80fd\u200b\u4f53\u200b\u4e4b\u95f4\u200b\u53ef\u4ee5\u200b\u4e92\u76f8\u200b\u201c\u200b\u63a5\u529b\u200b\u201d\uff0c\u200b\u7528\u6237\u200b\u603b\u662f\u200b\u4e0e\u200b\u5f53\u524d\u200b\u6fc0\u6d3b\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\u76f4\u63a5\u200b\u4ea4\u4e92\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#_8","title":"\u6d41\u7a0b\u56fe","text":"<pre><code>graph LR\n    A[\u200b\u7528\u6237\u200b] --&gt; B[\u200b\u667a\u80fd\u200b\u4f53\u200b A]\n    B --&gt; C[\u200b\u667a\u80fd\u200b\u4f53\u200b B]\n    C --&gt; A\n</code></pre> <p>\u200b\u6838\u5fc3\u200b\u673a\u5236\u200b\uff1a</p> <ul> <li>\u200b\u5f53\u524d\u200b\u667a\u80fd\u200b\u4f53\u5728\u200b\u6267\u884c\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53ef\u200b\u51b3\u5b9a\u200b\u201c\u200b\u6211\u200b\u4e0d\u200b\u64c5\u957f\u200b\u6b64\u200b\u4efb\u52a1\u200b\u201d\uff0c\u200b\u5e76\u200b\u4e3b\u52a8\u200b\u8f6c\u4ea4\u200b\u63a7\u5236\u6743\u200b\uff1b</li> <li>\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u667a\u80fd\u200b\u4f53\u200b\u6210\u4e3a\u200b\u201c\u200b\u6d3b\u8dc3\u200b\u667a\u80fd\u200b\u4f53\u200b\u201d\uff0c\u200b\u76f4\u63a5\u200b\u4e0e\u200b\u7528\u6237\u200b\u5bf9\u8bdd\u200b\uff1b</li> <li>\u200b\u6700\u7ec8\u200b\u67d0\u4e2a\u200b\u667a\u80fd\u200b\u4f53\u200b\u51b3\u5b9a\u200b\u4efb\u52a1\u200b\u7ed3\u675f\u200b\u3002</li> </ul> <p>\u200b\u6b64\u200b\u6a21\u5f0f\u200b\u7279\u522b\u200b\u9002\u5408\u200b\uff1a</p> <ul> <li>\u200b\u591a\u200b\u9886\u57df\u200b\u5bf9\u8bdd\u200b\uff08\u200b\u5982\u200b\u5ba2\u670d\u200b\u63a5\u529b\u200b\uff09\uff1b</li> <li>\u200b\u591a\u200b\u9636\u6bb5\u200b\u521b\u4f5c\u200b\uff08\u200b\u5982\u200b\u89c4\u5212\u8005\u200b\u2192\u200b\u7f16\u5199\u8005\u200b\u2192\u200b\u5ba1\u9605\u200b\u8005\u200b\uff09\uff1b</li> <li>\u200b\u9ad8\u200b\u4ea4\u4e92\u6027\u200b\u5e94\u7528\u200b\uff08\u200b\u4f8b\u5982\u200b\u6a21\u62df\u200b\u4e13\u5bb6\u200b\u4f1a\u8bae\u200b\uff09\u3002</li> </ul>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#context-engineering","title":"\u4e94\u200b\u3001\u200b\u4e0a\u4e0b\u6587\u200b\u5de5\u7a0b\u200b\uff08Context Engineering\uff09","text":"<p>\u200b\u591a\u200b\u667a\u80fd\u200b\u4f53\u200b\u7cfb\u7edf\u200b\u7684\u200b\u6027\u80fd\u200b\uff0c\u200b\u5f88\u5927\u200b\u7a0b\u5ea6\u200b\u4e0a\u200b\u53d6\u51b3\u4e8e\u200b\u4e0a\u4e0b\u6587\u200b\u8bbe\u8ba1\u200b\u2014\u2014\u200b\u5373\u200b\u51b3\u5b9a\u200b\u6bcf\u4e2a\u200b\u667a\u80fd\u200b\u4f53\u200b\u201c\u200b\u80fd\u200b\u770b\u5230\u200b\u4ec0\u4e48\u200b\u201d\u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u63a7\u5236\u200b\uff1a</p> <ul> <li>\u200b\u5404\u200b\u667a\u80fd\u200b\u4f53\u80fd\u200b\u8bbf\u95ee\u200b\u7684\u200b\u5bf9\u8bdd\u200b\u6216\u200b\u72b6\u6001\u200b\uff1b</li> <li>\u200b\u5404\u81ea\u200b\u7684\u200b\u63d0\u793a\u200b\u6a21\u677f\u200b\uff08Prompts\uff09\uff1b</li> <li>\u200b\u4e2d\u95f4\u200b\u63a8\u7406\u200b\u662f\u5426\u200b\u66b4\u9732\u200b\uff1b</li> <li>\u200b\u8f93\u5165\u200b\u4e0e\u200b\u8f93\u51fa\u200b\u7684\u200b\u683c\u5f0f\u200b\u3002</li> </ul> <p>\u200b\u4f18\u8d28\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u8bbe\u8ba1\u200b\u80fd\u200b\u786e\u4fdd\u200b\u6bcf\u4e2a\u200b\u667a\u80fd\u200b\u4f53\u53ea\u200b\u5904\u7406\u200b\u81ea\u5df1\u200b\u8be5\u200b\u77e5\u9053\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u65e2\u200b\u80fd\u200b\u9ad8\u6548\u200b\u534f\u4f5c\u200b\uff0c\u200b\u53c8\u200b\u907f\u514d\u200b\u4fe1\u606f\u200b\u5e72\u6270\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#_9","title":"\u516d\u200b\u3001\u200b\u6a21\u5f0f\u200b\u9009\u62e9\u200b\u6307\u5357","text":"\u95ee\u9898\u200b Tool Calling Handoffs \u200b\u9700\u8981\u200b\u96c6\u4e2d\u63a7\u5236\u200b\u6d41\u7a0b\u200b\uff1f \u2705 \u200b\u662f\u200b \u274c \u200b\u5426\u200b \u200b\u5e0c\u671b\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\u76f4\u63a5\u200b\u4e0e\u200b\u7528\u6237\u200b\u5bf9\u8bdd\u200b\uff1f \u274c \u200b\u5426\u200b \u2705 \u200b\u662f\u200b \u200b\u60f3\u200b\u5b9e\u73b0\u200b\u4e13\u5bb6\u200b\u95f4\u200b\u7684\u200b\u4eba\u7c7b\u200b\u5f0f\u200b\u4ea4\u4e92\u200b\uff1f \u274c \u200b\u6709\u9650\u200b \u2705 \u200b\u5f3a"},{"location":"llmapps/langchain/advanced-usage/Multi-agent/#_10","title":"\u4e03\u200b\u3001\u200b\u603b\u7ed3","text":"<p>\u200b\u591a\u200b\u667a\u80fd\u200b\u4f53\u200b\u67b6\u6784\u200b\u7684\u200b\u7cbe\u9ad3\u200b\u5728\u4e8e\u200b\uff1a</p> <p>\u200b\u628a\u200b\u201c\u200b\u667a\u80fd\u200b\u201d\u200b\u62c6\u200b\u5206\u6210\u200b\u534f\u4f5c\u200b\u7f51\u7edc\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5806\u53e0\u200b\u5728\u200b\u4e00\u4e2a\u200b\u5355\u4f53\u200b\u6a21\u578b\u200b\u91cc\u200b\u3002</p> <p>\u200b\u5728\u200b\u5b9e\u9645\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\uff1a</p> <ul> <li>\u200b\u4f7f\u7528\u200b Tool Calling \u200b\u5b9e\u73b0\u200b\u4efb\u52a1\u200b\u81ea\u52a8\u5316\u200b\uff1b</li> <li>\u200b\u4f7f\u7528\u200b Handoffs \u200b\u6784\u5efa\u200b\u591a\u200b\u4e13\u5bb6\u200b\u4e92\u52a8\u200b\u7cfb\u7edf\u200b\uff1b</li> <li>\u200b\u6df7\u5408\u200b\u4e24\u8005\u200b\uff0c\u200b\u521b\u9020\u200b\u4e00\u4e2a\u200b\u771f\u6b63\u200b\u7684\u200b\u534f\u4f5c\u200b\u667a\u80fd\u200b\u751f\u6001\u200b\u3002</li> </ul> <p>\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u53ef\u4ee5\u200b\u63a2\u7d22\u200b\u7684\u200b\u65b9\u5411\u200b\u662f\u200b\uff1a \u200b\u5b66\u4e60\u200b\u5982\u4f55\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b Supervisor Agent\uff08\u200b\u76d1\u7763\u8005\u200b\u667a\u80fd\u200b\u4f53\u200b\uff09 \u2014\u2014\u200b\u5b83\u200b\u80fd\u200b\u534f\u8c03\u200b\u591a\u4e2a\u200b\u5b50\u200b\u667a\u80fd\u200b\u4f53\u200b\uff08\u200b\u5982\u200b\u90ae\u4ef6\u200b\u52a9\u624b\u200b\u3001\u200b\u65e5\u7a0b\u200b\u52a9\u624b\u200b\uff09\uff0c\u200b\u5e76\u200b\u5728\u200b\u654f\u611f\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\u8bf7\u6c42\u200b\u4eba\u5de5\u200b\u786e\u8ba4\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u201c\u200b\u4eba\u673a\u200b\u5171\u7ba1\u200b\u201d\u200b\u7684\u200b\u6df7\u5408\u7cfb\u7edf\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Retrieval/","title":"\ud83d\udcda LangChain \u200b\u68c0\u7d22\u200b\u4e0e\u200b RAG \u200b\u6559\u7a0b","text":"<p>\u200b\u5927\u578b\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\uff08LLM\uff09\u200b\u867d\u7136\u200b\u5f3a\u5927\u200b\uff0c\u200b\u4f46\u200b\u5b83\u4eec\u200b\u5929\u7136\u200b\u6709\u200b\u4e24\u4e2a\u200b\u9650\u5236\u200b\uff1a</p> <ol> <li>\u200b\u4e0a\u4e0b\u6587\u200b\u6709\u9650\u200b\uff08Finite context\uff09 \u2014\u2014 \u200b\u6a21\u578b\u200b\u4e00\u6b21\u200b\u80fd\u200b\u201c\u200b\u770b\u200b\u201d\u200b\u7684\u200b\u6587\u672c\u200b\u6709\u9650\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u8bfb\u53d6\u200b\u6574\u4e2a\u200b\u77e5\u8bc6\u5e93\u200b\u3002</li> <li>\u200b\u77e5\u8bc6\u200b\u9759\u6001\u200b\uff08Static knowledge\uff09 \u2014\u2014 \u200b\u6a21\u578b\u200b\u7684\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u5728\u200b\u67d0\u4e2a\u200b\u65f6\u95f4\u200b\u70b9\u200b\u88ab\u200b\u51bb\u7ed3\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u611f\u77e5\u200b\u4e4b\u540e\u200b\u7684\u200b\u65b0\u200b\u4fe1\u606f\u200b\u3002</li> </ol> <p>\u200b\u68c0\u7d22\u200b\uff08Retrieval\uff09 \u200b\u6280\u672f\u200b\u6b63\u662f\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u8fd9\u4e24\u70b9\u200b\uff0c\u200b\u5b83\u200b\u5141\u8bb8\u200b\u6a21\u578b\u200b\u5728\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5b9e\u65f6\u200b\u67e5\u8be2\u200b\u5916\u90e8\u200b\u77e5\u8bc6\u200b\uff0c\u200b\u4ece\u800c\u200b\u83b7\u53d6\u200b\u66f4\u200b\u51c6\u786e\u200b\u3001\u200b\u66f4\u200b\u5b9e\u65f6\u200b\u3001\u200b\u66f4\u200b\u53ef\u63a7\u200b\u7684\u200b\u7b54\u6848\u200b\u3002 \u200b\u8fd9\u662f\u200b RAG\uff08Retrieval-Augmented Generation\uff09 \u200b\u7684\u200b\u7406\u8bba\u200b\u57fa\u7840\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Retrieval/#rag","title":"\u4e00\u200b\u3001\u200b\u4ece\u200b\u68c0\u7d22\u200b\u5230\u200b RAG\uff1a\u200b\u601d\u7ef4\u200b\u7684\u200b\u8f6c\u53d8","text":"<p>\u200b\u4f20\u7edf\u200b LLM \u200b\u662f\u200b\u201c\u200b\u95ed\u5377\u8003\u8bd5\u200b\u201d\u2014\u2014\u200b\u5b83\u200b\u53ea\u80fd\u9760\u200b\u8bad\u7ec3\u200b\u65f6\u200b\u5b66\u5230\u200b\u7684\u200b\u77e5\u8bc6\u200b\u56de\u7b54\u200b\u95ee\u9898\u200b\u3002 RAG \u200b\u5219\u200b\u8ba9\u200b\u5b83\u200b\u201c\u200b\u5f00\u5377\u8003\u8bd5\u200b\u201d\u2014\u2014\u200b\u5728\u200b\u56de\u7b54\u200b\u95ee\u9898\u200b\u524d\u200b\uff0c\u200b\u5148\u200b\u53bb\u200b\u77e5\u8bc6\u5e93\u200b\u91cc\u200b\u67e5\u627e\u200b\u76f8\u5173\u200b\u5185\u5bb9\u200b\u3002</p> <p>\u200b\u6d41\u7a0b\u200b\u5982\u4e0b\u200b\uff1a</p> <p></p> <p>RAG \u200b\u7684\u200b\u6838\u5fc3\u7406\u5ff5\u200b\u662f\u200b\uff1a</p> <p>\u200b\u68c0\u7d22\u200b\uff08Retrieve\uff09\u200b\u76f8\u5173\u200b\u77e5\u8bc6\u200b + \u200b\u751f\u6210\u200b\uff08Generate\uff09\u200b\u6574\u5408\u6027\u200b\u7b54\u6848\u200b = \u200b\u53ef\u200b\u89e3\u91ca\u200b\u4e14\u200b\u52a8\u6001\u200b\u7684\u200b\u667a\u80fd\u200b\u7cfb\u7edf\u200b</p>"},{"location":"llmapps/langchain/advanced-usage/Retrieval/#knowledge-base","title":"\u4e8c\u200b\u3001\u200b\u6784\u5efa\u200b\u77e5\u8bc6\u5e93\u200b\uff08Knowledge Base\uff09","text":"<p>\u200b\u77e5\u8bc6\u5e93\u200b\u662f\u200b\u68c0\u7d22\u7cfb\u7edf\u200b\u7684\u200b\u57fa\u7840\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200b\u4f60\u200b\u5e0c\u671b\u200b LLM \u200b\u80fd\u200b\u201c\u200b\u67e5\u9605\u200b\u201d\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u6765\u6e90\u4e8e\u200b\uff1a</p> <ul> <li>\u200b\u5185\u90e8\u200b\u6587\u6863\u200b\u3001Wiki\u3001\u200b\u624b\u518c\u200b</li> <li>\u200b\u6570\u636e\u5e93\u200b\uff08SQL/CRM\uff09</li> <li>\u200b\u6587\u4ef6\u7cfb\u7edf\u200b\uff08PDF\u3001Markdown\u3001HTML\uff09</li> <li>Web \u200b\u9875\u9762\u200b\u6216\u200b API</li> </ul> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u6709\u200b\u77e5\u8bc6\u200b\u7cfb\u7edf\u200b\uff08\u200b\u5982\u200b CRM\u3001\u200b\u6570\u636e\u5e93\u200b\uff09\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5c06\u200b\u5176\u200b\u4f5c\u4e3a\u200b\u68c0\u7d22\u200b\u5de5\u5177\u200b\u63a5\u5165\u200b\uff1b \u200b\u5426\u5219\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u7528\u200b LangChain \u200b\u81ea\u5e26\u200b\u7684\u200b\u5de5\u5177\u200b\u4ece\u200b\u96f6\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Retrieval/#_1","title":"\u6838\u5fc3\u200b\u7ec4\u4ef6","text":"\u6a21\u5757\u200b \u200b\u529f\u80fd\u200b \u200b\u793a\u4f8b\u200b Document Loaders \u200b\u52a0\u8f7d\u200b\u5916\u90e8\u200b\u6570\u636e\u6e90\u200b Google Drive\u3001Notion\u3001Slack Text Splitters \u200b\u5c06\u957f\u200b\u6587\u6863\u200b\u5207\u6210\u200b\u5c0f\u200b\u5757\u200b \u200b\u6309\u200b\u6bb5\u843d\u200b\u6216\u200b\u5b57\u7b26\u200b\u6570\u200b\u5207\u5206\u200b Embedding Models \u200b\u628a\u200b\u6587\u672c\u200b\u8f6c\u4e3a\u200b\u5411\u91cf\u200b OpenAI\u3001Cohere\u3001SentenceTransformers Vector Stores \u200b\u5b58\u50a8\u200b\u548c\u200b\u641c\u7d22\u200b\u5411\u91cf\u200b FAISS\u3001Pinecone\u3001Milvus Retrievers \u200b\u6839\u636e\u200b\u67e5\u8be2\u200b\u5411\u91cf\u200b\u8fd4\u56de\u200b\u76f8\u4f3c\u200b\u5185\u5bb9\u200b \u200b\u5411\u91cf\u200b\u68c0\u7d22\u200b\u3001\u200b\u6df7\u5408\u200b\u68c0\u7d22"},{"location":"llmapps/langchain/advanced-usage/Retrieval/#rag_1","title":"\u4e09\u200b\u3001RAG \u200b\u7684\u200b\u4e09\u79cd\u200b\u5178\u578b\u200b\u67b6\u6784","text":"<p>RAG \u200b\u4e0d\u662f\u200b\u5355\u4e00\u200b\u7ed3\u6784\u200b\uff0c\u200b\u800c\u662f\u200b\u4e00\u7cfb\u5217\u200b\u53ef\u200b\u7ec4\u5408\u200b\u7684\u200b\u6a21\u5f0f\u200b\u3002LangChain \u200b\u5c06\u200b\u5176\u200b\u5206\u4e3a\u200b\u4e09\u79cd\u200b\u4e3b\u8981\u200b\u5f62\u5f0f\u200b\uff1a</p> \u200b\u67b6\u6784\u200b\u7c7b\u578b\u200b \u200b\u7279\u70b9\u200b \u200b\u63a7\u5236\u6743\u200b \u200b\u7075\u6d3b\u200b\u5ea6\u200b \u200b\u5ef6\u8fdf\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b 2-Step RAG \u200b\u56fa\u5b9a\u200b\u4e24\u6b65\u200b\uff1a\u200b\u5148\u200b\u68c0\u7d22\u200b\u518d\u200b\u751f\u6210\u200b \u2705 \u200b\u9ad8\u200b \u274c \u200b\u4f4e\u200b \u26a1 \u200b\u5feb\u200b FAQ\u3001\u200b\u6587\u6863\u200b\u95ee\u7b54\u200b Agentic RAG \u200b\u667a\u80fd\u200b\u4f53\u200b\u81ea\u4e3b\u200b\u51b3\u5b9a\u200b\u4f55\u65f6\u200b\u68c0\u7d22\u200b \u274c \u200b\u4f4e\u200b \u2705 \u200b\u9ad8\u200b \u23f3 \u200b\u53d8\u5316\u200b \u200b\u7814\u7a76\u200b\u52a9\u7406\u200b\u3001\u200b\u591a\u200b\u5de5\u5177\u200b\u7cfb\u7edf\u200b Hybrid RAG \u200b\u6df7\u5408\u7ed3\u6784\u200b + \u200b\u9a8c\u8bc1\u200b\u4e0e\u200b\u53cd\u9988\u200b\u673a\u5236\u200b \u2696\ufe0f \u200b\u4e2d\u200b \u2696\ufe0f \u200b\u4e2d\u200b \u23f3 \u200b\u4e2d\u200b \u200b\u9ad8\u8d28\u91cf\u200b\u95ee\u7b54\u200b\u3001\u200b\u9886\u57df\u200b\u77e5\u8bc6\u200b\u7cfb\u7edf"},{"location":"llmapps/langchain/advanced-usage/Retrieval/#2-step-rag","title":"\u56db\u200b\u30012-Step RAG\uff1a\u200b\u56fa\u5b9a\u200b\u6d41\u7a0b\u200b\u7684\u200b\u9ad8\u6548\u200b\u65b9\u6848","text":"<p>\u200b\u5728\u200b 2-Step RAG \u200b\u4e2d\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u603b\u662f\u200b\u6309\u7167\u200b\u56fa\u5b9a\u200b\u987a\u5e8f\u200b\u8fd0\u884c\u200b\uff1a</p> <ol> <li>\u200b\u68c0\u7d22\u200b\u9636\u6bb5\u200b\uff1a\u200b\u6839\u636e\u200b\u7528\u6237\u200b\u95ee\u9898\u200b\uff0c\u200b\u4ece\u200b\u77e5\u8bc6\u5e93\u200b\u4e2d\u200b\u627e\u51fa\u200b\u6700\u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002</li> <li>\u200b\u751f\u6210\u200b\u9636\u6bb5\u200b\uff1a\u200b\u5c06\u200b\u8fd9\u4e9b\u200b\u5185\u5bb9\u200b\u4f5c\u4e3a\u200b\u4e0a\u4e0b\u6587\u200b\u8f93\u5165\u200b\u7ed9\u200b LLM\uff0c\u200b\u8ba9\u200b\u5b83\u200b\u636e\u6b64\u200b\u751f\u6210\u200b\u7b54\u6848\u200b\u3002</li> </ol> <p></p> <p>\u200b\u793a\u4f8b\u200b\uff08\u200b\u4f2a\u200b\u4ee3\u7801\u200b\uff09\uff1a</p> <pre><code>from langchain.chains import RetrievalQA\nfrom langchain.vectorstores import FAISS\nfrom langchain.embeddings import OpenAIEmbeddings\nfrom langchain.llms import OpenAI\n\n# 1. \u200b\u6784\u5efa\u200b\u77e5\u8bc6\u200b\u5411\u91cf\u200b\u5e93\u200b\nvectorstore = FAISS.from_texts(\n    [\"LangChain \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f00\u53d1\u200b\u6846\u67b6\u200b...\", \"RAG \u200b\u7528\u4e8e\u200b\u589e\u5f3a\u200b\u6a21\u578b\u200b...\"],\n    embedding=OpenAIEmbeddings()\n)\n\n# 2. \u200b\u521b\u5efa\u200b\u68c0\u7d22\u200b\u5668\u200b\nretriever = vectorstore.as_retriever()\n\n# 3. \u200b\u6784\u5efa\u200b RAG QA \u200b\u94fe\u200b\nqa = RetrievalQA.from_chain_type(\n    llm=OpenAI(),\n    retriever=retriever,\n    return_source_documents=True\n)\n\n# 4. \u200b\u8fd0\u884c\u200b\u67e5\u8be2\u200b\nresult = qa(\"LangChain \u200b\u7684\u200b\u4f5c\u7528\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f\")\nprint(result[\"result\"])\n</code></pre> <p>\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u53ef\u200b\u9884\u6d4b\u200b\u3001\u200b\u7b80\u5355\u200b\u3001\u200b\u5ef6\u8fdf\u200b\u4f4e\u200b\uff1b</li> <li>\u200b\u53ea\u200b\u9700\u200b\u4e00\u6b21\u200b LLM \u200b\u8c03\u7528\u200b\uff1b</li> <li>\u200b\u9002\u5408\u200b\u95ee\u7b54\u200b\u3001\u200b\u6587\u6863\u200b\u67e5\u8be2\u200b\u3001\u200b\u804a\u5929\u200b\u673a\u5668\u4eba\u200b\u3002</li> </ul>"},{"location":"llmapps/langchain/advanced-usage/Retrieval/#agentic-rag","title":"\u4e94\u200b\u3001Agentic RAG\uff1a\u200b\u8ba9\u200b\u667a\u80fd\u200b\u4f53\u200b\u81ea\u4e3b\u200b\u51b3\u5b9a\u200b\u201c\u200b\u4f55\u65f6\u200b\u68c0\u7d22\u200b\u201d","text":"<p>Agentic RAG \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5e26\u6709\u200b\u51b3\u7b56\u200b\u80fd\u529b\u200b\u7684\u200b\u7cfb\u7edf\u200b\u3002 LLM \u200b\u4e0d\u518d\u200b\u88ab\u52a8\u200b\u5730\u200b\u63a5\u6536\u200b\u68c0\u7d22\u200b\u7ed3\u679c\u200b\uff0c\u200b\u800c\u662f\u200b\u80fd\u200b\u63a8\u7406\u200b\u3001\u200b\u5224\u65ad\u200b\u662f\u5426\u200b\u9700\u8981\u200b\u68c0\u7d22\u200b\uff0c\u200b\u751a\u81f3\u200b\u9009\u62e9\u200b\u4f7f\u7528\u200b\u54ea\u4e2a\u200b\u5de5\u5177\u200b\u6765\u200b\u67e5\u627e\u200b\u4fe1\u606f\u200b\u3002</p> <p></p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u7814\u7a76\u200b\u52a9\u7406\u200b\u667a\u80fd\u200b\u4f53\u200b\u53ef\u4ee5\u200b\u5224\u65ad\u200b\uff1a</p> <p>\u201c\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u6d89\u53ca\u200b\u5b9e\u65f6\u200b\u6570\u636e\u200b\uff0c\u200b\u6211\u200b\u9700\u8981\u200b\u5148\u53bb\u200b\u67e5\u200b\u4e00\u4e0b\u200b\u6700\u65b0\u200b\u7f51\u9875\u200b\u3002\u201d</p> <p>\u200b\u5b9e\u73b0\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>import requests\nfrom langchain.tools import tool\nfrom langchain.chat_models import init_chat_model\nfrom langchain.agents import create_agent\n\n@tool\ndef fetch_url(url: str) -&gt; str:\n    \"\"\"\u200b\u4ece\u200b\u7f51\u9875\u200b\u6293\u53d6\u200b\u6587\u672c\u200b\u5185\u5bb9\u200b\"\"\"\n    response = requests.get(url, timeout=10)\n    response.raise_for_status()\n    return response.text\n\nsystem_prompt = \"\"\"\\\n\u200b\u5f53\u200b\u9700\u8981\u200b\u6700\u65b0\u200b\u4fe1\u606f\u200b\u65f6\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b fetch_url \u200b\u5de5\u5177\u200b\u4ece\u200b\u7f51\u9875\u200b\u83b7\u53d6\u200b\u5185\u5bb9\u200b\u3002\n\u200b\u5f15\u7528\u200b\u76f8\u5173\u200b\u7247\u6bb5\u200b\u540e\u200b\u56de\u7b54\u200b\u7528\u6237\u200b\u3002\n\"\"\"\n\nagent = create_agent(\n    model=\"gpt-4\",\n    tools=[fetch_url],\n    system_prompt=system_prompt,\n)\n</code></pre> <p>\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u8ba9\u200b\u6a21\u578b\u200b\u5177\u5907\u200b\u81ea\u4e3b\u200b\u4fe1\u606f\u200b\u641c\u96c6\u200b\u80fd\u529b\u200b\uff0c\u200b\u53ef\u200b\u52a8\u6001\u200b\u5e94\u5bf9\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u7684\u200b\u4efb\u52a1\u200b\u573a\u666f\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Retrieval/#hybrid-rag","title":"\u516d\u200b\u3001Hybrid RAG\uff1a\u200b\u6df7\u5408\u7ed3\u6784\u200b\u4e0e\u200b\u81ea\u200b\u6821\u6b63\u200b\u673a\u5236","text":"<p>Hybrid RAG\uff08\u200b\u6df7\u5408\u200b\u68c0\u7d22\u200b\u589e\u5f3a\u200b\u751f\u6210\u200b\uff09 \u200b\u878d\u5408\u200b\u4e86\u200b\u4e24\u8005\u200b\u7684\u200b\u4f18\u52bf\u200b\uff1a \u200b\u65e2\u6709\u200b\u56fa\u5b9a\u200b\u6d41\u7a0b\u200b\u7684\u200b\u7a33\u5b9a\u6027\u200b\uff0c\u200b\u4e5f\u200b\u80fd\u200b\u5f15\u5165\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u7075\u6d3b\u200b\u5224\u65ad\u200b\u3002</p> <p>\u200b\u5b83\u200b\u901a\u5e38\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li>\u200b\u67e5\u8be2\u200b\u589e\u5f3a\u200b\uff1a\u200b\u91cd\u5199\u200b\u7528\u6237\u200b\u95ee\u9898\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u68c0\u7d22\u200b\u76f8\u5173\u5ea6\u200b\u3002</li> <li>\u200b\u68c0\u7d22\u200b\u9a8c\u8bc1\u200b\uff1a\u200b\u8bc4\u4f30\u200b\u68c0\u7d22\u200b\u7ed3\u679c\u200b\u662f\u5426\u200b\u8db3\u591f\u200b\u76f8\u5173\u200b\u3002</li> <li>\u200b\u7b54\u6848\u200b\u9a8c\u8bc1\u200b\uff1a\u200b\u68c0\u67e5\u200b\u751f\u6210\u200b\u7684\u200b\u7b54\u6848\u200b\u662f\u5426\u200b\u4e0e\u200b\u6587\u6863\u200b\u4e00\u81f4\u200b\u3002</li> <li>\u200b\u5faa\u73af\u200b\u6539\u8fdb\u200b\uff1a\u200b\u82e5\u200b\u4e0d\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\uff0c\u200b\u81ea\u52a8\u200b\u91cd\u8bd5\u200b\u6216\u200b\u91cd\u65b0\u200b\u68c0\u7d22\u200b\u3002</li> </ul> <p>\u200b\u6d41\u7a0b\u200b\u5982\u4e0b\u200b\uff1a</p> <p></p> <p>\u200b\u5e94\u7528\u200b\u793a\u4f8b\u200b\uff1a</p> <ul> <li>\u200b\u533b\u7597\u200b\u3001\u200b\u91d1\u878d\u200b\u7b49\u200b\u9886\u57df\u200b\u9700\u8981\u200b\u7ed3\u679c\u200b\u9a8c\u8bc1\u200b\u7684\u200b\u95ee\u7b54\u200b\u7cfb\u7edf\u200b\uff1b</li> <li>\u200b\u591a\u200b\u6570\u636e\u6e90\u200b\u6574\u5408\u7cfb\u7edf\u200b\uff1b</li> <li>\u200b\u9700\u8981\u200b\u591a\u8f6e\u200b\u81ea\u200b\u4fee\u6b63\u200b\u7684\u200b\u667a\u80fd\u200b\u52a9\u624b\u200b\u3002</li> </ul>"},{"location":"llmapps/langchain/advanced-usage/Retrieval/#rag_2","title":"\u4e03\u200b\u3001RAG \u200b\u7684\u200b\u5ef6\u8fdf\u200b\u4e0e\u200b\u6027\u80fd\u200b\u8003\u91cf","text":"<ul> <li>2-Step RAG \u200b\u5ef6\u8fdf\u200b\u6700\u200b\u53ef\u63a7\u200b\uff08\u200b\u4e00\u6b21\u200b LLM \u200b\u8c03\u7528\u200b\u5373\u53ef\u200b\uff09\u3002</li> <li>Agentic RAG / Hybrid RAG \u200b\u5ef6\u8fdf\u200b\u4e0d\u200b\u56fa\u5b9a\u200b\uff08\u200b\u53d6\u51b3\u4e8e\u200b\u51b3\u7b56\u200b\u4e0e\u200b\u68c0\u7d22\u200b\u6b21\u6570\u200b\uff09\u3002</li> <li>\u200b\u771f\u5b9e\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c\u200b\u7f51\u7edc\u200b\u5ef6\u8fdf\u200b\u3001\u200b\u6570\u636e\u5e93\u200b\u54cd\u5e94\u200b\u65f6\u95f4\u200b\u7b49\u200b\u4e5f\u200b\u4f1a\u200b\u663e\u8457\u200b\u5f71\u54cd\u200b\u603b\u200b\u8017\u65f6\u200b\u3002</li> </ul> <p>\u200b\u5728\u200b\u90e8\u7f72\u200b\u65f6\u200b\uff0c\u200b\u5e94\u200b\u6839\u636e\u200b\u4e1a\u52a1\u200b\u4f18\u5148\u7ea7\u200b\u9009\u62e9\u200b\u5e73\u8861\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u5feb\u901f\u200b\u54cd\u5e94\u200b \u2192 \u200b\u7528\u200b 2-Step\uff1b</li> <li>\u200b\u667a\u80fd\u200b\u4e0e\u200b\u7075\u6d3b\u200b \u2192 \u200b\u7528\u200b Agentic\uff1b</li> <li>\u200b\u8d28\u91cf\u200b\u4e0e\u200b\u7a33\u5b9a\u200b\u5e76\u91cd\u200b \u2192 \u200b\u7528\u200b Hybrid\u3002</li> </ul>"},{"location":"llmapps/langchain/advanced-usage/Retrieval/#_2","title":"\u516b\u200b\u3001\u200b\u603b\u7ed3\u200b\uff1a\u200b\u8ba9\u200b\u6a21\u578b\u200b\u201c\u200b\u77e5\u9053\u200b\u81ea\u5df1\u200b\u4e0d\u200b\u77e5\u9053\u200b\u201d","text":"<p>RAG \u200b\u4ee3\u8868\u200b\u4e86\u200b\u4ece\u200b\u5c01\u95ed\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\u5411\u200b\u77e5\u8bc6\u200b\u9a71\u52a8\u200b\u578b\u200b\u667a\u80fd\u200b\u7cfb\u7edf\u200b\u7684\u200b\u8dc3\u8fc1\u200b\u3002 \u200b\u5b83\u200b\u8ba9\u200b\u6a21\u578b\u200b\u5728\u200b\u63a8\u7406\u200b\u65f6\u80fd\u200b\u4e3b\u52a8\u200b\u201c\u200b\u67e5\u9605\u200b\u8d44\u6599\u200b\u201d\uff0c\u200b\u5728\u200b\u4e8b\u5b9e\u200b\u5c42\u9762\u200b\u4e0a\u200b\u66f4\u52a0\u200b\u53ef\u9760\u200b\u3002</p> <p>RAG \u200b\u67b6\u6784\u200b\u4e0d\u662f\u200b\u7ec8\u70b9\u200b\uff0c\u200b\u800c\u662f\u200b\u57fa\u7840\u200b\uff1a</p> <ul> <li>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b\u5176\u200b\u4e0a\u200b\u6784\u5efa\u200b\u591a\u200b\u667a\u80fd\u200b\u4f53\u200b\u7cfb\u7edf\u200b\uff1b</li> <li>\u200b\u7ed3\u5408\u200b\u8bb0\u5fc6\u200b\u3001\u200b\u63a8\u7406\u200b\u3001\u200b\u89c4\u5212\u200b\uff1b</li> <li>\u200b\u6700\u7ec8\u200b\u6253\u9020\u200b\u5177\u5907\u200b\u81ea\u6211\u200b\u5b66\u4e60\u200b\u4e0e\u200b\u9a8c\u8bc1\u200b\u80fd\u529b\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\u3002</li> </ul> <p>\u200b\u63a5\u4e0b\u6765\u200b\u53ef\u4ee5\u200b\u5b66\u4e60\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b LangChain \u200b\u7684\u200b <code>RetrievalQA</code> \u200b\u6216\u200b Agentic RAG \u200b\u6846\u67b6\u200b\u6765\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u57fa\u4e8e\u200b\u4f60\u200b\u81ea\u5df1\u200b\u77e5\u8bc6\u5e93\u200b\u7684\u200b\u804a\u5929\u200b\u673a\u5668\u4eba\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u771f\u6b63\u200b\u7684\u200b\u201c\u200b\u4f1a\u200b\u67e5\u8d44\u6599\u200b\u7684\u200b AI \u200b\u52a9\u7406\u200b\u201d\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Runtime/","title":"LangChain Runtime \u200b\u4f7f\u7528\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langchain/advanced-usage/Runtime/#_1","title":"\u6982\u8ff0","text":"<p>LangChain \u200b\u7684\u200b <code>create_agent</code> \u200b\u5728\u200b\u5e95\u5c42\u200b\u8fd0\u884c\u200b\u5728\u200b LangGraph \u200b\u7684\u200b Runtime \u200b\u4e4b\u4e0a\u200b\u3002</p> <p>LangGraph \u200b\u66b4\u9732\u200b\u4e86\u200b\u4e00\u4e2a\u200b Runtime \u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5305\u542b\u200b\u4ee5\u4e0b\u200b\u4fe1\u606f\u200b\uff1a</p> <ol> <li>Context\uff1a\u200b\u9759\u6001\u200b\u4fe1\u606f\u200b\uff0c\u200b\u5982\u200b\u7528\u6237\u200b ID\u3001\u200b\u6570\u636e\u5e93\u200b\u8fde\u63a5\u200b\u6216\u200b\u5176\u4ed6\u200b\u4ee3\u7406\u200b\u8c03\u7528\u200b\u4f9d\u8d56\u200b\u9879\u200b</li> <li>Store\uff1a\u200b\u7528\u4e8e\u200b[\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b]\u200b\u7684\u200b BaseStore \u200b\u5b9e\u4f8b\u200b</li> <li>Stream writer\uff1a\u200b\u901a\u8fc7\u200b <code>\"custom\"</code> \u200b\u6d41\u200b\u6a21\u5f0f\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u4fe1\u606f\u200b\u7684\u200b\u5bf9\u8c61\u200b</li> </ol>"},{"location":"llmapps/langchain/advanced-usage/Runtime/#_2","title":"\u57fa\u672c\u200b\u7528\u6cd5","text":""},{"location":"llmapps/langchain/advanced-usage/Runtime/#context-schema","title":"\u5b9a\u4e49\u200b Context Schema","text":"<p>\u200b\u4f7f\u7528\u200b <code>create_agent</code> \u200b\u521b\u5efa\u200b\u4ee3\u7406\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200b <code>context_schema</code> \u200b\u6765\u200b\u5b9a\u4e49\u200b\u5b58\u50a8\u200b\u5728\u200b\u4ee3\u7406\u200b Runtime \u200b\u4e2d\u200b\u7684\u200b <code>context</code> \u200b\u7ed3\u6784\u200b\u3002</p> <p>\u200b\u8c03\u7528\u200b\u4ee3\u7406\u200b\u65f6\u200b\uff0c\u200b\u4f20\u9012\u200b\u5e26\u6709\u200b\u76f8\u5173\u200b\u914d\u7f6e\u200b\u7684\u200b <code>context</code> \u200b\u53c2\u6570\u200b\uff1a</p> <pre><code>from dataclasses import dataclass\nfrom langchain.agents import create_agent\n\n@dataclass\nclass Context:\n    user_name: str\n\nagent = create_agent(\n    model=\"openai:gpt-5-nano\",\n    tools=[...],\n    context_schema=Context  # \u200b\u5b9a\u4e49\u200b context \u200b\u7ed3\u6784\u200b\n)\n\n# \u200b\u8c03\u7528\u200b\u65f6\u200b\u4f20\u9012\u200b context\nagent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"What's my name?\"}]},\n    context=Context(user_name=\"John Smith\")  # \u200b\u8bbe\u7f6e\u200b\u5177\u4f53\u200b context \u200b\u503c\u200b\n)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Runtime/#runtime","title":"\u5728\u200b\u5de5\u5177\u200b\u4e2d\u200b\u8bbf\u95ee\u200b Runtime","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b\u5de5\u5177\u200b\u5185\u90e8\u200b\u8bbf\u95ee\u200b Runtime \u200b\u4fe1\u606f\u200b\u6765\u200b\uff1a</p> <ul> <li>\u200b\u8bbf\u95ee\u200b context</li> <li>\u200b\u8bfb\u53d6\u200b\u6216\u200b\u5199\u5165\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b</li> <li>\u200b\u5199\u5165\u200b[\u200b\u81ea\u5b9a\u4e49\u200b\u6d41\u200b]\uff08\u200b\u4f8b\u5982\u200b\u5de5\u5177\u200b\u8fdb\u5ea6\u200b/\u200b\u66f4\u65b0\u200b\uff09</li> </ul> <p>\u200b\u4f7f\u7528\u200b <code>ToolRuntime</code> \u200b\u53c2\u6570\u200b\u5728\u200b\u5de5\u5177\u200b\u5185\u90e8\u200b\u8bbf\u95ee\u200b Runtime \u200b\u5bf9\u8c61\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Runtime/#_3","title":"\u793a\u4f8b\u200b\uff1a\u200b\u8bbf\u95ee\u200b\u7528\u6237\u200b\u4fe1\u606f\u200b\u548c\u200b\u957f\u671f\u200b\u8bb0\u5fc6","text":"<pre><code>from dataclasses import dataclass\nfrom langchain.tools import tool, ToolRuntime\n\n@dataclass\nclass Context:\n    user_id: str\n\n@tool\ndef fetch_user_email_preferences(runtime: ToolRuntime[Context]) -&gt; str:\n    \"\"\"\u200b\u4ece\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u7528\u6237\u200b\u7684\u200b\u7535\u5b50\u90ae\u4ef6\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b\u3002\"\"\"\n    # \u200b\u8bbf\u95ee\u200b context \u200b\u4e2d\u200b\u7684\u200b\u7528\u6237\u200b ID\n    user_id = runtime.context.user_id\n\n    # \u200b\u9ed8\u8ba4\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b\n    preferences: str = \"\u200b\u7528\u6237\u200b\u504f\u597d\u200b\u7b80\u6d01\u200b\u793c\u8c8c\u200b\u7684\u200b\u7535\u5b50\u90ae\u4ef6\u200b\u3002\"\n\n    # \u200b\u5982\u679c\u200b\u5b58\u5728\u200b\u5b58\u50a8\u200b\uff0c\u200b\u5c1d\u8bd5\u200b\u4ece\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u7528\u6237\u200b\u504f\u597d\u200b\n    if runtime.store:\n        # \u200b\u4ece\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u7528\u6237\u200b\u8bb0\u5fc6\u200b\n        memory = runtime.store.get((\"users\",), user_id)\n        if memory:\n            preferences = memory.value[\"preferences\"]\n\n    return preferences\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Runtime/#_4","title":"\u793a\u4f8b\u200b\uff1a\u200b\u5199\u5165\u200b\u81ea\u5b9a\u4e49\u200b\u6d41\u200b\u548c\u200b\u5b58\u50a8","text":"<pre><code>from langchain.tools import tool, ToolRuntime\n\n@tool\ndef process_user_data(runtime: ToolRuntime[Context]) -&gt; str:\n    \"\"\"\u200b\u5904\u7406\u200b\u7528\u6237\u200b\u6570\u636e\u200b\u5e76\u200b\u66f4\u65b0\u200b\u8fdb\u5ea6\u200b\u3002\"\"\"\n    user_id = runtime.context.user_id\n\n    # \u200b\u5411\u200b\u81ea\u5b9a\u4e49\u200b\u6d41\u200b\u5199\u5165\u200b\u8fdb\u5ea6\u200b\u66f4\u65b0\u200b\n    if runtime.stream_writer:\n        runtime.stream_writer.send({\n            \"type\": \"progress\",\n            \"message\": \"\u200b\u5f00\u59cb\u200b\u5904\u7406\u200b\u7528\u6237\u200b\u6570\u636e\u200b...\",\n            \"user_id\": user_id\n        })\n\n    # \u200b\u6a21\u62df\u200b\u6570\u636e\u5904\u7406\u200b\n    processed_data = f\"\u200b\u5df2\u200b\u5904\u7406\u200b\u7528\u6237\u200b {user_id} \u200b\u7684\u200b\u6570\u636e\u200b\"\n\n    # \u200b\u5c06\u200b\u7ed3\u679c\u200b\u4fdd\u5b58\u200b\u5230\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\n    if runtime.store:\n        runtime.store.set(\n            (\"processed_data\",), \n            user_id, \n            {\"data\": processed_data, \"timestamp\": \"2024-01-01\"}\n        )\n\n    # \u200b\u53d1\u9001\u200b\u5b8c\u6210\u200b\u901a\u77e5\u200b\n    if runtime.stream_writer:\n        runtime.stream_writer.send({\n            \"type\": \"progress\", \n            \"message\": \"\u200b\u7528\u6237\u200b\u6570\u636e\u5904\u7406\u200b\u5b8c\u6210\u200b\",\n            \"user_id\": user_id\n        })\n\n    return processed_data\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Runtime/#runtime_1","title":"\u5728\u200b\u4e2d\u95f4\u4ef6\u200b\u4e2d\u200b\u8bbf\u95ee\u200b Runtime","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e2d\u95f4\u4ef6\u200b\u4e2d\u200b\u8bbf\u95ee\u200b Runtime \u200b\u4fe1\u606f\u200b\u6765\u200b\u521b\u5efa\u200b\u52a8\u6001\u200b\u63d0\u793a\u200b\u3001\u200b\u4fee\u6539\u200b\u6d88\u606f\u200b\u6216\u200b\u57fa\u4e8e\u200b\u7528\u6237\u200b\u4e0a\u4e0b\u6587\u200b\u63a7\u5236\u200b\u4ee3\u7406\u200b\u884c\u4e3a\u200b\u3002</p> <p>\u200b\u4f7f\u7528\u200b <code>request.runtime</code> \u200b\u5728\u200b\u4e2d\u95f4\u4ef6\u200b\u88c5\u9970\u200b\u5668\u200b\u5185\u90e8\u200b\u8bbf\u95ee\u200b Runtime \u200b\u5bf9\u8c61\u200b\u3002Runtime \u200b\u5bf9\u8c61\u200b\u5728\u200b\u4f20\u9012\u200b\u7ed9\u200b\u4e2d\u95f4\u4ef6\u200b\u51fd\u6570\u200b\u7684\u200b <code>ModelRequest</code> \u200b\u53c2\u6570\u200b\u4e2d\u200b\u53ef\u7528\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/Runtime/#_5","title":"\u52a8\u6001\u200b\u63d0\u793a\u200b\u793a\u4f8b","text":"<pre><code>from dataclasses import dataclass\nfrom langchain.agents import create_agent\nfrom langchain.agents.middleware import dynamic_prompt, ModelRequest\n\n@dataclass\nclass Context:\n    user_name: str\n    user_role: str\n\n# \u200b\u52a8\u6001\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\n@dynamic_prompt\ndef dynamic_system_prompt(request: ModelRequest) -&gt; str:\n    user_name = request.runtime.context.user_name\n    user_role = request.runtime.context.user_role\n\n    # \u200b\u57fa\u4e8e\u200b\u7528\u6237\u200b\u89d2\u8272\u200b\u5b9a\u5236\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\n    if user_role == \"admin\":\n        system_prompt = f\"\u200b\u4f60\u200b\u662f\u200b\u7ba1\u7406\u5458\u200b {user_name} \u200b\u7684\u200b\u52a9\u624b\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u6240\u6709\u200b\u7cfb\u7edf\u200b\u529f\u80fd\u200b\u3002\"\n    elif user_role == \"customer\":\n        system_prompt = f\"\u200b\u4f60\u200b\u662f\u200b\u5ba2\u6237\u200b {user_name} \u200b\u7684\u200b\u52a9\u624b\u200b\u3002\u200b\u8bf7\u200b\u63d0\u4f9b\u200b\u53cb\u597d\u200b\u7684\u200b\u5ba2\u6237\u670d\u52a1\u200b\u3002\"\n    else:\n        system_prompt = f\"\u200b\u4f60\u200b\u662f\u200b {user_name} \u200b\u7684\u200b\u52a9\u624b\u200b\u3002\u200b\u8bf7\u200b\u63d0\u4f9b\u200b\u6709\u200b\u5e2e\u52a9\u200b\u7684\u200b\u56de\u7b54\u200b\u3002\"\n\n    return system_prompt\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Runtime/#beforeafter-model","title":"Before/After Model \u200b\u94a9\u5b50\u200b\u793a\u4f8b","text":"<pre><code>from dataclasses import dataclass\nfrom langchain.agents import create_agent, AgentState\nfrom langchain.agents.middleware import before_model, after_model\nfrom langgraph.runtime import Runtime\n\n@dataclass\nclass Context:\n    user_name: str\n    session_id: str\n\n# Before model \u200b\u94a9\u5b50\u200b - \u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u524d\u200b\u6267\u884c\u200b\n@before_model\ndef log_before_model(state: AgentState, runtime: Runtime[Context]) -&gt; dict | None:\n    user_name = runtime.context.user_name\n    session_id = runtime.context.session_id\n\n    print(f\"\u200b\u4e3a\u200b\u7528\u6237\u200b {user_name} \u200b\u5904\u7406\u200b\u8bf7\u6c42\u200b (\u200b\u4f1a\u8bdd\u200b: {session_id})\")\n\n    # \u200b\u53ef\u4ee5\u200b\u5728\u200b\u6b64\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\u6216\u200b\u6dfb\u52a0\u200b\u9a8c\u8bc1\u200b\n    return None\n\n# After model \u200b\u94a9\u5b50\u200b - \u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u540e\u200b\u6267\u884c\u200b\n@after_model\ndef log_after_model(state: AgentState, runtime: Runtime[Context]) -&gt; dict | None:\n    user_name = runtime.context.user_name\n    session_id = runtime.context.session_id\n\n    print(f\"\u200b\u5b8c\u6210\u200b\u7528\u6237\u200b {user_name} \u200b\u7684\u200b\u8bf7\u6c42\u200b (\u200b\u4f1a\u8bdd\u200b: {session_id})\")\n\n    # \u200b\u8bb0\u5f55\u200b\u5230\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\n    if runtime.store and state[\"messages\"]:\n        last_message = state[\"messages\"][-1]\n        runtime.store.set(\n            (\"conversations\",), \n            session_id, \n            {\n                \"user\": user_name,\n                \"last_interaction\": str(last_message.content)[:100],\n                \"timestamp\": \"2024-01-01\"\n            }\n        )\n\n    return None\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Runtime/#_6","title":"\u5b8c\u6574\u200b\u7684\u200b\u4ee3\u7406\u200b\u914d\u7f6e\u200b\u793a\u4f8b","text":"<pre><code>from dataclasses import dataclass\nfrom langchain.agents import create_agent, AgentState\nfrom langchain.agents.middleware import dynamic_prompt, before_model, after_model, ModelRequest\nfrom langgraph.runtime import Runtime\n\n@dataclass\nclass Context:\n    user_name: str\n    user_role: str\n    session_id: str\n    api_key: str  # \u200b\u53ef\u4ee5\u200b\u5305\u542b\u200b\u654f\u611f\u200b\u4fe1\u606f\u200b\uff0c\u200b\u5982\u200b API \u200b\u5bc6\u94a5\u200b\n\n# \u200b\u52a8\u6001\u200b\u63d0\u793a\u200b\n@dynamic_prompt\ndef role_based_prompt(request: ModelRequest) -&gt; str:\n    context = request.runtime.context\n    base_prompt = f\"\u200b\u4f60\u200b\u6b63\u5728\u200b\u4e0e\u200b {context.user_name} ({context.user_role}) \u200b\u5bf9\u8bdd\u200b\u3002\"\n\n    if context.user_role == \"premium\":\n        base_prompt += \" \u200b\u8fd9\u662f\u200b\u5c0a\u4eab\u200b\u7528\u6237\u200b\uff0c\u200b\u8bf7\u200b\u63d0\u4f9b\u200b\u4f18\u5148\u200b\u670d\u52a1\u200b\u3002\"\n    elif context.user_role == \"trial\":\n        base_prompt += \" \u200b\u8fd9\u662f\u200b\u8bd5\u7528\u200b\u7528\u6237\u200b\uff0c\u200b\u8bf7\u200b\u53cb\u597d\u200b\u5730\u200b\u4ecb\u7ecd\u200b\u6211\u4eec\u200b\u7684\u200b\u670d\u52a1\u200b\u3002\"\n\n    return base_prompt\n\n# \u200b\u8bf7\u6c42\u200b\u9a8c\u8bc1\u200b\u4e2d\u95f4\u4ef6\u200b\n@before_model\ndef validate_request(state: AgentState, runtime: Runtime[Context]) -&gt; dict | None:\n    # \u200b\u68c0\u67e5\u200b\u5fc5\u8981\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u4fe1\u606f\u200b\n    if not runtime.context.api_key:\n        return {\n            \"messages\": [{\n                \"role\": \"assistant\", \n                \"content\": \"\u200b\u8ba4\u8bc1\u200b\u4fe1\u606f\u200b\u7f3a\u5931\u200b\uff0c\u200b\u8bf7\u200b\u8054\u7cfb\u200b\u7ba1\u7406\u5458\u200b\u3002\"\n            }]\n        }\n\n    # \u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u5176\u4ed6\u200b\u9a8c\u8bc1\u200b\u903b\u8f91\u200b\n    return None\n\n# \u200b\u521b\u5efa\u200b\u914d\u7f6e\u200b\u5b8c\u6574\u200b\u7684\u200b\u4ee3\u7406\u200b\nagent = create_agent(\n    model=\"openai:gpt-5-nano\",\n    tools=[fetch_user_email_preferences, process_user_data],\n    middleware=[role_based_prompt, validate_request, log_before_model, log_after_model],\n    context_schema=Context\n)\n\n# \u200b\u4f7f\u7528\u200b\u5b8c\u6574\u200b\u4e0a\u4e0b\u6587\u200b\u8c03\u7528\u200b\u4ee3\u7406\u200b\nresult = agent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u5e2e\u200b\u6211\u200b\u67e5\u770b\u200b\u6211\u200b\u7684\u200b\u8d26\u6237\u200b\u4fe1\u606f\u200b\"}]},\n    context=Context(\n        user_name=\"\u200b\u5f20\u4e09\u200b\",\n        user_role=\"premium\", \n        session_id=\"session_123\",\n        api_key=\"sk-xxx\"\n    )\n)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Runtime/#_7","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"llmapps/langchain/advanced-usage/Runtime/#1-context-schema","title":"1. \u200b\u5408\u7406\u200b\u8bbe\u8ba1\u200b Context Schema","text":"<pre><code>from dataclasses import dataclass\nfrom typing import Optional\n\n@dataclass\nclass AppContext:\n    user_id: str\n    user_tier: str = \"basic\"  # basic, premium, admin\n    language: str = \"zh-CN\"\n    timezone: str = \"Asia/Shanghai\"\n    permissions: list[str] = None\n\n    def __post_init__(self):\n        if self.permissions is None:\n            self.permissions = []\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Runtime/#2","title":"2. \u200b\u9519\u8bef\u5904\u7406","text":"<pre><code>from langchain.tools import tool, ToolRuntime\n\n@tool\ndef safe_tool_operation(runtime: ToolRuntime[Context]) -&gt; str:\n    \"\"\"\u200b\u5e26\u6709\u200b\u9519\u8bef\u5904\u7406\u200b\u7684\u200b\u5de5\u5177\u200b\u793a\u4f8b\u200b\u3002\"\"\"\n    try:\n        # \u200b\u68c0\u67e5\u200b\u5fc5\u8981\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\n        if not hasattr(runtime.context, 'user_id'):\n            return \"\u200b\u9519\u8bef\u200b\uff1a\u200b\u7f3a\u5c11\u200b\u7528\u6237\u200bID\"\n\n        # \u200b\u4e1a\u52a1\u200b\u903b\u8f91\u200b\n        user_id = runtime.context.user_id\n        return f\"\u200b\u5904\u7406\u200b\u7528\u6237\u200b {user_id} \u200b\u7684\u200b\u8bf7\u6c42\u200b\"\n\n    except Exception as e:\n        # \u200b\u8bb0\u5f55\u200b\u9519\u8bef\u200b\u5230\u6d41\u200b\n        if runtime.stream_writer:\n            runtime.stream_writer.send({\n                \"type\": \"error\",\n                \"message\": f\"\u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u5931\u8d25\u200b: {str(e)}\"\n            })\n        return f\"\u200b\u64cd\u4f5c\u200b\u5931\u8d25\u200b: {str(e)}\"\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/Runtime/#3","title":"3. \u200b\u6027\u80fd\u200b\u4f18\u5316","text":"<pre><code>from langchain.agents.middleware import before_model\n\n@before_model\ndef cache_check(state: AgentState, runtime: Runtime[Context]) -&gt; dict | None:\n    \"\"\"\u200b\u68c0\u67e5\u200b\u7f13\u5b58\u200b\u4ee5\u200b\u907f\u514d\u200b\u91cd\u590d\u200b\u5904\u7406\u200b\u3002\"\"\"\n    if runtime.store:\n        # \u200b\u57fa\u4e8e\u200b\u6d88\u606f\u200b\u5185\u5bb9\u200b\u751f\u6210\u200b\u7f13\u5b58\u200b\u952e\u200b\n        cache_key = hash(str(state[\"messages\"]))\n        cached_result = runtime.store.get((\"cache\",), str(cache_key))\n\n        if cached_result:\n            # \u200b\u8fd4\u56de\u200b\u7f13\u5b58\u200b\u7ed3\u679c\u200b\n            return {\n                \"messages\": [{\n                    \"role\": \"assistant\",\n                    \"content\": cached_result.value[\"response\"]\n                }]\n            }\n\n    return None\n</code></pre> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u4f7f\u7528\u200b Runtime \u200b\u529f\u80fd\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u66f4\u52a0\u200b\u667a\u80fd\u200b\u3001\u200b\u4e2a\u6027\u5316\u200b\u548c\u200b\u9ad8\u6548\u200b\u7684\u200b AI \u200b\u4ee3\u7406\u200b\u5e94\u7528\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/","title":"\u667a\u80fd\u200b\u4f53\u200b\u4e0a\u4e0b\u6587\u200b\u5de5\u7a0b\u200b\u5b8c\u6574\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_2","title":"\u6982\u8ff0\u200b\uff1a\u200b\u4e3a\u4ec0\u4e48\u200b\u667a\u80fd\u200b\u4f53\u4f1a\u200b\u5931\u8d25\u200b\uff1f","text":"<p>\u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4f53\u200b\uff08\u200b\u6216\u200b\u4efb\u4f55\u200bLLM\u200b\u5e94\u7528\u200b\uff09\u200b\u7684\u200b\u96be\u70b9\u200b\u5728\u4e8e\u200b\u4f7f\u200b\u5b83\u4eec\u200b\u8db3\u591f\u200b\u53ef\u9760\u200b\u3002\u200b\u867d\u7136\u200b\u539f\u578b\u200b\u53ef\u80fd\u200b\u8fd0\u884c\u200b\u826f\u597d\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u5b9e\u9645\u200b\u4f7f\u7528\u200b\u4e2d\u200b\u5e38\u5e38\u200b\u5931\u8d25\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_3","title":"\u667a\u80fd\u200b\u4f53\u200b\u5931\u8d25\u200b\u7684\u200b\u539f\u56e0","text":"<p>\u200b\u5f53\u200b\u667a\u80fd\u200b\u4f53\u200b\u5931\u8d25\u200b\u65f6\u200b\uff0c\u200b\u901a\u5e38\u200b\u662f\u56e0\u4e3a\u200b\u5185\u90e8\u200b\u7684\u200bLLM\u200b\u8c03\u7528\u200b\u91c7\u53d6\u200b\u4e86\u200b\u9519\u8bef\u200b\u7684\u200b\u884c\u52a8\u200b/\u200b\u6ca1\u6709\u200b\u8fbe\u5230\u200b\u6211\u4eec\u200b\u7684\u200b\u9884\u671f\u200b\u3002LLM\u200b\u5931\u8d25\u200b\u6709\u200b\u4e24\u4e2a\u200b\u4e3b\u8981\u200b\u539f\u56e0\u200b\uff1a</p> <ol> <li>\u200b\u5e95\u5c42\u200bLLM\u200b\u80fd\u529b\u200b\u4e0d\u8db3\u200b</li> <li>\u200b\u6ca1\u6709\u200b\u5c06\u200b\"\u200b\u6b63\u786e\u200b\u7684\u200b\"\u200b\u4e0a\u4e0b\u6587\u200b\u4f20\u9012\u200b\u7ed9\u200bLLM</li> </ol> <p>\u200b\u66f4\u200b\u5e38\u89c1\u200b\u7684\u200b\u662f\u200b\u7b2c\u4e8c\u4e2a\u200b\u539f\u56e0\u200b\u5bfc\u81f4\u200b\u667a\u80fd\u200b\u4f53\u200b\u4e0d\u200b\u53ef\u9760\u200b\u3002</p> <p>\u200b\u4e0a\u4e0b\u6587\u200b\u5de5\u7a0b\u200b\u662f\u200b\u6307\u4ee5\u200b\u6b63\u786e\u200b\u7684\u200b\u683c\u5f0f\u200b\u63d0\u4f9b\u200b\u6b63\u786e\u200b\u7684\u200b\u4fe1\u606f\u200b\u548c\u200b\u5de5\u5177\u200b\uff0c\u200b\u4f7f\u200bLLM\u200b\u80fd\u591f\u200b\u5b8c\u6210\u200b\u4efb\u52a1\u200b\u3002\u200b\u8fd9\u662f\u200bAI\u200b\u5de5\u7a0b\u5e08\u200b\u7684\u200b\u9996\u8981\u200b\u5de5\u4f5c\u200b\u3002\u200b\u7f3a\u4e4f\u200b\"\u200b\u6b63\u786e\u200b\u7684\u200b\"\u200b\u4e0a\u4e0b\u6587\u200b\u662f\u200b\u6784\u5efa\u200b\u66f4\u200b\u53ef\u9760\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u9996\u8981\u200b\u969c\u788d\u200b\uff0c\u200b\u800c\u200bLangChain\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\u62bd\u8c61\u200b\u8bbe\u8ba1\u200b\u72ec\u7279\u200b\uff0c\u200b\u65e8\u5728\u200b\u4fc3\u8fdb\u200b\u4e0a\u4e0b\u6587\u200b\u5de5\u7a0b\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_4","title":"\u667a\u80fd\u200b\u4f53\u5faa\u73af","text":"<p>\u200b\u5178\u578b\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u5faa\u73af\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u4e3b\u8981\u200b\u6b65\u9aa4\u200b\uff1a</p> <ol> <li>\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b - \u200b\u4f7f\u7528\u200b\u63d0\u793a\u200b\u548c\u200b\u53ef\u7528\u200b\u5de5\u5177\u200b\u8c03\u7528\u200bLLM\uff0c\u200b\u8fd4\u56de\u200b\u54cd\u5e94\u200b\u6216\u200b\u6267\u884c\u200b\u5de5\u5177\u200b\u7684\u200b\u8bf7\u6c42\u200b</li> <li>\u200b\u5de5\u5177\u200b\u6267\u884c\u200b - \u200b\u6267\u884c\u200bLLM\u200b\u8bf7\u6c42\u200b\u7684\u200b\u5de5\u5177\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5de5\u5177\u200b\u7ed3\u679c\u200b</li> </ol> <p>\u200b\u8fd9\u4e2a\u200b\u5faa\u73af\u200b\u6301\u7eed\u200b\u8fdb\u884c\u200b\uff0c\u200b\u76f4\u5230\u200bLLM\u200b\u51b3\u5b9a\u200b\u7ed3\u675f\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_5","title":"\u53ef\u63a7\u56e0\u7d20","text":"<p>\u200b\u8981\u200b\u6784\u5efa\u200b\u53ef\u9760\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u63a7\u5236\u200b\u667a\u80fd\u200b\u4f53\u5faa\u73af\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u53d1\u751f\u200b\u7684\u200b\u4e8b\u60c5\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u6b65\u9aa4\u200b\u4e4b\u95f4\u200b\u53d1\u751f\u200b\u7684\u200b\u4e8b\u60c5\u200b\u3002</p> \u200b\u4e0a\u4e0b\u6587\u200b\u7c7b\u578b\u200b \u200b\u63a7\u5236\u200b\u5185\u5bb9\u200b \u200b\u77ac\u6001\u200b\u6216\u200b\u6301\u4e45\u200b\u5316\u200b \u200b\u6a21\u578b\u200b\u4e0a\u4e0b\u6587\u200b \u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u7684\u200b\u5185\u5bb9\u200b\uff08\u200b\u6307\u4ee4\u200b\u3001\u200b\u6d88\u606f\u200b\u5386\u53f2\u200b\u3001\u200b\u5de5\u5177\u200b\u3001\u200b\u54cd\u5e94\u200b\u683c\u5f0f\u200b\uff09 \u200b\u77ac\u6001\u200b \u200b\u5de5\u5177\u200b\u4e0a\u4e0b\u6587\u200b \u200b\u5de5\u5177\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u548c\u200b\u4ea7\u751f\u200b\u7684\u200b\u5185\u5bb9\u200b\uff08\u200b\u5bf9\u200b\u72b6\u6001\u200b\u3001\u200b\u5b58\u50a8\u200b\u3001\u200b\u8fd0\u884c\u200b\u65f6\u200b\u4e0a\u4e0b\u6587\u200b\u7684\u200b\u8bfb\u5199\u200b\uff09 \u200b\u6301\u4e45\u200b\u5316\u200b \u200b\u751f\u547d\u5468\u671f\u200b\u4e0a\u4e0b\u6587\u200b \u200b\u6a21\u578b\u200b\u548c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u4e4b\u95f4\u200b\u53d1\u751f\u200b\u7684\u200b\u4e8b\u60c5\u200b\uff08\u200b\u6458\u8981\u200b\u3001\u200b\u62a4\u680f\u200b\u3001\u200b\u65e5\u5fd7\u200b\u8bb0\u5f55\u200b\u7b49\u200b\uff09 \u200b\u6301\u4e45\u200b\u5316"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_6","title":"\u6570\u636e\u6e90","text":"<p>\u200b\u5728\u200b\u6574\u4e2a\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\u8bbf\u95ee\u200b\uff08\u200b\u8bfb\u200b/\u200b\u5199\u200b\uff09\u200b\u4e0d\u540c\u200b\u7684\u200b\u6570\u636e\u6e90\u200b\uff1a</p> \u200b\u6570\u636e\u6e90\u200b \u200b\u53c8\u540d\u200b \u200b\u8303\u56f4\u200b \u200b\u793a\u4f8b\u200b \u200b\u8fd0\u884c\u200b\u65f6\u200b\u4e0a\u4e0b\u6587\u200b \u200b\u9759\u6001\u200b\u914d\u7f6e\u200b \u200b\u4f1a\u8bdd\u200b\u8303\u56f4\u200b \u200b\u7528\u6237\u200bID\u3001API\u200b\u5bc6\u94a5\u200b\u3001\u200b\u6570\u636e\u5e93\u200b\u8fde\u63a5\u200b\u3001\u200b\u6743\u9650\u200b\u3001\u200b\u73af\u5883\u200b\u8bbe\u7f6e\u200b \u200b\u72b6\u6001\u200b \u200b\u77ed\u671f\u200b\u8bb0\u5fc6\u200b \u200b\u4f1a\u8bdd\u200b\u8303\u56f4\u200b \u200b\u5f53\u524d\u200b\u6d88\u606f\u200b\u3001\u200b\u4e0a\u4f20\u200b\u7684\u200b\u6587\u4ef6\u200b\u3001\u200b\u8ba4\u8bc1\u200b\u72b6\u6001\u200b\u3001\u200b\u5de5\u5177\u200b\u7ed3\u679c\u200b \u200b\u5b58\u50a8\u200b \u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b \u200b\u8de8\u4f1a\u8bdd\u200b \u200b\u7528\u6237\u200b\u504f\u597d\u200b\u3001\u200b\u63d0\u53d6\u200b\u7684\u200b\u89c1\u89e3\u200b\u3001\u200b\u8bb0\u5fc6\u200b\u3001\u200b\u5386\u53f2\u6570\u636e"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_7","title":"\u6a21\u578b\u200b\u4e0a\u4e0b\u6587","text":"<p>\u200b\u63a7\u5236\u200b\u6bcf\u6b21\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u7684\u200b\u5185\u5bb9\u200b - \u200b\u6307\u4ee4\u200b\u3001\u200b\u53ef\u7528\u200b\u5de5\u5177\u200b\u3001\u200b\u4f7f\u7528\u200b\u54ea\u4e2a\u200b\u6a21\u578b\u200b\u4ee5\u53ca\u200b\u8f93\u51fa\u200b\u683c\u5f0f\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u51b3\u7b56\u200b\u76f4\u63a5\u200b\u5f71\u54cd\u200b\u53ef\u9760\u6027\u200b\u548c\u200b\u6210\u672c\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_8","title":"\u7cfb\u7edf\u200b\u63d0\u793a","text":"<p>\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\u8bbe\u7f6e\u200bLLM\u200b\u7684\u200b\u884c\u4e3a\u200b\u548c\u200b\u80fd\u529b\u200b\u3002\u200b\u4e0d\u540c\u200b\u7684\u200b\u7528\u6237\u200b\u3001\u200b\u4e0a\u4e0b\u6587\u200b\u6216\u200b\u5bf9\u8bdd\u200b\u9636\u6bb5\u200b\u9700\u8981\u200b\u4e0d\u540c\u200b\u7684\u200b\u6307\u4ee4\u200b\u3002</p> <p>\u200b\u57fa\u4e8e\u200b\u72b6\u6001\u200b\u7684\u200b\u52a8\u6001\u200b\u63d0\u793a\u200b</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import dynamic_prompt, ModelRequest\n\n@dynamic_prompt\ndef state_aware_prompt(request: ModelRequest) -&gt; str:\n    message_count = len(request.messages)\n\n    base = \"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6709\u7528\u200b\u7684\u200b\u52a9\u624b\u200b\u3002\"\n\n    if message_count &gt; 10:\n        base += \"\\n\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u957f\u200b\u5bf9\u8bdd\u200b - \u200b\u8bf7\u200b\u7279\u522b\u200b\u7b80\u6d01\u200b\u3002\"\n\n    return base\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[...],\n    middleware=[state_aware_prompt]\n)\n</code></pre> <p>\u200b\u57fa\u4e8e\u200b\u5b58\u50a8\u200b\u7684\u200b\u7528\u6237\u200b\u504f\u597d\u200b\u63d0\u793a\u200b</p> <pre><code>from dataclasses import dataclass\n\n@dataclass\nclass Context:\n    user_id: str\n\n@dynamic_prompt\ndef store_aware_prompt(request: ModelRequest) -&gt; str:\n    user_id = request.runtime.context.user_id\n    store = request.runtime.store\n    user_prefs = store.get((\"preferences\",), user_id)\n\n    base = \"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6709\u7528\u200b\u7684\u200b\u52a9\u624b\u200b\u3002\"\n\n    if user_prefs:\n        style = user_prefs.value.get(\"communication_style\", \"balanced\")\n        base += f\"\\n\u200b\u7528\u6237\u200b\u504f\u597d\u200b{style}\u200b\u98ce\u683c\u200b\u7684\u200b\u56de\u590d\u200b\u3002\"\n\n    return base\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_9","title":"\u6d88\u606f\u200b\u7ba1\u7406","text":"<p>\u200b\u6d88\u606f\u200b\u6784\u6210\u200b\u53d1\u9001\u7ed9\u200bLLM\u200b\u7684\u200b\u63d0\u793a\u200b\u3002\u200b\u7ba1\u7406\u200b\u6d88\u606f\u200b\u5185\u5bb9\u200b\u5bf9\u4e8e\u200b\u786e\u4fdd\u200bLLM\u200b\u6709\u200b\u6b63\u786e\u200b\u7684\u200b\u4fe1\u606f\u200b\u6765\u200b\u826f\u597d\u200b\u54cd\u5e94\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002</p> <p>\u200b\u6ce8\u5165\u200b\u6587\u4ef6\u200b\u4e0a\u4e0b\u6587\u200b</p> <pre><code>from langchain.agents.middleware import wrap_model_call, ModelRequest, ModelResponse\n\n@wrap_model_call\ndef inject_file_context(request: ModelRequest, handler) -&gt; ModelResponse:\n    uploaded_files = request.state.get(\"uploaded_files\", [])\n\n    if uploaded_files:\n        file_descriptions = []\n        for file in uploaded_files:\n            file_descriptions.append(f\"- {file['name']} ({file['type']}): {file['summary']}\")\n\n        file_context = f\"\"\"\u200b\u672c\u6b21\u200b\u5bf9\u8bdd\u200b\u4e2d\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u7684\u200b\u6587\u4ef6\u200b\uff1a\n{chr(10).join(file_descriptions)}\n\n\u200b\u56de\u7b54\u200b\u95ee\u9898\u200b\u65f6\u8bf7\u200b\u53c2\u8003\u200b\u8fd9\u4e9b\u200b\u6587\u4ef6\u200b\u3002\"\"\"\n\n        messages = [\n            *request.messages,\n            {\"role\": \"user\", \"content\": file_context},\n        ]\n        request = request.override(messages=messages)\n\n    return handler(request)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_10","title":"\u5de5\u5177\u200b\u7ba1\u7406","text":"<p>\u200b\u5de5\u5177\u200b\u8ba9\u200b\u6a21\u578b\u200b\u80fd\u591f\u200b\u4e0e\u200b\u6570\u636e\u5e93\u200b\u3001API\u200b\u548c\u200b\u5916\u90e8\u200b\u7cfb\u7edf\u200b\u4ea4\u4e92\u200b\u3002\u200b\u4f60\u200b\u5b9a\u4e49\u200b\u548c\u200b\u9009\u62e9\u200b\u5de5\u5177\u200b\u7684\u200b\u65b9\u5f0f\u200b\u76f4\u63a5\u200b\u5f71\u54cd\u200b\u6a21\u578b\u200b\u80fd\u5426\u200b\u6709\u6548\u200b\u5b8c\u6210\u200b\u4efb\u52a1\u200b\u3002</p> <p>\u200b\u5de5\u5177\u200b\u5b9a\u4e49\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b</p> <pre><code>from langchain.tools import tool\n\n@tool(parse_docstring=True)\ndef search_orders(user_id: str, status: str, limit: int = 10) -&gt; str:\n    \"\"\"\u200b\u6309\u200b\u72b6\u6001\u200b\u641c\u7d22\u200b\u7528\u6237\u200b\u8ba2\u5355\u200b\u3002\n\n    \u200b\u5f53\u200b\u7528\u6237\u200b\u8be2\u95ee\u200b\u8ba2\u5355\u200b\u5386\u53f2\u200b\u6216\u200b\u60f3\u8981\u200b\u68c0\u67e5\u200b\u8ba2\u5355\u200b\u72b6\u6001\u200b\u65f6\u200b\u4f7f\u7528\u200b\u6b64\u200b\u5de5\u5177\u200b\u3002\n    \u200b\u59cb\u7ec8\u200b\u6309\u200b\u63d0\u4f9b\u200b\u7684\u200b\u72b6\u6001\u200b\u8fdb\u884c\u200b\u8fc7\u6ee4\u200b\u3002\n\n    \u200b\u53c2\u6570\u200b\uff1a\n        user_id: \u200b\u7528\u6237\u200b\u7684\u200b\u552f\u4e00\u200b\u6807\u8bc6\u7b26\u200b\n        status: \u200b\u8ba2\u5355\u200b\u72b6\u6001\u200b\uff1a'pending'\u3001'shipped' \u200b\u6216\u200b 'delivered'\n        limit: \u200b\u8fd4\u56de\u200b\u7684\u200b\u6700\u5927\u200b\u7ed3\u679c\u200b\u6570\u200b\n    \"\"\"\n    # \u200b\u5b9e\u73b0\u200b\u4ee3\u7801\u200b\n    pass\n</code></pre> <p>\u200b\u57fa\u4e8e\u200b\u72b6\u6001\u200b\u52a8\u6001\u200b\u9009\u62e9\u200b\u5de5\u5177\u200b</p> <pre><code>@wrap_model_call\ndef state_based_tools(request: ModelRequest, handler) -&gt; ModelResponse:\n    state = request.state\n    is_authenticated = state.get(\"authenticated\", False)\n    message_count = len(state[\"messages\"])\n\n    if not is_authenticated:\n        tools = [t for t in request.tools if t.name.startswith(\"public_\")]\n        request = request.override(tools=tools)\n    elif message_count &lt; 5:\n        tools = [t for t in request.tools if t.name != \"advanced_search\"]\n        request = request.override(tools=tools)\n\n    return handler(request)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_11","title":"\u6a21\u578b\u200b\u9009\u62e9","text":"<p>\u200b\u4e0d\u540c\u200b\u7684\u200b\u6a21\u578b\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u4f18\u52bf\u200b\u3001\u200b\u6210\u672c\u200b\u548c\u200b\u4e0a\u4e0b\u6587\u200b\u7a97\u53e3\u200b\u3002\u200b\u6839\u636e\u200b\u5f53\u524d\u4efb\u52a1\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u6a21\u578b\u200b\u3002</p> <p>\u200b\u57fa\u4e8e\u200b\u5bf9\u8bdd\u200b\u957f\u5ea6\u200b\u9009\u62e9\u200b\u6a21\u578b\u200b</p> <pre><code>from langchain.chat_models import init_chat_model\n\nlarge_model = init_chat_model(\"anthropic:claude-sonnet-4-5\")\nstandard_model = init_chat_model(\"openai:gpt-4o\")\nefficient_model = init_chat_model(\"openai:gpt-4o-mini\")\n\n@wrap_model_call\ndef state_based_model(request: ModelRequest, handler) -&gt; ModelResponse:\n    message_count = len(request.messages)\n\n    if message_count &gt; 20:\n        model = large_model\n    elif message_count &gt; 10:\n        model = standard_model\n    else:\n        model = efficient_model\n\n    request = request.override(model=model)\n    return handler(request)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_12","title":"\u54cd\u5e94\u200b\u683c\u5f0f","text":"<p>\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\u5c06\u200b\u975e\u200b\u7ed3\u6784\u5316\u200b\u6587\u672c\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u7ecf\u8fc7\u200b\u9a8c\u8bc1\u200b\u7684\u200b\u7ed3\u6784\u5316\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u5b9a\u4e49\u200b\u54cd\u5e94\u200b\u683c\u5f0f\u200b</p> <pre><code>from pydantic import BaseModel, Field\n\nclass CustomerSupportTicket(BaseModel):\n    \"\"\"\u200b\u4ece\u200b\u5ba2\u6237\u200b\u6d88\u606f\u200b\u4e2d\u200b\u63d0\u53d6\u200b\u7684\u200b\u7ed3\u6784\u5316\u200b\u7968\u636e\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n\n    category: str = Field(description=\"\u200b\u95ee\u9898\u200b\u7c7b\u522b\u200b\uff1a'billing'\u3001'technical'\u3001'account' \u200b\u6216\u200b 'product'\")\n    priority: str = Field(description=\"\u200b\u7d27\u6025\u200b\u7a0b\u5ea6\u200b\uff1a'low'\u3001'medium'\u3001'high' \u200b\u6216\u200b 'critical'\")\n    summary: str = Field(description=\"\u200b\u5ba2\u6237\u200b\u95ee\u9898\u200b\u7684\u200b\u4e00\u53e5\u200b\u8bdd\u200b\u6458\u8981\u200b\")\n    customer_sentiment: str = Field(description=\"\u200b\u5ba2\u6237\u200b\u60c5\u7eea\u200b\uff1a'frustrated'\u3001'neutral' \u200b\u6216\u200b 'satisfied'\")\n</code></pre> <p>\u200b\u57fa\u4e8e\u200b\u72b6\u6001\u200b\u52a8\u6001\u200b\u9009\u62e9\u54cd\u5e94\u200b\u683c\u5f0f\u200b</p> <pre><code>class SimpleResponse(BaseModel):\n    answer: str = Field(description=\"\u200b\u7b80\u77ed\u200b\u56de\u7b54\u200b\")\n\nclass DetailedResponse(BaseModel):\n    answer: str = Field(description=\"\u200b\u8be6\u7ec6\u200b\u56de\u7b54\u200b\")\n    reasoning: str = Field(description=\"\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b\u8bf4\u660e\u200b\")\n    confidence: float = Field(description=\"\u200b\u7f6e\u4fe1\u5ea6\u200b\u5206\u6570\u200b0-1\")\n\n@wrap_model_call\ndef state_based_output(request: ModelRequest, handler) -&gt; ModelResponse:\n    message_count = len(request.messages)\n\n    if message_count &lt; 3:\n        request = request.override(response_format=SimpleResponse)\n    else:\n        request = request.override(response_format=DetailedResponse)\n\n    return handler(request)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_13","title":"\u5de5\u5177\u200b\u4e0a\u4e0b\u6587","text":"<p>\u200b\u5de5\u5177\u200b\u7684\u200b\u7279\u6b8a\u200b\u4e4b\u200b\u5904\u200b\u5728\u4e8e\u200b\u5b83\u4eec\u200b\u65e2\u200b\u8bfb\u53d6\u200b\u53c8\u200b\u5199\u5165\u200b\u4e0a\u4e0b\u6587\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_14","title":"\u8bfb\u53d6\u200b\u4e0a\u4e0b\u6587","text":"<p>\u200b\u5927\u591a\u6570\u200b\u771f\u5b9e\u4e16\u754c\u200b\u7684\u200b\u5de5\u5177\u200b\u9700\u8981\u200b\u7684\u200b\u4e0d\u4ec5\u4ec5\u200b\u662f\u200bLLM\u200b\u7684\u200b\u53c2\u6570\u200b\u3002\u200b\u5b83\u4eec\u200b\u9700\u8981\u200b\u7528\u6237\u200bID\u200b\u8fdb\u884c\u200b\u6570\u636e\u5e93\u200b\u67e5\u8be2\u200b\u3001API\u200b\u5bc6\u94a5\u200b\u8bbf\u95ee\u200b\u5916\u90e8\u200b\u670d\u52a1\u200b\uff0c\u200b\u6216\u200b\u5f53\u524d\u200b\u4f1a\u8bdd\u200b\u72b6\u6001\u200b\u6765\u200b\u505a\u200b\u51b3\u7b56\u200b\u3002</p> <p>\u200b\u4ece\u200b\u8fd0\u884c\u200b\u65f6\u200b\u4e0a\u4e0b\u6587\u200b\u8bfb\u53d6\u200b\u914d\u7f6e\u200b</p> <pre><code>from dataclasses import dataclass\n\n@dataclass\nclass Context:\n    user_id: str\n    api_key: str\n    db_connection: str\n\n@tool\ndef fetch_user_data(query: str, runtime: ToolRuntime[Context]) -&gt; str:\n    \"\"\"\u200b\u4f7f\u7528\u200b\u8fd0\u884c\u200b\u65f6\u200b\u4e0a\u4e0b\u6587\u200b\u914d\u7f6e\u200b\u83b7\u53d6\u6570\u636e\u200b\u3002\"\"\"\n    user_id = runtime.context.user_id\n    api_key = runtime.context.api_key\n    db_connection = runtime.context.db_connection\n\n    results = perform_database_query(db_connection, query, api_key)\n    return f\"\u200b\u4e3a\u200b\u7528\u6237\u200b {user_id} \u200b\u627e\u5230\u200b {len(results)} \u200b\u6761\u200b\u7ed3\u679c\u200b\"\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_15","title":"\u5199\u5165\u200b\u4e0a\u4e0b\u6587","text":"<p>\u200b\u5de5\u5177\u200b\u7ed3\u679c\u200b\u53ef\u200b\u7528\u4e8e\u200b\u5e2e\u52a9\u200b\u667a\u80fd\u200b\u4f53\u200b\u5b8c\u6210\u200b\u7ed9\u5b9a\u200b\u4efb\u52a1\u200b\u3002\u200b\u5de5\u5177\u200b\u65e2\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5411\u200b\u6a21\u578b\u200b\u8fd4\u56de\u200b\u7ed3\u679c\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u66f4\u65b0\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u8bb0\u5fc6\u200b\uff0c\u200b\u4f7f\u200b\u91cd\u8981\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u5728\u200b\u540e\u7eed\u200b\u6b65\u9aa4\u200b\u4e2d\u200b\u53ef\u7528\u200b\u3002</p> <p>\u200b\u5199\u5165\u200b\u72b6\u6001\u200b\u8ddf\u8e2a\u200b\u4f1a\u8bdd\u200b\u4fe1\u606f\u200b</p> <pre><code>from langgraph.types import Command\n\n@tool\ndef authenticate_user(password: str, runtime: ToolRuntime) -&gt; Command:\n    \"\"\"\u200b\u9a8c\u8bc1\u200b\u7528\u6237\u200b\u5e76\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002\"\"\"\n    if password == \"correct\":\n        return Command(update={\"authenticated\": True})\n    else:\n        return Command(update={\"authenticated\": False})\n</code></pre> <p>\u200b\u5199\u5165\u200b\u5b58\u50a8\u200b\u6301\u4e45\u200b\u5316\u200b\u6570\u636e\u200b</p> <pre><code>@tool\ndef save_preference(preference_key: str, preference_value: str, runtime: ToolRuntime[Context]) -&gt; str:\n    \"\"\"\u200b\u5c06\u200b\u7528\u6237\u200b\u504f\u597d\u200b\u4fdd\u5b58\u200b\u5230\u200b\u5b58\u50a8\u200b\u3002\"\"\"\n    user_id = runtime.context.user_id\n    store = runtime.store\n\n    existing_prefs = store.get((\"preferences\",), user_id)\n    prefs = existing_prefs.value if existing_prefs else {}\n    prefs[preference_key] = preference_value\n\n    store.put((\"preferences\",), user_id, prefs)\n    return f\"\u200b\u4fdd\u5b58\u200b\u504f\u597d\u200b\uff1a{preference_key} = {preference_value}\"\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_16","title":"\u751f\u547d\u5468\u671f\u200b\u4e0a\u4e0b\u6587","text":"<p>\u200b\u63a7\u5236\u200b\u6838\u5fc3\u200b\u667a\u80fd\u200b\u4f53\u200b\u6b65\u9aa4\u200b\u4e4b\u95f4\u200b\u53d1\u751f\u200b\u7684\u200b\u4e8b\u60c5\u200b - \u200b\u62e6\u622a\u200b\u6570\u636e\u6d41\u200b\u4ee5\u200b\u5b9e\u73b0\u200b\u6a2a\u5207\u200b\u5173\u6ce8\u70b9\u200b\uff0c\u200b\u5982\u200b\u6458\u8981\u200b\u3001\u200b\u62a4\u680f\u200b\u548c\u200b\u65e5\u5fd7\u200b\u8bb0\u5f55\u200b\u3002</p>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_17","title":"\u81ea\u52a8\u200b\u6458\u8981","text":"<p>\u200b\u6700\u200b\u5e38\u89c1\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u6a21\u5f0f\u200b\u4e4b\u4e00\u200b\u662f\u200b\u5728\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\u8fc7\u957f\u200b\u65f6\u200b\u81ea\u52a8\u200b\u538b\u7f29\u200b\u3002\u200b\u4e0e\u200b\u6a21\u578b\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u663e\u793a\u200b\u7684\u200b\u77ac\u6001\u200b\u6d88\u606f\u200b\u4fee\u526a\u200b\u4e0d\u540c\u200b\uff0c\u200b\u6458\u8981\u200b\u6301\u4e45\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b - \u200b\u6c38\u4e45\u200b\u7528\u200b\u6458\u8981\u200b\u66ff\u6362\u200b\u65e7\u200b\u6d88\u606f\u200b\uff0c\u200b\u8be5\u200b\u6458\u8981\u200b\u5c06\u200b\u4fdd\u5b58\u200b\u4f9b\u200b\u6240\u6709\u200b\u672a\u6765\u200b\u8f6e\u6b21\u200b\u4f7f\u7528\u200b\u3002</p> <p>\u200b\u4f7f\u7528\u200b\u5185\u7f6e\u200b\u6458\u8981\u200b\u4e2d\u95f4\u4ef6\u200b</p> <pre><code>from langchain.agents.middleware import SummarizationMiddleware\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[...],\n    middleware=[\n        SummarizationMiddleware(\n            model=\"openai:gpt-4o-mini\",\n            max_tokens_before_summary=4000,  # \u200b\u5728\u200b4000\u200b\u4e2a\u200btoken\u200b\u65f6\u200b\u89e6\u53d1\u200b\u6458\u8981\u200b\n            messages_to_keep=20,  # \u200b\u6458\u8981\u200b\u540e\u200b\u4fdd\u7559\u200b\u6700\u540e\u200b20\u200b\u6761\u200b\u6d88\u606f\u200b\n        ),\n    ],\n)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_18","title":"\u81ea\u5b9a\u4e49\u200b\u751f\u547d\u5468\u671f\u200b\u94a9\u5b50","text":"<p>Before Model\u200b\u94a9\u5b50\u200b</p> <pre><code>from langchain.agents.middleware import before_model\n\n@before_model\ndef log_before_model(state: AgentState, runtime: Runtime[Context]) -&gt; dict | None:\n    user_name = runtime.context.user_name\n    session_id = runtime.context.session_id\n    print(f\"\u200b\u4e3a\u200b\u7528\u6237\u200b {user_name} \u200b\u5904\u7406\u200b\u8bf7\u6c42\u200b (\u200b\u4f1a\u8bdd\u200b: {session_id})\")\n    return None\n</code></pre> <p>After Model\u200b\u94a9\u5b50\u200b</p> <pre><code>from langchain.agents.middleware import after_model\n\n@after_model\ndef log_after_model(state: AgentState, runtime: Runtime[Context]) -&gt; dict | None:\n    user_name = runtime.context.user_name\n    session_id = runtime.context.session_id\n\n    if runtime.store and state[\"messages\"]:\n        last_message = state[\"messages\"][-1]\n        runtime.store.set(\n            (\"conversations\",), \n            session_id, \n            {\n                \"user\": user_name,\n                \"last_interaction\": str(last_message.content)[:100],\n                \"timestamp\": \"2024-01-01\"\n            }\n        )\n\n    return None\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_19","title":"\u5b8c\u6574\u200b\u793a\u4f8b\u200b\uff1a\u200b\u6784\u5efa\u200b\u4e0a\u4e0b\u6587\u200b\u611f\u77e5\u200b\u7684\u200b\u5ba2\u6237\u670d\u52a1\u200b\u667a\u80fd\u200b\u4f53","text":"<pre><code>from dataclasses import dataclass\nfrom langchain.agents import create_agent\nfrom langchain.agents.middleware import (\n    dynamic_prompt, wrap_model_call, before_model, after_model,\n    SummarizationMiddleware\n)\nfrom langchain.tools import tool, ToolRuntime\nfrom langgraph.types import Command\nfrom pydantic import BaseModel, Field\n\n# \u200b\u4e0a\u4e0b\u6587\u200b\u5b9a\u4e49\u200b\n@dataclass\nclass CustomerContext:\n    user_id: str\n    user_tier: str  # basic, premium, vip\n    language: str = \"zh-CN\"\n    permissions: list[str] = None\n\n    def __post_init__(self):\n        if self.permissions is None:\n            self.permissions = [\"basic_support\"]\n\n# \u200b\u54cd\u5e94\u200b\u683c\u5f0f\u200b\nclass SupportResponse(BaseModel):\n    answer: str = Field(description=\"\u200b\u5bf9\u200b\u5ba2\u6237\u200b\u95ee\u9898\u200b\u7684\u200b\u56de\u7b54\u200b\")\n    next_steps: list[str] = Field(description=\"\u200b\u5efa\u8bae\u200b\u7684\u200b\u540e\u7eed\u200b\u6b65\u9aa4\u200b\")\n    confidence: float = Field(description=\"\u200b\u56de\u7b54\u200b\u7684\u200b\u7f6e\u4fe1\u5ea6\u200b\")\n\n# \u200b\u52a8\u6001\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\n@dynamic_prompt\ndef customer_aware_prompt(request: ModelRequest) -&gt; str:\n    context = request.runtime.context\n    base = f\"\u200b\u4f60\u200b\u662f\u200b\u5ba2\u6237\u670d\u52a1\u200b\u52a9\u624b\u200b\uff0c\u200b\u6b63\u5728\u200b\u4e3a\u200b{context.user_tier}\u200b\u7ea7\u522b\u200b\u7528\u6237\u670d\u52a1\u200b\u3002\"\n\n    if context.user_tier == \"vip\":\n        base += \" \u200b\u8fd9\u662f\u200bVIP\u200b\u7528\u6237\u200b\uff0c\u200b\u8bf7\u200b\u63d0\u4f9b\u200b\u4f18\u5148\u200b\u548c\u200b\u4e2a\u6027\u5316\u200b\u670d\u52a1\u200b\u3002\"\n    elif context.user_tier == \"premium\":\n        base += \" \u200b\u8fd9\u662f\u200b\u9ad8\u7ea7\u200b\u7528\u6237\u200b\uff0c\u200b\u8bf7\u200b\u63d0\u4f9b\u200b\u4f18\u8d28\u670d\u52a1\u200b\u3002\"\n\n    if \"zh-CN\" in context.language:\n        base += \" \u200b\u8bf7\u200b\u4f7f\u7528\u200b\u4e2d\u6587\u200b\u56de\u590d\u200b\u3002\"\n\n    return base\n\n# \u200b\u5de5\u5177\u200b\uff1a\u200b\u83b7\u53d6\u200b\u7528\u6237\u200b\u5386\u53f2\u200b\n@tool\ndef get_user_ticket_history(runtime: ToolRuntime[CustomerContext]) -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u7528\u6237\u200b\u7684\u200b\u5de5\u5355\u200b\u5386\u53f2\u200b\u3002\"\"\"\n    user_id = runtime.context.user_id\n    store = runtime.store\n\n    history = store.get((\"ticket_history\",), user_id)\n    if history:\n        return f\"\u200b\u7528\u6237\u200b\u6700\u8fd1\u200b\u7684\u200b\u5de5\u5355\u200b\uff1a{history.value}\"\n    return \"\u200b\u7528\u6237\u200b\u6ca1\u6709\u200b\u5386\u53f2\u200b\u5de5\u5355\u200b\u8bb0\u5f55\u200b\"\n\n# \u200b\u5de5\u5177\u200b\uff1a\u200b\u521b\u5efa\u200b\u65b0\u5de5\u5355\u200b\n@tool\ndef create_support_ticket(issue: str, runtime: ToolRuntime[CustomerContext]) -&gt; Command:\n    \"\"\"\u200b\u4e3a\u200b\u7528\u6237\u200b\u521b\u5efa\u200b\u652f\u6301\u200b\u5de5\u5355\u200b\u3002\"\"\"\n    user_id = runtime.context.user_id\n    store = runtime.store\n\n    # \u200b\u83b7\u53d6\u200b\u73b0\u6709\u200b\u5386\u53f2\u200b\n    history = store.get((\"ticket_history\",), user_id)\n    tickets = history.value if history else []\n\n    # \u200b\u6dfb\u52a0\u200b\u65b0\u5de5\u5355\u200b\n    new_ticket = {\n        \"issue\": issue,\n        \"timestamp\": \"2024-01-01\",\n        \"status\": \"open\"\n    }\n    tickets.append(new_ticket)\n\n    # \u200b\u66f4\u65b0\u200b\u5b58\u50a8\u200b\n    store.put((\"ticket_history\",), user_id, tickets)\n\n    return Command(\n        update={\"last_ticket_created\": new_ticket},\n        message=f\"\u200b\u5df2\u200b\u521b\u5efa\u200b\u5de5\u5355\u200b\uff1a{issue}\"\n    )\n\n# \u200b\u521b\u5efa\u200b\u5b8c\u6574\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[get_user_ticket_history, create_support_ticket],\n    middleware=[\n        customer_aware_prompt,\n        SummarizationMiddleware(\n            model=\"openai:gpt-4o-mini\",\n            max_tokens_before_summary=3000,\n        ),\n    ],\n    context_schema=CustomerContext,\n    response_format=SupportResponse\n)\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nresult = agent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u6211\u200b\u7684\u200b\u8ba2\u5355\u200b\u6709\u200b\u95ee\u9898\u200b\"}]},\n    context=CustomerContext(\n        user_id=\"user_123\",\n        user_tier=\"premium\",\n        language=\"zh-CN\"\n    )\n)\n</code></pre>"},{"location":"llmapps/langchain/advanced-usage/context-engineering/#_20","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":"<ol> <li>\u200b\u4ece\u200b\u7b80\u5355\u200b\u5f00\u59cb\u200b - \u200b\u4ece\u200b\u9759\u6001\u200b\u63d0\u793a\u200b\u548c\u200b\u5de5\u5177\u200b\u5f00\u59cb\u200b\uff0c\u200b\u4ec5\u200b\u5728\u200b\u9700\u8981\u200b\u65f6\u200b\u6dfb\u52a0\u200b\u52a8\u6001\u200b\u529f\u80fd\u200b</li> <li>\u200b\u589e\u91cf\u200b\u6d4b\u8bd5\u200b - \u200b\u4e00\u6b21\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u4e0a\u4e0b\u6587\u200b\u5de5\u7a0b\u200b\u529f\u80fd\u200b</li> <li>\u200b\u76d1\u63a7\u200b\u6027\u80fd\u200b - \u200b\u8ddf\u8e2a\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u3001token\u200b\u4f7f\u7528\u200b\u548c\u200b\u5ef6\u8fdf\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u5185\u7f6e\u200b\u4e2d\u95f4\u4ef6\u200b - \u200b\u5229\u7528\u200b<code>SummarizationMiddleware</code>\u200b\u7b49\u200b\u73b0\u6709\u200b\u7ec4\u4ef6\u200b</li> <li>\u200b\u8bb0\u5f55\u200b\u4e0a\u4e0b\u6587\u200b\u7b56\u7565\u200b - \u200b\u660e\u786e\u200b\u8bf4\u660e\u200b\u6b63\u5728\u200b\u4f20\u9012\u200b\u4ec0\u4e48\u200b\u4e0a\u4e0b\u6587\u200b\u4ee5\u53ca\u200b\u539f\u56e0\u200b</li> <li>\u200b\u7406\u89e3\u200b\u77ac\u6001\u200b\u4e0e\u200b\u6301\u4e45\u200b\u5316\u200b\uff1a\u200b\u6a21\u578b\u200b\u4e0a\u4e0b\u6587\u200b\u66f4\u6539\u200b\u662f\u200b\u77ac\u6001\u200b\u7684\u200b\uff08\u200b\u6bcf\u6b21\u200b\u8c03\u7528\u200b\uff09\uff0c\u200b\u800c\u200b\u751f\u547d\u5468\u671f\u200b\u4e0a\u4e0b\u6587\u200b\u66f4\u6539\u200b\u4f1a\u200b\u6301\u4e45\u200b\u5316\u5230\u200b\u72b6\u6001\u200b</li> </ol> <p>\u200b\u901a\u8fc7\u200b\u6709\u6548\u200b\u5b9e\u65bd\u200b\u4e0a\u4e0b\u6587\u200b\u5de5\u7a0b\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u663e\u8457\u200b\u63d0\u9ad8\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u53ef\u9760\u6027\u200b\u548c\u200b\u5b9e\u7528\u6027\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u80fd\u591f\u200b\u5904\u7406\u200b\u590d\u6742\u200b\u7684\u200b\u73b0\u5b9e\u200b\u4e16\u754c\u200b\u4efb\u52a1\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/agents/","title":"LangChain Agents\uff08\u200b\u667a\u80fd\u200b\u4f53\u200b\uff09","text":""},{"location":"llmapps/langchain/core-components/agents/#_1","title":"\u6982\u8ff0","text":"<p>Agents\uff08\u200b\u4ee3\u7406\u200b\uff09\u200b\u5c06\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\u4e0e\u200b\u5de5\u5177\u200b\u76f8\u7ed3\u5408\u200b\uff0c\u200b\u521b\u5efa\u200b\u80fd\u591f\u200b\u63a8\u7406\u200b\u4efb\u52a1\u200b\u3001\u200b\u51b3\u5b9a\u200b\u4f7f\u7528\u200b\u54ea\u4e9b\u200b\u5de5\u5177\u200b\u5e76\u200b\u8fed\u4ee3\u200b\u5de5\u4f5c\u200b\u4ee5\u200b\u627e\u5230\u200b\u89e3\u51b3\u65b9\u6848\u200b\u7684\u200b\u7cfb\u7edf\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/agents/#_2","title":"\u6838\u5fc3\u200b\u6982\u5ff5","text":"<ul> <li>\u200b\u63a8\u7406\u200b\u5f15\u64ce\u200b\uff1a\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\u8d1f\u8d23\u200b\u601d\u8003\u200b\u548c\u200b\u51b3\u7b56\u200b</li> <li>\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\uff1a\u200b\u4ee3\u7406\u200b\u53ef\u4ee5\u200b\u8c03\u7528\u200b\u5916\u90e8\u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b</li> <li>\u200b\u8fed\u4ee3\u200b\u8fc7\u7a0b\u200b\uff1a\u200b\u4ee3\u7406\u200b\u5728\u200b\u5faa\u73af\u200b\u4e2d\u200b\u5de5\u4f5c\u200b\u76f4\u5230\u200b\u8fbe\u5230\u200b\u505c\u6b62\u200b\u6761\u4ef6\u200b</li> <li>\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\uff1a\u200b\u4ee3\u7406\u200b\u7ef4\u62a4\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\u548c\u200b\u81ea\u5b9a\u4e49\u200b\u72b6\u6001\u200b</li> </ul>"},{"location":"llmapps/langchain/core-components/agents/#agent","title":"\u57fa\u7840\u200b Agent \u200b\u521b\u5efa","text":""},{"location":"llmapps/langchain/core-components/agents/#1-agent","title":"1. \u200b\u7b80\u5355\u200b Agent","text":"<pre><code>from langchain.agents import create_agent\nfrom langchain.tools import tool\n\n@tool\ndef search_web(query: str) -&gt; str:\n    \"\"\"\u200b\u5728\u200b\u7f51\u7edc\u200b\u4e0a\u200b\u641c\u7d22\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n    return f\"\u200b\u5173\u4e8e\u200b '{query}' \u200b\u7684\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b\uff1a\u200b\u76f8\u5173\u200b\u6587\u7ae0\u200b\u3001\u200b\u65b0\u95fb\u200b\u548c\u200b\u4fe1\u606f\u200b\"\n\n@tool\ndef get_weather(location: str) -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5929\u6c14\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n    return f\"{location}\u200b\u7684\u200b\u5929\u6c14\u200b\uff1a\u200b\u6674\u6717\u200b\uff0c25\u00b0C\"\n\n# \u200b\u521b\u5efa\u200b\u57fa\u7840\u200b Agent\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_web, get_weather]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#2-agent","title":"2. \u200b\u8c03\u7528\u200b Agent","text":"<pre><code># \u200b\u57fa\u7840\u200b\u8c03\u7528\u200b\nresult = agent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u5317\u4eac\u200b\u4eca\u5929\u5929\u6c14\u200b\u600e\u4e48\u6837\u200b\uff1f\"}]}\n)\n\nprint(result[\"messages\"][-1].content)\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#_3","title":"\u6838\u5fc3\u200b\u7ec4\u4ef6\u200b\u8be6\u89e3","text":""},{"location":"llmapps/langchain/core-components/agents/#1","title":"1. \u200b\u6a21\u578b\u200b\u914d\u7f6e","text":""},{"location":"llmapps/langchain/core-components/agents/#_4","title":"\u9759\u6001\u200b\u6a21\u578b\u200b\u914d\u7f6e","text":"<pre><code>from langchain.agents import create_agent\nfrom langchain_openai import ChatOpenAI\n\n# \u200b\u65b9\u6cd5\u200b1\uff1a\u200b\u4f7f\u7528\u200b\u6a21\u578b\u200b\u6807\u8bc6\u7b26\u200b\u5b57\u7b26\u4e32\u200b\nagent1 = create_agent(\n    \"openai:gpt-4o\",  # \u200b\u81ea\u52a8\u200b\u63a8\u65ad\u200b\u4e3a\u200b OpenAI GPT-4o\n    tools=[search_web, get_weather]\n)\n\n# \u200b\u65b9\u6cd5\u200b2\uff1a\u200b\u4f7f\u7528\u200b\u6a21\u578b\u200b\u5b9e\u4f8b\u200b\uff08\u200b\u63a8\u8350\u200b\u7528\u4e8e\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\uff09\nmodel = ChatOpenAI(\n    model=\"gpt-4o\",\n    temperature=0.1,      # \u200b\u63a7\u5236\u200b\u521b\u9020\u6027\u200b\n    max_tokens=1000,      # \u200b\u6700\u5927\u200b\u8f93\u51fa\u200b\u957f\u5ea6\u200b\n    timeout=30,           # \u200b\u8d85\u65f6\u200b\u8bbe\u7f6e\u200b\n    # \u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b...\n)\n\nagent2 = create_agent(\n    model=model,\n    tools=[search_web, get_weather]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#_5","title":"\u52a8\u6001\u200b\u6a21\u578b\u200b\u9009\u62e9","text":"<pre><code>from langchain.agents.middleware import wrap_model_call, ModelRequest\nfrom langchain_openai import ChatOpenAI\n\n# \u200b\u5b9a\u4e49\u200b\u4e0d\u540c\u200b\u6a21\u578b\u200b\nbasic_model = ChatOpenAI(model=\"gpt-4o-mini\")  # \u200b\u7ecf\u6d4e\u578b\u200b\u6a21\u578b\u200b\nadvanced_model = ChatOpenAI(model=\"gpt-4o\")    # \u200b\u9ad8\u7ea7\u200b\u6a21\u578b\u200b\n\n@wrap_model_call\ndef dynamic_model_selection(request: ModelRequest, handler):\n    \"\"\"\u200b\u57fa\u4e8e\u200b\u5bf9\u8bdd\u200b\u590d\u6742\u5ea6\u200b\u9009\u62e9\u200b\u6a21\u578b\u200b\"\"\"\n    messages = request.state[\"messages\"]\n    message_count = len(messages)\n\n    # \u200b\u590d\u6742\u200b\u5bf9\u8bdd\u200b\u4f7f\u7528\u200b\u9ad8\u7ea7\u200b\u6a21\u578b\u200b\n    if message_count &gt; 5 or any(\"\u200b\u590d\u6742\u200b\" in msg.content for msg in messages if hasattr(msg, 'content')):\n        request.model = advanced_model\n    else:\n        request.model = basic_model\n\n    return handler(request)\n\n# \u200b\u521b\u5efa\u200b\u652f\u6301\u200b\u52a8\u6001\u200b\u6a21\u578b\u200b\u9009\u62e9\u200b\u7684\u200b Agent\nagent = create_agent(\n    model=basic_model,  # \u200b\u9ed8\u8ba4\u200b\u6a21\u578b\u200b\n    tools=[search_web, get_weather],\n    middleware=[dynamic_model_selection]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#2","title":"2. \u200b\u5de5\u5177\u200b\u7cfb\u7edf","text":""},{"location":"llmapps/langchain/core-components/agents/#_6","title":"\u57fa\u7840\u200b\u5de5\u5177\u200b\u5b9a\u4e49","text":"<pre><code>from langchain.tools import tool\nfrom datetime import datetime\n\n@tool\ndef calculator(expression: str) -&gt; str:\n    \"\"\"\u200b\u8ba1\u7b97\u200b\u6570\u5b66\u200b\u8868\u8fbe\u5f0f\u200b\u3002\"\"\"\n    try:\n        result = eval(expression)\n        return f\"{expression} = {result}\"\n    except Exception as e:\n        return f\"\u200b\u8ba1\u7b97\u9519\u8bef\u200b: {str(e)}\"\n\n@tool\ndef get_current_time(timezone: str = \"UTC\") -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u65f6\u533a\u200b\u7684\u200b\u5f53\u524d\u200b\u65f6\u95f4\u200b\u3002\"\"\"\n    now = datetime.now()\n    return f\"{timezone}\u200b\u65f6\u200b\u533a\u200b\u5f53\u524d\u200b\u65f6\u95f4\u200b: {now.strftime('%Y-%m-%d %H:%M:%S')}\"\n\n@tool\ndef search_products(query: str, category: str = \"all\") -&gt; str:\n    \"\"\"\u200b\u641c\u7d22\u200b\u4ea7\u54c1\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n    return f\"\u200b\u5728\u200b '{category}' \u200b\u7c7b\u522b\u200b\u4e2d\u200b\u627e\u5230\u200b\u5173\u4e8e\u200b '{query}' \u200b\u7684\u200b\u4ea7\u54c1\u200b\"\n\n# \u200b\u521b\u5efa\u200b\u5305\u542b\u200b\u591a\u4e2a\u200b\u5de5\u5177\u200b\u7684\u200b Agent\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[calculator, get_current_time, search_products]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#_7","title":"\u5de5\u5177\u200b\u9519\u8bef\u5904\u7406","text":"<pre><code>from langchain.agents.middleware import wrap_tool_call\nfrom langchain_core.messages import ToolMessage\n\n@wrap_tool_call\ndef handle_tool_errors(request, handler):\n    \"\"\"\u200b\u81ea\u5b9a\u4e49\u200b\u5de5\u5177\u200b\u9519\u8bef\u5904\u7406\u200b\"\"\"\n    try:\n        return handler(request)\n    except Exception as e:\n        # \u200b\u8fd4\u56de\u200b\u53cb\u597d\u200b\u7684\u200b\u9519\u8bef\u4fe1\u606f\u200b\n        error_message = f\"\u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u5931\u8d25\u200b\uff1a{str(e)}\u3002\u200b\u8bf7\u200b\u68c0\u67e5\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\u5e76\u91cd\u200b\u8bd5\u200b\u3002\"\n\n        return ToolMessage(\n            content=error_message,\n            tool_call_id=request.tool_call[\"id\"]\n        )\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[calculator, get_current_time],\n    middleware=[handle_tool_errors]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#3","title":"3. \u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\u8bcd","text":""},{"location":"llmapps/langchain/core-components/agents/#_8","title":"\u9759\u6001\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\u8bcd","text":"<pre><code>agent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_web, get_weather],\n    system_prompt=\"\"\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e13\u4e1a\u200b\u3001\u200b\u53cb\u597d\u200b\u7684\u200b\u52a9\u624b\u200b\u3002\u200b\u8bf7\u200b\u9075\u5faa\u200b\u4ee5\u4e0b\u200b\u6307\u5bfc\u200b\u539f\u5219\u200b\uff1a\n    1. \u200b\u56de\u7b54\u200b\u8981\u200b\u51c6\u786e\u200b\u3001\u200b\u7b80\u6d01\u200b\n    2. \u200b\u4f7f\u7528\u200b\u5de5\u5177\u200b\u83b7\u53d6\u200b\u6700\u65b0\u200b\u4fe1\u606f\u200b\n    3. \u200b\u5982\u679c\u200b\u7528\u6237\u200b\u95ee\u9898\u200b\u6d89\u53ca\u200b\u4e13\u4e1a\u200b\u9886\u57df\u200b\uff0c\u200b\u8bf7\u200b\u8bf4\u660e\u200b\u4fe1\u606f\u200b\u6765\u6e90\u200b\n    4. \u200b\u5bf9\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u7684\u200b\u4fe1\u606f\u200b\u8981\u200b\u660e\u786e\u200b\u8bf4\u660e\u200b\n    \"\"\"\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#_9","title":"\u52a8\u6001\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\u8bcd","text":"<pre><code>from langchain.agents.middleware import dynamic_prompt, ModelRequest\nfrom typing import TypedDict\n\nclass UserContext(TypedDict):\n    user_level: str  # \"beginner\", \"intermediate\", \"expert\"\n    language: str\n\n@dynamic_prompt\ndef adaptive_system_prompt(request: ModelRequest) -&gt; str:\n    \"\"\"\u200b\u57fa\u4e8e\u200b\u7528\u6237\u200b\u6c34\u5e73\u200b\u548c\u200b\u8bed\u8a00\u200b\u751f\u6210\u200b\u52a8\u6001\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\u8bcd\u200b\"\"\"\n    context = request.runtime.context\n    user_level = context.get(\"user_level\", \"beginner\")\n    language = context.get(\"language\", \"zh-CN\")\n\n    base_prompt = \"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6709\u200b\u5e2e\u52a9\u200b\u7684\u200bAI\u200b\u52a9\u624b\u200b\u3002\"\n\n    # \u200b\u6839\u636e\u200b\u7528\u6237\u200b\u6c34\u5e73\u200b\u8c03\u6574\u200b\u63d0\u793a\u200b\u8bcd\u200b\n    level_prompts = {\n        \"beginner\": \"\u200b\u8bf7\u200b\u7528\u200b\u7b80\u5355\u200b\u6613\u61c2\u200b\u7684\u200b\u8bed\u8a00\u200b\u89e3\u91ca\u200b\u6982\u5ff5\u200b\uff0c\u200b\u907f\u514d\u200b\u4e13\u4e1a\u672f\u8bed\u200b\u3002\",\n        \"intermediate\": \"\u200b\u63d0\u4f9b\u200b\u5e73\u8861\u200b\u7684\u200b\u89e3\u7b54\u200b\uff0c\u200b\u5305\u542b\u200b\u57fa\u672c\u6982\u5ff5\u200b\u548c\u200b\u4e00\u4e9b\u200b\u8fdb\u9636\u200b\u4fe1\u606f\u200b\u3002\",\n        \"expert\": \"\u200b\u63d0\u4f9b\u200b\u8be6\u7ec6\u200b\u7684\u200b\u6280\u672f\u200b\u5206\u6790\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e13\u4e1a\u672f\u8bed\u200b\u3002\"\n    }\n\n    level_prompt = level_prompts.get(user_level, level_prompts[\"beginner\"])\n\n    # \u200b\u8bed\u8a00\u200b\u7279\u5b9a\u200b\u63d0\u793a\u200b\n    if language == \"zh-CN\":\n        language_prompt = \"\u200b\u8bf7\u200b\u4f7f\u7528\u200b\u4e2d\u6587\u200b\u56de\u590d\u200b\uff0c\u200b\u4fdd\u6301\u200b\u8bed\u8a00\u200b\u7684\u200b\u81ea\u7136\u200b\u548c\u200b\u6d41\u7545\u200b\u3002\"\n    else:\n        language_prompt = \"Please respond in natural and fluent language.\"\n\n    return f\"{base_prompt} {level_prompt} {language_prompt}\"\n\n# \u200b\u521b\u5efa\u200b\u652f\u6301\u200b\u52a8\u6001\u200b\u63d0\u793a\u200b\u8bcd\u200b\u7684\u200b Agent\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_web, get_weather],\n    middleware=[adaptive_system_prompt],\n    context_schema=UserContext\n)\n\n# \u200b\u4f7f\u7528\u200b\u4e0a\u4e0b\u6587\u200b\u8c03\u7528\u200b\nresult = agent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u89e3\u91ca\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\"}]},\n    context={\"user_level\": \"beginner\", \"language\": \"zh-CN\"}\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#_10","title":"\u9ad8\u7ea7\u200b\u529f\u80fd","text":""},{"location":"llmapps/langchain/core-components/agents/#1_1","title":"1. \u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa","text":"<pre><code>from pydantic import BaseModel, Field\nfrom langchain.agents import create_agent\nfrom langchain.agents.structured_output import ToolStrategy\n\nclass ProductReview(BaseModel):\n    \"\"\"\u200b\u4ea7\u54c1\u200b\u8bc4\u4ef7\u200b\u5206\u6790\u200b\"\"\"\n    product_name: str = Field(description=\"\u200b\u4ea7\u54c1\u540d\u79f0\u200b\")\n    rating: int = Field(description=\"\u200b\u8bc4\u5206\u200b(1-5)\", ge=1, le=5)\n    positive_points: list[str] = Field(description=\"\u200b\u4f18\u70b9\u200b\u5217\u8868\u200b\")\n    negative_points: list[str] = Field(description=\"\u200b\u7f3a\u70b9\u200b\u5217\u8868\u200b\")\n    summary: str = Field(description=\"\u200b\u603b\u4f53\u200b\u8bc4\u4ef7\u200b\u603b\u7ed3\u200b\")\n\nclass CustomerInfo(BaseModel):\n    \"\"\"\u200b\u5ba2\u6237\u200b\u4fe1\u606f\u63d0\u53d6\u200b\"\"\"\n    name: str = Field(description=\"\u200b\u5ba2\u6237\u200b\u59d3\u540d\u200b\")\n    email: str = Field(description=\"\u200b\u90ae\u7bb1\u5730\u5740\u200b\")\n    phone: str = Field(description=\"\u200b\u7535\u8bdd\u53f7\u7801\u200b\")\n    interests: list[str] = Field(description=\"\u200b\u5174\u8da3\u200b\u5217\u8868\u200b\")\n\n# \u200b\u4f7f\u7528\u200b ToolStrategy \u200b\u5b9e\u73b0\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_web],\n    response_format=ToolStrategy(ProductReview)  # \u200b\u6216\u200b CustomerInfo\n)\n\n# \u200b\u8c03\u7528\u200b\u5e76\u200b\u83b7\u53d6\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\nresult = agent.invoke({\n    \"messages\": [{\n        \"role\": \"user\", \n        \"content\": \"\u200b\u5206\u6790\u200b\u8fd9\u4e2a\u200b\u4ea7\u54c1\u200b\u8bc4\u4ef7\u200b\uff1a'iPhone 15 Pro \u200b\u592a\u68d2\u4e86\u200b\uff01\u200b\u76f8\u673a\u200b\u8d28\u91cf\u200b\u4f18\u79c0\u200b\uff0c\u200b\u7535\u6c60\u200b\u7eed\u822a\u200b\u4e5f\u200b\u5f88\u200b\u597d\u200b\uff0c\u200b\u5c31\u662f\u200b\u4ef7\u683c\u200b\u6709\u70b9\u200b\u8d35\u200b\u3002\u200b\u8bc4\u5206\u200b5/5'\"\n    }]\n})\n\nstructured_data = result[\"structured_response\"]\nprint(f\"\u200b\u4ea7\u54c1\u200b: {structured_data.product_name}\")\nprint(f\"\u200b\u8bc4\u5206\u200b: {structured_data.rating}\")\nprint(f\"\u200b\u4f18\u70b9\u200b: {', '.join(structured_data.positive_points)}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#2_1","title":"2. \u200b\u5185\u5b58\u200b\u7ba1\u7406","text":""},{"location":"llmapps/langchain/core-components/agents/#_11","title":"\u81ea\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u7ba1\u7406","text":"<pre><code>from typing import TypedDict, List, Optional\nfrom langchain.agents import AgentState, create_agent\n\nclass CustomAgentState(AgentState):\n    \"\"\"\u200b\u81ea\u5b9a\u4e49\u200b Agent \u200b\u72b6\u6001\u200b\"\"\"\n    user_preferences: dict\n    conversation_topics: List[str]\n    interaction_count: int = 0\n    last_active: Optional[str] = None\n\n# \u200b\u901a\u8fc7\u200b state_schema \u200b\u5b9a\u4e49\u200b\u72b6\u6001\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_web, get_weather],\n    state_schema=CustomAgentState\n)\n\n# \u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u8c03\u7528\u200b\nresult = agent.invoke({\n    \"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u6211\u200b\u559c\u6b22\u200b\u6280\u672f\u7c7b\u200b\u5185\u5bb9\u200b\"}],\n    \"user_preferences\": {\"category\": \"technology\", \"detail_level\": \"high\"},\n    \"conversation_topics\": [\"AI\", \"\u200b\u7f16\u7a0b\u200b\"],\n    \"interaction_count\": 1\n})\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#_12","title":"\u901a\u8fc7\u200b\u4e2d\u95f4\u4ef6\u200b\u7ba1\u7406\u200b\u72b6\u6001","text":"<pre><code>from langchain.agents.middleware import AgentMiddleware\nfrom typing import Any\n\nclass UserPreferencesMiddleware(AgentMiddleware):\n    \"\"\"\u200b\u7528\u6237\u200b\u504f\u597d\u200b\u7ba1\u7406\u200b\u4e2d\u95f4\u4ef6\u200b\"\"\"\n    state_schema = CustomAgentState\n\n    def before_model(self, state: CustomAgentState, runtime) -&gt; dict[str, Any] | None:\n        \"\"\"\u200b\u5728\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u524d\u200b\u5904\u7406\u200b\u7528\u6237\u200b\u504f\u597d\u200b\"\"\"\n        preferences = state.get(\"user_preferences\", {})\n\n        # \u200b\u57fa\u4e8e\u200b\u7528\u6237\u200b\u504f\u597d\u200b\u8c03\u6574\u200b\u884c\u4e3a\u200b\n        if preferences.get(\"detail_level\") == \"high\":\n            # \u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd9\u91cc\u200b\u4fee\u6539\u200b\u6d88\u606f\u200b\u6216\u200b\u6dfb\u52a0\u200b\u4e0a\u4e0b\u6587\u200b\n            pass\n\n        return None\n\n    def after_model(self, state: CustomAgentState, runtime) -&gt; dict[str, Any] | None:\n        \"\"\"\u200b\u5728\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u540e\u200b\u66f4\u65b0\u200b\u4ea4\u4e92\u200b\u7edf\u8ba1\u200b\"\"\"\n        return {\n            \"interaction_count\": state.get(\"interaction_count\", 0) + 1,\n            \"last_active\": \"2024-01-01T10:00:00\"  # \u200b\u5b9e\u9645\u200b\u4f7f\u7528\u200b\u4e2d\u200b\u5e94\u4e3a\u200b\u5f53\u524d\u200b\u65f6\u95f4\u200b\n        }\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_web, get_weather],\n    middleware=[UserPreferencesMiddleware()]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#3_1","title":"3. \u200b\u6d41\u5f0f\u200b\u4f20\u8f93","text":"<pre><code>def stream_agent_progress():\n    \"\"\"\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b Agent \u200b\u6267\u884c\u200b\u8fdb\u5ea6\u200b\"\"\"\n    print(\"\u200b\u5f00\u59cb\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b Agent \u200b\u6267\u884c\u200b...\")\n\n    for chunk in agent.stream(\n        {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u641c\u7d22\u200bAI\u200b\u6700\u65b0\u200b\u53d1\u5c55\u200b\u5e76\u200b\u603b\u7ed3\u200b\u8981\u70b9\u200b\"}]},\n        stream_mode=\"values\"  # \u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b \"updates\" \u200b\u6216\u200b \"messages\"\n    ):\n        # \u200b\u83b7\u53d6\u200b\u6700\u65b0\u6d88\u606f\u200b\n        latest_message = chunk[\"messages\"][-1]\n\n        # \u200b\u5904\u7406\u200bAI\u200b\u56de\u590d\u200b\n        if hasattr(latest_message, 'content') and latest_message.content:\n            print(f\"\ud83e\udd16 AI: {latest_message.content}\")\n\n        # \u200b\u5904\u7406\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\n        elif hasattr(latest_message, 'tool_calls') and latest_message.tool_calls:\n            for tool_call in latest_message.tool_calls:\n                print(f\"\ud83d\udee0\ufe0f  \u200b\u8c03\u7528\u200b\u5de5\u5177\u200b: {tool_call['name']}\")\n                print(f\"   \u200b\u53c2\u6570\u200b: {tool_call['args']}\")\n\n# \u200b\u8c03\u7528\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\nstream_agent_progress()\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#4","title":"4. \u200b\u4e2d\u95f4\u4ef6\u200b\u7cfb\u7edf","text":"<pre><code>from langchain.agents.middleware import before_model, after_model, wrap_tool_call\nfrom langchain.messages import RemoveMessage\nfrom langgraph.graph.message import REMOVE_ALL_MESSAGES\n\n@before_model\ndef trim_long_conversations(state, runtime):\n    \"\"\"\u200b\u4fee\u526a\u200b\u8fc7\u957f\u200b\u7684\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\"\"\"\n    messages = state[\"messages\"]\n\n    if len(messages) &gt; 10:\n        # \u200b\u4fdd\u7559\u200b\u7cfb\u7edf\u200b\u6d88\u606f\u200b\u548c\u200b\u6700\u8fd1\u200b5\u200b\u6761\u200b\u6d88\u606f\u200b\n        system_messages = [msg for msg in messages if msg.type == \"system\"]\n        recent_messages = messages[-5:]\n\n        return {\n            \"messages\": [\n                RemoveMessage(id=REMOVE_ALL_MESSAGES),\n                *system_messages,\n                *recent_messages\n            ]\n        }\n\n    return None\n\n@after_model\ndef validate_response_content(state, runtime):\n    \"\"\"\u200b\u9a8c\u8bc1\u200b\u6a21\u578b\u200b\u54cd\u5e94\u200b\u5185\u5bb9\u200b\"\"\"\n    last_message = state[\"messages\"][-1]\n\n    # \u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u5305\u542b\u200b\u4e0d\u5f53\u200b\u5185\u5bb9\u200b\n    inappropriate_keywords = [\"\u200b\u66b4\u529b\u200b\", \"\u200b\u4ec7\u6068\u200b\", \"\u200b\u6b67\u89c6\u200b\"]\n    if any(keyword in last_message.content for keyword in inappropriate_keywords):\n        return {\n            \"messages\": [\n                RemoveMessage(id=last_message.id),\n                *state[\"messages\"][:-1]\n            ]\n        }\n\n    return None\n\n@wrap_tool_call\ndef log_tool_execution(request, handler):\n    \"\"\"\u200b\u8bb0\u5f55\u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u65e5\u5fd7\u200b\"\"\"\n    tool_name = request.tool_call[\"name\"]\n    tool_args = request.tool_call[\"args\"]\n\n    print(f\"\ud83d\udcdd \u200b\u5f00\u59cb\u200b\u6267\u884c\u200b\u5de5\u5177\u200b: {tool_name}\")\n    print(f\"   \u200b\u53c2\u6570\u200b: {tool_args}\")\n\n    start_time = time.time()\n    result = handler(request)\n    execution_time = time.time() - start_time\n\n    print(f\"\u2705 \u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u5b8c\u6210\u200b: {tool_name} (\u200b\u8017\u65f6\u200b: {execution_time:.2f}s)\")\n\n    return result\n\n# \u200b\u521b\u5efa\u200b\u5305\u542b\u200b\u591a\u4e2a\u200b\u4e2d\u95f4\u4ef6\u200b\u7684\u200b Agent\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_web, get_weather, calculator],\n    middleware=[\n        trim_long_conversations,\n        validate_response_content,\n        log_tool_execution\n    ]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#_13","title":"\u5b9e\u9645\u200b\u5e94\u7528\u200b\u573a\u666f","text":""},{"location":"llmapps/langchain/core-components/agents/#1-agent_1","title":"\u573a\u666f\u200b1\uff1a\u200b\u5ba2\u6237\u670d\u52a1\u200b Agent","text":"<pre><code>from langchain.tools import tool\nfrom datetime import datetime\n\nclass CustomerServiceAgent:\n    \"\"\"\u200b\u5ba2\u6237\u670d\u52a1\u200b Agent\"\"\"\n\n    def __init__(self):\n        self.agent = self._create_agent()\n\n    @tool\n    def check_order_status(self, order_id: str) -&gt; str:\n        \"\"\"\u200b\u68c0\u67e5\u200b\u8ba2\u5355\u200b\u72b6\u6001\u200b\u3002\"\"\"\n        # \u200b\u6a21\u62df\u200b\u8ba2\u5355\u200b\u6570\u636e\u5e93\u200b\n        orders = {\n            \"ORD001\": {\"status\": \"\u200b\u5df2\u200b\u53d1\u8d27\u200b\", \"tracking\": \"SF123456789\"},\n            \"ORD002\": {\"status\": \"\u200b\u5904\u7406\u200b\u4e2d\u200b\", \"tracking\": None},\n            \"ORD003\": {\"status\": \"\u200b\u5df2\u200b\u9001\u8fbe\u200b\", \"tracking\": \"SF987654321\"}\n        }\n\n        if order_id in orders:\n            order = orders[order_id]\n            result = f\"\u200b\u8ba2\u5355\u200b {order_id} \u200b\u72b6\u6001\u200b: {order['status']}\"\n            if order['tracking']:\n                result += f\"\\n\u200b\u7269\u6d41\u200b\u5355\u200b\u53f7\u200b: {order['tracking']}\"\n            return result\n        return f\"\u200b\u672a\u627e\u5230\u200b\u8ba2\u5355\u200b {order_id}\"\n\n    @tool\n    def process_refund(self, order_id: str, reason: str) -&gt; str:\n        \"\"\"\u200b\u5904\u7406\u200b\u9000\u6b3e\u200b\u7533\u8bf7\u200b\u3002\"\"\"\n        return f\"\u200b\u8ba2\u5355\u200b {order_id} \u200b\u7684\u200b\u9000\u6b3e\u200b\u7533\u8bf7\u200b\u5df2\u200b\u63d0\u4ea4\u200b\u3002\u200b\u539f\u56e0\u200b: {reason}\\n\u200b\u9884\u8ba1\u200b3-5\u200b\u4e2a\u200b\u5de5\u4f5c\u65e5\u200b\u5904\u7406\u200b\u5b8c\u6210\u200b\u3002\"\n\n    @tool\n    def get_faq(self, category: str) -&gt; str:\n        \"\"\"\u200b\u83b7\u53d6\u200b\u5e38\u89c1\u200b\u95ee\u9898\u89e3\u7b54\u200b\u3002\"\"\"\n        faqs = {\n            \"shipping\": \"\u200b\u914d\u9001\u200b\u65f6\u95f4\u200b\uff1a\u200b\u666e\u901a\u200b\u5feb\u9012\u200b3-5\u200b\u5929\u200b\uff0c\u200b\u52a0\u6025\u200b\u5feb\u9012\u200b1-2\u200b\u5929\u200b\",\n            \"returns\": \"\u200b\u9000\u6362\u8d27\u200b\u653f\u7b56\u200b\uff1a7\u200b\u5929\u65e0\u200b\u7406\u7531\u200b\u9000\u8d27\u200b\uff0c30\u200b\u5929\u200b\u8d28\u91cf\u200b\u95ee\u9898\u200b\u7684\u200b\u6362\u8d27\u200b\",\n            \"payment\": \"\u200b\u652f\u4ed8\u200b\u65b9\u5f0f\u200b\uff1a\u200b\u652f\u6301\u200b\u652f\u4ed8\u5b9d\u200b\u3001\u200b\u5fae\u4fe1\u200b\u652f\u4ed8\u200b\u3001\u200b\u94f6\u884c\u5361\u200b\"\n        }\n        return faqs.get(category, \"\u200b\u6682\u65e0\u200b\u8be5\u200b\u7c7b\u522b\u200b\u5e38\u89c1\u95ee\u9898\u200b\")\n\n    def _create_agent(self):\n        \"\"\"\u200b\u521b\u5efa\u200b\u5ba2\u6237\u670d\u52a1\u200b Agent\"\"\"\n        return create_agent(\n            model=\"openai:gpt-4o\",\n            tools=[self.check_order_status, self.process_refund, self.get_faq],\n            system_prompt=\"\"\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e13\u4e1a\u200b\u7684\u200b\u5ba2\u6237\u670d\u52a1\u200b\u4ee3\u8868\u200b\u3002\u200b\u8bf7\u200b\u9075\u5faa\u200b\u4ee5\u4e0b\u200b\u539f\u5219\u200b\uff1a\n            1. \u200b\u59cb\u7ec8\u4fdd\u6301\u200b\u53cb\u597d\u200b\u548c\u200b\u4e13\u4e1a\u200b\u7684\u200b\u6001\u5ea6\u200b\n            2. \u200b\u51c6\u786e\u200b\u56de\u7b54\u200b\u5ba2\u6237\u200b\u95ee\u9898\u200b\n            3. \u200b\u4f7f\u7528\u200b\u5de5\u5177\u200b\u83b7\u53d6\u200b\u6700\u65b0\u200b\u4fe1\u606f\u200b\n            4. \u200b\u5bf9\u4e8e\u200b\u590d\u6742\u200b\u95ee\u9898\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u6e05\u6670\u200b\u7684\u200b\u540e\u7eed\u200b\u6b65\u9aa4\u200b\n            5. \u200b\u5982\u679c\u200b\u65e0\u6cd5\u200b\u89e3\u51b3\u95ee\u9898\u200b\uff0c\u200b\u5efa\u8bae\u200b\u8054\u7cfb\u200b\u4eba\u5de5\u200b\u5ba2\u670d\u200b\n            \"\"\",\n            state_schema=CustomAgentState\n        )\n\n    def handle_customer_query(self, query: str, user_id: str):\n        \"\"\"\u200b\u5904\u7406\u200b\u5ba2\u6237\u200b\u67e5\u8be2\u200b\"\"\"\n        return self.agent.invoke({\n            \"messages\": [{\"role\": \"user\", \"content\": query}],\n            \"user_preferences\": {\"user_id\": user_id}\n        })\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nservice_agent = CustomerServiceAgent()\nresult = service_agent.handle_customer_query(\"\u200b\u6211\u200b\u7684\u200b\u8ba2\u5355\u200bORD001\u200b\u72b6\u6001\u200b\u5982\u4f55\u200b\uff1f\", \"user123\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#2-agent_1","title":"\u573a\u666f\u200b2\uff1a\u200b\u6570\u636e\u5206\u6790\u200b Agent","text":"<pre><code>import pandas as pd\nimport numpy as np\nfrom io import StringIO\n\nclass DataAnalysisAgent:\n    \"\"\"\u200b\u6570\u636e\u5206\u6790\u200b Agent\"\"\"\n\n    def __init__(self):\n        self.agent = self._create_agent()\n        self.current_dataset = None\n\n    @tool\n    def load_csv_data(self, csv_content: str) -&gt; str:\n        \"\"\"\u200b\u52a0\u8f7d\u200bCSV\u200b\u6570\u636e\u200b\u3002\"\"\"\n        try:\n            self.current_dataset = pd.read_csv(StringIO(csv_content))\n            stats = {\n                \"\u200b\u884c\u200b\u6570\u200b\": len(self.current_dataset),\n                \"\u200b\u5217\u6570\u200b\": len(self.current_dataset.columns),\n                \"\u200b\u5217\u540d\u200b\": list(self.current_dataset.columns)\n            }\n            return f\"\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u6210\u529f\u200b\uff01\u200b\u7edf\u8ba1\u200b\u4fe1\u606f\u200b: {stats}\"\n        except Exception as e:\n            return f\"\u200b\u6570\u636e\u200b\u52a0\u8f7d\u200b\u5931\u8d25\u200b: {str(e)}\"\n\n    @tool\n    def describe_dataset(self) -&gt; str:\n        \"\"\"\u200b\u63cf\u8ff0\u200b\u6570\u636e\u200b\u96c6\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n        if self.current_dataset is None:\n            return \"\u200b\u8bf7\u200b\u5148\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\"\n\n        description = self.current_dataset.describe()\n        return f\"\u200b\u6570\u636e\u200b\u96c6\u200b\u63cf\u8ff0\u200b:\\n{description}\"\n\n    @tool\n    def calculate_correlation(self, column1: str, column2: str) -&gt; str:\n        \"\"\"\u200b\u8ba1\u7b97\u200b\u4e24\u5217\u200b\u4e4b\u95f4\u200b\u7684\u200b\u76f8\u5173\u6027\u200b\u3002\"\"\"\n        if self.current_dataset is None:\n            return \"\u200b\u8bf7\u200b\u5148\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\"\n\n        if column1 not in self.current_dataset.columns or column2 not in self.current_dataset.columns:\n            return \"\u200b\u6307\u5b9a\u200b\u7684\u200b\u5217\u200b\u4e0d\u200b\u5b58\u5728\u200b\"\n\n        correlation = self.current_dataset[column1].corr(self.current_dataset[column2])\n        return f\"{column1} \u200b\u548c\u200b {column2} \u200b\u7684\u200b\u76f8\u5173\u6027\u200b: {correlation:.3f}\"\n\n    @tool\n    def filter_data(self, condition: str) -&gt; str:\n        \"\"\"\u200b\u6839\u636e\u200b\u6761\u4ef6\u200b\u8fc7\u6ee4\u200b\u6570\u636e\u200b\u3002\"\"\"\n        if self.current_dataset is None:\n            return \"\u200b\u8bf7\u200b\u5148\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\"\n\n        try:\n            filtered_data = self.current_dataset.query(condition)\n            return f\"\u200b\u8fc7\u6ee4\u200b\u540e\u200b\u6570\u636e\u200b: {len(filtered_data)} \u200b\u884c\u200b\"\n        except Exception as e:\n            return f\"\u200b\u8fc7\u6ee4\u200b\u6761\u4ef6\u200b\u9519\u8bef\u200b: {str(e)}\"\n\n    def _create_agent(self):\n        \"\"\"\u200b\u521b\u5efa\u200b\u6570\u636e\u5206\u6790\u200b Agent\"\"\"\n        return create_agent(\n            model=\"openai:gpt-4o\",\n            tools=[\n                self.load_csv_data, \n                self.describe_dataset, \n                self.calculate_correlation,\n                self.filter_data\n            ],\n            system_prompt=\"\"\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6570\u636e\u5206\u6790\u200b\u4e13\u5bb6\u200b\u3002\u200b\u8bf7\u200b\u5e2e\u52a9\u200b\u7528\u6237\u200b\uff1a\n            1. \u200b\u52a0\u8f7d\u200b\u548c\u200b\u5206\u6790\u200b\u6570\u636e\u200b\n            2. \u200b\u63d0\u4f9b\u6570\u636e\u200b\u7edf\u8ba1\u200b\u4fe1\u606f\u200b\n            3. \u200b\u8ba1\u7b97\u200b\u6307\u6807\u200b\u548c\u200b\u76f8\u5173\u6027\u200b\n            4. \u200b\u89e3\u91ca\u200b\u5206\u6790\u200b\u7ed3\u679c\u200b\u7684\u200b\u542b\u4e49\u200b\n            5. \u200b\u7528\u200b\u901a\u4fd7\u6613\u61c2\u200b\u7684\u200b\u8bed\u8a00\u200b\u89e3\u91ca\u200b\u6280\u672f\u200b\u6982\u5ff5\u200b\n            \"\"\"\n        )\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nanalysis_agent = DataAnalysisAgent()\n\n# \u200b\u6a21\u62df\u200bCSV\u200b\u6570\u636e\u200b\nsample_data = \"\"\"name,age,salary,department\n\u200b\u5f20\u4e09\u200b,25,50000,\u200b\u6280\u672f\u90e8\u200b\n\u200b\u674e\u56db\u200b,30,60000,\u200b\u9500\u552e\u90e8\u200b\n\u200b\u738b\u4e94\u200b,35,70000,\u200b\u6280\u672f\u90e8\u200b\n\u200b\u8d75\u516d\u200b,28,55000,\u200b\u5e02\u573a\u90e8\u200b\"\"\"\n\nresult = analysis_agent.agent.invoke({\n    \"messages\": [{\"role\": \"user\", \"content\": f\"\u200b\u8bf7\u200b\u5206\u6790\u200b\u4ee5\u4e0b\u200b\u6570\u636e\u200b:\\n{sample_data}\"}]\n})\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#3-agent","title":"\u573a\u666f\u200b3\uff1a\u200b\u7814\u7a76\u200b\u52a9\u624b\u200b Agent","text":"<pre><code>class ResearchAssistantAgent:\n    \"\"\"\u200b\u7814\u7a76\u200b\u52a9\u624b\u200b Agent\"\"\"\n\n    def __init__(self):\n        self.agent = self._create_agent()\n        self.research_topics = []\n\n    @tool\n    def search_academic_papers(self, topic: str, max_results: int = 5) -&gt; str:\n        \"\"\"\u200b\u641c\u7d22\u200b\u5b66\u672f\u8bba\u6587\u200b\u3002\"\"\"\n        # \u200b\u6a21\u62df\u200b\u5b66\u672f\u200b\u641c\u7d22\u200b\n        papers = [\n            f\"\u300a{topic}\u200b\u7684\u200b\u6700\u65b0\u200b\u7814\u7a76\u8fdb\u5c55\u200b\u300b- \u200b\u4f5c\u8005\u200bA et al.\",\n            f\"\u300a{topic}\u200b\u5728\u5b9e\u8df5\u4e2d\u200b\u7684\u200b\u5e94\u7528\u200b\u300b- \u200b\u4f5c\u8005\u200bB et al.\", \n            f\"\u300a{topic}\u200b\u7684\u200b\u672a\u6765\u200b\u53d1\u5c55\u8d8b\u52bf\u200b\u300b- \u200b\u4f5c\u8005\u200bC et al.\"\n        ]\n        return f\"\u200b\u627e\u5230\u200b {len(papers)} \u200b\u7bc7\u200b\u76f8\u5173\u200b\u8bba\u6587\u200b:\\n\" + \"\\n\".join(papers[:max_results])\n\n    @tool\n    def summarize_research_topic(self, topic: str) -&gt; str:\n        \"\"\"\u200b\u603b\u7ed3\u200b\u7814\u7a76\u200b\u4e3b\u9898\u200b\u3002\"\"\"\n        self.research_topics.append(topic)\n        return f\"\"\"\n        {topic} \u200b\u7814\u7a76\u200b\u603b\u7ed3\u200b\uff1a\n        1. \u200b\u6838\u5fc3\u200b\u6982\u5ff5\u200b\uff1a{topic}\u200b\u6d89\u53ca\u200b\u591a\u4e2a\u200b\u4ea4\u53c9\u5b66\u79d1\u200b\u9886\u57df\u200b\n        2. \u200b\u5f53\u524d\u200b\u70ed\u70b9\u200b\uff1aAI\u200b\u9a71\u52a8\u200b\u7684\u200b{topic}\u200b\u7814\u7a76\u200b\u6b63\u5728\u200b\u5174\u8d77\u200b\n        3. \u200b\u4e3b\u8981\u200b\u6311\u6218\u200b\uff1a\u200b\u6570\u636e\u200b\u8d28\u91cf\u200b\u548c\u200b\u7b97\u6cd5\u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\n        4. \u200b\u672a\u6765\u200b\u65b9\u5411\u200b\uff1a\u200b\u81ea\u52a8\u5316\u200b\u3001\u200b\u667a\u80fd\u5316\u200b{topic}\u200b\u89e3\u51b3\u65b9\u6848\u200b\n        \"\"\"\n\n    @tool\n    def compare_topics(self, topic1: str, topic2: str) -&gt; str:\n        \"\"\"\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u7814\u7a76\u200b\u4e3b\u9898\u200b\u3002\"\"\"\n        return f\"\"\"\n        {topic1} vs {topic2} \u200b\u6bd4\u8f83\u200b\uff1a\n\n        \u200b\u76f8\u4f3c\u200b\u70b9\u200b\uff1a\n        - \u200b\u90fd\u200b\u662f\u200b\u524d\u6cbf\u6280\u672f\u200b\u9886\u57df\u200b\n        - \u200b\u90fd\u200b\u9700\u8981\u200b\u8de8\u5b66\u79d1\u200b\u77e5\u8bc6\u200b\n        - \u200b\u90fd\u200b\u6709\u200b\u5e7f\u6cdb\u200b\u7684\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\n\n        \u200b\u4e0d\u540c\u70b9\u200b\uff1a\n        - {topic1}\u200b\u66f4\u200b\u6ce8\u91cd\u200b\u7406\u8bba\u200b\u53d1\u5c55\u200b\n        - {topic2}\u200b\u66f4\u200b\u6ce8\u91cd\u200b\u5b9e\u8df5\u200b\u5e94\u7528\u200b\n        - \u200b\u6280\u672f\u200b\u6808\u200b\u548c\u200b\u7814\u7a76\u200b\u65b9\u6cd5\u200b\u6709\u6240\u4e0d\u540c\u200b\n        \"\"\"\n\n    @tool\n    def generate_research_questions(self, topic: str) -&gt; str:\n        \"\"\"\u200b\u751f\u6210\u200b\u7814\u7a76\u200b\u95ee\u9898\u200b\u3002\"\"\"\n        questions = [\n            f\"{topic}\u200b\u5982\u4f55\u200b\u5f71\u54cd\u200b\u76f8\u5173\u200b\u884c\u4e1a\u200b\uff1f\",\n            f\"{topic}\u200b\u9762\u4e34\u200b\u7684\u200b\u4e3b\u8981\u200b\u6280\u672f\u200b\u6311\u6218\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f\",\n            f\"{topic}\u200b\u7684\u200b\u672a\u6765\u200b\u53d1\u5c55\u200b\u65b9\u5411\u200b\u6709\u200b\u54ea\u4e9b\u200b\uff1f\",\n            f\"\u200b\u5982\u4f55\u200b\u8bc4\u4f30\u200b{topic}\u200b\u7684\u200b\u5b9e\u9645\u6548\u679c\u200b\uff1f\"\n        ]\n        return \"\u200b\u6f5c\u5728\u200b\u7814\u7a76\u200b\u95ee\u9898\u200b:\\n\" + \"\\n\".join([f\"{i+1}. {q}\" for i, q in enumerate(questions)])\n\n    def _create_agent(self):\n        \"\"\"\u200b\u521b\u5efa\u200b\u7814\u7a76\u200b\u52a9\u624b\u200b Agent\"\"\"\n        return create_agent(\n            model=\"openai:gpt-4o\",\n            tools=[\n                self.search_academic_papers,\n                self.summarize_research_topic, \n                self.compare_topics,\n                self.generate_research_questions\n            ],\n            system_prompt=\"\"\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e13\u4e1a\u200b\u7684\u200b\u7814\u7a76\u200b\u52a9\u624b\u200b\u3002\u200b\u8bf7\u200b\u5e2e\u52a9\u200b\u7528\u6237\u200b\uff1a\n            1. \u200b\u641c\u7d22\u200b\u76f8\u5173\u200b\u5b66\u672f\u200b\u6587\u732e\u200b\n            2. \u200b\u603b\u7ed3\u200b\u7814\u7a76\u200b\u4e3b\u9898\u200b\u548c\u200b\u8d8b\u52bf\u200b\n            3. \u200b\u6bd4\u8f83\u200b\u4e0d\u540c\u200b\u7814\u7a76\u200b\u65b9\u5411\u200b\n            4. \u200b\u751f\u6210\u200b\u6709\u200b\u4ef7\u503c\u200b\u7684\u200b\u7814\u7a76\u200b\u95ee\u9898\u200b\n            5. \u200b\u63d0\u4f9b\u200b\u7814\u7a76\u200b\u65b9\u6cd5\u200b\u548c\u200b\u5efa\u8bae\u200b\n\n            \u200b\u8bf7\u200b\u4fdd\u6301\u200b\u4e13\u4e1a\u6027\u200b\u548c\u200b\u51c6\u786e\u6027\u200b\uff0c\u200b\u5f15\u7528\u200b\u53ef\u9760\u200b\u7684\u200b\u6765\u6e90\u200b\u3002\n            \"\"\"\n        )\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nresearch_agent = ResearchAssistantAgent()\nresult = research_agent.agent.invoke({\n    \"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u5e2e\u200b\u6211\u200b\u7814\u7a76\u200b\u4eba\u5de5\u667a\u80fd\u200b\u5728\u200b\u533b\u7597\u200b\u9886\u57df\u200b\u7684\u200b\u5e94\u7528\u200b\"}]\n})\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#_14","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"llmapps/langchain/core-components/agents/#1-agent_2","title":"1. Agent \u200b\u8bbe\u8ba1\u200b\u539f\u5219","text":"<pre><code>def create_well_designed_agent():\n    \"\"\"\u200b\u521b\u5efa\u200b\u826f\u597d\u200b\u8bbe\u8ba1\u200b\u7684\u200b Agent\"\"\"\n\n    # 1. \u200b\u660e\u786e\u200b\u7684\u200b\u5de5\u5177\u200b\u5b9a\u4e49\u200b\n    @tool\n    def specific_tool(param1: str, param2: int = 10) -&gt; str:\n        \"\"\"\u200b\u6267\u884c\u200b\u7279\u5b9a\u200b\u4efb\u52a1\u200b\u7684\u200b\u5de5\u5177\u200b\u3002\n\n        Args:\n            param1: \u200b\u4e3b\u8981\u53c2\u6570\u200b\u63cf\u8ff0\u200b\n            param2: \u200b\u53ef\u200b\u9009\u200b\u53c2\u6570\u200b\uff0c\u200b\u9ed8\u8ba4\u503c\u200b10\n        \"\"\"\n        return f\"\u200b\u5904\u7406\u7ed3\u679c\u200b: {param1} * {param2}\"\n\n    # 2. \u200b\u6e05\u6670\u200b\u7684\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\u8bcd\u200b\n    system_prompt = \"\"\"\n    \u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e13\u4e1a\u200b\u7684\u200b\u52a9\u624b\u200b\u3002\u200b\u8bf7\u200b\u9075\u5faa\u200b\uff1a\n    - \u200b\u51c6\u786e\u200b\u56de\u7b54\u200b\uff0c\u200b\u4e0d\u200b\u7f16\u9020\u200b\u4fe1\u606f\u200b\n    - \u200b\u4f7f\u7528\u200b\u5de5\u5177\u200b\u83b7\u53d6\u200b\u771f\u5b9e\u200b\u6570\u636e\u200b\n    - \u200b\u5bf9\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u7684\u200b\u5185\u5bb9\u200b\u8981\u200b\u8bf4\u660e\u200b\n    - \u200b\u4fdd\u6301\u200b\u53cb\u597d\u200b\u548c\u200b\u4e13\u4e1a\u200b\n    \"\"\"\n\n    # 3. \u200b\u9002\u5f53\u200b\u7684\u200b\u4e2d\u95f4\u4ef6\u200b\n    @before_model\n    def ensure_proper_context(state, runtime):\n        \"\"\"\u200b\u786e\u4fdd\u200b\u9002\u5f53\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\"\"\"\n        messages = state[\"messages\"]\n        if len(messages) &gt; 0:\n            last_message = messages[-1]\n            # \u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd9\u91cc\u200b\u6dfb\u52a0\u200b\u4e0a\u4e0b\u6587\u200b\u9a8c\u8bc1\u200b\u903b\u8f91\u200b\n            pass\n        return None\n\n    # \u200b\u521b\u5efa\u200b Agent\n    return create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[specific_tool],\n        system_prompt=system_prompt,\n        middleware=[ensure_proper_context]\n    )\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#2_2","title":"2. \u200b\u9519\u8bef\u5904\u7406\u200b\u7b56\u7565","text":"<pre><code>class RobustAgent:\n    \"\"\"\u200b\u5065\u58ee\u200b\u7684\u200b Agent \u200b\u5b9e\u73b0\u200b\"\"\"\n\n    def __init__(self):\n        self.agent = self._create_robust_agent()\n\n    def _create_robust_agent(self):\n        \"\"\"\u200b\u521b\u5efa\u200b\u5065\u58ee\u200b\u7684\u200b Agent\"\"\"\n\n        @wrap_tool_call\n        def comprehensive_error_handling(request, handler):\n            \"\"\"\u200b\u5168\u9762\u200b\u7684\u200b\u9519\u8bef\u5904\u7406\u200b\"\"\"\n            try:\n                # \u200b\u53c2\u6570\u200b\u9a8c\u8bc1\u200b\n                tool_call = request.tool_call\n                if not self._validate_tool_inputs(tool_call):\n                    return ToolMessage(\n                        content=\"\u200b\u53c2\u6570\u200b\u9a8c\u8bc1\u200b\u5931\u8d25\u200b\uff0c\u200b\u8bf7\u200b\u68c0\u67e5\u200b\u8f93\u5165\u200b\u683c\u5f0f\u200b\",\n                        tool_call_id=tool_call[\"id\"]\n                    )\n\n                return handler(request)\n\n            except Exception as e:\n                # \u200b\u8bb0\u5f55\u200b\u9519\u8bef\u200b\n                print(f\"\u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u9519\u8bef\u200b: {e}\")\n\n                # \u200b\u8fd4\u56de\u200b\u7528\u6237\u200b\u53cb\u597d\u200b\u7684\u200b\u9519\u8bef\u4fe1\u606f\u200b\n                return ToolMessage(\n                    content=\"\u200b\u670d\u52a1\u200b\u6682\u65f6\u200b\u4e0d\u53ef\u200b\u7528\u200b\uff0c\u200b\u8bf7\u200b\u7a0d\u540e\u200b\u91cd\u8bd5\u200b\",\n                    tool_call_id=request.tool_call[\"id\"]\n                )\n\n        @wrap_model_call  \n        def model_fallback(request, handler):\n            \"\"\"\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u964d\u7ea7\u200b\u7b56\u7565\u200b\"\"\"\n            try:\n                return handler(request)\n            except Exception as e:\n                # \u200b\u5982\u679c\u200b\u4e3b\u8981\u200b\u6a21\u578b\u200b\u5931\u8d25\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd9\u91cc\u200b\u5207\u6362\u200b\u5230\u200b\u5907\u7528\u200b\u6a21\u578b\u200b\n                print(f\"\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u5931\u8d25\u200b: {e}\")\n                raise  # \u200b\u6216\u200b\u5b9e\u73b0\u200b\u964d\u7ea7\u200b\u903b\u8f91\u200b\n\n        return create_agent(\n            model=\"openai:gpt-4o\",\n            tools=[search_web, get_weather],\n            middleware=[comprehensive_error_handling, model_fallback]\n        )\n\n    def _validate_tool_inputs(self, tool_call):\n        \"\"\"\u200b\u9a8c\u8bc1\u200b\u5de5\u5177\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\"\"\"\n        # \u200b\u5b9e\u73b0\u200b\u53c2\u6570\u200b\u9a8c\u8bc1\u200b\u903b\u8f91\u200b\n        return True\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#3_2","title":"3. \u200b\u6027\u80fd\u200b\u4f18\u5316","text":"<pre><code>class OptimizedAgent:\n    \"\"\"\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\u7684\u200b Agent\"\"\"\n\n    def __init__(self):\n        self.agent = self._create_optimized_agent()\n        self.response_cache = {}  # \u200b\u7b80\u5355\u200b\u7f13\u5b58\u200b\n\n    def _create_optimized_agent(self):\n        \"\"\"\u200b\u521b\u5efa\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\u7684\u200b Agent\"\"\"\n\n        @before_model\n        def check_cache(state, runtime):\n            \"\"\"\u200b\u68c0\u67e5\u200b\u7f13\u5b58\u200b\u4ee5\u200b\u907f\u514d\u200b\u91cd\u590d\u200b\u5904\u7406\u200b\"\"\"\n            user_message = state[\"messages\"][-1].content\n            cache_key = hash(user_message)\n\n            if cache_key in self.response_cache:\n                # \u200b\u8fd4\u56de\u200b\u7f13\u5b58\u200b\u54cd\u5e94\u200b\n                return self.response_cache[cache_key]\n\n            return None\n\n        @after_model\n        def update_cache(state, runtime):\n            \"\"\"\u200b\u66f4\u65b0\u200b\u54cd\u5e94\u200b\u7f13\u5b58\u200b\"\"\"\n            if len(state[\"messages\"]) &gt; 0:\n                last_message = state[\"messages\"][-1]\n                user_message = state[\"messages\"][-2].content  # \u200b\u5047\u8bbe\u200b\u4e0a\u200b\u4e00\u6761\u200b\u662f\u200b\u7528\u6237\u200b\u6d88\u606f\u200b\n                cache_key = hash(user_message)\n                self.response_cache[cache_key] = {\"messages\": [last_message]}\n\n            return None\n\n        @wrap_tool_call\n        def timeout_protection(request, handler):\n            \"\"\"\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u8d85\u65f6\u200b\u4fdd\u62a4\u200b\"\"\"\n            import signal\n            import time\n\n            def timeout_handler(signum, frame):\n                raise TimeoutError(\"\u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u8d85\u65f6\u200b\")\n\n            # \u200b\u8bbe\u7f6e\u200b\u8d85\u65f6\u200b\uff085\u200b\u79d2\u200b\uff09\n            signal.signal(signal.SIGALRM, timeout_handler)\n            signal.alarm(5)\n\n            try:\n                result = handler(request)\n                signal.alarm(0)  # \u200b\u53d6\u6d88\u200b\u8d85\u65f6\u200b\n                return result\n            except TimeoutError:\n                return ToolMessage(\n                    content=\"\u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u8d85\u65f6\u200b\uff0c\u200b\u8bf7\u200b\u7b80\u5316\u200b\u8bf7\u6c42\u200b\u6216\u200b\u7a0d\u540e\u200b\u91cd\u8bd5\u200b\",\n                    tool_call_id=request.tool_call[\"id\"]\n                )\n\n        return create_agent(\n            model=\"openai:gpt-4o\",\n            tools=[search_web, get_weather],\n            middleware=[check_cache, update_cache, timeout_protection]\n        )\n</code></pre>"},{"location":"llmapps/langchain/core-components/agents/#_15","title":"\u603b\u7ed3","text":"<p>LangChain Agents \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u7684\u200bAI\u200b\u5e94\u7528\u200b\u6784\u5efa\u200b\u80fd\u529b\u200b\uff1a</p> <ul> <li>\u200b\u7075\u6d3b\u200b\u914d\u7f6e\u200b\uff1a\u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u6a21\u578b\u200b\u3001\u200b\u5de5\u5177\u200b\u548c\u200b\u63d0\u793a\u200b\u8bcd\u200b\u914d\u7f6e\u200b</li> <li>\u200b\u5f3a\u5927\u200b\u6269\u5c55\u200b\uff1a\u200b\u901a\u8fc7\u200b\u4e2d\u95f4\u4ef6\u200b\u7cfb\u7edf\u200b\u5b9e\u73b0\u200b\u9ad8\u5ea6\u200b\u5b9a\u5236\u200b\u5316\u200b</li> <li>\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\uff1a\u200b\u5185\u7f6e\u200b\u5bf9\u8bdd\u200b\u72b6\u6001\u200b\u548c\u200b\u81ea\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b</li> <li>\u200b\u751f\u4ea7\u200b\u5c31\u7eea\u200b\uff1a\u200b\u5305\u542b\u200b\u9519\u8bef\u5904\u7406\u200b\u3001\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\u7b49\u200b\u751f\u4ea7\u200b\u7ea7\u200b\u7279\u6027\u200b</li> <li>\u200b\u5b9e\u65f6\u200b\u4ea4\u4e92\u200b\uff1a\u200b\u652f\u6301\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u548c\u200b\u8fdb\u5ea6\u200b\u76d1\u63a7\u200b</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u8bbe\u8ba1\u200b\u548c\u200b\u4f7f\u7528\u200b Agents\uff0c\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u51fa\u200b\u80fd\u591f\u200b\u5904\u7406\u200b\u590d\u6742\u200b\u4efb\u52a1\u200b\u3001\u200b\u4e0e\u200b\u5916\u90e8\u200b\u7cfb\u7edf\u200b\u4ea4\u4e92\u200b\u5e76\u200b\u63d0\u4f9b\u200b\u667a\u80fd\u200b\u670d\u52a1\u200b\u7684\u200bAI\u200b\u5e94\u7528\u200b\u7cfb\u7edf\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/messages/","title":"LangChain Messages","text":""},{"location":"llmapps/langchain/core-components/messages/#_1","title":"\u6982\u8ff0","text":"<p>Messages\uff08\u200b\u6d88\u606f\u200b\uff09\u200b\u662f\u200b LangChain \u200b\u4e2d\u200b\u6a21\u578b\u200b\u4e0a\u4e0b\u6587\u200b\u7684\u200b\u57fa\u672c\u200b\u5355\u4f4d\u200b\u3002\u200b\u5b83\u4eec\u200b\u8868\u793a\u200b\u6a21\u578b\u200b\u7684\u200b\u8f93\u5165\u200b\u548c\u200b\u8f93\u51fa\u200b\uff0c\u200b\u643a\u5e26\u200b\u4e0e\u200b LLM \u200b\u4ea4\u4e92\u200b\u65f6\u200b\u8868\u793a\u200b\u5bf9\u8bdd\u200b\u72b6\u6001\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u5185\u5bb9\u200b\u548c\u200b\u5143\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u6d88\u606f\u200b\u5bf9\u8c61\u200b\u5305\u542b\u200b\uff1a</p> <ul> <li>\u200b\u89d2\u8272\u200b\uff1a\u200b\u6807\u8bc6\u200b\u6d88\u606f\u200b\u7c7b\u578b\u200b\uff08\u200b\u5982\u200b <code>system</code>\u3001<code>user</code>\uff09</li> <li>\u200b\u5185\u5bb9\u200b\uff1a\u200b\u8868\u793a\u200b\u6d88\u606f\u200b\u7684\u200b\u5b9e\u9645\u200b\u5185\u5bb9\u200b\uff08\u200b\u5982\u200b\u6587\u672c\u200b\u3001\u200b\u56fe\u50cf\u200b\u3001\u200b\u97f3\u9891\u200b\u7b49\u200b\uff09</li> <li>\u200b\u5143\u200b\u6570\u636e\u200b\uff1a\u200b\u53ef\u200b\u9009\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u5982\u200b\u54cd\u5e94\u200b\u4fe1\u606f\u200b\u3001\u200b\u6d88\u606f\u200b ID \u200b\u548c\u200b\u4ee4\u724c\u200b\u4f7f\u7528\u200b\u60c5\u51b5\u200b</li> </ul>"},{"location":"llmapps/langchain/core-components/messages/#_2","title":"\u57fa\u7840\u200b\u7528\u6cd5","text":""},{"location":"llmapps/langchain/core-components/messages/#1","title":"1. \u200b\u521b\u5efa\u200b\u6d88\u606f\u200b\u5bf9\u8c61","text":"<pre><code>from langchain.messages import HumanMessage, AIMessage, SystemMessage\n\n# \u200b\u7cfb\u7edf\u200b\u6d88\u606f\u200b - \u200b\u8bbe\u7f6e\u200b\u6a21\u578b\u200b\u884c\u4e3a\u200b\nsystem_msg = SystemMessage(\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6709\u200b\u5e2e\u52a9\u200b\u7684\u200b\u52a9\u624b\u200b\u3002\")\n\n# \u200b\u7528\u6237\u200b\u6d88\u606f\u200b - \u200b\u4ee3\u8868\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\nhuman_msg = HumanMessage(\"\u200b\u4f60\u597d\u200b\uff0c\u200b\u8bf7\u200b\u4ecb\u7ecd\u200b\u4e00\u4e0b\u200b\u4eba\u5de5\u667a\u80fd\u200b\u3002\")\n\n# AI \u200b\u6d88\u606f\u200b - \u200b\u6a21\u578b\u200b\u751f\u6210\u200b\u7684\u200b\u54cd\u5e94\u200b\nai_msg = AIMessage(\"\u200b\u4eba\u5de5\u667a\u80fd\u200b\u662f\u200b...\")\n\nprint(f\"\u200b\u7cfb\u7edf\u200b\u6d88\u606f\u200b: {system_msg.content}\")\nprint(f\"\u200b\u7528\u6237\u200b\u6d88\u606f\u200b: {human_msg.content}\")\nprint(f\"AI \u200b\u6d88\u606f\u200b: {ai_msg.content}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#2","title":"2. \u200b\u4e0e\u200b\u6a21\u578b\u200b\u4e00\u8d77\u200b\u4f7f\u7528","text":"<pre><code>from langchain.chat_models import init_chat_model\n\n# \u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b\nmodel = init_chat_model(\"openai:gpt-4o\")\n\n# \u200b\u4f7f\u7528\u200b\u6d88\u606f\u200b\u5217\u8868\u200b\u8c03\u7528\u200b\u6a21\u578b\u200b\nmessages = [\n    SystemMessage(\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e13\u4e1a\u200b\u7684\u200bAI\u200b\u52a9\u624b\u200b\u3002\"),\n    HumanMessage(\"\u200b\u8bf7\u200b\u89e3\u91ca\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u7684\u200b\u57fa\u672c\u6982\u5ff5\u200b\u3002\")\n]\n\nresponse = model.invoke(messages)\nprint(f\"\u200b\u6a21\u578b\u200b\u56de\u590d\u200b: {response.content}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#_3","title":"\u6d88\u606f\u200b\u7c7b\u578b\u200b\u8be6\u89e3","text":""},{"location":"llmapps/langchain/core-components/messages/#1-systemmessage","title":"1. \u200b\u7cfb\u7edf\u200b\u6d88\u606f\u200b (SystemMessage)","text":"<p>\u200b\u7cfb\u7edf\u200b\u6d88\u606f\u200b\u7528\u4e8e\u200b\u8bbe\u7f6e\u200b\u6a21\u578b\u200b\u7684\u200b\u521d\u59cb\u200b\u6307\u4ee4\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u6a21\u578b\u200b\u7684\u200b\u884c\u4e3a\u200b\u65b9\u5f0f\u200b\u3002</p> <pre><code>from langchain.messages import SystemMessage\n\n# \u200b\u57fa\u7840\u200b\u6307\u4ee4\u200b\nsystem_basic = SystemMessage(\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6709\u200b\u5e2e\u52a9\u200b\u7684\u200b\u52a9\u624b\u200b\u3002\")\n\n# \u200b\u8be6\u7ec6\u200b\u89d2\u8272\u200b\u8bbe\u5b9a\u200b\nsystem_detailed = SystemMessage(\"\"\"\n\u200b\u4f60\u200b\u662f\u200b\u4e00\u4f4d\u200b\u8d44\u6df1\u200b\u8f6f\u4ef6\u200b\u5de5\u7a0b\u5e08\u200b\uff0c\u200b\u5177\u6709\u200b10\u200b\u5e74\u200bPython\u200b\u5f00\u53d1\u200b\u7ecf\u9a8c\u200b\u3002\n\u200b\u8bf7\u200b\u9075\u5faa\u200b\u4ee5\u4e0b\u200b\u539f\u5219\u200b\uff1a\n1. \u200b\u63d0\u4f9b\u200b\u8be6\u7ec6\u200b\u7684\u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b\n2. \u200b\u89e3\u91ca\u200b\u6280\u672f\u200b\u6982\u5ff5\u200b\u65f6\u8981\u200b\u6e05\u6670\u200b\u6613\u61c2\u200b\n3. \u200b\u5bf9\u4e8e\u200b\u590d\u6742\u200b\u95ee\u9898\u200b\uff0c\u200b\u5206\u200b\u6b65\u9aa4\u200b\u89e3\u7b54\u200b\n4. \u200b\u4fdd\u6301\u200b\u4e13\u4e1a\u200b\u548c\u200b\u53cb\u597d\u200b\u7684\u200b\u6001\u5ea6\u200b\n\"\"\")\n\n# \u200b\u7279\u5b9a\u200b\u9886\u57df\u4e13\u5bb6\u200b\nsystem_expert = SystemMessage(\"\"\"\n\u200b\u4f60\u200b\u662f\u200b\u4e00\u4f4d\u200b\u91d1\u878d\u200b\u5206\u6790\u5e08\u200b\uff0c\u200b\u4e13\u6ce8\u200b\u4e8e\u200b\u80a1\u7968\u5e02\u573a\u200b\u5206\u6790\u200b\u3002\n\u200b\u8bf7\u200b\uff1a\n- \u200b\u4f7f\u7528\u200b\u4e13\u4e1a\u200b\u7684\u200b\u91d1\u878d\u200b\u672f\u8bed\u200b\n- \u200b\u63d0\u4f9b\u6570\u636e\u200b\u652f\u6301\u200b\u7684\u200b\u5206\u6790\u200b\n- \u200b\u7ed9\u51fa\u200b\u98ce\u9669\u200b\u63d0\u793a\u200b\n- \u200b\u4fdd\u6301\u200b\u5ba2\u89c2\u200b\u4e2d\u7acb\u200b\n\"\"\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#2-humanmessage","title":"2. \u200b\u7528\u6237\u200b\u6d88\u606f\u200b (HumanMessage)","text":"<p>\u200b\u7528\u6237\u200b\u6d88\u606f\u200b\u4ee3\u8868\u200b\u7528\u6237\u200b\u7684\u200b\u8f93\u5165\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5305\u542b\u200b\u6587\u672c\u200b\u3001\u200b\u56fe\u50cf\u200b\u3001\u200b\u97f3\u9891\u200b\u7b49\u200b\u591a\u79cd\u200b\u5185\u5bb9\u200b\u3002</p> <pre><code>from langchain.messages import HumanMessage\n\n# \u200b\u57fa\u7840\u200b\u6587\u672c\u200b\u6d88\u606f\u200b\nhuman_basic = HumanMessage(\"\u200b\u4ec0\u4e48\u200b\u662f\u200bPython\u200b\u7684\u200b\u88c5\u9970\u200b\u5668\u200b\uff1f\")\n\n# \u200b\u5e26\u5143\u200b\u6570\u636e\u200b\u7684\u200b\u6d88\u606f\u200b\nhuman_with_metadata = HumanMessage(\n    content=\"\u200b\u4f60\u597d\u200b\uff0c\u200b\u6211\u200b\u9700\u8981\u200b\u5e2e\u52a9\u200b\uff01\",\n    name=\"\u200b\u5f20\u4e09\u200b\",  # \u200b\u53ef\u200b\u9009\u200b\uff1a\u200b\u6807\u8bc6\u200b\u4e0d\u540c\u200b\u7528\u6237\u200b\n    id=\"msg_001\"  # \u200b\u53ef\u200b\u9009\u200b\uff1a\u200b\u552f\u4e00\u200b\u6807\u8bc6\u7b26\u200b\n)\n\n# \u200b\u591a\u200b\u6a21\u6001\u200b\u6d88\u606f\u200b\uff08\u200b\u540e\u7eed\u200b\u8be6\u7ec6\u200b\u8bb2\u89e3\u200b\uff09\nhuman_multimodal = HumanMessage(\n    content=[\n        {\"type\": \"text\", \"text\": \"\u200b\u63cf\u8ff0\u200b\u8fd9\u5f20\u200b\u56fe\u7247\u200b\u7684\u200b\u5185\u5bb9\u200b\"},\n        {\"type\": \"image\", \"url\": \"https://example.com/image.jpg\"}\n    ]\n)\n\nprint(f\"\u200b\u6d88\u606f\u200b\u5185\u5bb9\u200b: {human_basic.content}\")\nprint(f\"\u200b\u7528\u6237\u200b\u540d\u79f0\u200b: {human_with_metadata.name}\")\nprint(f\"\u200b\u6d88\u606f\u200bID: {human_with_metadata.id}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#3-ai-aimessage","title":"3. AI \u200b\u6d88\u606f\u200b (AIMessage)","text":"<p>AI \u200b\u6d88\u606f\u200b\u8868\u793a\u200b\u6a21\u578b\u200b\u7684\u200b\u8f93\u51fa\u200b\u54cd\u5e94\u200b\uff0c\u200b\u5305\u542b\u200b\u5185\u5bb9\u200b\u3001\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u548c\u200b\u5143\u200b\u6570\u636e\u200b\u3002</p> <pre><code>from langchain.messages import AIMessage\n\n# \u200b\u8c03\u7528\u200b\u6a21\u578b\u200b\u83b7\u53d6\u200bAI\u200b\u6d88\u606f\u200b\nresponse = model.invoke(\"\u200b\u89e3\u91ca\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7684\u200b\u5de5\u4f5c\u200b\u539f\u7406\u200b\")\nprint(f\"\u200b\u54cd\u5e94\u200b\u7c7b\u578b\u200b: {type(response)}\")  # &lt;class 'langchain_core.messages.AIMessage'&gt;\n\n# \u200b\u624b\u52a8\u200b\u521b\u5efa\u200bAI\u200b\u6d88\u606f\u200b\uff08\u200b\u7528\u4e8e\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\uff09\nmanual_ai_msg = AIMessage(\n    content=\"\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u662f\u200b\u53d7\u200b\u4eba\u8111\u200b\u542f\u53d1\u200b\u7684\u200b\u4e00\u79cd\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b...\",\n    id=\"ai_msg_001\"\n)\n\n# \u200b\u8bbf\u95ee\u200bAI\u200b\u6d88\u606f\u200b\u7684\u200b\u5c5e\u6027\u200b\nprint(f\"\u200b\u6587\u672c\u200b\u5185\u5bb9\u200b: {response.content}\")\nprint(f\"\u200b\u6d88\u606f\u200bID: {response.id}\")\nprint(f\"\u200b\u4f7f\u7528\u200b\u5143\u200b\u6570\u636e\u200b: {response.usage_metadata}\")\nprint(f\"\u200b\u54cd\u5e94\u200b\u5143\u200b\u6570\u636e\u200b: {response.response_metadata}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#ai","title":"AI \u200b\u6d88\u606f\u200b\u7684\u200b\u91cd\u8981\u200b\u5c5e\u6027","text":"<pre><code># \u200b\u83b7\u53d6\u200b\u5b8c\u6574\u200b\u7684\u200b\u54cd\u5e94\u200b\u4fe1\u606f\u200b\nresponse = model.invoke(\"\u200b\u8bf7\u200b\u8be6\u7ec6\u200b\u8bf4\u660e\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\")\n\nprint(\"=== AI\u200b\u6d88\u606f\u200b\u5c5e\u6027\u200b ===\")\nprint(f\"\u200b\u6587\u672c\u200b\u5185\u5bb9\u200b: {response.content}\")\nprint(f\"\u200b\u5185\u5bb9\u200b\u5757\u200b: {response.content_blocks}\")\nprint(f\"\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b: {response.tool_calls}\")\nprint(f\"\u200b\u6d88\u606f\u200bID: {response.id}\")\nprint(f\"\u200b\u4ee4\u724c\u200b\u4f7f\u7528\u200b: {response.usage_metadata}\")\nprint(f\"\u200b\u54cd\u5e94\u200b\u5143\u200b\u6570\u636e\u200b: {response.response_metadata}\")\n\n# \u200b\u4ee4\u724c\u200b\u4f7f\u7528\u200b\u7edf\u8ba1\u200b\u793a\u4f8b\u200b\nif response.usage_metadata:\n    print(f\"\u200b\u8f93\u5165\u200b\u4ee4\u724c\u200b: {response.usage_metadata.get('input_tokens', 'N/A')}\")\n    print(f\"\u200b\u8f93\u51fa\u200b\u4ee4\u724c\u200b: {response.usage_metadata.get('output_tokens', 'N/A')}\")\n    print(f\"\u200b\u603b\u200b\u4ee4\u724c\u200b: {response.usage_metadata.get('total_tokens', 'N/A')}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#4-toolmessage","title":"4. \u200b\u5de5\u5177\u200b\u6d88\u606f\u200b (ToolMessage)","text":"<p>\u200b\u5de5\u5177\u200b\u6d88\u606f\u200b\u7528\u4e8e\u200b\u5c06\u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\u4f20\u9012\u200b\u56de\u200b\u6a21\u578b\u200b\u3002</p> <pre><code>from langchain.messages import ToolMessage\n\n# \u200b\u6a21\u62df\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u540e\u200b\u7684\u200b\u7ed3\u679c\u200b\u6d88\u606f\u200b\ntool_message = ToolMessage(\n    content=\"\u200b\u5317\u4eac\u200b\u5929\u6c14\u200b\uff1a\u200b\u6674\u6717\u200b\uff0c25\u00b0C\uff0c\u200b\u6e7f\u5ea6\u200b60%\",  # \u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\n    tool_call_id=\"call_123\",  # \u200b\u5fc5\u987b\u200b\u4e0e\u200b\u5de5\u5177\u200b\u8c03\u7528\u200bID\u200b\u5339\u914d\u200b\n    name=\"get_weather\"  # \u200b\u5de5\u5177\u200b\u540d\u79f0\u200b\n)\n\nprint(f\"\u200b\u5de5\u5177\u200b\u7ed3\u679c\u200b: {tool_message.content}\")\nprint(f\"\u200b\u5173\u8054\u200b\u7684\u200b\u5de5\u5177\u200b\u8c03\u7528\u200bID: {tool_message.tool_call_id}\")\nprint(f\"\u200b\u5de5\u5177\u200b\u540d\u79f0\u200b: {tool_message.name}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#artifact","title":"\u4f7f\u7528\u200b artifact \u200b\u5b58\u50a8\u200b\u989d\u5916\u200b\u6570\u636e","text":"<pre><code># \u200b\u4f7f\u7528\u200b artifact \u200b\u5b58\u50a8\u200b\u4e0d\u200b\u53d1\u9001\u7ed9\u200b\u6a21\u578b\u200b\u7684\u200b\u989d\u5916\u200b\u6570\u636e\u200b\ntool_message_with_artifact = ToolMessage(\n    content=\"\u200b\u68c0\u7d22\u200b\u5230\u200b\u76f8\u5173\u200b\u6587\u6863\u200b\u5185\u5bb9\u200b...\",\n    tool_call_id=\"call_456\",\n    name=\"search_documents\",\n    artifact={\n        \"document_ids\": [\"doc_123\", \"doc_456\"],\n        \"source_urls\": [\"https://example.com/doc1\", \"https://example.com/doc2\"],\n        \"confidence_scores\": [0.95, 0.87]\n    }\n)\n\nprint(f\"\u200b\u53d1\u9001\u7ed9\u200b\u6a21\u578b\u200b\u7684\u200b\u5185\u5bb9\u200b: {tool_message_with_artifact.content}\")\nprint(f\"\u200b\u989d\u5916\u200b\u6570\u636e\u200b: {tool_message_with_artifact.artifact}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#_4","title":"\u6d88\u606f\u200b\u5185\u5bb9\u200b\u683c\u5f0f","text":""},{"location":"llmapps/langchain/core-components/messages/#1_1","title":"1. \u200b\u6587\u672c\u200b\u63d0\u793a\u200b\uff08\u200b\u7b80\u5355\u200b\u683c\u5f0f\u200b\uff09","text":"<pre><code># \u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u5b57\u7b26\u4e32\u200b\uff08\u200b\u81ea\u52a8\u200b\u8f6c\u6362\u200b\u4e3a\u200bHumanMessage\uff09\nresponse = model.invoke(\"\u200b\u5199\u200b\u4e00\u9996\u200b\u5173\u4e8e\u200b\u6625\u5929\u200b\u7684\u200b\u8bd7\u200b\")\n\n# \u200b\u7b49\u540c\u4e8e\u200b\nresponse = model.invoke(HumanMessage(\"\u200b\u5199\u200b\u4e00\u9996\u200b\u5173\u4e8e\u200b\u6625\u5929\u200b\u7684\u200b\u8bd7\u200b\"))\n</code></pre> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a - \u200b\u5355\u4e00\u200b\u72ec\u7acb\u200b\u8bf7\u6c42\u200b - \u200b\u4e0d\u200b\u9700\u8981\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b - \u200b\u4ee3\u7801\u200b\u7b80\u6d01\u6027\u200b\u8981\u6c42\u200b\u9ad8\u200b</p>"},{"location":"llmapps/langchain/core-components/messages/#2_1","title":"2. \u200b\u6d88\u606f\u200b\u5bf9\u8c61\u200b\u5217\u8868","text":"<pre><code>from langchain.messages import SystemMessage, HumanMessage, AIMessage\n\nmessages = [\n    SystemMessage(\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4f4d\u200b\u8bd7\u4eba\u200b\uff0c\u200b\u64c5\u957f\u200b\u5199\u200b\u4e2d\u6587\u200b\u53e4\u8bd7\u200b\u3002\"),\n    HumanMessage(\"\u200b\u5199\u200b\u4e00\u9996\u200b\u5173\u4e8e\u200b\u6625\u5929\u200b\u7684\u200b\u4e03\u8a00\u7edd\u53e5\u200b\u3002\"),\n    AIMessage(\"\u200b\u6625\u98ce\u200b\u5439\u200b\u7eff\u200b\u67f3\u4e1d\u200b\u957f\u200b\uff0c\u200b\u82b1\u200b\u5f00\u200b\u6ee1\u56ed\u200b\u8776\u821e\u200b\u5fd9\u200b\u3002\"),\n    HumanMessage(\"\u200b\u518d\u200b\u5199\u200b\u4e00\u9996\u200b\u5173\u4e8e\u200b\u79cb\u5929\u200b\u7684\u200b\u3002\")\n]\n\nresponse = model.invoke(messages)\nprint(response.content)\n</code></pre> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a - \u200b\u7ba1\u7406\u200b\u591a\u8f6e\u200b\u5bf9\u8bdd\u200b - \u200b\u5904\u7406\u200b\u591a\u200b\u6a21\u6001\u200b\u5185\u5bb9\u200b - \u200b\u5305\u542b\u200b\u7cfb\u7edf\u200b\u6307\u4ee4\u200b</p>"},{"location":"llmapps/langchain/core-components/messages/#3-openai","title":"3. \u200b\u5b57\u5178\u200b\u683c\u5f0f\u200b\uff08OpenAI \u200b\u517c\u5bb9\u200b\uff09","text":"<pre><code># \u200b\u4f7f\u7528\u200bOpenAI\u200b\u804a\u5929\u200b\u5b8c\u6210\u200b\u683c\u5f0f\u200b\nmessages = [\n    {\"role\": \"system\", \"content\": \"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4f4d\u200b\u4e13\u4e1a\u7ffb\u8bd1\u200b\u3002\"},\n    {\"role\": \"user\", \"content\": \"Translate: Hello, how are you?\"},\n    {\"role\": \"assistant\", \"content\": \"\u200b\u4f60\u597d\u200b\uff0c\u200b\u4f60\u597d\u200b\u5417\u200b\uff1f\"},\n    {\"role\": \"user\", \"content\": \"Translate: I love programming.\"}\n]\n\nresponse = model.invoke(messages)\nprint(response.content)  # \u200b\u8f93\u51fa\u200b\uff1a\u200b\u6211\u200b\u559c\u6b22\u200b\u7f16\u7a0b\u200b\u3002\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#_5","title":"\u6807\u51c6\u200b\u5185\u5bb9\u200b\u5757","text":"<p>LangChain \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u8de8\u200b\u63d0\u4f9b\u5546\u200b\u7684\u200b\u6807\u51c6\u200b\u6d88\u606f\u200b\u5185\u5bb9\u200b\u8868\u793a\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/messages/#1_2","title":"1. \u200b\u5185\u5bb9\u200b\u5757\u200b\u7c7b\u578b","text":"<pre><code>from langchain.messages import AIMessage\n\n# \u200b\u521b\u5efa\u200b\u5305\u542b\u200b\u6807\u51c6\u200b\u5185\u5bb9\u200b\u5757\u200b\u7684\u200b\u6d88\u606f\u200b\nmessage = AIMessage(\n    content_blocks=[\n        {\n            \"type\": \"text\",\n            \"text\": \"\u200b\u8fd9\u662f\u200b\u4e3b\u8981\u200b\u7684\u200b\u6587\u672c\u200b\u56de\u590d\u200b\u3002\",\n            \"annotations\": [\n                {\n                    \"type\": \"citation\",\n                    \"start_index\": 0,\n                    \"end_index\": 5,\n                    \"text\": \"\u200b\u53c2\u8003\u200b\u6765\u6e90\u200b1\"\n                }\n            ]\n        },\n        {\n            \"type\": \"reasoning\",\n            \"reasoning\": \"\u200b\u9996\u5148\u200b\uff0c\u200b\u7528\u6237\u200b\u8be2\u95ee\u200b\u7684\u200b\u662f\u200b...\u200b\u7136\u540e\u200b\u6211\u200b\u8003\u8651\u200b\u4e86\u200b...\"\n        }\n    ]\n)\n\n# \u200b\u8bbf\u95ee\u200b\u6807\u51c6\u5316\u200b\u7684\u200b\u5185\u5bb9\u200b\u5757\u200b\nfor block in message.content_blocks:\n    print(f\"\u200b\u5757\u200b\u7c7b\u578b\u200b: {block['type']}\")\n    if block['type'] == 'text':\n        print(f\"\u200b\u6587\u672c\u200b\u5185\u5bb9\u200b: {block['text']}\")\n    elif block['type'] == 'reasoning':\n        print(f\"\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b: {block['reasoning']}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#2_2","title":"2. \u200b\u591a\u200b\u6a21\u6001\u200b\u5185\u5bb9","text":""},{"location":"llmapps/langchain/core-components/messages/#_6","title":"\u56fe\u50cf\u200b\u5185\u5bb9","text":"<pre><code>from langchain.messages import HumanMessage\nimport base64\n\n# \u200b\u4ece\u200bURL\u200b\u4f7f\u7528\u200b\u56fe\u50cf\u200b\nmessage_with_image_url = HumanMessage(\n    content_blocks=[\n        {\n            \"type\": \"text\", \n            \"text\": \"\u200b\u63cf\u8ff0\u200b\u8fd9\u5f20\u200b\u56fe\u7247\u200b\u4e2d\u200b\u7684\u200b\u5185\u5bb9\u200b\"\n        },\n        {\n            \"type\": \"image\",\n            \"url\": \"https://example.com/image.jpg\"\n        }\n    ]\n)\n\n# \u200b\u4ece\u200bbase64\u200b\u6570\u636e\u200b\u4f7f\u7528\u200b\u56fe\u50cf\u200b\ndef encode_image_to_base64(image_path):\n    \"\"\"\u200b\u5c06\u200b\u56fe\u50cf\u7f16\u7801\u200b\u4e3a\u200bbase64\"\"\"\n    with open(image_path, \"rb\") as image_file:\n        return base64.b64encode(image_file.read()).decode('utf-8')\n\n# \u200b\u5047\u8bbe\u200b\u6709\u200b\u672c\u5730\u200b\u56fe\u50cf\u6587\u4ef6\u200b\n# image_base64 = encode_image_to_base64(\"path/to/image.jpg\")\n\nmessage_with_image_base64 = HumanMessage(\n    content_blocks=[\n        {\n            \"type\": \"text\",\n            \"text\": \"\u200b\u5206\u6790\u200b\u8fd9\u5f20\u200b\u533b\u5b66\u5f71\u50cf\u200b\"\n        },\n        {\n            \"type\": \"image\",\n            \"base64\": \"base64_encoded_string_here\",  # \u200b\u66ff\u6362\u200b\u4e3a\u200b\u5b9e\u9645\u200b\u7684\u200bbase64\u200b\u5b57\u7b26\u4e32\u200b\n            \"mime_type\": \"image/jpeg\"\n        }\n    ]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#_7","title":"\u6587\u6863\u200b\u5185\u5bb9","text":"<pre><code># PDF\u200b\u6587\u6863\u200b\nmessage_with_pdf = HumanMessage(\n    content_blocks=[\n        {\n            \"type\": \"text\",\n            \"text\": \"\u200b\u603b\u7ed3\u200b\u8fd9\u4efd\u200b\u6587\u6863\u200b\u7684\u200b\u4e3b\u8981\u200b\u5185\u5bb9\u200b\"\n        },\n        {\n            \"type\": \"file\",\n            \"url\": \"https://example.com/document.pdf\",\n            \"mime_type\": \"application/pdf\"\n        }\n    ]\n)\n\n# \u200b\u6587\u672c\u6587\u4ef6\u200b\nmessage_with_text_file = HumanMessage(\n    content_blocks=[\n        {\n            \"type\": \"text-plain\",\n            \"text\": \"\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b...\",\n            \"mime_type\": \"text/plain\"\n        }\n    ]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#_8","title":"\u97f3\u9891\u200b\u548c\u200b\u89c6\u9891\u200b\u5185\u5bb9","text":"<pre><code># \u200b\u97f3\u9891\u200b\u5185\u5bb9\u200b\nmessage_with_audio = HumanMessage(\n    content_blocks=[\n        {\n            \"type\": \"text\",\n            \"text\": \"\u200b\u8f6c\u5199\u200b\u8fd9\u200b\u6bb5\u200b\u97f3\u9891\u200b\u5185\u5bb9\u200b\"\n        },\n        {\n            \"type\": \"audio\",\n            \"base64\": \"base64_encoded_audio_here\",\n            \"mime_type\": \"audio/wav\"\n        }\n    ]\n)\n\n# \u200b\u89c6\u9891\u200b\u5185\u5bb9\u200b\nmessage_with_video = HumanMessage(\n    content_blocks=[\n        {\n            \"type\": \"text\",\n            \"text\": \"\u200b\u63cf\u8ff0\u200b\u89c6\u9891\u200b\u4e2d\u200b\u7684\u200b\u573a\u666f\u200b\"\n        },\n        {\n            \"type\": \"video\",\n            \"url\": \"https://example.com/video.mp4\",\n            \"mime_type\": \"video/mp4\"\n        }\n    ]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#_9","title":"\u9ad8\u7ea7\u200b\u529f\u80fd","text":""},{"location":"llmapps/langchain/core-components/messages/#1_3","title":"1. \u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u96c6\u6210","text":"<pre><code>from langchain.tools import tool\nfrom langchain.messages import AIMessage, ToolMessage\n\n@tool\ndef get_weather(location: str) -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5929\u6c14\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n    # \u200b\u6a21\u62df\u200b\u5929\u6c14\u200b\u6570\u636e\u200b\n    weather_data = {\n        \"\u200b\u5317\u4eac\u200b\": \"\u200b\u6674\u6717\u200b\uff0c25\u00b0C\",\n        \"\u200b\u4e0a\u6d77\u200b\": \"\u200b\u591a\u4e91\u200b\uff0c23\u00b0C\", \n        \"\u200b\u5e7f\u5dde\u200b\": \"\u200b\u9635\u96e8\u200b\uff0c28\u00b0C\"\n    }\n    return weather_data.get(location, \"\u200b\u672a\u77e5\u200b\u5730\u70b9\u200b\")\n\n# \u200b\u7ed1\u5b9a\u200b\u5de5\u5177\u200b\u5230\u200b\u6a21\u578b\u200b\nmodel_with_tools = model.bind_tools([get_weather])\n\n# \u200b\u6a21\u62df\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u6d41\u7a0b\u200b\ndef simulate_tool_call():\n    # \u200b\u7528\u6237\u200b\u8be2\u95ee\u200b\u5929\u6c14\u200b\n    user_message = HumanMessage(\"\u200b\u5317\u4eac\u200b\u548c\u200b\u4e0a\u6d77\u200b\u7684\u200b\u5929\u6c14\u200b\u600e\u4e48\u6837\u200b\uff1f\")\n\n    # \u200b\u6a21\u578b\u200b\u751f\u6210\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\n    ai_response = model_with_tools.invoke([user_message])\n\n    print(\"=== \u200b\u6a21\u578b\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b ===\")\n    for tool_call in ai_response.tool_calls:\n        print(f\"\u200b\u5de5\u5177\u200b: {tool_call['name']}\")\n        print(f\"\u200b\u53c2\u6570\u200b: {tool_call['args']}\")\n        print(f\"\u200b\u8c03\u7528\u200bID: {tool_call['id']}\")\n\n        # \u200b\u6267\u884c\u200b\u5de5\u5177\u200b\n        if tool_call['name'] == 'get_weather':\n            location = tool_call['args']['location']\n            result = get_weather.invoke({\"location\": location})\n\n            # \u200b\u521b\u5efa\u200b\u5de5\u5177\u200b\u6d88\u606f\u200b\n            tool_msg = ToolMessage(\n                content=result,\n                tool_call_id=tool_call['id'],\n                name=\"get_weather\"\n            )\n\n            print(f\"\u200b\u5de5\u5177\u200b\u7ed3\u679c\u200b: {tool_msg.content}\")\n\n    return ai_response\n\n# \u200b\u8fd0\u884c\u200b\u793a\u4f8b\u200b\nresponse = simulate_tool_call()\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#2_3","title":"2. \u200b\u6d41\u5f0f\u200b\u6d88\u606f\u200b\u5904\u7406","text":"<pre><code>def stream_message_example():\n    \"\"\"\u200b\u6d41\u5f0f\u200b\u6d88\u606f\u200b\u5904\u7406\u200b\u793a\u4f8b\u200b\"\"\"\n    print(\"\u200b\u5f00\u59cb\u200b\u6d41\u5f0f\u200b\u5904\u7406\u200b...\")\n\n    chunks = []\n    full_message = None\n\n    for chunk in model.stream(\"\u200b\u89e3\u91ca\u200b\u4eba\u5de5\u667a\u80fd\u200b\u7684\u200b\u53d1\u5c55\u200b\u5386\u53f2\u200b\"):\n        chunks.append(chunk)\n\n        # \u200b\u5b9e\u65f6\u200b\u8f93\u51fa\u200b\u6587\u672c\u200b\u5185\u5bb9\u200b\n        if hasattr(chunk, 'content') and chunk.content:\n            print(chunk.content, end=\"\", flush=True)\n\n        # \u200b\u7d2f\u79ef\u200b\u5b8c\u6574\u200b\u6d88\u606f\u200b\n        full_message = chunk if full_message is None else full_message + chunk\n\n    print(\"\\n=== \u200b\u6d41\u5f0f\u200b\u5904\u7406\u200b\u5b8c\u6210\u200b ===\")\n    print(f\"\u200b\u6536\u5230\u200b\u5757\u6570\u200b: {len(chunks)}\")\n    print(f\"\u200b\u5b8c\u6574\u200b\u6d88\u606f\u200b\u7c7b\u578b\u200b: {type(full_message)}\")\n    print(f\"\u200b\u5b8c\u6574\u200b\u5185\u5bb9\u200b: {full_message.content}\")\n\n    return full_message\n\n# \u200b\u8fd0\u884c\u200b\u6d41\u5f0f\u200b\u793a\u4f8b\u200b\nfinal_message = stream_message_example()\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#3","title":"3. \u200b\u6d88\u606f\u200b\u8f6c\u6362\u200b\u548c\u200b\u5e8f\u5217\u5316","text":"<pre><code>def message_conversion_examples():\n    \"\"\"\u200b\u6d88\u606f\u200b\u8f6c\u6362\u200b\u793a\u4f8b\u200b\"\"\"\n\n    # \u200b\u521b\u5efa\u200b\u6d88\u606f\u200b\n    human_msg = HumanMessage(\"\u200b\u4f60\u597d\u200b\uff0c\u200b\u4e16\u754c\u200b\uff01\")\n    ai_msg = AIMessage(\"\u200b\u4f60\u597d\u200b\uff01\u200b\u6211\u200b\u662f\u200bAI\u200b\u52a9\u624b\u200b\u3002\")\n\n    print(\"=== \u200b\u539f\u59cb\u200b\u6d88\u606f\u200b ===\")\n    print(f\"HumanMessage: {human_msg}\")\n    print(f\"AIMessage: {ai_msg}\")\n\n    # \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5b57\u5178\u200b\n    human_dict = human_msg.dict()\n    ai_dict = ai_msg.dict()\n\n    print(\"\\n=== \u200b\u5b57\u5178\u200b\u8868\u793a\u200b ===\")\n    print(f\"HumanMessage\u200b\u5b57\u5178\u200b: {human_dict}\")\n    print(f\"AIMessage\u200b\u5b57\u5178\u200b: {ai_dict}\")\n\n    # \u200b\u8bbf\u95ee\u200b\u5185\u5bb9\u200b\u5757\u200b\n    print(\"\\n=== \u200b\u5185\u5bb9\u200b\u5757\u200b ===\")\n    print(f\"HumanMessage\u200b\u5185\u5bb9\u200b\u5757\u200b: {human_msg.content_blocks}\")\n    print(f\"AIMessage\u200b\u5185\u5bb9\u200b\u5757\u200b: {ai_msg.content_blocks}\")\n\n    #  pretty print\n    print(\"\\n=== \u200b\u7f8e\u89c2\u200b\u6253\u5370\u200b ===\")\n    human_msg.pretty_print()\n\n# \u200b\u8fd0\u884c\u200b\u8f6c\u6362\u200b\u793a\u4f8b\u200b\nmessage_conversion_examples()\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#_10","title":"\u5b9e\u9645\u200b\u5e94\u7528\u200b\u573a\u666f","text":""},{"location":"llmapps/langchain/core-components/messages/#1_4","title":"\u573a\u666f\u200b1\uff1a\u200b\u5bf9\u8bdd\u200b\u7ba1\u7406\u7cfb\u7edf","text":"<pre><code>class ConversationManager:\n    \"\"\"\u200b\u5bf9\u8bdd\u200b\u7ba1\u7406\u5668\u200b\"\"\"\n\n    def __init__(self, model):\n        self.model = model\n        self.conversation_history = []\n\n    def add_system_message(self, content: str):\n        \"\"\"\u200b\u6dfb\u52a0\u200b\u7cfb\u7edf\u200b\u6d88\u606f\u200b\"\"\"\n        system_msg = SystemMessage(content)\n        self.conversation_history.append(system_msg)\n\n    def add_user_message(self, content: str, user_name: str = None):\n        \"\"\"\u200b\u6dfb\u52a0\u200b\u7528\u6237\u200b\u6d88\u606f\u200b\"\"\"\n        human_msg = HumanMessage(content, name=user_name)\n        self.conversation_history.append(human_msg)\n\n    def add_ai_message(self, content: str):\n        \"\"\"\u200b\u6dfb\u52a0\u200bAI\u200b\u6d88\u606f\u200b\"\"\"\n        ai_msg = AIMessage(content)\n        self.conversation_history.append(ai_msg)\n\n    def get_ai_response(self, user_input: str, user_name: str = None) -&gt; str:\n        \"\"\"\u200b\u83b7\u53d6\u200bAI\u200b\u54cd\u5e94\u200b\"\"\"\n        # \u200b\u6dfb\u52a0\u200b\u7528\u6237\u200b\u6d88\u606f\u200b\n        self.add_user_message(user_input, user_name)\n\n        # \u200b\u8c03\u7528\u200b\u6a21\u578b\u200b\uff08\u200b\u53ea\u200b\u4f7f\u7528\u200b\u6700\u8fd1\u200b10\u200b\u6761\u200b\u6d88\u606f\u200b\u4ee5\u200b\u907f\u514d\u200b\u4e0a\u4e0b\u6587\u200b\u8fc7\u957f\u200b\uff09\n        recent_messages = self.conversation_history[-10:] if len(self.conversation_history) &gt; 10 else self.conversation_history\n\n        # \u200b\u83b7\u53d6\u200bAI\u200b\u54cd\u5e94\u200b\n        response = self.model.invoke(recent_messages)\n\n        # \u200b\u6dfb\u52a0\u200bAI\u200b\u6d88\u606f\u200b\u5230\u200b\u5386\u53f2\u200b\n        self.add_ai_message(response.content)\n\n        return response.content\n\n    def get_conversation_summary(self) -&gt; dict:\n        \"\"\"\u200b\u83b7\u53d6\u200b\u5bf9\u8bdd\u200b\u6458\u8981\u200b\"\"\"\n        user_msgs = [msg for msg in self.conversation_history if isinstance(msg, HumanMessage)]\n        ai_msgs = [msg for msg in self.conversation_history if isinstance(msg, AIMessage)]\n\n        return {\n            \"total_messages\": len(self.conversation_history),\n            \"user_messages\": len(user_msgs),\n            \"ai_messages\": len(ai_msgs),\n            \"last_user_message\": user_msgs[-1].content if user_msgs else None,\n            \"last_ai_message\": ai_msgs[-1].content if ai_msgs else None\n        }\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nmanager = ConversationManager(model)\nmanager.add_system_message(\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u53cb\u597d\u200b\u7684\u200b\u5ba2\u670d\u200b\u52a9\u624b\u200b\u3002\")\n\n# \u200b\u8fdb\u884c\u200b\u5bf9\u8bdd\u200b\nresponse1 = manager.get_ai_response(\"\u200b\u4f60\u597d\u200b\uff0c\u200b\u6211\u200b\u60f3\u200b\u67e5\u8be2\u200b\u8ba2\u5355\u200b\u72b6\u6001\u200b\")\nprint(f\"AI\u200b\u56de\u590d\u200b1: {response1}\")\n\nresponse2 = manager.get_ai_response(\"\u200b\u6211\u200b\u7684\u200b\u8ba2\u5355\u53f7\u200b\u662f\u200b12345\")\nprint(f\"AI\u200b\u56de\u590d\u200b2: {response2}\")\n\n# \u200b\u83b7\u53d6\u200b\u5bf9\u8bdd\u200b\u7edf\u8ba1\u200b\nsummary = manager.get_conversation_summary()\nprint(f\"\u200b\u5bf9\u8bdd\u200b\u7edf\u8ba1\u200b: {summary}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#2_4","title":"\u573a\u666f\u200b2\uff1a\u200b\u591a\u200b\u6a21\u6001\u200b\u5185\u5bb9\u200b\u5904\u7406","text":"<pre><code>class MultimodalProcessor:\n    \"\"\"\u200b\u591a\u200b\u6a21\u6001\u200b\u5185\u5bb9\u200b\u5904\u7406\u5668\u200b\"\"\"\n\n    def __init__(self, model):\n        self.model = model\n\n    def analyze_image_with_text(self, image_url: str, question: str) -&gt; str:\n        \"\"\"\u200b\u5206\u6790\u200b\u56fe\u50cf\u200b\u5e76\u200b\u56de\u7b54\u200b\u95ee\u9898\u200b\"\"\"\n        message = HumanMessage(\n            content_blocks=[\n                {\n                    \"type\": \"text\",\n                    \"text\": question\n                },\n                {\n                    \"type\": \"image\",\n                    \"url\": image_url\n                }\n            ]\n        )\n\n        response = self.model.invoke([message])\n        return response.content\n\n    def process_document_qa(self, document_url: str, questions: list) -&gt; dict:\n        \"\"\"\u200b\u5904\u7406\u200b\u6587\u6863\u200b\u95ee\u7b54\u200b\"\"\"\n        results = {}\n\n        for question in questions:\n            message = HumanMessage(\n                content_blocks=[\n                    {\n                        \"type\": \"text\",\n                        \"text\": question\n                    },\n                    {\n                        \"type\": \"file\",\n                        \"url\": document_url,\n                        \"mime_type\": \"application/pdf\"\n                    }\n                ]\n            )\n\n            response = self.model.invoke([message])\n            results[question] = response.content\n\n        return results\n\n    def create_content_with_citations(self, topic: str, sources: list) -&gt; AIMessage:\n        \"\"\"\u200b\u521b\u5efa\u200b\u5e26\u200b\u5f15\u7528\u200b\u7684\u200b\u5185\u5bb9\u200b\"\"\"\n        # \u200b\u6a21\u62df\u200b\u5e26\u200b\u5f15\u7528\u200b\u7684\u200b\u54cd\u5e94\u200b\n        citations = [{\"type\": \"citation\", \"text\": source, \"url\": f\"https://example.com/{i}\"} \n                    for i, source in enumerate(sources)]\n\n        response = AIMessage(\n            content_blocks=[\n                {\n                    \"type\": \"text\",\n                    \"text\": f\"\u200b\u5173\u4e8e\u200b{topic}\u200b\u7684\u200b\u8be6\u7ec6\u200b\u8bf4\u660e\u200b...\",\n                    \"annotations\": citations\n                }\n            ]\n        )\n\n        return response\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nprocessor = MultimodalProcessor(model)\n\n# \u200b\u56fe\u50cf\u200b\u5206\u6790\u200b\uff08\u200b\u5047\u8bbe\u200b\u6709\u200b\u56fe\u50cf\u200bURL\uff09\n# image_analysis = processor.analyze_image_with_text(\n#     \"https://example.com/medical-image.jpg\",\n#     \"\u200b\u63cf\u8ff0\u200b\u8fd9\u5f20\u200b\u533b\u5b66\u5f71\u50cf\u200b\u4e2d\u200b\u7684\u200b\u5f02\u5e38\u60c5\u51b5\u200b\"\n# )\n\n# \u200b\u6587\u6863\u200b\u95ee\u7b54\u200b\uff08\u200b\u5047\u8bbe\u200b\u6709\u200b\u6587\u6863\u200bURL\uff09\n# doc_qa = processor.process_document_qa(\n#     \"https://example.com/research-paper.pdf\",\n#     [\"\u200b\u7814\u7a76\u200b\u7684\u200b\u4e3b\u8981\u200b\u53d1\u73b0\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f\", \"\u200b\u7814\u7a76\u200b\u65b9\u6cd5\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f\"]\n# )\n\n# \u200b\u521b\u5efa\u200b\u5e26\u200b\u5f15\u7528\u200b\u7684\u200b\u5185\u5bb9\u200b\ncited_content = processor.create_content_with_citations(\n    \"\u200b\u4eba\u5de5\u667a\u80fd\u200b\u4f26\u7406\u200b\",\n    [\"AI\u200b\u4f26\u7406\u200b\u6307\u5357\u200b2023\", \"\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u9053\u5fb7\u200b\u6807\u51c6\u200b\", \"AI\u200b\u6cbb\u7406\u200b\u767d\u76ae\u4e66\u200b\"]\n)\n\nprint(\"\u200b\u5e26\u200b\u5f15\u7528\u200b\u7684\u200b\u5185\u5bb9\u200b:\")\ncited_content.pretty_print()\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#3_1","title":"\u573a\u666f\u200b3\uff1a\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u5de5\u4f5c\u200b\u6d41","text":"<pre><code>class ToolWorkflowManager:\n    \"\"\"\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u7ba1\u7406\u5668\u200b\"\"\"\n\n    def __init__(self, model):\n        self.model = model\n        self.available_tools = {}\n\n    def register_tool(self, tool):\n        \"\"\"\u200b\u6ce8\u518c\u200b\u5de5\u5177\u200b\"\"\"\n        self.available_tools[tool.name] = tool\n\n    def execute_workflow(self, user_query: str) -&gt; str:\n        \"\"\"\u200b\u6267\u884c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u5de5\u4f5c\u200b\u6d41\u200b\"\"\"\n        # \u200b\u7ed1\u5b9a\u200b\u6240\u6709\u200b\u53ef\u7528\u200b\u5de5\u5177\u200b\n        tool_list = list(self.available_tools.values())\n        model_with_tools = self.model.bind_tools(tool_list)\n\n        messages = [HumanMessage(user_query)]\n        max_iterations = 5  # \u200b\u9632\u6b62\u200b\u65e0\u9650\u200b\u5faa\u73af\u200b\n\n        for iteration in range(max_iterations):\n            # \u200b\u83b7\u53d6\u200b\u6a21\u578b\u200b\u54cd\u5e94\u200b\n            ai_response = model_with_tools.invoke(messages)\n            messages.append(ai_response)\n\n            # \u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\uff0c\u200b\u8fd4\u56de\u200b\u6700\u7ec8\u200b\u54cd\u5e94\u200b\n            if not ai_response.tool_calls:\n                return ai_response.content\n\n            # \u200b\u6267\u884c\u200b\u6240\u6709\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\n            for tool_call in ai_response.tool_calls:\n                tool_name = tool_call[\"name\"]\n                if tool_name in self.available_tools:\n                    # \u200b\u6267\u884c\u200b\u5de5\u5177\u200b\n                    result = self.available_tools[tool_name].invoke(tool_call[\"args\"])\n\n                    # \u200b\u521b\u5efa\u200b\u5de5\u5177\u200b\u6d88\u606f\u200b\n                    tool_msg = ToolMessage(\n                        content=str(result),\n                        tool_call_id=tool_call[\"id\"],\n                        name=tool_name\n                    )\n                    messages.append(tool_msg)\n                else:\n                    # \u200b\u5de5\u5177\u200b\u672a\u627e\u5230\u200b\n                    error_msg = ToolMessage(\n                        content=f\"\u200b\u9519\u8bef\u200b\uff1a\u200b\u5de5\u5177\u200b '{tool_name}' \u200b\u672a\u627e\u5230\u200b\",\n                        tool_call_id=tool_call[\"id\"],\n                        name=tool_name\n                    )\n                    messages.append(error_msg)\n\n        return \"\u200b\u8fbe\u5230\u200b\u6700\u5927\u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\uff0c\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u7ec8\u6b62\u200b\"\n\n# \u200b\u5b9a\u4e49\u200b\u4e00\u4e9b\u200b\u5de5\u5177\u200b\n@tool\ndef calculate_bmi(weight: float, height: float) -&gt; str:\n    \"\"\"\u200b\u8ba1\u7b97\u200bBMI\u200b\u6307\u6570\u200b\"\"\"\n    bmi = weight / (height ** 2)\n    category = \"\u200b\u504f\u7626\u200b\" if bmi &lt; 18.5 else \"\u200b\u6b63\u5e38\u200b\" if bmi &lt; 24 else \"\u200b\u8d85\u91cd\u200b\" if bmi &lt; 28 else \"\u200b\u80a5\u80d6\u200b\"\n    return f\"BMI: {bmi:.1f} ({category})\"\n\n@tool\ndef get_time(timezone: str = \"UTC\") -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u65f6\u533a\u200b\u7684\u200b\u5f53\u524d\u200b\u65f6\u95f4\u200b\"\"\"\n    from datetime import datetime\n    now = datetime.now()\n    return f\"{timezone}\u200b\u65f6\u95f4\u200b: {now.strftime('%Y-%m-%d %H:%M:%S')}\"\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nworkflow_manager = ToolWorkflowManager(model)\nworkflow_manager.register_tool(calculate_bmi)\nworkflow_manager.register_tool(get_time)\n\n# \u200b\u6267\u884c\u200b\u590d\u6742\u200b\u67e5\u8be2\u200b\nresult = workflow_manager.execute_workflow(\n    \"\u200b\u8bf7\u200b\u8ba1\u7b97\u200b\u6211\u200b\u7684\u200bBMI\uff0c\u200b\u6211\u200b\u4f53\u91cd\u200b70\u200b\u516c\u65a4\u200b\uff0c\u200b\u8eab\u9ad8\u200b1.75\u200b\u7c73\u200b\uff0c\u200b\u7136\u540e\u200b\u544a\u8bc9\u200b\u6211\u200b\u73b0\u5728\u200b\u5317\u4eac\u200b\u65f6\u95f4\u200b\"\n)\n\nprint(\"\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u7ed3\u679c\u200b:\", result)\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#_11","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"llmapps/langchain/core-components/messages/#1_5","title":"1. \u200b\u6d88\u606f\u200b\u7ba1\u7406","text":"<pre><code>class MessageBestPractices:\n    \"\"\"\u200b\u6d88\u606f\u200b\u7ba1\u7406\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\"\"\"\n\n    @staticmethod\n    def create_effective_system_prompt(role: str, guidelines: list) -&gt; SystemMessage:\n        \"\"\"\u200b\u521b\u5efa\u200b\u6709\u6548\u200b\u7684\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\"\"\"\n        guidelines_text = \"\\n\".join([f\"{i+1}. {guideline}\" for i, guideline in enumerate(guidelines)])\n\n        prompt = f\"\"\"\n        \u200b\u89d2\u8272\u200b: {role}\n\n        \u200b\u6307\u5bfc\u200b\u539f\u5219\u200b:\n        {guidelines_text}\n\n        \u200b\u8bf7\u200b\u59cb\u7ec8\u200b\u9075\u5faa\u200b\u4ee5\u4e0a\u200b\u539f\u5219\u200b\u8fdb\u884c\u200b\u56de\u590d\u200b\u3002\n        \"\"\"\n\n        return SystemMessage(prompt.strip())\n\n    @staticmethod\n    def manage_conversation_length(messages: list, max_messages: int = 20) -&gt; list:\n        \"\"\"\u200b\u7ba1\u7406\u200b\u5bf9\u8bdd\u200b\u957f\u5ea6\u200b\"\"\"\n        if len(messages) &lt;= max_messages:\n            return messages\n\n        # \u200b\u4fdd\u7559\u200b\u7cfb\u7edf\u200b\u6d88\u606f\u200b\u548c\u200b\u6700\u8fd1\u200b\u7684\u200b\u6d88\u606f\u200b\n        system_messages = [msg for msg in messages if isinstance(msg, SystemMessage)]\n        recent_messages = messages[-(max_messages - len(system_messages)):]\n\n        return system_messages + recent_messages\n\n    @staticmethod\n    def extract_usage_statistics(messages: list) -&gt; dict:\n        \"\"\"\u200b\u63d0\u53d6\u200b\u4f7f\u7528\u200b\u7edf\u8ba1\u200b\"\"\"\n        ai_messages = [msg for msg in messages if isinstance(msg, AIMessage)]\n\n        total_input_tokens = 0\n        total_output_tokens = 0\n\n        for msg in ai_messages:\n            if hasattr(msg, 'usage_metadata') and msg.usage_metadata:\n                total_input_tokens += msg.usage_metadata.get('input_tokens', 0)\n                total_output_tokens += msg.usage_metadata.get('output_tokens', 0)\n\n        return {\n            \"total_ai_messages\": len(ai_messages),\n            \"total_input_tokens\": total_input_tokens,\n            \"total_output_tokens\": total_output_tokens,\n            \"total_tokens\": total_input_tokens + total_output_tokens\n        }\n\n# \u200b\u4f7f\u7528\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\nsystem_prompt = MessageBestPractices.create_effective_system_prompt(\n    \"\u200b\u4e13\u4e1a\u200b\u6280\u672f\u987e\u95ee\u200b\",\n    [\n        \"\u200b\u63d0\u4f9b\u200b\u51c6\u786e\u200b\u7684\u200b\u6280\u672f\u200b\u4fe1\u606f\u200b\",\n        \"\u200b\u4f7f\u7528\u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b\u8bf4\u660e\u200b\u6982\u5ff5\u200b\", \n        \"\u200b\u89e3\u91ca\u200b\u590d\u6742\u200b\u6982\u5ff5\u200b\u65f6\u8981\u200b\u6e05\u6670\u200b\",\n        \"\u200b\u4fdd\u6301\u200b\u4e13\u4e1a\u200b\u548c\u200b\u53cb\u597d\u200b\u7684\u200b\u6001\u5ea6\u200b\"\n    ]\n)\n\nprint(\"\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b:\", system_prompt.content)\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#2_5","title":"2. \u200b\u9519\u8bef\u5904\u7406","text":"<pre><code>class MessageErrorHandler:\n    \"\"\"\u200b\u6d88\u606f\u200b\u9519\u8bef\u5904\u7406\u200b\"\"\"\n\n    @staticmethod\n    def safe_message_creation(content, message_type=\"human\", **kwargs):\n        \"\"\"\u200b\u5b89\u5168\u200b\u521b\u5efa\u200b\u6d88\u606f\u200b\"\"\"\n        try:\n            if message_type == \"human\":\n                return HumanMessage(content, **kwargs)\n            elif message_type == \"ai\":\n                return AIMessage(content, **kwargs)\n            elif message_type == \"system\":\n                return SystemMessage(content, **kwargs)\n            elif message_type == \"tool\":\n                return ToolMessage(content, **kwargs)\n            else:\n                raise ValueError(f\"\u200b\u672a\u77e5\u200b\u7684\u200b\u6d88\u606f\u200b\u7c7b\u578b\u200b: {message_type}\")\n        except Exception as e:\n            print(f\"\u200b\u521b\u5efa\u200b\u6d88\u606f\u200b\u65f6\u200b\u51fa\u9519\u200b: {e}\")\n            return None\n\n    @staticmethod\n    def validate_tool_message(tool_call_id: str, content: str) -&gt; bool:\n        \"\"\"\u200b\u9a8c\u8bc1\u200b\u5de5\u5177\u200b\u6d88\u606f\u200b\"\"\"\n        if not tool_call_id:\n            print(\"\u200b\u9519\u8bef\u200b: \u200b\u5de5\u5177\u200b\u6d88\u606f\u200b\u7f3a\u5c11\u200b tool_call_id\")\n            return False\n\n        if not content:\n            print(\"\u200b\u8b66\u544a\u200b: \u200b\u5de5\u5177\u200b\u6d88\u606f\u200b\u5185\u5bb9\u200b\u4e3a\u7a7a\u200b\")\n\n        return True\n\n    @staticmethod\n    def handle_streaming_errors(stream_generator):\n        \"\"\"\u200b\u5904\u7406\u200b\u6d41\u5f0f\u200b\u9519\u8bef\u200b\"\"\"\n        try:\n            for chunk in stream_generator:\n                yield chunk\n        except Exception as e:\n            print(f\"\u200b\u6d41\u5f0f\u200b\u5904\u7406\u9519\u8bef\u200b: {e}\")\n            # \u200b\u8fd4\u56de\u200b\u9519\u8bef\u200b\u6d88\u606f\u200b\n            yield AIMessage(f\"\u200b\u62b1\u6b49\u200b\uff0c\u200b\u5904\u7406\u8fc7\u7a0b\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u9519\u8bef\u200b: {str(e)}\")\n\n# \u200b\u4f7f\u7528\u200b\u9519\u8bef\u5904\u7406\u200b\nsafe_msg = MessageErrorHandler.safe_message_creation(\n    \"\u200b\u6b63\u5e38\u200b\u5185\u5bb9\u200b\",\n    \"human\",\n    name=\"test_user\"\n)\n\nprint(\"\u200b\u5b89\u5168\u200b\u521b\u5efa\u200b\u7684\u200b\u6d88\u606f\u200b:\", safe_msg.content if safe_msg else \"\u200b\u521b\u5efa\u200b\u5931\u8d25\u200b\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/messages/#_12","title":"\u603b\u7ed3","text":"<p>LangChain Messages \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u800c\u200b\u7075\u6d3b\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6765\u200b\u7ba1\u7406\u200bAI\u200b\u5bf9\u8bdd\u200b\uff1a</p> <ul> <li>\u200b\u591a\u79cd\u200b\u6d88\u606f\u200b\u7c7b\u578b\u200b\uff1aSystemMessage\u3001HumanMessage\u3001AIMessage\u3001ToolMessage</li> <li>\u200b\u4e30\u5bcc\u200b\u7684\u200b\u5185\u5bb9\u200b\u652f\u6301\u200b\uff1a\u200b\u6587\u672c\u200b\u3001\u200b\u56fe\u50cf\u200b\u3001\u200b\u97f3\u9891\u200b\u3001\u200b\u89c6\u9891\u200b\u3001\u200b\u6587\u6863\u200b\u7b49\u200b\u591a\u200b\u6a21\u6001\u200b\u5185\u5bb9\u200b</li> <li>\u200b\u6807\u51c6\u5316\u200b\u5185\u5bb9\u200b\u5757\u200b\uff1a\u200b\u8de8\u200b\u63d0\u4f9b\u5546\u200b\u7684\u200b\u4e00\u81f4\u200b\u5185\u5bb9\u200b\u8868\u793a\u200b</li> <li>\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u96c6\u6210\u200b\uff1a\u200b\u5b8c\u6574\u200b\u7684\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u548c\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u652f\u6301\u200b</li> <li>\u200b\u751f\u4ea7\u200b\u7ea7\u200b\u7279\u6027\u200b\uff1a\u200b\u9519\u8bef\u5904\u7406\u200b\u3001\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\u3001\u200b\u4f7f\u7528\u200b\u7edf\u8ba1\u200b</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u4f7f\u7528\u200bMessages\uff0c\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u51fa\u200b\u80fd\u591f\u200b\u5904\u7406\u200b\u590d\u6742\u200b\u5bf9\u8bdd\u200b\u3001\u200b\u591a\u200b\u6a21\u6001\u200b\u5185\u5bb9\u200b\u548c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u7684\u200b\u667a\u80fd\u200bAI\u200b\u5e94\u7528\u200b\u7cfb\u7edf\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/middleware/","title":"LangChain Middleware","text":""},{"location":"llmapps/langchain/core-components/middleware/#_1","title":"\u6982\u8ff0","text":"<p>Middleware\uff08\u200b\u4e2d\u95f4\u4ef6\u200b\uff09\u200b\u5728\u200b LangChain \u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5bf9\u200b Agent \u200b\u6267\u884c\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u7cbe\u7ec6\u200b\u63a7\u5236\u80fd\u529b\u200b\u3002\u200b\u5b83\u200b\u5141\u8bb8\u200b\u4f60\u200b\u5728\u200b Agent \u200b\u6267\u884c\u200b\u7684\u200b\u5404\u4e2a\u200b\u5173\u952e\u200b\u8282\u70b9\u200b\u63d2\u5165\u200b\u81ea\u5b9a\u4e49\u200b\u903b\u8f91\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u76d1\u63a7\u200b\u3001\u200b\u4fee\u6539\u200b\u3001\u200b\u63a7\u5236\u200b\u548c\u200b\u5f3a\u5236\u6267\u884c\u200b\u7b49\u200b\u529f\u80fd\u200b\u3002</p> <p></p>"},{"location":"llmapps/langchain/core-components/middleware/#_2","title":"\u6838\u5fc3\u200b\u6982\u5ff5","text":""},{"location":"llmapps/langchain/core-components/middleware/#agent","title":"Agent \u200b\u6267\u884c\u200b\u6d41\u7a0b","text":"<p>\u200b\u6807\u51c6\u200b\u7684\u200b Agent \u200b\u6267\u884c\u200b\u5faa\u73af\u200b\u5305\u542b\u200b\u4e09\u4e2a\u200b\u4e3b\u8981\u200b\u6b65\u9aa4\u200b\uff1a</p> <ol> <li>\u200b\u8c03\u7528\u200b\u6a21\u578b\u200b</li> <li>\u200b\u9009\u62e9\u200b\u8981\u200b\u6267\u884c\u200b\u7684\u200b\u5de5\u5177\u200b</li> <li>\u200b\u5f53\u200b\u4e0d\u518d\u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\u65f6\u200b\u7ed3\u675f\u200b</li> </ol> <pre><code># \u200b\u57fa\u7840\u200b Agent \u200b\u521b\u5efa\u200b\nfrom langchain.agents import create_agent\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[...]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#middleware","title":"Middleware \u200b\u6267\u884c\u200b\u94a9\u5b50","text":"<p>Middleware \u200b\u5728\u200b\u4ee5\u4e0b\u200b\u5173\u952e\u200b\u8282\u70b9\u200b\u66b4\u9732\u200b\u94a9\u5b50\u200b\uff1a</p> <ul> <li>before_model: \u200b\u5728\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u4e4b\u524d\u200b</li> <li>after_model: \u200b\u5728\u200b\u6a21\u578b\u200b\u54cd\u5e94\u200b\u4e4b\u540e\u200b</li> <li>wrap_model_call: \u200b\u56f4\u7ed5\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\uff08\u200b\u5b8c\u5168\u200b\u63a7\u5236\u200b\uff09</li> <li>wrap_tool_call: \u200b\u56f4\u7ed5\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b</li> </ul>"},{"location":"llmapps/langchain/core-components/middleware/#middleware_1","title":"\u5185\u7f6e\u200b Middleware \u200b\u4f7f\u7528\u6307\u5357","text":""},{"location":"llmapps/langchain/core-components/middleware/#1-summarizationmiddleware-","title":"1. SummarizationMiddleware - \u200b\u5bf9\u8bdd\u200b\u603b\u7ed3","text":"<p>\u200b\u81ea\u52a8\u200b\u603b\u7ed3\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\u4ee5\u200b\u907f\u514d\u200b\u8d85\u51fa\u200b token \u200b\u9650\u5236\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import SummarizationMiddleware\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[weather_tool, calculator_tool],\n    middleware=[\n        SummarizationMiddleware(\n            model=\"openai:gpt-4o-mini\",\n            max_tokens_before_summary=4000,  # \u200b\u5728\u200b 4000 tokens \u200b\u65f6\u200b\u89e6\u53d1\u200b\u603b\u7ed3\u200b\n            messages_to_keep=20,  # \u200b\u603b\u7ed3\u200b\u540e\u200b\u4fdd\u7559\u200b\u6700\u8fd1\u200b 20 \u200b\u6761\u200b\u6d88\u606f\u200b\n        ),\n    ],\n)\n</code></pre> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a</p> <ul> <li>\u200b\u957f\u65f6\u95f4\u200b\u8fd0\u884c\u200b\u7684\u200b\u5bf9\u8bdd\u200b</li> <li>\u200b\u591a\u8f6e\u200b\u5bf9\u8bdd\u200b\u4e14\u200b\u6709\u200b\u5927\u91cf\u200b\u5386\u53f2\u8bb0\u5f55\u200b</li> <li>\u200b\u9700\u8981\u200b\u4fdd\u7559\u200b\u5b8c\u6574\u200b\u5bf9\u8bdd\u200b\u4e0a\u4e0b\u6587\u200b\u7684\u200b\u5e94\u7528\u200b</li> </ul>"},{"location":"llmapps/langchain/core-components/middleware/#2-humanintheloopmiddleware-","title":"2. HumanInTheLoopMiddleware - \u200b\u4eba\u5de5\u200b\u5ba1\u6838","text":"<p>\u200b\u5728\u200b\u6267\u884c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u524d\u200b\u6682\u505c\u200b\uff0c\u200b\u7b49\u5f85\u200b\u4eba\u5de5\u200b\u6279\u51c6\u200b\u3001\u200b\u7f16\u8f91\u200b\u6216\u200b\u62d2\u7edd\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import HumanInTheLoopMiddleware\nfrom langgraph.checkpoint.memory import InMemorySaver\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[read_email_tool, send_email_tool],\n    checkpointer=InMemorySaver(),  # \u200b\u5fc5\u987b\u200b\u4f7f\u7528\u200b checkpointer\n    middleware=[\n        HumanInTheLoopMiddleware(\n            interrupt_on={\n                \"send_email_tool\": {  # \u200b\u53d1\u9001\u200b\u90ae\u4ef6\u200b\u9700\u8981\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\n                    \"allowed_decisions\": [\"approve\", \"edit\", \"reject\"],\n                },\n                \"read_email_tool\": False,  # \u200b\u81ea\u52a8\u200b\u6279\u51c6\u200b\u8bfb\u53d6\u200b\u90ae\u4ef6\u200b\n            }\n        ),\n    ],\n)\n</code></pre> <p>\u200b\u91cd\u8981\u200b\u63d0\u793a\u200b\uff1a\u200b\u5fc5\u987b\u200b\u914d\u7f6e\u200b checkpointer \u200b\u6765\u200b\u7ef4\u6301\u200b\u4e2d\u65ad\u200b\u95f4\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/middleware/#3-modelcalllimitmiddleware-","title":"3. ModelCallLimitMiddleware - \u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u9650\u5236","text":"<p>\u200b\u9650\u5236\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u6b21\u6570\u200b\uff0c\u200b\u9632\u6b62\u200b\u65e0\u9650\u200b\u5faa\u73af\u200b\u6216\u200b\u8fc7\u200b\u9ad8\u200b\u6210\u672c\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import ModelCallLimitMiddleware\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[...],\n    middleware=[\n        ModelCallLimitMiddleware(\n            thread_limit=10,  # \u200b\u6bcf\u4e2a\u200b\u7ebf\u7a0b\u200b\u6700\u200b\u591a\u200b 10 \u200b\u6b21\u200b\u8c03\u7528\u200b\n            run_limit=5,     # \u200b\u6bcf\u6b21\u200b\u8fd0\u884c\u200b\u6700\u200b\u591a\u200b 5 \u200b\u6b21\u200b\u8c03\u7528\u200b\n            exit_behavior=\"end\",  # \u200b\u8fbe\u5230\u200b\u9650\u5236\u200b\u65f6\u200b\u4f18\u96c5\u200b\u7ed3\u675f\u200b\n        ),\n    ],\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#4-toolcalllimitmiddleware-","title":"4. ToolCallLimitMiddleware - \u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u9650\u5236","text":"<p>\u200b\u9650\u5236\u200b\u7279\u5b9a\u200b\u5de5\u5177\u200b\u6216\u200b\u6240\u6709\u200b\u5de5\u5177\u200b\u7684\u200b\u8c03\u7528\u200b\u6b21\u6570\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import ToolCallLimitMiddleware\n\n# \u200b\u9650\u5236\u200b\u6240\u6709\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\nglobal_limiter = ToolCallLimitMiddleware(thread_limit=20, run_limit=10)\n\n# \u200b\u9650\u5236\u200b\u7279\u5b9a\u200b\u5de5\u5177\u200b\nsearch_limiter = ToolCallLimitMiddleware(\n    tool_name=\"search\",\n    thread_limit=5,\n    run_limit=3,\n)\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[...],\n    middleware=[global_limiter, search_limiter],\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#5-modelfallbackmiddleware-","title":"5. ModelFallbackMiddleware - \u200b\u6a21\u578b\u200b\u6545\u969c\u200b\u8f6c\u79fb","text":"<p>\u200b\u5f53\u200b\u4e3b\u6a21\u578b\u200b\u5931\u8d25\u200b\u65f6\u200b\u81ea\u52a8\u200b\u5207\u6362\u200b\u5230\u200b\u5907\u7528\u200b\u6a21\u578b\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import ModelFallbackMiddleware\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",  # \u200b\u4e3b\u6a21\u578b\u200b\n    tools=[...],\n    middleware=[\n        ModelFallbackMiddleware(\n            \"openai:gpt-4o-mini\",  # \u200b\u7b2c\u4e00\u200b\u5907\u7528\u200b\u6a21\u578b\u200b\n            \"anthropic:claude-3-5-sonnet-20241022\",  # \u200b\u7b2c\u4e8c\u200b\u5907\u7528\u200b\u6a21\u578b\u200b\n        ),\n    ],\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#6-piimiddleware-","title":"6. PIIMiddleware - \u200b\u4e2a\u4eba\u4fe1\u606f\u200b\u68c0\u6d4b","text":"<p>\u200b\u68c0\u6d4b\u200b\u548c\u200b\u5904\u7406\u200b\u5bf9\u8bdd\u200b\u4e2d\u200b\u7684\u200b\u4e2a\u4eba\u8eab\u4efd\u200b\u4fe1\u606f\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import PIIMiddleware\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[...],\n    middleware=[\n        # \u200b\u5728\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u4e2d\u200b\u5c4f\u853d\u200b\u90ae\u7bb1\u200b\n        PIIMiddleware(\"email\", strategy=\"redact\", apply_to_input=True),\n        # \u200b\u63a9\u7801\u200b\u4fe1\u7528\u5361\u200b\u53f7\u200b\uff08\u200b\u663e\u793a\u200b\u6700\u540e\u200b4\u200b\u4f4d\u200b\uff09\n        PIIMiddleware(\"credit_card\", strategy=\"mask\", apply_to_input=True),\n        # \u200b\u81ea\u5b9a\u4e49\u200b API \u200b\u5bc6\u94a5\u200b\u68c0\u6d4b\u200b\n        PIIMiddleware(\n            \"api_key\",\n            detector=r\"sk-[a-zA-Z0-9]{32}\",\n            strategy=\"block\",  # \u200b\u68c0\u6d4b\u200b\u5230\u200b\u65f6\u62a5\u200b\u9519\u200b\n        ),\n    ],\n)\n</code></pre> <p>\u200b\u5904\u7406\u200b\u7b56\u7565\u200b\uff1a</p> <ul> <li><code>block</code>: \u200b\u68c0\u6d4b\u200b\u5230\u200b\u65f6\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b</li> <li><code>redact</code>: \u200b\u66ff\u6362\u200b\u4e3a\u200b <code>[REDACTED_TYPE]</code></li> <li><code>mask</code>: \u200b\u90e8\u5206\u200b\u63a9\u7801\u200b</li> <li><code>hash</code>: \u200b\u66ff\u6362\u200b\u4e3a\u200b\u786e\u5b9a\u6027\u200b\u54c8\u5e0c\u200b\u503c\u200b</li> </ul>"},{"location":"llmapps/langchain/core-components/middleware/#7-toolretrymiddleware-","title":"7. ToolRetryMiddleware - \u200b\u5de5\u5177\u200b\u91cd\u8bd5","text":"<p>\u200b\u5bf9\u200b\u5931\u8d25\u200b\u7684\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u8fdb\u884c\u200b\u6307\u6570\u200b\u9000\u907f\u200b\u91cd\u8bd5\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import ToolRetryMiddleware\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_tool, database_tool],\n    middleware=[\n        ToolRetryMiddleware(\n            max_retries=3,      # \u200b\u6700\u200b\u591a\u91cd\u200b\u8bd5\u200b 3 \u200b\u6b21\u200b\n            backoff_factor=2.0, # \u200b\u6307\u6570\u200b\u9000\u907f\u200b\u4e58\u6570\u200b\n            initial_delay=1.0,  # \u200b\u521d\u59cb\u200b\u5ef6\u8fdf\u200b 1 \u200b\u79d2\u200b\n            max_delay=60.0,     # \u200b\u6700\u5927\u200b\u5ef6\u8fdf\u200b 60 \u200b\u79d2\u200b\n            jitter=True,        # \u200b\u6dfb\u52a0\u200b\u968f\u673a\u200b\u6296\u52a8\u200b\n        ),\n    ],\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#middleware_2","title":"\u81ea\u5b9a\u4e49\u200b Middleware \u200b\u5f00\u53d1","text":""},{"location":"llmapps/langchain/core-components/middleware/#_3","title":"\u88c5\u9970\u200b\u5668\u200b\u65b9\u5f0f\u200b\uff08\u200b\u7b80\u5355\u200b\u573a\u666f\u200b\uff09","text":"<p>\u200b\u9002\u7528\u200b\u4e8e\u200b\u53ea\u200b\u9700\u8981\u200b\u5355\u4e2a\u200b\u94a9\u5b50\u200b\u7684\u200b\u7b80\u5355\u200b\u4e2d\u95f4\u4ef6\u200b\u3002</p> <pre><code>from langchain.agents.middleware import before_model, after_model, wrap_model_call\nfrom langchain.agents.middleware import AgentState\nfrom langchain.messages import AIMessage\n\n# \u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u524d\u200b\u65e5\u5fd7\u200b\u8bb0\u5f55\u200b\n@before_model\ndef log_before_model(state: AgentState, runtime) -&gt; dict | None:\n    print(f\"\u200b\u51c6\u5907\u200b\u8c03\u7528\u200b\u6a21\u578b\u200b\uff0c\u200b\u6d88\u606f\u200b\u6570\u91cf\u200b: {len(state['messages'])}\")\n    return None\n\n# \u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u540e\u200b\u9a8c\u8bc1\u200b\n@after_model\ndef validate_output(state: AgentState, runtime) -&gt; dict | None:\n    last_message = state[\"messages\"][-1]\n    if \"BLOCKED\" in last_message.content:\n        return {\n            \"messages\": [AIMessage(\"\u200b\u6211\u200b\u65e0\u6cd5\u200b\u54cd\u5e94\u200b\u8fd9\u4e2a\u200b\u8bf7\u6c42\u200b\u3002\")],\n            \"jump_to\": \"end\"\n        }\n    return None\n\n# \u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u91cd\u8bd5\u200b\u5305\u88c5\u200b\n@wrap_model_call\ndef retry_model(request, handler):\n    for attempt in range(3):\n        try:\n            return handler(request)\n        except Exception as e:\n            if attempt == 2:\n                raise\n            print(f\"\u200b\u91cd\u8bd5\u200b {attempt + 1}/3\uff0c\u200b\u9519\u8bef\u200b: {e}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#_4","title":"\u7c7b\u200b\u65b9\u5f0f\u200b\uff08\u200b\u590d\u6742\u200b\u573a\u666f\u200b\uff09","text":"<p>\u200b\u9002\u7528\u200b\u4e8e\u200b\u9700\u8981\u200b\u591a\u4e2a\u200b\u94a9\u5b50\u200b\u6216\u200b\u590d\u6742\u200b\u914d\u7f6e\u200b\u7684\u200b\u4e2d\u95f4\u4ef6\u200b\u3002</p> <pre><code>from langchain.agents.middleware import AgentMiddleware, AgentState\nfrom langchain.agents.middleware import ModelRequest, ModelResponse\nfrom typing import Callable, Any\n\nclass ComprehensiveLoggingMiddleware(AgentMiddleware):\n    def __init__(self, log_level: str = \"INFO\"):\n        super().__init__()\n        self.log_level = log_level\n\n    def before_model(self, state: AgentState, runtime) -&gt; dict[str, Any] | None:\n        print(f\"[{self.log_level}] \u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u524d\u200b - \u200b\u6d88\u606f\u200b\u6570\u200b: {len(state['messages'])}\")\n        return None\n\n    def after_model(self, state: AgentState, runtime) -&gt; dict[str, Any] | None:\n        last_msg = state[\"messages\"][-1]\n        print(f\"[{self.log_level}] \u200b\u6a21\u578b\u200b\u54cd\u5e94\u200b: {last_msg.content[:100]}...\")\n        return None\n\n    def wrap_model_call(\n        self,\n        request: ModelRequest,\n        handler: Callable[[ModelRequest], ModelResponse],\n    ) -&gt; ModelResponse:\n        print(f\"[{self.log_level}] \u200b\u5f00\u59cb\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\")\n        start_time = time.time()\n\n        try:\n            response = handler(request)\n            duration = time.time() - start_time\n            print(f\"[{self.log_level}] \u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u6210\u529f\u200b\uff0c\u200b\u8017\u65f6\u200b: {duration:.2f}s\")\n            return response\n        except Exception as e:\n            duration = time.time() - start_time\n            print(f\"[{self.log_level}] \u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u5931\u8d25\u200b\uff0c\u200b\u8017\u65f6\u200b: {duration:.2f}s\uff0c\u200b\u9519\u8bef\u200b: {e}\")\n            raise\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#_5","title":"\u81ea\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u7ba1\u7406","text":"<p>Middleware \u200b\u53ef\u4ee5\u200b\u6269\u5c55\u200b Agent \u200b\u7684\u200b\u72b6\u6001\u200b\u7ed3\u6784\u200b\uff1a</p> <pre><code>from typing_extensions import NotRequired\nfrom typing import Any\n\nclass CustomState(AgentState):\n    model_call_count: NotRequired[int]\n    user_preferences: NotRequired[dict]\n\nclass StateAwareMiddleware(AgentMiddleware[CustomState]):\n    state_schema = CustomState\n\n    def before_model(self, state: CustomState, runtime) -&gt; dict[str, Any] | None:\n        # \u200b\u8bbf\u95ee\u200b\u81ea\u5b9a\u4e49\u200b\u72b6\u6001\u200b\n        call_count = state.get(\"model_call_count\", 0)\n        preferences = state.get(\"user_preferences\", {})\n\n        if call_count &gt; 50:\n            return {\"jump_to\": \"end\"}\n\n        return None\n\n    def after_model(self, state: CustomState, runtime) -&gt; dict[str, Any] | None:\n        # \u200b\u66f4\u65b0\u200b\u81ea\u5b9a\u4e49\u200b\u72b6\u6001\u200b\n        return {\n            \"model_call_count\": state.get(\"model_call_count\", 0) + 1\n        }\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#_6","title":"\u9ad8\u7ea7\u200b\u7528\u4f8b","text":""},{"location":"llmapps/langchain/core-components/middleware/#_7","title":"\u52a8\u6001\u200b\u5de5\u5177\u200b\u9009\u62e9","text":"<p>\u200b\u6839\u636e\u200b\u4e0a\u4e0b\u6587\u200b\u667a\u80fd\u200b\u9009\u62e9\u200b\u76f8\u5173\u200b\u5de5\u5177\u200b\uff1a</p> <pre><code>class SmartToolSelectorMiddleware(AgentMiddleware):\n    def wrap_model_call(\n        self,\n        request: ModelRequest,\n        handler: Callable[[ModelRequest], ModelResponse],\n    ) -&gt; ModelResponse:\n        # \u200b\u57fa\u4e8e\u200b\u5bf9\u8bdd\u200b\u5185\u5bb9\u200b\u9009\u62e9\u200b\u76f8\u5173\u200b\u5de5\u5177\u200b\n        user_message = request.state[\"messages\"][-1].content.lower()\n\n        if \"weather\" in user_message:\n            relevant_tools = [t for t in request.tools if \"weather\" in t.name]\n        elif \"calculate\" in user_message:\n            relevant_tools = [t for t in request.tools if \"calc\" in t.name or \"math\" in t.name]\n        else:\n            relevant_tools = request.tools[:5]  # \u200b\u9650\u5236\u200b\u5de5\u5177\u200b\u6570\u91cf\u200b\n\n        request.tools = relevant_tools\n        return handler(request)\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#_8","title":"\u6743\u9650\u200b\u63a7\u5236\u200b\u4e2d\u95f4\u4ef6","text":"<pre><code>class PermissionMiddleware(AgentMiddleware):\n    def __init__(self, user_roles: dict):\n        super().__init__()\n        self.user_roles = user_roles\n\n    def before_model(self, state: AgentState, runtime) -&gt; dict[str, Any] | None:\n        user_id = runtime.context.get(\"user_id\")\n        user_role = self.user_roles.get(user_id, \"guest\")\n\n        # \u200b\u57fa\u4e8e\u200b\u89d2\u8272\u200b\u9650\u5236\u200b\u5de5\u5177\u200b\u8bbf\u95ee\u200b\n        if user_role == \"guest\":\n            restricted_tools = [\"delete\", \"admin\", \"config\"]\n            for tool in state.get(\"tools\", []):\n                if any(restricted in tool.name for restricted in restricted_tools):\n                    return {\n                        \"messages\": [AIMessage(\"\u200b\u6743\u9650\u200b\u4e0d\u8db3\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u4f7f\u7528\u200b\u8be5\u200b\u529f\u80fd\u200b\")],\n                        \"jump_to\": \"end\"\n                    }\n        return None\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#_9","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"llmapps/langchain/core-components/middleware/#1","title":"1. \u200b\u6267\u884c\u200b\u987a\u5e8f\u200b\u7ba1\u7406","text":"<pre><code># Middleware \u200b\u6267\u884c\u200b\u987a\u5e8f\u200b\u5f88\u200b\u91cd\u8981\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    middleware=[\n        LoggingMiddleware(),      # \u200b\u6700\u5148\u200b\u6267\u884c\u200b - \u200b\u57fa\u7840\u200b\u65e5\u5fd7\u200b\n        ValidationMiddleware(),   # \u200b\u5176\u6b21\u200b - \u200b\u8f93\u5165\u200b\u9a8c\u8bc1\u200b\n        SecurityMiddleware(),     # \u200b\u5b89\u5168\u68c0\u67e5\u200b\n        BusinessLogicMiddleware(), # \u200b\u4e1a\u52a1\u200b\u903b\u8f91\u200b\n        FallbackMiddleware()      # \u200b\u6700\u540e\u200b - \u200b\u6545\u969c\u200b\u5904\u7406\u200b\n    ],\n    tools=[...]\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#2","title":"2. \u200b\u9519\u8bef\u5904\u7406","text":"<pre><code>class RobustMiddleware(AgentMiddleware):\n    def wrap_model_call(self, request, handler):\n        try:\n            return handler(request)\n        except Exception as e:\n            # \u200b\u8bb0\u5f55\u200b\u9519\u8bef\u200b\u4f46\u200b\u4e0d\u200b\u4e2d\u65ad\u200b\u6267\u884c\u200b\n            logger.error(f\"Middleware error: {e}\")\n            # \u200b\u8fd4\u56de\u200b\u964d\u7ea7\u200b\u54cd\u5e94\u200b\n            return ModelResponse(\n                messages=[AIMessage(\"\u200b\u7cfb\u7edf\u200b\u6682\u65f6\u200b\u4e0d\u53ef\u200b\u7528\u200b\uff0c\u200b\u8bf7\u200b\u7a0d\u540e\u200b\u91cd\u8bd5\u200b\u3002\")]\n            )\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#3","title":"3. \u200b\u6027\u80fd\u200b\u4f18\u5316","text":"<pre><code>class CachingMiddleware(AgentMiddleware):\n    def __init__(self):\n        super().__init__()\n        self.cache = {}\n\n    def wrap_model_call(self, request, handler):\n        cache_key = self._generate_cache_key(request)\n\n        if cache_key in self.cache:\n            return self.cache[cache_key]\n\n        response = handler(request)\n        self.cache[cache_key] = response\n        return response\n\n    def _generate_cache_key(self, request):\n        # \u200b\u57fa\u4e8e\u200b\u8bf7\u6c42\u200b\u5185\u5bb9\u200b\u751f\u6210\u200b\u7f13\u5b58\u200b\u952e\u200b\n        return hash(str(request.messages))\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#_10","title":"\u5b8c\u6574\u200b\u793a\u4f8b","text":"<p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7efc\u5408\u200b\u4f7f\u7528\u200b\u591a\u4e2a\u200b Middleware \u200b\u7684\u200b\u751f\u4ea7\u200b\u7ea7\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import (\n    SummarizationMiddleware,\n    ModelCallLimitMiddleware,\n    ToolRetryMiddleware,\n    PIIMiddleware\n)\n\n# \u200b\u521b\u5efa\u200b\u5177\u5907\u200b\u5b8c\u6574\u200b\u4e2d\u95f4\u4ef6\u200b\u6808\u200b\u7684\u200b Agent\nproduction_agent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[search_tool, calculator_tool, database_tool, email_tool],\n    middleware=[\n        # \u200b\u5b89\u5168\u200b\u548c\u200b\u5408\u89c4\u200b\n        PIIMiddleware(\"email\", strategy=\"redact\", apply_to_input=True),\n        PIIMiddleware(\"credit_card\", strategy=\"mask\", apply_to_input=True),\n\n        # \u200b\u6027\u80fd\u200b\u548c\u200b\u7a33\u5b9a\u6027\u200b\n        SummarizationMiddleware(\n            model=\"openai:gpt-4o-mini\",\n            max_tokens_before_summary=3000,\n        ),\n        ToolRetryMiddleware(\n            max_retries=2,\n            backoff_factor=1.5,\n        ),\n\n        # \u200b\u8d44\u6e90\u200b\u63a7\u5236\u200b\n        ModelCallLimitMiddleware(thread_limit=20, run_limit=10),\n\n        # \u200b\u81ea\u5b9a\u4e49\u200b\u4e1a\u52a1\u200b\u903b\u8f91\u200b\n        CustomLoggingMiddleware(),\n        PermissionMiddleware(user_roles=USER_ROLES),\n    ],\n    checkpointer=InMemorySaver(),  # \u200b\u7528\u4e8e\u200b\u7ef4\u6301\u200b\u72b6\u6001\u200b\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/middleware/#_11","title":"\u603b\u7ed3","text":"<p>LangChain Middleware \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u7684\u200b\u6269\u5c55\u200b\u80fd\u529b\u200b\uff0c\u200b\u8ba9\u200b\u4f60\u200b\u80fd\u591f\u200b\uff1a</p> <ul> <li>\u200b\u76d1\u63a7\u200b\uff1a\u200b\u8ddf\u8e2a\u200b Agent \u200b\u884c\u4e3a\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u65e5\u5fd7\u200b\u548c\u200b\u5206\u6790\u200b</li> <li>\u200b\u4fee\u6539\u200b\uff1a\u200b\u8f6c\u6362\u200b\u63d0\u793a\u200b\u3001\u200b\u5de5\u5177\u200b\u9009\u62e9\u200b\u548c\u200b\u8f93\u51fa\u200b\u683c\u5f0f\u200b</li> <li>\u200b\u63a7\u5236\u200b\uff1a\u200b\u6dfb\u52a0\u200b\u91cd\u8bd5\u200b\u3001\u200b\u6545\u969c\u200b\u8f6c\u79fb\u200b\u548c\u200b\u63d0\u524d\u200b\u7ec8\u6b62\u200b\u903b\u8f91\u200b</li> <li>\u200b\u5f3a\u5236\u6267\u884c\u200b\uff1a\u200b\u5e94\u7528\u200b\u901f\u7387\u200b\u9650\u5236\u200b\u3001\u200b\u9632\u62a4\u680f\u200b\u548c\u200b PII \u200b\u68c0\u6d4b\u200b</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u4f7f\u7528\u200b\u5185\u7f6e\u200b Middleware \u200b\u548c\u200b\u5f00\u53d1\u200b\u81ea\u5b9a\u4e49\u200b Middleware\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u51fa\u200b\u66f4\u52a0\u200b\u5065\u58ee\u200b\u3001\u200b\u5b89\u5168\u200b\u548c\u200b\u9ad8\u6548\u200b\u7684\u200b AI Agent \u200b\u5e94\u7528\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/models/","title":"LangChain Models","text":""},{"location":"llmapps/langchain/core-components/models/#_1","title":"\u6982\u8ff0","text":"<p>\u200b\u5927\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\uff08LLMs\uff09\u200b\u662f\u200b\u80fd\u591f\u200b\u50cf\u200b\u4eba\u7c7b\u200b\u4e00\u6837\u200b\u89e3\u91ca\u200b\u548c\u200b\u751f\u6210\u200b\u6587\u672c\u200b\u7684\u200b\u5f3a\u5927\u200bAI\u200b\u5de5\u5177\u200b\u3002\u200b\u5b83\u4eec\u200b\u8db3\u591f\u200b\u901a\u7528\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7f16\u5199\u200b\u5185\u5bb9\u200b\u3001\u200b\u7ffb\u8bd1\u200b\u8bed\u8a00\u200b\u3001\u200b\u603b\u7ed3\u200b\u548c\u200b\u56de\u7b54\u200b\u95ee\u9898\u200b\uff0c\u200b\u800c\u200b\u65e0\u9700\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u4efb\u52a1\u200b\u8fdb\u884c\u200b\u4e13\u95e8\u200b\u8bad\u7ec3\u200b\u3002</p> <p>\u200b\u9664\u4e86\u200b\u6587\u672c\u200b\u751f\u6210\u200b\uff0c\u200b\u8bb8\u591a\u200b\u6a21\u578b\u200b\u8fd8\u200b\u652f\u6301\u200b\uff1a</p> <ul> <li>\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b - \u200b\u8c03\u7528\u200b\u5916\u90e8\u200b\u5de5\u5177\u200b\u5e76\u200b\u5728\u200b\u54cd\u5e94\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u7ed3\u679c\u200b</li> <li>\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b - \u200b\u6a21\u578b\u200b\u7684\u200b\u54cd\u5e94\u200b\u88ab\u200b\u7ea6\u675f\u200b\u4e3a\u200b\u9075\u5faa\u200b\u5b9a\u4e49\u200b\u7684\u200b\u683c\u5f0f\u200b</li> <li>\u200b\u591a\u200b\u6a21\u6001\u200b - \u200b\u5904\u7406\u200b\u548c\u200b\u8fd4\u56de\u200b\u6587\u672c\u200b\u4ee5\u5916\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u5982\u200b\u56fe\u50cf\u200b\u3001\u200b\u97f3\u9891\u200b\u548c\u200b\u89c6\u9891\u200b</li> <li>\u200b\u63a8\u7406\u200b - \u200b\u6a21\u578b\u200b\u6267\u884c\u200b\u591a\u200b\u6b65\u200b\u63a8\u7406\u200b\u4ee5\u200b\u5f97\u51fa\u7ed3\u8bba\u200b</li> </ul> <p>\u200b\u6a21\u578b\u200b\u662f\u200bAgent\u200b\u7684\u200b\u63a8\u7406\u200b\u5f15\u64ce\u200b\uff0c\u200b\u9a71\u52a8\u200bAgent\u200b\u7684\u200b\u51b3\u7b56\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u60a8\u200b\u9009\u62e9\u200b\u7684\u200b\u6a21\u578b\u200b\u7684\u200b\u8d28\u91cf\u200b\u548c\u200b\u80fd\u529b\u200b\u76f4\u63a5\u200b\u5f71\u54cd\u200bAgent\u200b\u7684\u200b\u53ef\u9760\u6027\u200b\u548c\u200b\u6027\u80fd\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/models/#_2","title":"\u57fa\u7840\u200b\u7528\u6cd5","text":""},{"location":"llmapps/langchain/core-components/models/#1","title":"1. \u200b\u521d\u59cb\u5316\u200b\u6a21\u578b","text":""},{"location":"llmapps/langchain/core-components/models/#init_chat_model","title":"\u4f7f\u7528\u200b <code>init_chat_model</code>\uff08\u200b\u63a8\u8350\u200b\uff09","text":"<pre><code>import os\nfrom langchain.chat_models import init_chat_model\n\n# \u200b\u8bbe\u7f6e\u200bAPI\u200b\u5bc6\u94a5\u200b\nos.environ[\"OPENAI_API_KEY\"] = \"sk-...\"\n\n# \u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b\nmodel = init_chat_model(\"openai:gpt-4o\")\n\n# \u200b\u57fa\u672c\u200b\u8c03\u7528\u200b\nresponse = model.invoke(\"\u200b\u4e3a\u4ec0\u4e48\u200b\u9e66\u9e49\u200b\u4f1a\u200b\u8bf4\u8bdd\u200b\uff1f\")\nprint(response.content)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#_3","title":"\u4f7f\u7528\u200b\u6a21\u578b\u200b\u7c7b","text":"<pre><code>from langchain_openai import ChatOpenAI\n\n# \u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u6a21\u578b\u200b\u7c7b\u200b\nmodel = ChatOpenAI(\n    model=\"gpt-4o\",\n    temperature=0.7,\n    max_tokens=1000,\n    timeout=30\n)\n\nresponse = model.invoke(\"\u200b\u89e3\u91ca\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u200b\")\nprint(response.content)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#2","title":"2. \u200b\u652f\u6301\u200b\u7684\u200b\u63d0\u4f9b\u5546","text":"<pre><code># Anthropic\nfrom langchain_anthropic import ChatAnthropic\nmodel = ChatAnthropic(model=\"claude-3-5-sonnet-20241022\")\n\n# Google Gemini\nfrom langchain_google_genai import ChatGoogleGenerativeAI\nmodel = ChatGoogleGenerativeAI(model=\"gemini-2.0-flash-exp\")\n\n# Azure OpenAI\nfrom langchain_openai import AzureChatOpenAI\nmodel = AzureChatOpenAI(\n    azure_deployment=\"your-deployment-name\",\n    openai_api_version=\"2023-05-15\"\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#_4","title":"\u53c2\u6570\u200b\u914d\u7f6e","text":""},{"location":"llmapps/langchain/core-components/models/#_5","title":"\u5e38\u7528\u200b\u53c2\u6570","text":"<pre><code>model = init_chat_model(\n    \"openai:gpt-4o\",\n    # \u200b\u6838\u5fc3\u200b\u53c2\u6570\u200b\n    temperature=0.7,      # \u200b\u63a7\u5236\u200b\u968f\u673a\u6027\u200b (0-1)\n    max_tokens=1000,      # \u200b\u6700\u5927\u200b\u8f93\u51fa\u200b\u957f\u5ea6\u200b\n    timeout=30,           # \u200b\u8d85\u65f6\u200b\u65f6\u95f4\u200b\uff08\u200b\u79d2\u200b\uff09\n    max_retries=3,        # \u200b\u6700\u5927\u200b\u91cd\u8bd5\u200b\u6b21\u6570\u200b\n\n    # \u200b\u9ad8\u7ea7\u200b\u53c2\u6570\u200b\n    top_p=0.9,           # \u200b\u6838\u200b\u91c7\u6837\u200b\u53c2\u6570\u200b\n    frequency_penalty=0.1, # \u200b\u9891\u7387\u200b\u60e9\u7f5a\u200b\n    presence_penalty=0.1,  # \u200b\u5b58\u5728\u200b\u60e9\u7f5a\u200b\n)\n\nresponse = model.invoke(\"\u200b\u5199\u200b\u4e00\u4e2a\u200b\u5173\u4e8e\u200bAI\u200b\u7684\u200b\u77ed\u200b\u6545\u4e8b\u200b\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#_6","title":"\u8c03\u7528\u200b\u65b9\u5f0f","text":""},{"location":"llmapps/langchain/core-components/models/#1-invoke","title":"1. \u200b\u5355\u6b21\u200b\u8c03\u7528\u200b\uff08Invoke\uff09","text":"<pre><code># \u200b\u5355\u6761\u200b\u6d88\u606f\u200b\nresponse = model.invoke(\"Python\u200b\u7684\u200b\u4e3b\u8981\u200b\u7279\u70b9\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f\")\nprint(response.content)\n\n# \u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\nmessages = [\n    {\"role\": \"system\", \"content\": \"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6709\u200b\u5e2e\u52a9\u200b\u7684\u200b\u52a9\u624b\u200b\u3002\"},\n    {\"role\": \"user\", \"content\": \"\u200b\u6559\u200b\u6211\u200bPython\"},\n    {\"role\": \"assistant\", \"content\": \"Python\u200b\u662f\u200b\u4e00\u79cd\u200b\u9ad8\u7ea7\u200b\u7f16\u7a0b\u8bed\u8a00\u200b...\"},\n    {\"role\": \"user\", \"content\": \"\u200b\u5b83\u200b\u7684\u200b\u4e3b\u8981\u200b\u5e94\u7528\u9886\u57df\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f\"}\n]\n\nresponse = model.invoke(messages)\nprint(response.content)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#2-stream","title":"2. \u200b\u6d41\u5f0f\u200b\u8c03\u7528\u200b\uff08Stream\uff09","text":"<pre><code>print(\"AI\u200b\u56de\u590d\u200b: \", end=\"\", flush=True)\n\nfor chunk in model.stream(\"\u200b\u89e3\u91ca\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u7684\u200b\u57fa\u672c\u6982\u5ff5\u200b\"):\n    if hasattr(chunk, 'content'):\n        print(chunk.content, end=\"\", flush=True)\nprint()  # \u200b\u6362\u884c\u200b\n\n# \u200b\u6216\u8005\u200b\u7d2f\u79ef\u200b\u5b8c\u6574\u200b\u7684\u200b\u6d88\u606f\u200b\nfull_response = None\nfor chunk in model.stream(\"\u200b\u5929\u6c14\u200b\u5982\u4f55\u200b\u5f71\u54cd\u200b\u5fc3\u60c5\u200b\uff1f\"):\n    full_response = chunk if full_response is None else full_response + chunk\n\nprint(f\"\\n\u200b\u5b8c\u6574\u200b\u56de\u590d\u200b: {full_response.content}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#3-batch","title":"3. \u200b\u6279\u91cf\u200b\u8c03\u7528\u200b\uff08Batch\uff09","text":"<pre><code># \u200b\u57fa\u672c\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\nquestions = [\n    \"\u200b\u4ec0\u4e48\u200b\u662f\u200b\u4eba\u5de5\u667a\u80fd\u200b\uff1f\",\n    \"\u200b\u89e3\u91ca\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\",\n    \"\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u7684\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\",\n    \"\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u5982\u4f55\u200b\u5de5\u4f5c\u200b\"\n]\n\nresponses = model.batch(questions)\nfor i, response in enumerate(responses):\n    print(f\"\u200b\u95ee\u9898\u200b {i+1}: {response.content[:100]}...\")\n\n# \u200b\u5f02\u6b65\u200b\u5b8c\u6210\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\nprint(\"\u200b\u6309\u200b\u5b8c\u6210\u200b\u987a\u5e8f\u200b\u8f93\u51fa\u200b:\")\nfor response in model.batch_as_completed(questions):\n    print(f\"\u200b\u6536\u5230\u200b\u56de\u590d\u200b: {response.content[:50]}...\")\n\n# \u200b\u63a7\u5236\u200b\u5e76\u53d1\u200b\u6570\u200b\nresponses = model.batch(\n    questions,\n    config={'max_concurrency': 2}  # \u200b\u9650\u5236\u200b\u540c\u65f6\u200b2\u200b\u4e2a\u200b\u8bf7\u6c42\u200b\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#_7","title":"\u5de5\u5177\u200b\u8c03\u7528","text":""},{"location":"llmapps/langchain/core-components/models/#1_1","title":"1. \u200b\u7ed1\u5b9a\u200b\u5de5\u5177","text":"<pre><code>from langchain.tools import tool\n\n@tool\ndef get_weather(location: str) -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5929\u6c14\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n    return f\"{location}\u200b\u7684\u200b\u5929\u6c14\u200b\uff1a\u200b\u6674\u6717\u200b\uff0c25\u00b0C\"\n\n@tool\ndef calculator(expression: str) -&gt; str:\n    \"\"\"\u200b\u8ba1\u7b97\u200b\u6570\u5b66\u200b\u8868\u8fbe\u5f0f\u200b\u3002\"\"\"\n    try:\n        result = eval(expression)\n        return f\"{expression} = {result}\"\n    except:\n        return \"\u200b\u8ba1\u7b97\u9519\u8bef\u200b\"\n\n# \u200b\u7ed1\u5b9a\u200b\u5de5\u5177\u200b\u5230\u200b\u6a21\u578b\u200b\nmodel_with_tools = model.bind_tools([get_weather, calculator])\n\n# \u200b\u8c03\u7528\u200b\u5e26\u200b\u5de5\u5177\u200b\u7684\u200b\u6a21\u578b\u200b\nresponse = model_with_tools.invoke(\"\u200b\u5317\u4eac\u200b\u4eca\u5929\u5929\u6c14\u200b\u600e\u4e48\u6837\u200b\uff1f\u200b\u7136\u540e\u200b\u8ba1\u7b97\u200b 25 * 4\")\nprint(\"\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b:\", response.tool_calls)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#2_1","title":"2. \u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u5faa\u73af","text":"<pre><code>def execute_tool_calls(model, messages, tools):\n    \"\"\"\u200b\u6267\u884c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u5faa\u73af\u200b\"\"\"\n    # \u200b\u6a21\u578b\u200b\u751f\u6210\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\n    ai_msg = model.invoke(messages)\n    messages.append(ai_msg)\n\n    # \u200b\u6267\u884c\u200b\u6240\u6709\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\n    for tool_call in ai_msg.tool_calls:\n        tool_name = tool_call[\"name\"]\n        tool_args = tool_call[\"args\"]\n\n        # \u200b\u627e\u5230\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5de5\u5177\u200b\u5e76\u200b\u6267\u884c\u200b\n        for tool in tools:\n            if tool.name == tool_name:\n                result = tool.invoke(tool_args)\n                messages.append({\n                    \"role\": \"tool\",\n                    \"content\": result,\n                    \"tool_call_id\": tool_call[\"id\"]\n                })\n                break\n\n    # \u200b\u83b7\u53d6\u200b\u6700\u7ec8\u200b\u56de\u590d\u200b\n    final_response = model.invoke(messages)\n    return final_response\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\ntools = [get_weather, calculator]\nmessages = [{\"role\": \"user\", \"content\": \"\u200b\u5317\u4eac\u200b\u5929\u6c14\u200b\u5982\u4f55\u200b\uff1f\u200b\u7136\u540e\u200b\u8ba1\u7b97\u200b 15 + 27\"}]\nresult = execute_tool_calls(model_with_tools, messages, tools)\nprint(\"\u200b\u6700\u7ec8\u200b\u56de\u590d\u200b:\", result.content)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#3","title":"3. \u200b\u9ad8\u7ea7\u200b\u5de5\u5177\u200b\u529f\u80fd","text":"<pre><code># \u200b\u5f3a\u5236\u200b\u4f7f\u7528\u200b\u7279\u5b9a\u200b\u5de5\u5177\u200b\nforced_model = model.bind_tools(\n    [get_weather], \n    tool_choice=\"get_weather\"  # \u200b\u5f3a\u5236\u200b\u4f7f\u7528\u200b\u5929\u6c14\u200b\u5de5\u5177\u200b\n)\n\n# \u200b\u7981\u7528\u200b\u5e76\u884c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\nsequential_model = model.bind_tools(\n    [get_weather, calculator],\n    parallel_tool_calls=False  # \u200b\u987a\u5e8f\u200b\u6267\u884c\u200b\u5de5\u5177\u200b\n)\n\n# \u200b\u6d41\u5f0f\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\nprint(\"\u200b\u6d41\u5f0f\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b:\")\nfor chunk in model_with_tools.stream(\"\u200b\u67e5\u8be2\u200b\u5317\u4eac\u200b\u548c\u200b\u4e0a\u6d77\u200b\u7684\u200b\u5929\u6c14\u200b\"):\n    if hasattr(chunk, 'tool_call_chunks') and chunk.tool_call_chunks:\n        for tool_chunk in chunk.tool_call_chunks:\n            if tool_chunk.get('name'):\n                print(f\"\u200b\u5de5\u5177\u200b: {tool_chunk['name']}\")\n            if tool_chunk.get('args'):\n                print(f\"\u200b\u53c2\u6570\u200b: {tool_chunk['args']}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#_8","title":"\u7ed3\u6784\u5316\u200b\u8f93\u51fa","text":""},{"location":"llmapps/langchain/core-components/models/#1-pydantic","title":"1. Pydantic \u200b\u6a21\u578b","text":"<pre><code>from pydantic import BaseModel, Field\nfrom typing import List\n\nclass Movie(BaseModel):\n    \"\"\"\u200b\u7535\u5f71\u200b\u4fe1\u606f\u200b\"\"\"\n    title: str = Field(description=\"\u200b\u7535\u5f71\u200b\u6807\u9898\u200b\")\n    year: int = Field(description=\"\u200b\u4e0a\u6620\u200b\u5e74\u4efd\u200b\")\n    director: str = Field(description=\"\u200b\u5bfc\u6f14\u200b\")\n    rating: float = Field(description=\"\u200b\u8bc4\u5206\u200b(0-10)\")\n    genres: List[str] = Field(description=\"\u200b\u7c7b\u578b\u200b\u5217\u8868\u200b\")\n\nclass ProductReview(BaseModel):\n    \"\"\"\u200b\u4ea7\u54c1\u200b\u8bc4\u4ef7\u200b\"\"\"\n    product_name: str = Field(description=\"\u200b\u4ea7\u54c1\u540d\u79f0\u200b\")\n    rating: int = Field(description=\"\u200b\u8bc4\u5206\u200b(1-5)\")\n    pros: List[str] = Field(description=\"\u200b\u4f18\u70b9\u200b\")\n    cons: List[str] = Field(description=\"\u200b\u7f3a\u70b9\u200b\")\n    summary: str = Field(description=\"\u200b\u603b\u7ed3\u200b\")\n\n# \u200b\u4f7f\u7528\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\nstructured_model = model.with_structured_output(Movie)\nresponse = structured_model.invoke(\"\u200b\u63d0\u4f9b\u200b\u7535\u5f71\u200b\u300a\u200b\u76d7\u68a6\u200b\u7a7a\u95f4\u200b\u300b\u200b\u7684\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\")\n\nprint(f\"\u200b\u6807\u9898\u200b: {response.title}\")\nprint(f\"\u200b\u5e74\u4efd\u200b: {response.year}\")\nprint(f\"\u200b\u5bfc\u6f14\u200b: {response.director}\")\nprint(f\"\u200b\u8bc4\u5206\u200b: {response.rating}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#2_2","title":"2. \u200b\u5305\u542b\u200b\u539f\u59cb\u200b\u54cd\u5e94","text":"<pre><code># \u200b\u540c\u65f6\u200b\u83b7\u53d6\u200b\u89e3\u6790\u200b\u7ed3\u679c\u200b\u548c\u200b\u539f\u59cb\u200b\u6d88\u606f\u200b\nstructured_model_with_raw = model.with_structured_output(\n    Movie, \n    include_raw=True\n)\n\nresult = structured_model_with_raw.invoke(\"\u200b\u63cf\u8ff0\u200b\u7535\u5f71\u200b\u300a\u200b\u963f\u51e1\u200b\u8fbe\u200b\u300b\")\n\nprint(\"\u200b\u89e3\u6790\u200b\u7ed3\u679c\u200b:\", result.parsed)\nprint(\"\u200b\u539f\u59cb\u200b\u6d88\u606f\u200b:\", result.raw)\nprint(\"\u200b\u89e3\u6790\u200b\u9519\u8bef\u200b:\", result.parsing_error)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#3_1","title":"3. \u200b\u590d\u6742\u200b\u5d4c\u5957\u200b\u7ed3\u6784","text":"<pre><code>from typing import Optional\n\nclass Actor(BaseModel):\n    \"\"\"\u200b\u6f14\u5458\u200b\u4fe1\u606f\u200b\"\"\"\n    name: str = Field(description=\"\u200b\u6f14\u5458\u200b\u59d3\u540d\u200b\")\n    character: str = Field(description=\"\u200b\u626e\u6f14\u200b\u89d2\u8272\u200b\")\n\nclass MovieDetails(BaseModel):\n    \"\"\"\u200b\u8be6\u7ec6\u200b\u7535\u5f71\u200b\u4fe1\u606f\u200b\"\"\"\n    title: str = Field(description=\"\u200b\u7535\u5f71\u200b\u6807\u9898\u200b\")\n    year: int = Field(description=\"\u200b\u4e0a\u6620\u200b\u5e74\u4efd\u200b\")\n    director: str = Field(description=\"\u200b\u5bfc\u6f14\u200b\")\n    cast: List[Actor] = Field(description=\"\u200b\u6f14\u5458\u8868\u200b\")\n    budget: Optional[float] = Field(description=\"\u200b\u9884\u7b97\u200b\uff08\u200b\u767e\u4e07\u7f8e\u5143\u200b\uff09\")\n    box_office: Optional[float] = Field(description=\"\u200b\u7968\u623f\u200b\uff08\u200b\u767e\u4e07\u7f8e\u5143\u200b\uff09\")\n\n# \u200b\u4f7f\u7528\u200b\u5d4c\u5957\u200b\u7ed3\u6784\u200b\ndetailed_model = model.with_structured_output(MovieDetails)\nresponse = detailed_model.invoke(\"\u200b\u63d0\u4f9b\u200b\u300a\u200b\u6cf0\u5766\u5c3c\u514b\u53f7\u200b\u300b\u200b\u7684\u200b\u5b8c\u6574\u200b\u4fe1\u606f\u200b\")\n\nprint(f\"\u200b\u7535\u5f71\u200b: {response.title} ({response.year})\")\nprint(f\"\u200b\u5bfc\u6f14\u200b: {response.director}\")\nprint(\"\u200b\u4e3b\u6f14\u200b:\")\nfor actor in response.cast:\n    print(f\"  - {actor.name} \u200b\u9970\u6f14\u200b {actor.character}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#_9","title":"\u9ad8\u7ea7\u200b\u529f\u80fd","text":""},{"location":"llmapps/langchain/core-components/models/#1_2","title":"1. \u200b\u591a\u200b\u6a21\u6001\u200b\u5904\u7406","text":"<pre><code>from langchain_core.messages import HumanMessage\nimport base64\n\n# \u200b\u5904\u7406\u200b\u56fe\u50cf\u200b\uff08\u200b\u6a21\u62df\u200b\uff09\ndef encode_image(image_path):\n    \"\"\"\u200b\u7f16\u7801\u200b\u56fe\u50cf\u200b\u4e3a\u200bbase64\"\"\"\n    with open(image_path, \"rb\") as image_file:\n        return base64.b64encode(image_file.read()).decode('utf-8')\n\n# \u200b\u521b\u5efa\u200b\u591a\u200b\u6a21\u6001\u200b\u6d88\u606f\u200b\nmultimodal_message = [\n    {\n        \"type\": \"text\",\n        \"text\": \"\u200b\u63cf\u8ff0\u200b\u8fd9\u5f20\u200b\u56fe\u7247\u200b\u4e2d\u200b\u7684\u200b\u5185\u5bb9\u200b\"\n    },\n    {\n        \"type\": \"image_url\",\n        \"image_url\": {\n            \"url\": \"data:image/jpeg;base64,...\"  # \u200b\u5b9e\u9645\u200b\u4f7f\u7528\u200b\u4e2d\u200b\u66ff\u6362\u200b\u4e3a\u200b\u771f\u5b9e\u200bbase64\u200b\u6570\u636e\u200b\n        }\n    }\n]\n\n# \u200b\u652f\u6301\u200b\u591a\u200b\u6a21\u6001\u200b\u7684\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\nresponse = model.invoke(multimodal_message)\nprint(\"\u200b\u56fe\u50cf\u200b\u63cf\u8ff0\u200b:\", response.content)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#2_3","title":"2. \u200b\u63a8\u7406\u200b\u8fc7\u7a0b","text":"<pre><code># \u200b\u6d41\u5f0f\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b\nprint(\"\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b:\")\nfor chunk in model.stream(\"\u200b\u4e3a\u4ec0\u4e48\u200b\u5929\u7a7a\u200b\u662f\u200b\u84dd\u8272\u200b\u7684\u200b\uff1f\"):\n    # \u200b\u68c0\u67e5\u200b\u63a8\u7406\u200b\u5757\u200b\n    if hasattr(chunk, 'content_blocks'):\n        for block in chunk.content_blocks:\n            if block.get(\"type\") == \"reasoning\" and block.get(\"reasoning\"):\n                print(f\"\u200b\u63a8\u7406\u200b: {block['reasoning']}\")\n            elif block.get(\"type\") == \"text\" and block.get(\"text\"):\n                print(f\"\u200b\u56de\u7b54\u200b: {block['text']}\")\n\n# \u200b\u83b7\u53d6\u200b\u5b8c\u6574\u200b\u63a8\u7406\u200b\nresponse = model.invoke(\"\u200b\u89e3\u91ca\u200b\u5168\u7403\u200b\u53d8\u6696\u200b\u7684\u200b\u539f\u56e0\u200b\", reasoning_effort=\"high\")\nreasoning_blocks = [b for b in response.content_blocks if b.get(\"type\") == \"reasoning\"]\nif reasoning_blocks:\n    print(\"\u200b\u5b8c\u6574\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b:\")\n    for block in reasoning_blocks:\n        print(block.get(\"reasoning\", \"\"))\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#3_2","title":"3. \u200b\u672c\u5730\u200b\u6a21\u578b","text":"<pre><code># \u200b\u4f7f\u7528\u200b Ollama \u200b\u8fd0\u884c\u200b\u672c\u5730\u200b\u6a21\u578b\u200b\nfrom langchain_ollama import ChatOllama\n\nmodel = ChatOllama(\n    model=\"qwen3:1.7b\",\n    temperature=0.8\n)\n\nresponse = model.invoke(\"\u200b\u7528\u200b\u4e2d\u6587\u200b\u89e3\u91ca\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\")\nprint(\"\u200b\u672c\u5730\u200b\u6a21\u578b\u200b\u56de\u590d\u200b:\", response.content)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#4","title":"4. \u200b\u901f\u7387\u200b\u9650\u5236","text":"<pre><code>from langchain_core.rate_limiters import InMemoryRateLimiter\n\n# \u200b\u521b\u5efa\u200b\u901f\u7387\u200b\u9650\u5236\u5668\u200b\nrate_limiter = InMemoryRateLimiter(\n    requests_per_second=1,      # \u200b\u6bcf\u79d2\u200b1\u200b\u4e2a\u200b\u8bf7\u6c42\u200b\n    check_every_n_seconds=0.1,  # \u200b\u6bcf\u200b100ms\u200b\u68c0\u67e5\u200b\u4e00\u6b21\u200b\n    max_bucket_size=5          # \u200b\u6700\u5927\u200b\u7a81\u53d1\u200b\u8bf7\u6c42\u200b\u6570\u200b\n)\n\nmodel_with_limiter = init_chat_model(\n    \"openai:gpt-4o\",\n    rate_limiter=rate_limiter\n)\n\n# \u200b\u53d7\u200b\u901f\u7387\u200b\u9650\u5236\u200b\u7684\u200b\u8c03\u7528\u200b\nfor i in range(3):\n    response = model_with_limiter.invoke(f\"\u200b\u95ee\u9898\u200b {i+1}: \u200b\u4ec0\u4e48\u200b\u662f\u200bAI\uff1f\")\n    print(f\"\u200b\u56de\u590d\u200b {i+1}: {response.content[:50]}...\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#5","title":"5. \u200b\u4ee4\u724c\u200b\u4f7f\u7528\u200b\u7edf\u8ba1","text":"<pre><code>from langchain_core.callbacks import get_usage_metadata_callback\n\n# \u200b\u4f7f\u7528\u200b\u4e0a\u4e0b\u6587\u200b\u7ba1\u7406\u5668\u200b\u8ddf\u8e2a\u200b\u4ee4\u724c\u200b\u4f7f\u7528\u200b\nwith get_usage_metadata_callback() as callback:\n    response1 = model.invoke(\"\u200b\u89e3\u91ca\u200b\u795e\u7ecf\u7f51\u7edc\u200b\")\n    response2 = model.invoke(\"\u200b\u4ec0\u4e48\u200b\u662f\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\")\n\n    print(\"\u200b\u4ee4\u724c\u200b\u4f7f\u7528\u200b\u7edf\u8ba1\u200b:\")\n    print(callback.usage_metadata)\n\n# \u200b\u76f4\u63a5\u200b\u4ece\u200b\u54cd\u5e94\u200b\u83b7\u53d6\u200b\u4ee4\u724c\u200b\u4fe1\u606f\u200b\nresponse = model.invoke(\"\u200b\u5199\u200b\u4e00\u4e2a\u200bPython\u200b\u51fd\u6570\u200b\u8ba1\u7b97\u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u6570\u5217\u200b\")\nif hasattr(response, 'response_metadata'):\n    usage = response.response_metadata.get('token_usage', {})\n    print(f\"\u200b\u8f93\u5165\u200b\u4ee4\u724c\u200b: {usage.get('prompt_tokens', 'N/A')}\")\n    print(f\"\u200b\u8f93\u51fa\u200b\u4ee4\u724c\u200b: {usage.get('completion_tokens', 'N/A')}\")\n    print(f\"\u200b\u603b\u200b\u4ee4\u724c\u200b: {usage.get('total_tokens', 'N/A')}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#6","title":"6. \u200b\u53ef\u200b\u914d\u7f6e\u200b\u6a21\u578b","text":"<pre><code># \u200b\u521b\u5efa\u200b\u8fd0\u884c\u200b\u65f6\u200b\u53ef\u200b\u914d\u7f6e\u200b\u7684\u200b\u6a21\u578b\u200b\nconfigurable_model = init_chat_model(\n    temperature=0,\n    configurable_fields=(\"model\", \"temperature\", \"max_tokens\")\n)\n\n# \u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u914d\u7f6e\u200b\u8c03\u7528\u200b\nresponse1 = configurable_model.invoke(\n    \"\u200b\u89e3\u91ca\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\",\n    config={\"configurable\": {\"model\": \"gpt-4o\", \"temperature\": 0.7}}\n)\n\nresponse2 = configurable_model.invoke(\n    \"\u200b\u5199\u200b\u4e00\u9996\u200b\u8bd7\u200b\", \n    config={\"configurable\": {\"model\": \"gpt-4o\", \"temperature\": 0.9}}\n)\n\nprint(\"\u200b\u6280\u672f\u200b\u89e3\u91ca\u200b:\", response1.content[:100])\nprint(\"\u200b\u8bd7\u6b4c\u521b\u4f5c\u200b:\", response2.content[:100])\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#_10","title":"\u5b9e\u9645\u200b\u5e94\u7528\u200b\u573a\u666f","text":""},{"location":"llmapps/langchain/core-components/models/#1_3","title":"\u573a\u666f\u200b1\uff1a\u200b\u5185\u5bb9\u200b\u751f\u6210","text":"<pre><code>class ContentGenerator:\n    \"\"\"\u200b\u5185\u5bb9\u200b\u751f\u6210\u5668\u200b\"\"\"\n\n    def __init__(self, model):\n        self.model = model\n\n    def generate_blog_post(self, topic: str, style: str = \"informative\") -&gt; str:\n        \"\"\"\u200b\u751f\u6210\u200b\u535a\u5ba2\u200b\u6587\u7ae0\u200b\"\"\"\n        prompt = f\"\"\"\n        \u200b\u4ee5\u200b{style}\u200b\u7684\u200b\u98ce\u683c\u200b\u5199\u200b\u4e00\u7bc7\u200b\u5173\u4e8e\u200b{topic}\u200b\u7684\u200b\u535a\u5ba2\u200b\u6587\u7ae0\u200b\u3002\n        \u200b\u8981\u6c42\u200b\uff1a\n        1. \u200b\u6807\u9898\u200b\u5438\u5f15\u200b\u4eba\u200b\n        2. \u200b\u7ed3\u6784\u200b\u6e05\u6670\u200b\uff08\u200b\u5f15\u8a00\u200b\u3001\u200b\u6b63\u6587\u200b\u3001\u200b\u7ed3\u8bba\u200b\uff09\n        3. \u200b\u5305\u542b\u200b\u5177\u4f53\u200b\u4f8b\u5b50\u200b\n        4. \u200b\u5b57\u6570\u200b800-1000\u200b\u5b57\u200b\n        \"\"\"\n\n        response = self.model.invoke(prompt)\n        return response.content\n\n    def generate_social_media_post(self, topic: str, platform: str) -&gt; str:\n        \"\"\"\u200b\u751f\u6210\u200b\u793e\u4ea4\u200b\u5a92\u4f53\u200b\u5e16\u5b50\u200b\"\"\"\n        platform_formats = {\n            \"twitter\": \"280\u200b\u5b57\u7b26\u200b\u4ee5\u5185\u200b\uff0c\u200b\u4f7f\u7528\u200b\u8bdd\u9898\u200b\u6807\u7b7e\u200b\",\n            \"linkedin\": \"\u200b\u4e13\u4e1a\u200b\u98ce\u683c\u200b\uff0c\u200b\u805a\u7126\u200b\u884c\u4e1a\u200b\u89c1\u89e3\u200b\",\n            \"instagram\": \"\u200b\u8f7b\u677e\u200b\u6709\u8da3\u200b\uff0c\u200b\u4f7f\u7528\u200b\u8868\u60c5\u7b26\u53f7\u200b\"\n        }\n\n        format_guide = platform_formats.get(platform, \"\u200b\u7b80\u6d01\u200b\u6709\u529b\u200b\")\n        prompt = f\"\u200b\u4e3a\u200b{platform}\u200b\u521b\u5efa\u200b\u5173\u4e8e\u200b{topic}\u200b\u7684\u200b\u5e16\u5b50\u200b\u3002\u200b\u8981\u6c42\u200b\uff1a{format_guide}\"\n\n        response = self.model.invoke(prompt)\n        return response.content\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\ngenerator = ContentGenerator(model)\nblog_post = generator.generate_blog_post(\"\u200b\u4eba\u5de5\u667a\u80fd\u200b\u7684\u200b\u672a\u6765\u200b\", \"\u200b\u4e13\u4e1a\u200b\")\ntwitter_post = generator.generate_social_media_post(\"\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\", \"twitter\")\n\nprint(\"\u200b\u535a\u5ba2\u200b\u6587\u7ae0\u200b:\", blog_post[:200])\nprint(\"\u200b\u63a8\u7279\u200b\u5e16\u5b50\u200b:\", twitter_post)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#2_4","title":"\u573a\u666f\u200b2\uff1a\u200b\u6570\u636e\u5206\u6790\u200b\u52a9\u624b","text":"<pre><code>import json\nfrom typing import Dict, Any\n\nclass DataAnalysisAssistant:\n    \"\"\"\u200b\u6570\u636e\u5206\u6790\u200b\u52a9\u624b\u200b\"\"\"\n\n    def __init__(self, model):\n        self.model = model\n        # \u200b\u914d\u7f6e\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\u7528\u4e8e\u200b\u6570\u636e\u5206\u6790\u200b\n        self.analysis_model = model.with_structured_output(DataAnalysisResult)\n\n    def analyze_dataset(self, data_description: str, questions: List[str]) -&gt; Dict[str, Any]:\n        \"\"\"\u200b\u5206\u6790\u200b\u6570\u636e\u200b\u96c6\u200b\"\"\"\n        prompt = f\"\"\"\n        \u200b\u6570\u636e\u200b\u96c6\u200b\u63cf\u8ff0\u200b: {data_description}\n\n        \u200b\u8bf7\u200b\u5206\u6790\u200b\u8fd9\u4e2a\u200b\u6570\u636e\u200b\u96c6\u200b\u5e76\u200b\u56de\u7b54\u200b\u4ee5\u4e0b\u200b\u95ee\u9898\u200b:\n        {chr(10).join(f'{i+1}. {q}' for i, q in enumerate(questions))}\n\n        \u200b\u63d0\u4f9b\u200b:\n        - \u200b\u5173\u952e\u200b\u6d1e\u5bdf\u200b\n        - \u200b\u6f5c\u5728\u200b\u6a21\u5f0f\u200b\n        - \u200b\u5efa\u8bae\u200b\u7684\u200b\u8fdb\u4e00\u6b65\u200b\u5206\u6790\u200b\n        \"\"\"\n\n        response = self.analysis_model.invoke(prompt)\n        return response.dict()\n\n    def generate_sql_query(self, requirement: str, schema: str) -&gt; str:\n        \"\"\"\u200b\u751f\u6210\u200bSQL\u200b\u67e5\u8be2\u200b\"\"\"\n        prompt = f\"\"\"\n        \u200b\u6570\u636e\u5e93\u200b\u6a21\u5f0f\u200b: {schema}\n\n        \u200b\u9700\u6c42\u200b: {requirement}\n\n        \u200b\u8bf7\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u4f18\u5316\u200b\u7684\u200bSQL\u200b\u67e5\u8be2\u200b\u6765\u200b\u6ee1\u8db3\u200b\u8fd9\u4e2a\u200b\u9700\u6c42\u200b\u3002\n        \u200b\u540c\u65f6\u200b\u89e3\u91ca\u200b\u67e5\u8be2\u200b\u7684\u200b\u903b\u8f91\u200b\u3002\n        \"\"\"\n\n        response = self.model.invoke(prompt)\n        return response.content\n\n# \u200b\u6570\u636e\u7ed3\u6784\u200b\u5b9a\u4e49\u200b\nclass DataAnalysisResult(BaseModel):\n    key_insights: List[str]\n    patterns: List[str]\n    recommendations: List[str]\n    summary: str\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nassistant = DataAnalysisAssistant(model)\n\nschema = \"\"\"\n\u200b\u7528\u6237\u200b\u8868\u200b(users): id, name, age, city, signup_date\n\u200b\u8ba2\u5355\u200b\u8868\u200b(orders): id, user_id, amount, order_date, status\n\"\"\"\n\nanalysis = assistant.analyze_dataset(\n    \"\u200b\u7535\u5546\u200b\u5e73\u53f0\u200b\u7684\u200b\u7528\u6237\u200b\u548c\u200b\u8ba2\u5355\u200b\u6570\u636e\u200b\",\n    [\"\u200b\u7528\u6237\u200b\u5e74\u9f84\u200b\u5206\u5e03\u200b\u5982\u4f55\u200b\uff1f\", \"\u200b\u54ea\u4e2a\u200b\u57ce\u5e02\u200b\u7684\u200b\u7528\u6237\u200b\u6700\u200b\u6d3b\u8dc3\u200b\uff1f\", \"\u200b\u8ba2\u5355\u200b\u8d8b\u52bf\u200b\u5982\u4f55\u200b\uff1f\"]\n)\n\nsql_query = assistant.generate_sql_query(\n    \"\u200b\u67e5\u8be2\u200b\u6700\u8fd1\u200b30\u200b\u5929\u200b\u6bcf\u4e2a\u200b\u57ce\u5e02\u200b\u7684\u200b\u8ba2\u5355\u200b\u603b\u91cf\u200b\",\n    schema\n)\n\nprint(\"\u200b\u5206\u6790\u200b\u7ed3\u679c\u200b:\", analysis)\nprint(\"SQL\u200b\u67e5\u8be2\u200b:\", sql_query)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#3_3","title":"\u573a\u666f\u200b3\uff1a\u200b\u4ee3\u7801\u200b\u52a9\u624b","text":"<pre><code>class CodeAssistant:\n    \"\"\"\u200b\u4ee3\u7801\u200b\u52a9\u624b\u200b\"\"\"\n\n    def __init__(self, model):\n        self.model = model\n\n    def explain_code(self, code: str, language: str = \"python\") -&gt; str:\n        \"\"\"\u200b\u89e3\u91ca\u200b\u4ee3\u7801\u200b\"\"\"\n        prompt = f\"\"\"\n        \u200b\u8bf7\u200b\u89e3\u91ca\u200b\u4ee5\u4e0b\u200b{language}\u200b\u4ee3\u7801\u200b:\n\n        ```{language}\n        {code}\n        ```\n\n        \u200b\u89e3\u91ca\u200b\u5e94\u8be5\u200b\u5305\u62ec\u200b:\n        1. \u200b\u4ee3\u7801\u200b\u7684\u200b\u529f\u80fd\u200b\n        2. \u200b\u5173\u952e\u200b\u903b\u8f91\u200b\u6b65\u9aa4\u200b\n        3. \u200b\u53ef\u80fd\u200b\u7684\u200b\u6539\u8fdb\u200b\u5efa\u8bae\u200b\n        \"\"\"\n\n        response = self.model.invoke(prompt)\n        return response.content\n\n    def debug_code(self, code: str, error: str, language: str = \"python\") -&gt; str:\n        \"\"\"\u200b\u8c03\u8bd5\u200b\u4ee3\u7801\u200b\"\"\"\n        prompt = f\"\"\"\n        \u200b\u8bf7\u200b\u5e2e\u52a9\u200b\u8c03\u8bd5\u200b\u4ee5\u4e0b\u200b{language}\u200b\u4ee3\u7801\u200b:\n\n        ```{language}\n        {code}\n        ```\n\n        \u200b\u9519\u8bef\u4fe1\u606f\u200b: {error}\n\n        \u200b\u8bf7\u200b\u63d0\u4f9b\u200b:\n        1. \u200b\u9519\u8bef\u200b\u539f\u56e0\u200b\u5206\u6790\u200b\n        2. \u200b\u4fee\u590d\u200b\u5efa\u8bae\u200b\n        3. \u200b\u4fee\u590d\u200b\u540e\u200b\u7684\u200b\u4ee3\u7801\u200b\n        \"\"\"\n\n        response = self.model.invoke(prompt)\n        return response.content\n\n    def generate_test_cases(self, code: str, language: str = \"python\") -&gt; str:\n        \"\"\"\u200b\u751f\u6210\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b\"\"\"\n        prompt = f\"\"\"\n        \u200b\u4e3a\u200b\u4ee5\u4e0b\u200b{language}\u200b\u4ee3\u7801\u751f\u6210\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b:\n\n        ```{language}\n        {code}\n        ```\n\n        \u200b\u5305\u62ec\u200b:\n        1. \u200b\u6b63\u5e38\u200b\u60c5\u51b5\u200b\u6d4b\u8bd5\u200b\n        2. \u200b\u8fb9\u754c\u200b\u60c5\u51b5\u200b\u6d4b\u8bd5\u200b  \n        3. \u200b\u9519\u8bef\u200b\u60c5\u51b5\u200b\u6d4b\u8bd5\u200b\n        \"\"\"\n\n        response = self.model.invoke(prompt)\n        return response.content\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\ncode_assistant = CodeAssistant(model)\n\nsample_code = \"\"\"\ndef fibonacci(n):\n    if n &lt;= 1:\n        return n\n    else:\n        return fibonacci(n-1) + fibonacci(n-2)\n\"\"\"\n\nexplanation = code_assistant.explain_code(sample_code)\ntest_cases = code_assistant.generate_test_cases(sample_code)\n\nprint(\"\u200b\u4ee3\u7801\u200b\u89e3\u91ca\u200b:\", explanation)\nprint(\"\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b:\", test_cases)\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#_11","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"llmapps/langchain/core-components/models/#1_4","title":"1. \u200b\u9519\u8bef\u5904\u7406","text":"<pre><code>from tenacity import retry, stop_after_attempt, wait_exponential\nimport asyncio\n\nclass RobustModelClient:\n    \"\"\"\u200b\u5065\u58ee\u200b\u7684\u200b\u6a21\u578b\u200b\u5ba2\u6237\u7aef\u200b\"\"\"\n\n    def __init__(self, model):\n        self.model = model\n\n    @retry(\n        stop=stop_after_attempt(3),\n        wait=wait_exponential(multiplier=1, min=4, max=10)\n    )\n    def invoke_with_retry(self, prompt: str, **kwargs):\n        \"\"\"\u200b\u5e26\u200b\u91cd\u8bd5\u200b\u7684\u200b\u8c03\u7528\u200b\"\"\"\n        try:\n            return self.model.invoke(prompt, **kwargs)\n        except Exception as e:\n            print(f\"\u200b\u8c03\u7528\u200b\u5931\u8d25\u200b: {e}, \u200b\u8fdb\u884c\u200b\u91cd\u8bd5\u200b...\")\n            raise\n\n    def safe_batch_process(self, prompts: List[str], batch_size: int = 5):\n        \"\"\"\u200b\u5b89\u5168\u200b\u7684\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\"\"\"\n        results = []\n\n        for i in range(0, len(prompts), batch_size):\n            batch = prompts[i:i + batch_size]\n            try:\n                batch_results = self.model.batch(\n                    batch, \n                    config={'max_concurrency': 2}\n                )\n                results.extend(batch_results)\n                print(f\"\u200b\u5b8c\u6210\u200b\u6279\u6b21\u200b {i//batch_size + 1}\")\n            except Exception as e:\n                print(f\"\u200b\u6279\u6b21\u200b {i//batch_size + 1} \u200b\u5931\u8d25\u200b: {e}\")\n                # \u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd9\u91cc\u200b\u6dfb\u52a0\u200b\u91cd\u8bd5\u200b\u903b\u8f91\u200b\n\n        return results\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nrobust_client = RobustModelClient(model)\n\ntry:\n    response = robust_client.invoke_with_retry(\n        \"\u200b\u89e3\u91ca\u200b\u91cf\u5b50\u529b\u5b66\u200b\", \n        temperature=0.7\n    )\n    print(\"\u200b\u6210\u529f\u200b\u83b7\u53d6\u200b\u54cd\u5e94\u200b\")\nexcept Exception as e:\n    print(f\"\u200b\u6240\u6709\u200b\u91cd\u8bd5\u200b\u90fd\u200b\u5931\u8d25\u200b\u4e86\u200b: {e}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#2_5","title":"2. \u200b\u6027\u80fd\u200b\u4f18\u5316","text":"<pre><code>import time\nfrom functools import lru_cache\n\nclass OptimizedModelHandler:\n    \"\"\"\u200b\u4f18\u5316\u200b\u7684\u200b\u6a21\u578b\u200b\u5904\u7406\u5668\u200b\"\"\"\n\n    def __init__(self, model):\n        self.model = model\n        self.response_cache = {}\n\n    @lru_cache(maxsize=100)\n    def cached_invoke(self, prompt: str, temperature: float = 0.7) -&gt; str:\n        \"\"\"\u200b\u5e26\u200b\u7f13\u5b58\u200b\u7684\u200b\u8c03\u7528\u200b\"\"\"\n        cache_key = hash(prompt + str(temperature))\n\n        if cache_key in self.response_cache:\n            return self.response_cache[cache_key]\n\n        start_time = time.time()\n        response = self.model.invoke(prompt, temperature=temperature)\n        execution_time = time.time() - start_time\n\n        self.response_cache[cache_key] = response.content\n        print(f\"\u200b\u65b0\u200b\u8bf7\u6c42\u200b - \u200b\u8017\u65f6\u200b: {execution_time:.2f}s\")\n\n        return response.content\n\n    def batch_optimized(self, prompts: List[str], **kwargs):\n        \"\"\"\u200b\u4f18\u5316\u200b\u7684\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\"\"\"\n        # \u200b\u53bb\u200b\u91cd\u200b\n        unique_prompts = list(set(prompts))\n\n        # \u200b\u6279\u91cf\u200b\u5904\u7406\u200b\u552f\u4e00\u200b\u63d0\u793a\u200b\n        unique_responses = self.model.batch(unique_prompts, **kwargs)\n\n        # \u200b\u6784\u5efa\u200b\u54cd\u5e94\u200b\u6620\u5c04\u200b\n        response_map = {prompt: resp.content for prompt, resp in zip(unique_prompts, unique_responses)}\n\n        # \u200b\u6309\u200b\u539f\u59cb\u200b\u987a\u5e8f\u200b\u8fd4\u56de\u200b\n        return [response_map[prompt] for prompt in prompts]\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\noptimized_handler = OptimizedModelHandler(model)\n\n# \u200b\u91cd\u590d\u200b\u8bf7\u6c42\u200b\u4f1a\u200b\u4f7f\u7528\u200b\u7f13\u5b58\u200b\nfor i in range(3):\n    result = optimized_handler.cached_invoke(\"\u200b\u4ec0\u4e48\u200b\u662f\u200bPython\uff1f\")\n    print(f\"\u200b\u8bf7\u6c42\u200b {i+1}: {result[:50]}...\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#3_4","title":"3. \u200b\u6210\u672c\u200b\u63a7\u5236","text":"<pre><code>class CostAwareModelClient:\n    \"\"\"\u200b\u6210\u672c\u200b\u611f\u77e5\u200b\u7684\u200b\u6a21\u578b\u200b\u5ba2\u6237\u7aef\u200b\"\"\"\n\n    def __init__(self, model, budget_limit: int = 1000000):  # 100\u200b\u4e07\u200btoken\u200b\u9650\u5236\u200b\n        self.model = model\n        self.budget_limit = budget_limit\n        self.tokens_used = 0\n        self.requests_count = 0\n\n    def track_usage(self, response):\n        \"\"\"\u200b\u8ddf\u8e2a\u200b\u4ee4\u724c\u200b\u4f7f\u7528\u200b\"\"\"\n        if hasattr(response, 'response_metadata'):\n            usage = response.response_metadata.get('token_usage', {})\n            tokens = usage.get('total_tokens', 0)\n            self.tokens_used += tokens\n            self.requests_count += 1\n\n            print(f\"\u200b\u672c\u6b21\u200b\u4f7f\u7528\u200b: {tokens} tokens\")\n            print(f\"\u200b\u7d2f\u8ba1\u200b\u4f7f\u7528\u200b: {self.tokens_used}/{self.budget_limit} tokens\")\n\n            if self.tokens_used &gt;= self.budget_limit:\n                print(\"\u200b\u8b66\u544a\u200b: \u200b\u63a5\u8fd1\u200b\u9884\u7b97\u200b\u9650\u5236\u200b\uff01\")\n\n    def invoke_with_budget(self, prompt: str, **kwargs):\n        \"\"\"\u200b\u5e26\u200b\u9884\u7b97\u200b\u63a7\u5236\u200b\u7684\u200b\u8c03\u7528\u200b\"\"\"\n        if self.tokens_used &gt;= self.budget_limit:\n            raise Exception(\"\u200b\u5df2\u200b\u8d85\u8fc7\u9884\u7b97\u200b\u9650\u5236\u200b\")\n\n        response = self.model.invoke(prompt, **kwargs)\n        self.track_usage(response)\n        return response\n\n    def get_usage_stats(self):\n        \"\"\"\u200b\u83b7\u53d6\u200b\u4f7f\u7528\u200b\u7edf\u8ba1\u200b\"\"\"\n        return {\n            'tokens_used': self.tokens_used,\n            'requests_count': self.requests_count,\n            'budget_remaining': self.budget_limit - self.tokens_used,\n            'utilization_percentage': (self.tokens_used / self.budget_limit) * 100\n        }\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\ncost_aware_client = CostAwareModelClient(model, budget_limit=5000)  # 5000token\u200b\u6d4b\u8bd5\u200b\u9650\u5236\u200b\n\ntry:\n    response1 = cost_aware_client.invoke_with_budget(\"\u200b\u89e3\u91ca\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\")\n    response2 = cost_aware_client.invoke_with_budget(\"\u200b\u4ec0\u4e48\u200b\u662f\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\")\n\n    stats = cost_aware_client.get_usage_stats()\n    print(\"\u200b\u4f7f\u7528\u200b\u7edf\u8ba1\u200b:\", stats)\n\nexcept Exception as e:\n    print(f\"\u200b\u8c03\u7528\u200b\u5931\u8d25\u200b: {e}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/models/#_12","title":"\u603b\u7ed3","text":"<p>LangChain Models \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u800c\u200b\u7075\u6d3b\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6765\u200b\u4f7f\u7528\u200b\u5404\u79cd\u200b\u5927\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\uff1a</p> <ul> <li>\u200b\u591a\u200b\u63d0\u4f9b\u5546\u200b\u652f\u6301\u200b\uff1aOpenAI\u3001Anthropic\u3001Google\u3001Azure\u200b\u7b49\u200b</li> <li>\u200b\u591a\u79cd\u200b\u8c03\u7528\u200b\u65b9\u5f0f\u200b\uff1a\u200b\u5355\u6b21\u200b\u8c03\u7528\u200b\u3001\u200b\u6d41\u5f0f\u200b\u8c03\u7528\u200b\u3001\u200b\u6279\u91cf\u200b\u8c03\u7528\u200b</li> <li>\u200b\u5de5\u5177\u200b\u96c6\u6210\u200b\uff1a\u200b\u7ed1\u5b9a\u200b\u548c\u200b\u6267\u884c\u200b\u5916\u90e8\u200b\u5de5\u5177\u200b</li> <li>\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\uff1a\u200b\u786e\u4fdd\u200b\u54cd\u5e94\u200b\u683c\u5f0f\u200b\u7b26\u5408\u200b\u9884\u671f\u200b</li> <li>\u200b\u9ad8\u7ea7\u200b\u529f\u80fd\u200b\uff1a\u200b\u591a\u200b\u6a21\u6001\u200b\u3001\u200b\u63a8\u7406\u200b\u3001\u200b\u672c\u5730\u200b\u90e8\u7f72\u200b\u7b49\u200b</li> <li>\u200b\u751f\u4ea7\u200b\u5c31\u7eea\u200b\uff1a\u200b\u9519\u8bef\u5904\u7406\u200b\u3001\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\u3001\u200b\u6210\u672c\u200b\u63a7\u5236\u200b</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u529f\u80fd\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u51fa\u200b\u5f3a\u5927\u200b\u3001\u200b\u53ef\u9760\u200b\u4e14\u200b\u6210\u672c\u200b\u6548\u76ca\u200b\u9ad8\u200b\u7684\u200bAI\u200b\u5e94\u7528\u200b\u7cfb\u7edf\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/short-term%20memory/","title":"LangChain \u200b\u77ed\u671f\u200b\u8bb0\u5fc6","text":""},{"location":"llmapps/langchain/core-components/short-term%20memory/#_1","title":"\u6982\u8ff0","text":"<p>\u200b\u77ed\u671f\u200b\u8bb0\u5fc6\u7cfb\u7edf\u200b\u8ba9\u200b AI Agent \u200b\u80fd\u591f\u200b\u8bb0\u4f4f\u200b\u5355\u6b21\u200b\u5bf9\u8bdd\u200b\u6216\u200b\u7ebf\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u5148\u524d\u200b\u4ea4\u4e92\u200b\u4fe1\u606f\u200b\u3002\u200b\u8fd9\u200b\u5bf9\u4e8e\u200b\u6784\u5efa\u200b\u80fd\u591f\u200b\u7406\u89e3\u200b\u4e0a\u4e0b\u6587\u200b\u3001\u200b\u5b66\u4e60\u200b\u7528\u6237\u200b\u504f\u597d\u200b\u5e76\u200b\u4fdd\u6301\u200b\u8fde\u8d2f\u200b\u5bf9\u8bdd\u200b\u7684\u200b\u667a\u80fd\u200b\u5e94\u7528\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#_2","title":"\u6838\u5fc3\u200b\u6982\u5ff5","text":"<ul> <li>\u200b\u7ebf\u7a0b\u200b\uff08Thread\uff09\uff1a\u200b\u7ec4\u7ec7\u200b\u591a\u6b21\u200b\u4ea4\u4e92\u200b\u7684\u200b\u4f1a\u200b\u8bdd\u200b\uff0c\u200b\u7c7b\u4f3c\u200b\u7535\u5b50\u90ae\u4ef6\u200b\u5bf9\u8bdd\u200b</li> <li>\u200b\u68c0\u67e5\u70b9\u200b\uff08Checkpointer\uff09\uff1a\u200b\u8d1f\u8d23\u200b\u72b6\u6001\u200b\u7684\u200b\u6301\u4e45\u200b\u5316\u200b\u5b58\u50a8\u200b</li> <li>\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\uff1aAgent \u200b\u901a\u8fc7\u200b\u72b6\u6001\u200b\u6765\u200b\u7ef4\u62a4\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\u548c\u200b\u81ea\u5b9a\u4e49\u200b\u4fe1\u606f\u200b</li> </ul>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#_3","title":"\u57fa\u7840\u200b\u8bbe\u7f6e","text":""},{"location":"llmapps/langchain/core-components/short-term%20memory/#1","title":"1. \u200b\u542f\u7528\u200b\u77ed\u671f\u200b\u8bb0\u5fc6","text":"<pre><code>from langchain.agents import create_agent\nfrom langgraph.checkpoint.memory import InMemorySaver\n\n# \u200b\u521b\u5efa\u200b\u5e26\u6709\u200b\u77ed\u671f\u200b\u8bb0\u5fc6\u200b\u7684\u200b Agent\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[get_user_info],\n    checkpointer=InMemorySaver(),  # \u200b\u542f\u7528\u200b\u5185\u5b58\u200b\u68c0\u67e5\u70b9\u200b\n)\n\n# \u200b\u4f7f\u7528\u200b\u7ebf\u7a0b\u200bID\u200b\u6765\u200b\u533a\u5206\u200b\u4e0d\u540c\u200b\u5bf9\u8bdd\u200b\nresult = agent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"Hi! My name is Bob.\"}]},\n    {\"configurable\": {\"thread_id\": \"1\"}},  # \u200b\u6307\u5b9a\u200b\u7ebf\u7a0b\u200bID\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#2","title":"2. \u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u914d\u7f6e","text":"<pre><code>from langchain.agents import create_agent\nfrom langgraph.checkpoint.postgres import PostgresSaver\n\n# \u200b\u5b89\u88c5\u200b\u4f9d\u8d56\u200b\uff1apip install langgraph-checkpoint-postgres\nDB_URI = \"postgresql://postgres:postgres@localhost:5442/postgres?sslmode=disable\"\n\nwith PostgresSaver.from_conn_string(DB_URI) as checkpointer:\n    checkpointer.setup()  # \u200b\u81ea\u52a8\u200b\u521b\u5efa\u200b\u6570\u636e\u5e93\u200b\u8868\u200b\n\n    agent = create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[get_user_info],\n        checkpointer=checkpointer,  # \u200b\u4f7f\u7528\u200b PostgreSQL \u200b\u68c0\u67e5\u70b9\u200b\n    )\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#agent","title":"\u81ea\u5b9a\u4e49\u200b Agent \u200b\u72b6\u6001","text":""},{"location":"llmapps/langchain/core-components/short-term%20memory/#_4","title":"\u6269\u5c55\u200b\u9ed8\u8ba4\u200b\u72b6\u6001","text":"<pre><code>from langchain.agents import create_agent, AgentState\nfrom langgraph.checkpoint.memory import InMemorySaver\nfrom typing import Optional, Dict, List\n\nclass CustomAgentState(AgentState):\n    \"\"\"\u200b\u81ea\u5b9a\u4e49\u200b Agent \u200b\u72b6\u6001\u200b\"\"\"\n    user_id: str\n    preferences: Dict[str, str]\n    conversation_topics: List[str]\n    last_active: Optional[str] = None\n\n# \u200b\u521b\u5efa\u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u7684\u200b Agent\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[get_user_info],\n    state_schema=CustomAgentState,  # \u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u6a21\u5f0f\u200b\n    checkpointer=InMemorySaver(),\n)\n\n# \u200b\u8c03\u7528\u200b\u65f6\u200b\u4f20\u5165\u200b\u81ea\u5b9a\u4e49\u200b\u72b6\u6001\u200b\nresult = agent.invoke(\n    {\n        \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}],\n        \"user_id\": \"user_123\",\n        \"preferences\": {\"theme\": \"dark\", \"language\": \"zh-CN\"},\n        \"conversation_topics\": [\"technology\", \"programming\"]\n    },\n    {\"configurable\": {\"thread_id\": \"1\"}}\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#_5","title":"\u5185\u5b58\u200b\u7ba1\u7406\u7b56\u7565","text":""},{"location":"llmapps/langchain/core-components/short-term%20memory/#1-trim-messages","title":"1. \u200b\u6d88\u606f\u200b\u4fee\u526a\u200b\uff08Trim Messages\uff09","text":"<p>\u200b\u5f53\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\u8fc7\u957f\u200b\u65f6\u200b\uff0c\u200b\u4fee\u526a\u200b\u6d88\u606f\u200b\u4ee5\u200b\u9002\u914d\u200b\u4e0a\u4e0b\u6587\u200b\u7a97\u53e3\u200b\u3002</p> <pre><code>from langchain.messages import RemoveMessage\nfrom langgraph.graph.message import REMOVE_ALL_MESSAGES\nfrom langchain.agents.middleware import before_model\nfrom langgraph.runtime import Runtime\nfrom typing import Any\n\n@before_model\ndef trim_messages(state: AgentState, runtime: Runtime) -&gt; dict[str, Any] | None:\n    \"\"\"\u200b\u4fdd\u7559\u200b\u6700\u8fd1\u200b\u51e0\u6761\u200b\u6d88\u606f\u200b\u4ee5\u200b\u9002\u914d\u200b\u4e0a\u4e0b\u6587\u200b\u7a97\u53e3\u200b\"\"\"\n    messages = state[\"messages\"]\n\n    # \u200b\u5982\u679c\u200b\u6d88\u606f\u200b\u6570\u91cf\u200b\u4e0d\u200b\u591a\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u4fee\u526a\u200b\n    if len(messages) &lt;= 4:\n        return None\n\n    # \u200b\u4fdd\u7559\u200b\u7cfb\u7edf\u200b\u6d88\u606f\u200b\u548c\u200b\u6700\u8fd1\u200b\u7684\u200b3\u200b\u6761\u200b\u6d88\u606f\u200b\n    system_messages = [msg for msg in messages if msg.type == \"system\"]\n    recent_messages = messages[-3:]\n\n    new_messages = system_messages + recent_messages\n\n    return {\n        \"messages\": [\n            RemoveMessage(id=REMOVE_ALL_MESSAGES),  # \u200b\u79fb\u9664\u200b\u6240\u6709\u200b\u73b0\u6709\u200b\u6d88\u606f\u200b\n            *new_messages  # \u200b\u6dfb\u52a0\u200b\u4fee\u526a\u200b\u540e\u200b\u7684\u200b\u6d88\u606f\u200b\n        ]\n    }\n\n# \u200b\u4f7f\u7528\u200b\u4fee\u526a\u200b\u4e2d\u95f4\u4ef6\u200b\u7684\u200b Agent\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    middleware=[trim_messages],\n    checkpointer=InMemorySaver(),\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#2-delete-messages","title":"2. \u200b\u6d88\u606f\u200b\u5220\u9664\u200b\uff08Delete Messages\uff09","text":"<p>\u200b\u6c38\u4e45\u200b\u5220\u9664\u200b\u7279\u5b9a\u200b\u6d88\u606f\u200b\u4ee5\u200b\u7ba1\u7406\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\u3002</p> <pre><code>from langchain.agents.middleware import after_model\nfrom langchain.messages import RemoveMessage\n\n@after_model\ndef delete_old_messages(state: AgentState, runtime: Runtime) -&gt; dict | None:\n    \"\"\"\u200b\u5220\u9664\u200b\u65e7\u200b\u6d88\u606f\u200b\u4ee5\u200b\u4fdd\u6301\u200b\u5bf9\u8bdd\u200b\u53ef\u200b\u7ba1\u7406\u200b\"\"\"\n    messages = state[\"messages\"]\n\n    # \u200b\u5982\u679c\u200b\u6d88\u606f\u200b\u8d85\u8fc7\u200b5\u200b\u6761\u200b\uff0c\u200b\u5220\u9664\u200b\u6700\u65e9\u200b\u7684\u200b\u4e24\u6761\u200b\n    if len(messages) &gt; 5:\n        messages_to_remove = messages[:2]\n        return {\n            \"messages\": [RemoveMessage(id=msg.id) for msg in messages_to_remove]\n        }\n\n    return None\n\n# \u200b\u4f7f\u7528\u200b\u5220\u9664\u200b\u4e2d\u95f4\u4ef6\u200b\u7684\u200b Agent\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    middleware=[delete_old_messages],\n    checkpointer=InMemorySaver(),\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#3-summarize-messages","title":"3. \u200b\u6d88\u606f\u200b\u603b\u7ed3\u200b\uff08Summarize Messages\uff09","text":"<p>\u200b\u4f7f\u7528\u200b\u603b\u7ed3\u200b\u4e2d\u95f4\u4ef6\u200b\u81ea\u52a8\u200b\u603b\u7ed3\u200b\u957f\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\nfrom langchain.agents.middleware import SummarizationMiddleware\nfrom langgraph.checkpoint.memory import InMemorySaver\n\ncheckpointer = InMemorySaver()\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    middleware=[\n        SummarizationMiddleware(\n            model=\"openai:gpt-4o-mini\",  # \u200b\u4f7f\u7528\u200b\u66f4\u200b\u4fbf\u5b9c\u200b\u7684\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u603b\u7ed3\u200b\n            max_tokens_before_summary=2000,  # \u200b\u5728\u200b2000\u200b\u4e2a\u200btoken\u200b\u65f6\u200b\u89e6\u53d1\u200b\u603b\u7ed3\u200b\n            messages_to_keep=10,  # \u200b\u603b\u7ed3\u200b\u540e\u200b\u4fdd\u7559\u200b\u6700\u8fd1\u200b10\u200b\u6761\u200b\u6d88\u606f\u200b\n            summary_prompt=\"\u200b\u8bf7\u200b\u603b\u7ed3\u200b\u4e4b\u524d\u200b\u7684\u200b\u5bf9\u8bdd\u200b\uff0c\u200b\u4fdd\u7559\u200b\u5173\u952e\u200b\u4fe1\u606f\u200b\uff1a\",\n        )\n    ],\n    checkpointer=checkpointer,\n)\n\n# \u200b\u6d4b\u8bd5\u200b\u957f\u200b\u5bf9\u8bdd\u200b\nconfig = {\"configurable\": {\"thread_id\": \"1\"}}\n\nagent.invoke({\"messages\": \"Hi, my name is Bob\"}, config)\nagent.invoke({\"messages\": \"I'm a software engineer from Beijing\"}, config)\nagent.invoke({\"messages\": \"I enjoy hiking and reading books\"}, config)\nagent.invoke({\"messages\": \"My favorite programming language is Python\"}, config)\n\n# \u200b\u5373\u4f7f\u200b\u7ecf\u8fc7\u200b\u591a\u6b21\u200b\u5bf9\u8bdd\u200b\uff0cAgent \u200b\u4ecd\u7136\u200b\u8bb0\u5f97\u200b\u7528\u6237\u200b\u4fe1\u606f\u200b\nfinal_response = agent.invoke({\"messages\": \"Can you remind me what I told you about myself?\"}, config)\nprint(final_response[\"messages\"][-1].content)\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#_6","title":"\u8bbf\u95ee\u200b\u548c\u200b\u64cd\u4f5c\u200b\u5185\u5b58","text":""},{"location":"llmapps/langchain/core-components/short-term%20memory/#1_1","title":"1. \u200b\u5728\u200b\u5de5\u5177\u200b\u4e2d\u200b\u8bbf\u95ee\u200b\u5185\u5b58","text":"<pre><code>from langchain.tools import tool, ToolRuntime\nfrom langchain.agents import create_agent, AgentState\n\nclass UserState(AgentState):\n    user_profile: dict\n    conversation_count: int\n\n@tool\ndef get_user_profile(runtime: ToolRuntime) -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u7528\u6237\u200b\u6863\u6848\u200b\u4fe1\u606f\u200b\"\"\"\n    state = runtime.state\n    user_profile = state.get(\"user_profile\", {})\n    conversation_count = state.get(\"conversation_count\", 0)\n\n    return f\"\u200b\u7528\u6237\u200b\u6863\u6848\u200b: {user_profile}, \u200b\u5bf9\u8bdd\u200b\u6b21\u6570\u200b: {conversation_count}\"\n\n@tool  \ndef update_user_preference(runtime: ToolRuntime, preference: str, value: str) -&gt; str:\n    \"\"\"\u200b\u66f4\u65b0\u200b\u7528\u6237\u200b\u504f\u597d\u200b\"\"\"\n    from langgraph.types import Command\n\n    # \u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\n    return Command(update={\n        \"user_profile\": {\n            **runtime.state.get(\"user_profile\", {}),\n            preference: value\n        },\n        \"conversation_count\": runtime.state.get(\"conversation_count\", 0) + 1\n    })\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[get_user_profile, update_user_preference],\n    state_schema=UserState,\n    checkpointer=InMemorySaver(),\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#2_1","title":"2. \u200b\u4f7f\u7528\u200b\u52a8\u6001\u200b\u63d0\u793a","text":"<pre><code>from langchain.agents.middleware import dynamic_prompt, ModelRequest\nfrom typing import TypedDict\n\nclass ConversationContext(TypedDict):\n    user_name: str\n    user_role: str\n\n@dynamic_prompt\ndef personalized_system_prompt(request: ModelRequest) -&gt; str:\n    \"\"\"\u200b\u57fa\u4e8e\u200b\u7528\u6237\u200b\u4e0a\u4e0b\u6587\u200b\u7684\u200b\u52a8\u6001\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\"\"\"\n    context = request.runtime.context\n    user_name = context.get(\"user_name\", \"\u200b\u7528\u6237\u200b\")\n    user_role = context.get(\"user_role\", \"\u200b\u8bbf\u5ba2\u200b\")\n\n    return f\"\"\"\n    \u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6709\u200b\u5e2e\u52a9\u200b\u7684\u200b\u52a9\u624b\u200b\uff0c\u200b\u6b63\u5728\u200b\u4e0e\u200b{user_name}\u200b\u5bf9\u8bdd\u200b\u3002\n    {user_name}\u200b\u7684\u200b\u8eab\u4efd\u200b\u662f\u200b\uff1a{user_role}\n\n    \u200b\u8bf7\u200b\u6839\u636e\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\u63d0\u4f9b\u200b\u4e2a\u6027\u5316\u200b\u7684\u200b\u56de\u5e94\u200b\u3002\n    \u200b\u4fdd\u6301\u200b\u53cb\u597d\u200b\u548c\u200b\u4e13\u4e1a\u200b\u7684\u200b\u6001\u5ea6\u200b\u3002\n    \"\"\"\n\ndef get_weather(city: str) -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u5929\u6c14\u200b\u4fe1\u606f\u200b\"\"\"\n    return f\"{city}\u200b\u7684\u200b\u5929\u6c14\u200b\u662f\u200b\u6674\u6717\u200b\u7684\u200b\uff0c25\u00b0C\"\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[get_weather],\n    middleware=[personalized_system_prompt],\n    context_schema=ConversationContext,\n)\n\n# \u200b\u4f7f\u7528\u200b\u4e0a\u4e0b\u6587\u200b\u8c03\u7528\u200b\nresult = agent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u4eca\u5929\u5929\u6c14\u200b\u600e\u4e48\u6837\u200b\uff1f\"}]},\n    context=ConversationContext(user_name=\"\u200b\u5f20\u4e09\u200b\", user_role=\"\u200b\u8f6f\u4ef6\u200b\u5de5\u7a0b\u5e08\u200b\")\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#3-before-model","title":"3. Before Model \u200b\u4e2d\u95f4\u4ef6","text":"<p>\u200b\u5728\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u524d\u200b\u8bbf\u95ee\u200b\u548c\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\u3002</p> <pre><code>from langchain.agents.middleware import before_model\nfrom langchain.messages import SystemMessage\n\n@before_model\ndef enhance_with_context(state: AgentState, runtime: Runtime) -&gt; dict[str, Any] | None:\n    \"\"\"\u200b\u5728\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u524d\u200b\u589e\u5f3a\u200b\u4e0a\u4e0b\u6587\u200b\"\"\"\n    messages = state[\"messages\"]\n\n    # \u200b\u83b7\u53d6\u200b\u7528\u6237\u200b\u4fe1\u606f\u200b\n    user_id = state.get(\"user_id\", \"unknown\")\n    preferences = state.get(\"preferences\", {})\n\n    # \u200b\u6dfb\u52a0\u200b\u7cfb\u7edf\u200b\u6d88\u606f\u200b\u63d0\u4f9b\u200b\u4e0a\u4e0b\u6587\u200b\n    context_message = SystemMessage(content=f\"\"\"\n    \u200b\u5f53\u524d\u200b\u7528\u6237\u200bID: {user_id}\n    \u200b\u7528\u6237\u200b\u504f\u597d\u200b: {preferences}\n    \u200b\u8bf7\u200b\u6839\u636e\u200b\u4ee5\u4e0a\u200b\u4fe1\u606f\u200b\u63d0\u4f9b\u200b\u4e2a\u6027\u5316\u200b\u670d\u52a1\u200b\u3002\n    \"\"\")\n\n    # \u200b\u5c06\u200b\u4e0a\u4e0b\u6587\u200b\u6d88\u606f\u200b\u6dfb\u52a0\u200b\u5230\u200b\u5bf9\u8bdd\u200b\u5f00\u59cb\u200b\n    enhanced_messages = [context_message] + messages\n\n    return {\"messages\": enhanced_messages}\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    middleware=[enhance_with_context],\n    state_schema=CustomAgentState,\n    checkpointer=InMemorySaver(),\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#4-after-model","title":"4. After Model \u200b\u4e2d\u95f4\u4ef6","text":"<p>\u200b\u5728\u200b\u6a21\u578b\u200b\u8c03\u7528\u200b\u540e\u5904\u7406\u200b\u54cd\u5e94\u200b\u548c\u200b\u72b6\u6001\u200b\u3002</p> <pre><code>from langchain.agents.middleware import after_model\nfrom langchain.messages import RemoveMessage\n\n@after_model\ndef track_conversation_metrics(state: AgentState, runtime: Runtime) -&gt; dict | None:\n    \"\"\"\u200b\u8ddf\u8e2a\u200b\u5bf9\u8bdd\u200b\u6307\u6807\u200b\u5e76\u200b\u6e05\u7406\u200b\u654f\u611f\u200b\u4fe1\u606f\u200b\"\"\"\n    messages = state[\"messages\"]\n\n    # \u200b\u66f4\u65b0\u200b\u5bf9\u8bdd\u200b\u7edf\u8ba1\u200b\n    conversation_count = state.get(\"conversation_count\", 0) + 1\n    last_active = datetime.now().isoformat()\n\n    # \u200b\u68c0\u67e5\u200b\u5e76\u200b\u79fb\u9664\u200b\u5305\u542b\u200b\u654f\u611f\u200b\u4fe1\u606f\u200b\u7684\u200b\u6d88\u606f\u200b\n    sensitive_keywords = [\"\u200b\u5bc6\u7801\u200b\", \"secret\", \"password\", \"token\"]\n    messages_to_remove = []\n\n    for msg in messages:\n        if any(keyword in msg.content.lower() for keyword in sensitive_keywords):\n            messages_to_remove.append(msg)\n\n    updates = {\n        \"conversation_count\": conversation_count,\n        \"last_active\": last_active\n    }\n\n    if messages_to_remove:\n        updates[\"messages\"] = [RemoveMessage(id=msg.id) for msg in messages_to_remove]\n\n    return updates\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    middleware=[track_conversation_metrics],\n    state_schema=CustomAgentState,\n    checkpointer=InMemorySaver(),\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#_7","title":"\u5b9e\u9645\u200b\u5e94\u7528\u200b\u573a\u666f","text":""},{"location":"llmapps/langchain/core-components/short-term%20memory/#1_2","title":"\u573a\u666f\u200b1\uff1a\u200b\u4e2a\u6027\u5316\u200b\u5ba2\u6237\u670d\u52a1","text":"<pre><code>from datetime import datetime\nfrom typing import Dict, List, Optional\n\nclass CustomerServiceState(AgentState):\n    customer_id: str\n    ticket_history: List[Dict]\n    customer_tier: str  # \"standard\", \"premium\", \"vip\"\n    last_issue: Optional[str] = None\n    satisfaction_score: Optional[int] = None\n\ndef create_customer_service_agent():\n    \"\"\"\u200b\u521b\u5efa\u200b\u5ba2\u6237\u670d\u52a1\u200b Agent\"\"\"\n\n    @tool\n    def create_support_ticket(runtime: ToolRuntime, issue: str, priority: str) -&gt; str:\n        \"\"\"\u200b\u521b\u5efa\u200b\u652f\u6301\u200b\u5de5\u5355\u200b\"\"\"\n        from langgraph.types import Command\n\n        ticket = {\n            \"id\": f\"TICKET_{datetime.now().strftime('%Y%m%d_%H%M%S')}\",\n            \"issue\": issue,\n            \"priority\": priority,\n            \"created_at\": datetime.now().isoformat(),\n            \"status\": \"open\"\n        }\n\n        return Command(update={\n            \"ticket_history\": runtime.state.get(\"ticket_history\", []) + [ticket],\n            \"last_issue\": issue\n        })\n\n    @tool\n    def get_customer_history(runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u83b7\u53d6\u200b\u5ba2\u6237\u200b\u5386\u53f2\u8bb0\u5f55\u200b\"\"\"\n        state = runtime.state\n        ticket_history = state.get(\"ticket_history\", [])\n        customer_tier = state.get(\"customer_tier\", \"standard\")\n\n        if not ticket_history:\n            return \"\u200b\u8fd9\u200b\u662f\u200b\u8be5\u200b\u5ba2\u6237\u200b\u7684\u200b\u7b2c\u4e00\u6b21\u200b\u8054\u7cfb\u200b\"\n\n        last_ticket = ticket_history[-1]\n        return f\"\"\"\n        \u200b\u5ba2\u6237\u200b\u7b49\u7ea7\u200b: {customer_tier}\n        \u200b\u603b\u5de5\u200b\u5355\u6570\u200b: {len(ticket_history)}\n        \u200b\u6700\u8fd1\u200b\u95ee\u9898\u200b: {last_ticket['issue']}\n        \u200b\u6700\u8fd1\u200b\u5de5\u5355\u200b\u72b6\u6001\u200b: {last_ticket['status']}\n        \"\"\"\n\n    @before_model\n    def add_customer_context(state: CustomerServiceState, runtime: Runtime) -&gt; dict | None:\n        \"\"\"\u200b\u6dfb\u52a0\u200b\u5ba2\u6237\u200b\u4e0a\u4e0b\u6587\u200b\"\"\"\n        customer_tier = state.get(\"customer_tier\", \"standard\")\n        ticket_count = len(state.get(\"ticket_history\", []))\n\n        tier_benefits = {\n            \"standard\": \"\u200b\u6807\u51c6\u200b\u652f\u6301\u200b\uff0824\u200b\u5c0f\u65f6\u200b\u5185\u200b\u54cd\u5e94\u200b\uff09\",\n            \"premium\": \"\u200b\u4f18\u5148\u200b\u652f\u6301\u200b\uff084\u200b\u5c0f\u65f6\u200b\u5185\u200b\u54cd\u5e94\u200b\uff09\", \n            \"vip\": \"\u200b\u4e13\u5c5e\u200b\u652f\u6301\u200b\uff081\u200b\u5c0f\u65f6\u200b\u5185\u200b\u54cd\u5e94\u200b\uff09\"\n        }\n\n        context_msg = f\"\"\"\n        \u200b\u5f53\u524d\u200b\u5ba2\u6237\u200b\u7b49\u7ea7\u200b: {customer_tier}\n        \u200b\u652f\u6301\u200b\u7ea7\u522b\u200b: {tier_benefits.get(customer_tier, '\u200b\u6807\u51c6\u200b\u652f\u6301\u200b')}\n        \u200b\u5386\u53f2\u200b\u5de5\u5355\u200b\u6570\u91cf\u200b: {ticket_count}\n        \"\"\"\n\n        if state.get(\"last_issue\"):\n            context_msg += f\"\\n\u200b\u6700\u8fd1\u200b\u62a5\u544a\u200b\u7684\u200b\u95ee\u9898\u200b: {state['last_issue']}\"\n\n        return {\n            \"messages\": [SystemMessage(content=context_msg)] + state[\"messages\"]\n        }\n\n    return create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[create_support_ticket, get_customer_history],\n        middleware=[add_customer_context],\n        state_schema=CustomerServiceState,\n        checkpointer=InMemorySaver(),\n    )\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nservice_agent = create_customer_service_agent()\n\n# \u200b\u7b2c\u4e00\u6b21\u200b\u4ea4\u4e92\u200b\nresult1 = service_agent.invoke(\n    {\n        \"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u6211\u200b\u7684\u200b\u8d26\u6237\u200b\u65e0\u6cd5\u200b\u767b\u5f55\u200b\"}],\n        \"customer_id\": \"cust_123\",\n        \"customer_tier\": \"premium\",\n        \"ticket_history\": []\n    },\n    {\"configurable\": {\"thread_id\": \"cust_123\"}}\n)\n\n# \u200b\u540e\u7eed\u200b\u4ea4\u4e92\u200b - Agent \u200b\u4f1a\u200b\u8bb0\u4f4f\u200b\u5ba2\u6237\u200b\u5386\u53f2\u200b\nresult2 = service_agent.invoke(\n    {\n        \"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u67e5\u770b\u200b\u6211\u200b\u7684\u200b\u652f\u6301\u200b\u5386\u53f2\u200b\"}]\n    },\n    {\"configurable\": {\"thread_id\": \"cust_123\"}}\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#2_2","title":"\u573a\u666f\u200b2\uff1a\u200b\u667a\u80fd\u200b\u5b66\u4e60\u200b\u52a9\u624b","text":"<pre><code>class LearningAssistantState(AgentState):\n    student_level: str  # \"beginner\", \"intermediate\", \"advanced\"\n    learning_topics: List[str]\n    completed_lessons: List[Dict]\n    weak_areas: List[str]\n    learning_style: str  # \"visual\", \"auditory\", \"kinesthetic\"\n\ndef create_learning_assistant():\n    \"\"\"\u200b\u521b\u5efa\u200b\u5b66\u4e60\u200b\u52a9\u624b\u200b Agent\"\"\"\n\n    @tool\n    def track_progress(runtime: ToolRuntime, topic: str, score: int) -&gt; str:\n        \"\"\"\u200b\u8ddf\u8e2a\u200b\u5b66\u4e60\u200b\u8fdb\u5ea6\u200b\"\"\"\n        from langgraph.types import Command\n\n        lesson = {\n            \"topic\": topic,\n            \"score\": score,\n            \"completed_at\": datetime.now().isoformat()\n        }\n\n        completed_lessons = runtime.state.get(\"completed_lessons\", []) + [lesson]\n\n        # \u200b\u81ea\u52a8\u8bc6\u522b\u200b\u8584\u5f31\u200b\u9886\u57df\u200b\n        weak_areas = []\n        if score &lt; 70:\n            weak_areas = list(set(runtime.state.get(\"weak_areas\", []) + [topic]))\n\n        return Command(update={\n            \"completed_lessons\": completed_lessons,\n            \"weak_areas\": weak_areas\n        })\n\n    @tool\n    def get_study_recommendations(runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u83b7\u53d6\u200b\u5b66\u4e60\u200b\u5efa\u8bae\u200b\"\"\"\n        state = runtime.state\n        weak_areas = state.get(\"weak_areas\", [])\n        learning_style = state.get(\"learning_style\", \"visual\")\n        student_level = state.get(\"student_level\", \"beginner\")\n\n        recommendations = []\n\n        if weak_areas:\n            recommendations.append(f\"\u200b\u9700\u8981\u200b\u52a0\u5f3a\u200b\u7684\u200b\u9886\u57df\u200b: {', '.join(weak_areas)}\")\n\n        style_suggestions = {\n            \"visual\": \"\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u56fe\u8868\u200b\u548c\u200b\u89c6\u9891\u200b\u5b66\u4e60\u200b\",\n            \"auditory\": \"\u200b\u5efa\u8bae\u200b\u6536\u542c\u200b\u8bb2\u89e3\u200b\u548c\u200b\u53c2\u4e0e\u200b\u8ba8\u8bba\u200b\", \n            \"kinesthetic\": \"\u200b\u5efa\u8bae\u200b\u901a\u8fc7\u200b\u5b9e\u8df5\u200b\u7ec3\u4e60\u200b\u5b66\u4e60\u200b\"\n        }\n\n        recommendations.append(style_suggestions.get(learning_style, \"\u200b\u591a\u79cd\u200b\u65b9\u5f0f\u200b\u7ed3\u5408\u200b\u5b66\u4e60\u200b\"))\n        recommendations.append(f\"\u200b\u9002\u5408\u200b{student_level}\u200b\u6c34\u5e73\u200b\u7684\u200b\u5b66\u4e60\u6750\u6599\u200b\")\n\n        return \"\\n\".join(recommendations)\n\n    @dynamic_prompt\n    def personalized_learning_prompt(request: ModelRequest) -&gt; str:\n        \"\"\"\u200b\u4e2a\u6027\u5316\u200b\u5b66\u4e60\u200b\u63d0\u793a\u200b\"\"\"\n        state = request.state\n        context = request.runtime.context\n\n        student_name = context.get(\"student_name\", \"\u200b\u540c\u5b66\u200b\")\n        learning_style = state.get(\"learning_style\", \"visual\")\n        student_level = state.get(\"student_level\", \"beginner\")\n\n        return f\"\"\"\n        \u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8010\u5fc3\u200b\u7684\u200b\u5b66\u4e60\u200b\u52a9\u624b\u200b\uff0c\u200b\u6b63\u5728\u200b\u5e2e\u52a9\u200b{student_name}\u200b\u5b66\u4e60\u200b\u3002\n\n        \u200b\u5b66\u751f\u200b\u4fe1\u606f\u200b\uff1a\n        - \u200b\u5b66\u4e60\u200b\u98ce\u683c\u200b: {learning_style}\n        - \u200b\u5f53\u524d\u200b\u6c34\u5e73\u200b: {student_level}\n        - \u200b\u5df2\u200b\u5b8c\u6210\u200b\u8bfe\u7a0b\u200b: {len(state.get('completed_lessons', []))}\u200b\u4e2a\u200b\n\n        \u200b\u8bf7\u200b\u6839\u636e\u200b\u5b66\u751f\u200b\u7684\u200b\u5b66\u4e60\u200b\u98ce\u683c\u200b\u548c\u200b\u6c34\u5e73\u200b\u63d0\u4f9b\u200b\u4e2a\u6027\u5316\u200b\u7684\u200b\u6307\u5bfc\u200b\u3002\n        \u200b\u5bf9\u4e8e\u200b{learning_style}\u200b\u578b\u200b\u5b66\u4e60\u8005\u200b\uff0c\u200b\u4f7f\u7528\u200b\u9002\u5408\u200b\u7684\u200b\u6559\u5b66\u65b9\u6cd5\u200b\u3002\n        \"\"\"\n\n    return create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[track_progress, get_study_recommendations],\n        middleware=[personalized_learning_prompt],\n        state_schema=LearningAssistantState,\n        checkpointer=InMemorySaver(),\n    )\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nlearning_agent = create_learning_assistant()\n\n# \u200b\u521d\u59cb\u5316\u200b\u5b66\u4e60\u200b\u72b6\u6001\u200b\nlearning_agent.invoke(\n    {\n        \"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u6211\u200b\u60f3\u200b\u5b66\u4e60\u200bPython\u200b\u7f16\u7a0b\u200b\"}],\n        \"student_level\": \"beginner\",\n        \"learning_style\": \"visual\",\n        \"learning_topics\": [\"Python\", \"\u200b\u7f16\u7a0b\u200b\u57fa\u7840\u200b\"],\n        \"completed_lessons\": [],\n        \"weak_areas\": []\n    },\n    {\"configurable\": {\"thread_id\": \"student_123\"}},\n    context={\"student_name\": \"\u200b\u5c0f\u660e\u200b\"}\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#3","title":"\u573a\u666f\u200b3\uff1a\u200b\u7535\u5546\u200b\u63a8\u8350\u200b\u7cfb\u7edf","text":"<pre><code>class EcommerceState(AgentState):\n    user_id: str\n    browse_history: List[Dict]\n    purchase_history: List[Dict]\n    interests: List[str]\n    budget_range: str\n    preferred_categories: List[str]\n\ndef create_ecommerce_agent():\n    \"\"\"\u200b\u521b\u5efa\u200b\u7535\u5546\u200b\u63a8\u8350\u200b Agent\"\"\"\n\n    @tool\n    def track_browse_behavior(runtime: ToolRuntime, product: str, category: str) -&gt; str:\n        \"\"\"\u200b\u8ddf\u8e2a\u200b\u6d4f\u89c8\u200b\u884c\u4e3a\u200b\"\"\"\n        from langgraph.types import Command\n\n        browse_record = {\n            \"product\": product,\n            \"category\": category,\n            \"timestamp\": datetime.now().isoformat()\n        }\n\n        # \u200b\u66f4\u65b0\u200b\u6d4f\u89c8\u200b\u5386\u53f2\u200b\u548c\u200b\u5174\u8da3\u200b\n        browse_history = runtime.state.get(\"browse_history\", []) + [browse_record]\n        interests = list(set(runtime.state.get(\"interests\", []) + [category]))\n\n        return Command(update={\n            \"browse_history\": browse_history,\n            \"interests\": interests\n        })\n\n    @tool\n    def get_personalized_recommendations(runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u83b7\u53d6\u200b\u4e2a\u6027\u5316\u200b\u63a8\u8350\u200b\"\"\"\n        state = runtime.state\n        interests = state.get(\"interests\", [])\n        budget_range = state.get(\"budget_range\", \"medium\")\n        preferred_categories = state.get(\"preferred_categories\", [])\n\n        # \u200b\u57fa\u4e8e\u200b\u7528\u6237\u200b\u884c\u4e3a\u200b\u751f\u6210\u200b\u63a8\u8350\u200b\u903b\u8f91\u200b\n        recommendations = []\n\n        if interests:\n            recommendations.append(f\"\u200b\u57fa\u4e8e\u200b\u60a8\u200b\u7684\u200b\u5174\u8da3\u200b\u63a8\u8350\u200b: {', '.join(interests[:3])} \u200b\u76f8\u5173\u200b\u5546\u54c1\u200b\")\n\n        budget_map = {\n            \"low\": \"\u200b\u7ecf\u6d4e\u200b\u5b9e\u60e0\u200b\u578b\u200b\",\n            \"medium\": \"\u200b\u6027\u4ef7\u6bd4\u200b\u578b\u200b\", \n            \"high\": \"\u200b\u9ad8\u7aef\u200b\u54c1\u8d28\u200b\u578b\u200b\"\n        }\n\n        recommendations.append(f\"\u200b\u7b26\u5408\u200b\u60a8\u200b{budget_map.get(budget_range, '\u200b\u4e2d\u7b49\u200b')}\u200b\u9884\u7b97\u200b\u7684\u200b\u5546\u54c1\u200b\")\n\n        return \"\\n\".join(recommendations)\n\n    @before_model\n    def enhance_with_shopping_context(state: EcommerceState, runtime: Runtime) -&gt; dict | None:\n        \"\"\"\u200b\u589e\u5f3a\u200b\u8d2d\u7269\u200b\u4e0a\u4e0b\u6587\u200b\"\"\"\n        interests = state.get(\"interests\", [])\n        purchase_count = len(state.get(\"purchase_history\", []))\n        browse_count = len(state.get(\"browse_history\", []))\n\n        context_msg = f\"\"\"\n        \u200b\u8d2d\u7269\u200b\u52a9\u624b\u200b\u4e0a\u4e0b\u6587\u200b\uff1a\n        - \u200b\u7528\u6237\u200b\u5174\u8da3\u200b: {', '.join(interests) if interests else '\u200b\u5c1a\u672a\u200b\u786e\u5b9a\u200b'}\n        - \u200b\u6d4f\u89c8\u200b\u5386\u53f2\u200b: {browse_count} \u200b\u6b21\u200b\n        - \u200b\u8d2d\u4e70\u200b\u8bb0\u5f55\u200b: {purchase_count} \u200b\u6b21\u200b\n        - \u200b\u9884\u7b97\u200b\u8303\u56f4\u200b: {state.get('budget_range', '\u200b\u672a\u200b\u8bbe\u7f6e\u200b')}\n        \"\"\"\n\n        return {\n            \"messages\": [SystemMessage(content=context_msg)] + state[\"messages\"]\n        }\n\n    return create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[track_browse_behavior, get_personalized_recommendations],\n        middleware=[enhance_with_shopping_context],\n        state_schema=EcommerceState,\n        checkpointer=InMemorySaver(),\n    )\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#_8","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"llmapps/langchain/core-components/short-term%20memory/#1_3","title":"1. \u200b\u72b6\u6001\u200b\u8bbe\u8ba1\u200b\u539f\u5219","text":"<pre><code>class WellDesignedState(AgentState):\n    \"\"\"\u200b\u826f\u597d\u200b\u8bbe\u8ba1\u200b\u7684\u200b\u72b6\u6001\u200b\u7c7b\u200b\u793a\u4f8b\u200b\"\"\"\n\n    # \u200b\u5fc5\u9700\u200b\u7684\u200b\u6838\u5fc3\u200b\u5b57\u200b\u6bb5\u200b\n    user_id: str\n\n    # \u200b\u4f1a\u8bdd\u200b\u76f8\u5173\u200b\u5b57\u200b\u6bb5\u200b\n    session_start: str\n    interaction_count: int = 0\n\n    # \u200b\u4e1a\u52a1\u200b\u76f8\u5173\u200b\u5b57\u200b\u6bb5\u200b\n    user_preferences: Dict[str, Any] = {}\n    recent_actions: List[str] = []\n\n    # \u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\u5b57\u200b\u6bb5\u200b\n    last_summary: Optional[str] = None\n    tokens_used: int = 0\n\n    def should_summarize(self) -&gt; bool:\n        \"\"\"\u200b\u5224\u65ad\u200b\u662f\u5426\u200b\u9700\u8981\u200b\u603b\u7ed3\u200b\"\"\"\n        return self.interaction_count &gt; 10 or self.tokens_used &gt; 3000\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#2_3","title":"2. \u200b\u5185\u5b58\u200b\u7ba1\u7406\u7b56\u7565","text":"<pre><code>def create_memory_optimized_agent():\n    \"\"\"\u200b\u521b\u5efa\u200b\u5185\u5b58\u200b\u4f18\u5316\u200b\u7684\u200b Agent\"\"\"\n\n    @before_model\n    def smart_memory_management(state: AgentState, runtime: Runtime) -&gt; dict | None:\n        \"\"\"\u200b\u667a\u80fd\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\"\"\"\n        messages = state[\"messages\"]\n\n        # \u200b\u57fa\u4e8e\u200b\u4e0d\u540c\u200b\u6761\u4ef6\u200b\u91c7\u53d6\u200b\u4e0d\u540c\u200b\u7b56\u7565\u200b\n        if len(messages) &gt; 20:\n            # \u200b\u6d88\u606f\u200b\u8fc7\u591a\u65f6\u200b\u8fdb\u884c\u200b\u603b\u7ed3\u200b\n            return {\"messages\": messages[-10:]}  # \u200b\u4fdd\u7559\u200b\u6700\u8fd1\u200b10\u200b\u6761\u200b\n\n        elif state.get(\"tokens_used\", 0) &gt; 4000:\n            # Token \u200b\u4f7f\u7528\u200b\u8fc7\u591a\u65f6\u200b\u4fee\u526a\u200b\n            return {\"messages\": messages[-8:]}\n\n        return None\n\n    @after_model\n    def update_usage_metrics(state: AgentState, runtime: Runtime) -&gt; dict | None:\n        \"\"\"\u200b\u66f4\u65b0\u200b\u4f7f\u7528\u200b\u6307\u6807\u200b\"\"\"\n        # \u200b\u4f30\u7b97\u200b token \u200b\u4f7f\u7528\u91cf\u200b\uff08\u200b\u7b80\u5316\u7248\u200b\uff09\n        message_content = \" \".join([msg.content for msg in state[\"messages\"]])\n        estimated_tokens = len(message_content) // 4\n\n        return {\n            \"interaction_count\": state.get(\"interaction_count\", 0) + 1,\n            \"tokens_used\": state.get(\"tokens_used\", 0) + estimated_tokens\n        }\n\n    return create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[],\n        middleware=[smart_memory_management, update_usage_metrics],\n        state_schema=WellDesignedState,\n        checkpointer=InMemorySaver(),\n    )\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#3_1","title":"3. \u200b\u9519\u8bef\u5904\u7406\u200b\u548c\u200b\u6062\u590d","text":"<pre><code>def create_robust_agent():\n    \"\"\"\u200b\u521b\u5efa\u200b\u5065\u58ee\u200b\u7684\u200b Agent\"\"\"\n\n    @after_model\n    def handle_memory_errors(state: AgentState, runtime: Runtime) -&gt; dict | None:\n        \"\"\"\u200b\u5904\u7406\u200b\u5185\u5b58\u200b\u76f8\u5173\u200b\u9519\u8bef\u200b\"\"\"\n        try:\n            # \u200b\u68c0\u67e5\u200b\u72b6\u6001\u200b\u5065\u5eb7\u200b\u5ea6\u200b\n            messages = state[\"messages\"]\n\n            if len(messages) &gt; 100:\n                # \u200b\u6d88\u606f\u200b\u8fc7\u591a\u200b\uff0c\u200b\u81ea\u52a8\u200b\u6e05\u7406\u200b\n                return {\"messages\": messages[-20:]}\n\n            return None\n\n        except Exception as e:\n            # \u200b\u53d1\u751f\u200b\u9519\u8bef\u200b\u65f6\u200b\u6062\u590d\u200b\u5230\u200b\u6700\u540e\u200b\u5df2\u77e5\u200b\u826f\u597d\u200b\u72b6\u6001\u200b\n            print(f\"\u200b\u5185\u5b58\u200b\u5904\u7406\u9519\u8bef\u200b: {e}\")\n            return None  # \u200b\u4fdd\u6301\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\n\n    return create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[],\n        middleware=[handle_memory_errors],\n        checkpointer=InMemorySaver(),\n    )\n</code></pre>"},{"location":"llmapps/langchain/core-components/short-term%20memory/#_9","title":"\u603b\u7ed3","text":"<p>LangChain \u200b\u7684\u200b\u77ed\u671f\u200b\u8bb0\u5fc6\u7cfb\u7edf\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u7684\u200b\u5bf9\u8bdd\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u80fd\u529b\u200b\uff1a</p> <ul> <li>\u200b\u7075\u6d3b\u200b\u7684\u200b\u72b6\u6001\u200b\u8bbe\u8ba1\u200b\uff1a\u200b\u652f\u6301\u200b\u81ea\u5b9a\u4e49\u200b\u72b6\u6001\u5b57\u200b\u6bb5\u200b</li> <li>\u200b\u591a\u79cd\u200b\u5b58\u50a8\u200b\u540e\u200b\u7aef\u200b\uff1a\u200b\u5185\u5b58\u200b\u3001PostgreSQL \u200b\u7b49\u200b</li> <li>\u200b\u667a\u80fd\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\uff1a\u200b\u4fee\u526a\u200b\u3001\u200b\u5220\u9664\u200b\u3001\u200b\u603b\u7ed3\u200b\u7b49\u200b\u7b56\u7565\u200b</li> <li>\u200b\u5168\u65b9\u4f4d\u200b\u8bbf\u95ee\u200b\uff1a\u200b\u901a\u8fc7\u200b\u5de5\u5177\u200b\u3001\u200b\u4e2d\u95f4\u4ef6\u200b\u7b49\u200b\u8bbf\u95ee\u200b\u548c\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b</li> <li>\u200b\u751f\u4ea7\u200b\u7ea7\u200b\u53ef\u9760\u6027\u200b\uff1a\u200b\u9519\u8bef\u5904\u7406\u200b\u548c\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u4f7f\u7528\u200b\u77ed\u671f\u200b\u8bb0\u5fc6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u51fa\u200b\u771f\u6b63\u200b\u7406\u89e3\u200b\u7528\u6237\u200b\u4e0a\u4e0b\u6587\u200b\u3001\u200b\u63d0\u4f9b\u200b\u4e2a\u6027\u5316\u200b\u4f53\u9a8c\u200b\u7684\u200b\u667a\u80fd\u200b\u5e94\u7528\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/streaming/","title":"LangChain \u200b\u6d41\u5f0f\u200b\u4f20\u8f93","text":""},{"location":"llmapps/langchain/core-components/streaming/#_1","title":"\u6982\u8ff0","text":"<p>LangChain \u200b\u7684\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u7cfb\u7edf\u200b\u53ef\u4ee5\u200b\u5b9e\u65f6\u200b\u5c55\u793a\u200b\u66f4\u65b0\u200b\uff0c\u200b\u8fd9\u200b\u5bf9\u4e8e\u200b\u6784\u5efa\u200b\u54cd\u5e94\u200b\u8fc5\u901f\u200b\u7684\u200b LLM \u200b\u5e94\u7528\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002\u200b\u901a\u8fc7\u200b\u9010\u6b65\u200b\u663e\u793a\u200b\u8f93\u51fa\u200b\uff08\u200b\u5373\u4f7f\u200b\u5728\u200b\u5b8c\u6574\u200b\u54cd\u5e94\u200b\u51c6\u5907\u200b\u597d\u200b\u4e4b\u524d\u200b\uff09\uff0c\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u663e\u8457\u200b\u6539\u5584\u200b\u4e86\u200b\u7528\u6237\u200b\u4f53\u9a8c\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u5904\u7406\u200b LLM \u200b\u7684\u200b\u5ef6\u8fdf\u200b\u65f6\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/streaming/#_2","title":"\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u7684\u200b\u4f18\u52bf","text":"<ul> <li>\u200b\u5b9e\u65f6\u200b\u53cd\u9988\u200b\uff1a\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u5904\u7406\u200b\u8fdb\u5ea6\u200b</li> <li>\u200b\u964d\u4f4e\u200b\u611f\u77e5\u200b\u5ef6\u8fdf\u200b\uff1a\u200b\u5373\u4f7f\u200b\u603b\u200b\u65f6\u95f4\u200b\u76f8\u540c\u200b\uff0c\u200b\u7528\u6237\u200b\u4f53\u9a8c\u200b\u66f4\u597d\u200b</li> <li>\u200b\u8c03\u8bd5\u200b\u53cb\u597d\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u89c2\u5bdf\u200b\u6bcf\u4e2a\u200b\u6b65\u9aa4\u200b\u7684\u200b\u6267\u884c\u200b\u60c5\u51b5\u200b</li> <li>\u200b\u7075\u6d3b\u200b\u63a7\u5236\u200b\uff1a\u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u6a21\u5f0f\u200b</li> </ul>"},{"location":"llmapps/langchain/core-components/streaming/#_3","title":"\u57fa\u7840\u200b\u8bbe\u7f6e","text":""},{"location":"llmapps/langchain/core-components/streaming/#agent","title":"\u521b\u5efa\u200b\u57fa\u7840\u200b Agent","text":"<pre><code>from langchain.agents import create_agent\n\n# \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u5de5\u5177\u200b\u51fd\u6570\u200b\ndef get_weather(city: str) -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u57ce\u5e02\u200b\u7684\u200b\u5929\u6c14\u200b\"\"\"\n    return f\"{city}\u200b\u7684\u200b\u5929\u6c14\u200b\u662f\u200b\u6674\u6717\u200b\u7684\u200b\uff0c25\u00b0C\"\n\n# \u200b\u521b\u5efa\u200b Agent\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[get_weather],\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#_4","title":"\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u6a21\u5f0f","text":""},{"location":"llmapps/langchain/core-components/streaming/#1-agent-progress","title":"1. \u200b\u4ee3\u7406\u200b\u8fdb\u5ea6\u200b\u6d41\u200b (Agent Progress)","text":"<p>\u200b\u4f7f\u7528\u200b <code>stream_mode=\"updates\"</code> \u200b\u6765\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u4ee3\u7406\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u6b65\u9aa4\u200b\u8fdb\u5ea6\u200b\u3002</p> <pre><code>def stream_agent_progress():\n    \"\"\"\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u4ee3\u7406\u200b\u6267\u884c\u200b\u8fdb\u5ea6\u200b\"\"\"\n    print(\"=== \u200b\u4ee3\u7406\u200b\u8fdb\u5ea6\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b ===\")\n\n    for chunk in agent.stream(\n        {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u5317\u4eac\u200b\u548c\u200b\u4e0a\u6d77\u200b\u7684\u200b\u5929\u6c14\u200b\u600e\u4e48\u6837\u200b\uff1f\"}]},\n        stream_mode=\"updates\",  # \u200b\u5173\u952e\u200b\u53c2\u6570\u200b\n    ):\n        for step, data in chunk.items():\n            print(f\"\u200b\u6b65\u9aa4\u200b: {step}\")\n            if 'messages' in data and data['messages']:\n                last_message = data['messages'][-1]\n                print(f\"\u200b\u5185\u5bb9\u200b: {last_message.content}\")\n                if hasattr(last_message, 'tool_calls') and last_message.tool_calls:\n                    print(f\"\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b: {last_message.tool_calls}\")\n            print(\"-\" * 50)\n\n# \u200b\u8c03\u7528\u200b\u793a\u4f8b\u200b\nstream_agent_progress()\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>\u200b\u6b65\u9aa4\u200b: model\n\u200b\u5185\u5bb9\u200b: \n\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b: [{'name': 'get_weather', 'args': {'city': '\u200b\u5317\u4eac\u200b'}, 'id': 'call_123'}]\n--------------------------------------------------\n\u200b\u6b65\u9aa4\u200b: tools\n\u200b\u5185\u5bb9\u200b: \u200b\u5317\u4eac\u200b\u7684\u200b\u5929\u6c14\u200b\u662f\u200b\u6674\u6717\u200b\u7684\u200b\uff0c25\u00b0C\n--------------------------------------------------\n\u200b\u6b65\u9aa4\u200b: model\n\u200b\u5185\u5bb9\u200b: \u200b\u5317\u4eac\u200b\u5929\u6c14\u6674\u6717\u200b\uff0c25\u00b0C\u3002\u200b\u63a5\u4e0b\u6765\u200b\u67e5\u8be2\u200b\u4e0a\u6d77\u200b\u5929\u6c14\u200b...\n\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b: [{'name': 'get_weather', 'args': {'city': '\u200b\u4e0a\u6d77\u200b'}, 'id': 'call_456'}]\n--------------------------------------------------\n\u200b\u6b65\u9aa4\u200b: tools\n\u200b\u5185\u5bb9\u200b: \u200b\u4e0a\u6d77\u200b\u7684\u200b\u5929\u6c14\u200b\u662f\u200b\u6674\u6717\u200b\u7684\u200b\uff0c25\u00b0C\n--------------------------------------------------\n\u200b\u6b65\u9aa4\u200b: model\n\u200b\u5185\u5bb9\u200b: \u200b\u5317\u4eac\u200b\u548c\u200b\u4e0a\u6d77\u200b\u90fd\u200b\u662f\u200b\u6674\u6717\u200b\u5929\u6c14\u200b\uff0c25\u00b0C\u3002\n--------------------------------------------------\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#2-llm-token-llm-tokens","title":"2. LLM Token \u200b\u6d41\u200b (LLM Tokens)","text":"<p>\u200b\u4f7f\u7528\u200b <code>stream_mode=\"messages\"</code> \u200b\u6765\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b LLM \u200b\u751f\u6210\u200b\u7684\u200b\u6bcf\u4e2a\u200b token\u3002</p> <pre><code>def stream_llm_tokens():\n    \"\"\"\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b LLM \u200b\u751f\u6210\u200b\u7684\u200b tokens\"\"\"\n    print(\"=== LLM Token \u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b ===\")\n\n    for token, metadata in agent.stream(\n        {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u4e0a\u6d77\u200b\u7684\u200b\u5929\u6c14\u200b\u5982\u4f55\u200b\uff1f\"}]},\n        stream_mode=\"messages\",  # \u200b\u5173\u952e\u200b\u53c2\u6570\u200b\n    ):\n        node_name = metadata.get('langgraph_node', 'unknown')\n\n        if hasattr(token, 'content_blocks') and token.content_blocks:\n            for block in token.content_blocks:\n                if block.get('type') == 'text' and block.get('text'):\n                    print(f\"[{node_name}] {block['text']}\", end='', flush=True)\n                elif block.get('type') == 'tool_call_chunk':\n                    print(f\"\\n[\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b] {block.get('name', '')} {block.get('args', '')}\")\n\n    print()  # \u200b\u6700\u7ec8\u200b\u6362\u884c\u200b\n\n# \u200b\u8c03\u7528\u200b\u793a\u4f8b\u200b\nstream_llm_tokens()\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>[model] \u200b\u8ba9\u200b\u6211\u200b\n[model] \u200b\u6765\u200b\u67e5\u8be2\u200b\n[model] \u200b\u4e00\u4e0b\u200b\n[model] \u200b\u4e0a\u6d77\u200b\n[model] \u200b\u7684\u200b\u5929\u6c14\u200b\n[model] ...\n[\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b] get_weather {\"city\":\"\u200b\u4e0a\u6d77\u200b\"}\n[tools] \u200b\u4e0a\u6d77\u200b\u7684\u200b\u5929\u6c14\u200b\u662f\u200b\u6674\u6717\u200b\u7684\u200b\uff0c25\u00b0C\n[model] \u200b\u4e0a\u6d77\u200b\n[model] \u200b\u7684\u200b\u5929\u6c14\u200b\n[model] \u200b\u662f\u200b\u6674\u6717\u200b\u7684\u200b\n[model] \uff0c25\u00b0C\n[model] \u3002\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#3-custom-updates","title":"3. \u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b\u6d41\u200b (Custom Updates)","text":"<p>\u200b\u5728\u200b\u5de5\u5177\u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>get_stream_writer()</code> \u200b\u6765\u200b\u53d1\u9001\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u6d41\u5f0f\u200b\u66f4\u65b0\u200b\u3002</p> <pre><code>from langgraph.config import get_stream_writer\n\ndef create_custom_streaming_tool():\n    \"\"\"\u200b\u521b\u5efa\u200b\u652f\u6301\u200b\u81ea\u5b9a\u4e49\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u7684\u200b\u5de5\u5177\u200b\"\"\"\n\n    def search_products(query: str, max_results: int = 5) -&gt; str:\n        \"\"\"\u200b\u641c\u7d22\u200b\u4ea7\u54c1\u200b\u4fe1\u606f\u200b\"\"\"\n        writer = get_stream_writer()\n\n        # \u200b\u53d1\u9001\u200b\u81ea\u5b9a\u4e49\u200b\u8fdb\u5ea6\u200b\u66f4\u65b0\u200b\n        writer(f\"\ud83d\udd0d \u200b\u5f00\u59cb\u200b\u641c\u7d22\u200b: {query}\")\n        writer(f\"\ud83d\udcca \u200b\u6700\u5927\u200b\u7ed3\u679c\u200b\u6570\u200b: {max_results}\")\n\n        # \u200b\u6a21\u62df\u200b\u641c\u7d22\u200b\u8fc7\u7a0b\u200b\n        writer(\"\u23f3 \u200b\u8fde\u63a5\u200b\u6570\u636e\u5e93\u200b...\")\n        # \u200b\u6a21\u62df\u200b\u6570\u636e\u5e93\u200b\u67e5\u8be2\u200b\n        writer(\"\u2705 \u200b\u6570\u636e\u5e93\u200b\u8fde\u63a5\u200b\u6210\u529f\u200b\")\n\n        writer(\"\ud83d\udd0e \u200b\u6267\u884c\u200b\u641c\u7d22\u200b\u67e5\u8be2\u200b...\")\n        # \u200b\u6a21\u62df\u200b\u641c\u7d22\u200b\u903b\u8f91\u200b\n        import time\n        time.sleep(0.5)\n\n        writer(f\"\ud83d\udce6 \u200b\u627e\u5230\u200b 3 \u200b\u4e2a\u200b\u76f8\u5173\u200b\u4ea7\u54c1\u200b\")\n\n        # \u200b\u8fd4\u56de\u200b\u6700\u7ec8\u200b\u7ed3\u679c\u200b\n        return f\"\u200b\u641c\u7d22\u200b '{query}' \u200b\u627e\u5230\u200b 3 \u200b\u4e2a\u200b\u4ea7\u54c1\u200b: \u200b\u4ea7\u54c1\u200bA, \u200b\u4ea7\u54c1\u200bB, \u200b\u4ea7\u54c1\u200bC\"\n\n    return search_products\n\ndef stream_custom_updates():\n    \"\"\"\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b\"\"\"\n    print(\"=== \u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b ===\")\n\n    search_tool = create_custom_streaming_tool()\n    custom_agent = create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[search_tool],\n    )\n\n    for chunk in custom_agent.stream(\n        {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u641c\u7d22\u200b\u7b14\u8bb0\u672c\u7535\u8111\u200b\"}]},\n        stream_mode=\"custom\"  # \u200b\u5173\u952e\u200b\u53c2\u6570\u200b\n    ):\n        print(f\"\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b: {chunk}\")\n\n# \u200b\u8c03\u7528\u200b\u793a\u4f8b\u200b\nstream_custom_updates()\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b: \ud83d\udd0d \u200b\u5f00\u59cb\u200b\u641c\u7d22\u200b: \u200b\u7b14\u8bb0\u672c\u7535\u8111\u200b\n\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b: \ud83d\udcca \u200b\u6700\u5927\u200b\u7ed3\u679c\u200b\u6570\u200b: 5\n\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b: \u23f3 \u200b\u8fde\u63a5\u200b\u6570\u636e\u5e93\u200b...\n\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b: \u2705 \u200b\u6570\u636e\u5e93\u200b\u8fde\u63a5\u200b\u6210\u529f\u200b\n\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b: \ud83d\udd0e \u200b\u6267\u884c\u200b\u641c\u7d22\u200b\u67e5\u8be2\u200b...\n\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b: \ud83d\udce6 \u200b\u627e\u5230\u200b 3 \u200b\u4e2a\u200b\u76f8\u5173\u200b\u4ea7\u54c1\u200b\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#4","title":"4. \u200b\u591a\u200b\u6a21\u5f0f\u200b\u6d41\u5f0f\u200b\u4f20\u8f93","text":"<p>\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u4f7f\u7528\u200b\u591a\u79cd\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u6a21\u5f0f\u200b\u3002</p> <pre><code>def stream_multiple_modes():\n    \"\"\"\u200b\u540c\u65f6\u200b\u4f7f\u7528\u200b\u591a\u79cd\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u6a21\u5f0f\u200b\"\"\"\n    print(\"=== \u200b\u591a\u200b\u6a21\u5f0f\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b ===\")\n\n    # \u200b\u521b\u5efa\u200b\u652f\u6301\u200b\u81ea\u5b9a\u4e49\u200b\u6d41\u200b\u7684\u200b\u5de5\u5177\u200b\n    def advanced_weather_tool(city: str) -&gt; str:\n        \"\"\"\u200b\u9ad8\u7ea7\u200b\u5929\u6c14\u200b\u67e5\u8be2\u200b\u5de5\u5177\u200b\"\"\"\n        writer = get_stream_writer()\n        writer(f\"\ud83c\udf24\ufe0f  \u200b\u5f00\u59cb\u200b\u67e5\u8be2\u200b {city} \u200b\u7684\u200b\u5929\u6c14\u200b\")\n        writer(\"\ud83d\udce1 \u200b\u8fde\u63a5\u200b\u6c14\u8c61\u200bAPI...\")\n        writer(\"\ud83d\udd0d \u200b\u83b7\u53d6\u200b\u5b9e\u65f6\u200b\u6570\u636e\u200b...\")\n        return f\"{city}\u200b\u7684\u200b\u5929\u6c14\u200b\uff1a\u200b\u6674\u6717\u200b\uff0c25\u00b0C\uff0c\u200b\u6e7f\u5ea6\u200b60%\"\n\n    multi_agent = create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[advanced_weather_tool],\n    )\n\n    for stream_mode, chunk in multi_agent.stream(\n        {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u67e5\u8be2\u200b\u676d\u5dde\u200b\u7684\u200b\u5929\u6c14\u200b\"}]},\n        stream_mode=[\"updates\", \"custom\", \"messages\"]  # \u200b\u591a\u79cd\u200b\u6a21\u5f0f\u200b\n    ):\n        print(f\"\u200b\u6a21\u5f0f\u200b: {stream_mode}\")\n        print(f\"\u200b\u5185\u5bb9\u200b: {chunk}\")\n        print(\"-\" * 30)\n\n# \u200b\u8c03\u7528\u200b\u793a\u4f8b\u200b\nstream_multiple_modes()\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#_5","title":"\u5b9e\u9645\u200b\u5e94\u7528\u200b\u573a\u666f","text":""},{"location":"llmapps/langchain/core-components/streaming/#1","title":"\u573a\u666f\u200b1\uff1a\u200b\u5b9e\u65f6\u200b\u804a\u5929\u200b\u5e94\u7528","text":"<pre><code>import asyncio\nfrom langchain.agents import create_agent\n\nclass StreamingChatApp:\n    \"\"\"\u200b\u652f\u6301\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u7684\u200b\u804a\u5929\u200b\u5e94\u7528\u200b\"\"\"\n\n    def __init__(self):\n        self.agent = create_agent(\n            model=\"openai:gpt-4o\",\n            tools=[self.get_weather, self.search_web],\n        )\n\n    def get_weather(self, city: str) -&gt; str:\n        \"\"\"\u200b\u83b7\u53d6\u200b\u5929\u6c14\u200b\u4fe1\u606f\u200b\"\"\"\n        writer = get_stream_writer()\n        writer(f\"\u200b\u67e5\u8be2\u200b{city}\u200b\u7684\u200b\u5929\u6c14\u200b...\")\n        # \u200b\u6a21\u62df\u200bAPI\u200b\u8c03\u7528\u200b\n        return f\"{city}: 25\u00b0C, \u200b\u6674\u6717\u200b\"\n\n    def search_web(self, query: str) -&gt; str:\n        \"\"\"\u200b\u7f51\u9875\u200b\u641c\u7d22\u200b\"\"\"\n        writer = get_stream_writer()\n        writer(f\"\u200b\u641c\u7d22\u200b: {query}\")\n        writer(\"\u200b\u6b63\u5728\u200b\u83b7\u53d6\u200b\u6700\u65b0\u200b\u4fe1\u606f\u200b...\")\n        return f\"\u200b\u5173\u4e8e\u200b'{query}'\u200b\u7684\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b...\"\n\n    async def chat_stream(self, message: str):\n        \"\"\"\u200b\u6d41\u5f0f\u200b\u804a\u5929\u200b\"\"\"\n        print(f\"\u200b\u7528\u6237\u200b: {message}\")\n        print(\"\u200b\u52a9\u624b\u200b: \", end=\"\", flush=True)\n\n        full_response = \"\"\n        for token, metadata in self.agent.stream(\n            {\"messages\": [{\"role\": \"user\", \"content\": message}]},\n            stream_mode=\"messages\",\n        ):\n            if hasattr(token, 'content_blocks'):\n                for block in token.content_blocks:\n                    if block.get('type') == 'text' and block.get('text'):\n                        text = block['text']\n                        print(text, end='', flush=True)\n                        full_response += text\n\n        print()  # \u200b\u6362\u884c\u200b\n        return full_response\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nasync def demo_chat():\n    app = StreamingChatApp()\n    await app.chat_stream(\"\u200b\u4eca\u5929\u200b\u676d\u5dde\u200b\u5929\u6c14\u200b\u600e\u4e48\u6837\u200b\uff1f\u200b\u7136\u540e\u200b\u641c\u7d22\u200bAI\u200b\u6700\u65b0\u200b\u53d1\u5c55\u200b\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#2","title":"\u573a\u666f\u200b2\uff1a\u200b\u8fdb\u5ea6\u200b\u76d1\u63a7\u200b\u4eea\u8868\u677f","text":"<pre><code>from typing import Dict, Any\nimport json\n\nclass ProgressMonitor:\n    \"\"\"\u200b\u8fdb\u5ea6\u200b\u76d1\u63a7\u5668\u200b\"\"\"\n\n    def __init__(self):\n        self.progress_data = {\n            'total_steps': 0,\n            'completed_steps': 0,\n            'current_step': '',\n            'details': []\n        }\n\n    def update_progress(self, step: str, details: str = \"\"):\n        \"\"\"\u200b\u66f4\u65b0\u200b\u8fdb\u5ea6\u200b\"\"\"\n        self.progress_data['current_step'] = step\n        self.progress_data['details'].append({\n            'step': step,\n            'details': details,\n            'timestamp': str(datetime.now())\n        })\n        self.progress_data['completed_steps'] += 1\n\n        # \u200b\u53d1\u9001\u5230\u200b\u524d\u7aef\u200b\uff08\u200b\u6a21\u62df\u200b\uff09\n        print(f\"\u200b\u8fdb\u5ea6\u200b\u66f4\u65b0\u200b: {json.dumps(self.progress_data, ensure_ascii=False)}\")\n\ndef create_monitored_tools(monitor: ProgressMonitor):\n    \"\"\"\u200b\u521b\u5efa\u200b\u88ab\u200b\u76d1\u63a7\u200b\u7684\u200b\u5de5\u5177\u200b\"\"\"\n\n    def research_topic(topic: str) -&gt; str:\n        \"\"\"\u200b\u7814\u7a76\u200b\u4e3b\u9898\u200b\"\"\"\n        writer = get_stream_writer()\n\n        monitor.update_progress('research', f\"\u200b\u5f00\u59cb\u200b\u7814\u7a76\u200b: {topic}\")\n        writer(f\"\ud83d\udd2c \u200b\u7814\u7a76\u200b\u4e3b\u9898\u200b: {topic}\")\n\n        # \u200b\u6a21\u62df\u200b\u7814\u7a76\u200b\u6b65\u9aa4\u200b\n        steps = [\n            \"\u200b\u6536\u96c6\u200b\u76f8\u5173\u200b\u8d44\u6599\u200b\",\n            \"\u200b\u5206\u6790\u200b\u5173\u952e\u200b\u4fe1\u606f\u200b\", \n            \"\u200b\u6574\u7406\u200b\u7814\u7a76\u200b\u7ed3\u679c\u200b\",\n            \"\u200b\u751f\u6210\u200b\u603b\u7ed3\u62a5\u544a\u200b\"\n        ]\n\n        for step in steps:\n            monitor.update_progress('research', step)\n            writer(f\"\u2705 {step}\")\n            import time\n            time.sleep(0.3)\n\n        return f\"\u200b\u5173\u4e8e\u200b{topic}\u200b\u7684\u200b\u7814\u7a76\u200b\u5b8c\u6210\u200b\"\n\n    return research_topic\n\ndef monitored_agent_demo():\n    \"\"\"\u200b\u88ab\u200b\u76d1\u63a7\u200b\u7684\u200bAgent\u200b\u6f14\u793a\u200b\"\"\"\n    monitor = ProgressMonitor()\n    research_tool = create_monitored_tools(monitor)\n\n    agent = create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[research_tool],\n    )\n\n    print(\"\u200b\u5f00\u59cb\u200b\u76d1\u63a7\u200bAgent\u200b\u6267\u884c\u200b...\")\n    for stream_mode, chunk in agent.stream(\n        {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u7814\u7a76\u200b\u4eba\u5de5\u667a\u80fd\u200b\u5728\u200b\u533b\u7597\u200b\u9886\u57df\u200b\u7684\u200b\u5e94\u7528\u200b\"}]},\n        stream_mode=[\"updates\", \"custom\"]\n    ):\n        if stream_mode == \"custom\":\n            print(f\"\u200b\u81ea\u5b9a\u4e49\u200b\u4e8b\u4ef6\u200b: {chunk}\")\n\n# \u200b\u8c03\u7528\u200b\u793a\u4f8b\u200b\nmonitored_agent_demo()\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#3","title":"\u573a\u666f\u200b3\uff1a\u200b\u5b9e\u65f6\u200b\u6570\u636e\u6d41\u200b\u5904\u7406","text":"<pre><code>import time\nfrom datetime import datetime\n\nclass RealTimeDataProcessor:\n    \"\"\"\u200b\u5b9e\u65f6\u200b\u6570\u636e\u200b\u5904\u7406\u5668\u200b\"\"\"\n\n    def __init__(self):\n        self.agent = create_agent(\n            model=\"openai:gpt-4o\",\n            tools=[self.process_data_stream],\n        )\n        self.data_buffer = []\n\n    def process_data_stream(self, data_type: str, count: int = 10) -&gt; str:\n        \"\"\"\u200b\u5904\u7406\u200b\u6570\u636e\u6d41\u200b\"\"\"\n        writer = get_stream_writer()\n\n        writer(f\"\u200b\u5f00\u59cb\u200b\u5904\u7406\u200b {data_type} \u200b\u6570\u636e\u6d41\u200b...\")\n        writer(f\"\u200b\u9884\u8ba1\u200b\u5904\u7406\u200b {count} \u200b\u6761\u200b\u6570\u636e\u200b\")\n\n        # \u200b\u6a21\u62df\u200b\u6570\u636e\u6d41\u200b\u5904\u7406\u200b\n        for i in range(count):\n            # \u200b\u6a21\u62df\u200b\u6570\u636e\u5904\u7406\u200b\n            processed_item = f\"{data_type}_item_{i+1}\"\n            self.data_buffer.append(processed_item)\n\n            # \u200b\u53d1\u9001\u200b\u8fdb\u5ea6\u200b\u66f4\u65b0\u200b\n            progress = (i + 1) / count * 100\n            writer(f\"\ud83d\udcca \u200b\u8fdb\u5ea6\u200b: {progress:.1f}% - \u200b\u5df2\u200b\u5904\u7406\u200b: {processed_item}\")\n\n            # \u200b\u6a21\u62df\u200b\u5904\u7406\u200b\u65f6\u95f4\u200b\n            time.sleep(0.1)\n\n        writer(\"\u2705 \u200b\u6570\u636e\u6d41\u200b\u5904\u7406\u200b\u5b8c\u6210\u200b\")\n        return f\"\u200b\u6210\u529f\u200b\u5904\u7406\u200b {count} \u200b\u6761\u200b{data_type}\u200b\u6570\u636e\u200b\"\n\n    def start_processing(self, data_type: str):\n        \"\"\"\u200b\u5f00\u59cb\u200b\u5904\u7406\u200b\"\"\"\n        print(f\"\u200b\u5f00\u59cb\u200b\u5b9e\u65f6\u5904\u7406\u200b {data_type} \u200b\u6570\u636e\u200b...\")\n\n        for stream_mode, chunk in self.agent.stream(\n            {\"messages\": [{\"role\": \"user\", \"content\": f\"\u200b\u5904\u7406\u200b{data_type}\u200b\u6570\u636e\u6d41\u200b\"}]},\n            stream_mode=[\"custom\", \"updates\"]\n        ):\n            if stream_mode == \"custom\":\n                print(f\"{datetime.now().strftime('%H:%M:%S')} - {chunk}\")\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nprocessor = RealTimeDataProcessor()\nprocessor.start_processing(\"\u200b\u4f20\u611f\u5668\u200b\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#_6","title":"\u9ad8\u7ea7\u200b\u529f\u80fd","text":""},{"location":"llmapps/langchain/core-components/streaming/#1_1","title":"1. \u200b\u9519\u8bef\u5904\u7406\u200b\u548c\u200b\u91cd\u8bd5","text":"<pre><code>def create_robust_streaming_tool():\n    \"\"\"\u200b\u521b\u5efa\u200b\u5065\u58ee\u200b\u7684\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u5de5\u5177\u200b\"\"\"\n\n    def robust_operation(operation: str) -&gt; str:\n        \"\"\"\u200b\u5065\u58ee\u200b\u7684\u200b\u64cd\u4f5c\u200b\"\"\"\n        writer = get_stream_writer()\n\n        try:\n            writer(f\"\ud83d\udfe1 \u200b\u5f00\u59cb\u200b\u6267\u884c\u200b: {operation}\")\n\n            # \u200b\u6a21\u62df\u200b\u53ef\u80fd\u200b\u5931\u8d25\u200b\u7684\u200b\u64cd\u4f5c\u200b\n            if \"fail\" in operation:\n                raise Exception(\"\u200b\u6a21\u62df\u200b\u64cd\u4f5c\u200b\u5931\u8d25\u200b\")\n\n            writer(\"\ud83d\udfe2 \u200b\u64cd\u4f5c\u200b\u6267\u884c\u200b\u4e2d\u200b...\")\n            time.sleep(1)\n            writer(\"\u2705 \u200b\u64cd\u4f5c\u200b\u5b8c\u6210\u200b\")\n\n            return f\"\u200b\u64cd\u4f5c\u200b '{operation}' \u200b\u6210\u529f\u200b\u5b8c\u6210\u200b\"\n\n        except Exception as e:\n            writer(f\"\ud83d\udd34 \u200b\u64cd\u4f5c\u200b\u5931\u8d25\u200b: {str(e)}\")\n            writer(\"\ud83d\udd04 \u200b\u5c1d\u8bd5\u200b\u91cd\u8bd5\u200b...\")\n            # \u200b\u8fd9\u91cc\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u91cd\u8bd5\u200b\u903b\u8f91\u200b\n            return f\"\u200b\u64cd\u4f5c\u200b '{operation}' \u200b\u5931\u8d25\u200b: {str(e)}\"\n\n    return robust_operation\n\ndef error_handling_demo():\n    \"\"\"\u200b\u9519\u8bef\u5904\u7406\u200b\u6f14\u793a\u200b\"\"\"\n    robust_tool = create_robust_streaming_tool()\n    agent = create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[robust_tool],\n    )\n\n    print(\"\u200b\u6d4b\u8bd5\u200b\u6b63\u5e38\u200b\u64cd\u4f5c\u200b:\")\n    for chunk in agent.stream(\n        {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u6267\u884c\u200b\u6b63\u5e38\u200b\u64cd\u4f5c\u200b\"}]},\n        stream_mode=\"custom\"\n    ):\n        print(chunk)\n\n    print(\"\\n\u200b\u6d4b\u8bd5\u200b\u5931\u8d25\u200b\u64cd\u4f5c\u200b:\")\n    for chunk in agent.stream(\n        {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u6267\u884c\u200b\u5931\u8d25\u200b\u64cd\u4f5c\u200b\"}]},\n        stream_mode=\"custom\"\n    ):\n        print(chunk)\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#2_1","title":"2. \u200b\u6027\u80fd\u200b\u4f18\u5316","text":"<pre><code>class OptimizedStreaming:\n    \"\"\"\u200b\u4f18\u5316\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u6027\u80fd\u200b\"\"\"\n\n    def __init__(self):\n        self.batch_size = 5\n        self.message_buffer = []\n\n    def batch_process_tool(self, items: list) -&gt; str:\n        \"\"\"\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\u5de5\u5177\u200b\"\"\"\n        writer = get_stream_writer()\n\n        writer(f\"\ud83d\udd04 \u200b\u5f00\u59cb\u200b\u6279\u91cf\u200b\u5904\u7406\u200b {len(items)} \u200b\u4e2a\u200b\u9879\u76ee\u200b\")\n\n        for i, item in enumerate(items):\n            # \u200b\u5904\u7406\u200b\u6bcf\u4e2a\u200b\u9879\u76ee\u200b\n            writer(f\"\u200b\u5904\u7406\u200b\u9879\u76ee\u200b {i+1}/{len(items)}: {item}\")\n\n            # \u200b\u6a21\u62df\u200b\u5904\u7406\u200b\n            time.sleep(0.1)\n\n            # \u200b\u6bcf\u200b\u5904\u7406\u200b\u5b8c\u200b\u4e00\u6279\u200b\u53d1\u9001\u200b\u66f4\u65b0\u200b\n            if (i + 1) % self.batch_size == 0:\n                writer(f\"\ud83d\udce6 \u200b\u5df2\u200b\u5b8c\u6210\u200b {i+1} \u200b\u4e2a\u200b\u9879\u76ee\u200b\")\n\n        writer(\"\u2705 \u200b\u6279\u91cf\u200b\u5904\u7406\u200b\u5b8c\u6210\u200b\")\n        return f\"\u200b\u6210\u529f\u200b\u5904\u7406\u200b {len(items)} \u200b\u4e2a\u200b\u9879\u76ee\u200b\"\n\n    def optimized_stream_demo(self):\n        \"\"\"\u200b\u4f18\u5316\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u6f14\u793a\u200b\"\"\"\n        agent = create_agent(\n            model=\"openai:gpt-4o\",\n            tools=[self.batch_process_tool],\n        )\n\n        items = [f\"item_{i}\" for i in range(1, 16)]\n\n        for chunk in agent.stream(\n            {\"messages\": [{\"role\": \"user\", \"content\": f\"\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\u8fd9\u4e9b\u200b\u9879\u76ee\u200b: {items}\"}]},\n            stream_mode=\"custom\"\n        ):\n            print(chunk)\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#_7","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"llmapps/langchain/core-components/streaming/#1_2","title":"1. \u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u6a21\u5f0f","text":"<pre><code>def choose_stream_mode(use_case: str):\n    \"\"\"\u200b\u6839\u636e\u200b\u4f7f\u7528\u200b\u573a\u666f\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u6a21\u5f0f\u200b\"\"\"\n    mode_recommendations = {\n        \"chat_application\": \"messages\",  # \u200b\u804a\u5929\u200b\u5e94\u7528\u200b\uff1a\u200b\u9700\u8981\u200b\u5b9e\u65f6\u200b\u663e\u793a\u200b\u6587\u5b57\u200b\n        \"progress_tracking\": [\"updates\", \"custom\"],  # \u200b\u8fdb\u5ea6\u200b\u8ddf\u8e2a\u200b\uff1a\u200b\u9700\u8981\u200b\u6b65\u9aa4\u200b\u548c\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b\n        \"debugging\": \"updates\",  # \u200b\u8c03\u8bd5\u200b\uff1a\u200b\u9700\u8981\u200b\u770b\u5230\u200b\u6bcf\u4e2a\u200b\u6b65\u9aa4\u200b\n        \"data_processing\": [\"custom\", \"messages\"],  # \u200b\u6570\u636e\u5904\u7406\u200b\uff1a\u200b\u9700\u8981\u200b\u8fdb\u5ea6\u200b\u548c\u200b\u7ed3\u679c\u200b\n        \"real_time_monitoring\": [\"updates\", \"custom\", \"messages\"]  # \u200b\u5b9e\u65f6\u200b\u76d1\u63a7\u200b\uff1a\u200b\u5168\u90e8\u200b\u4fe1\u606f\u200b\n    }\n\n    return mode_recommendations.get(use_case, \"updates\")\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nchat_mode = choose_stream_mode(\"chat_application\")\ndebug_mode = choose_stream_mode(\"debugging\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#2_2","title":"2. \u200b\u5904\u7406\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u9519\u8bef","text":"<pre><code>def safe_stream_invoke(agent, input_data, stream_mode=\"updates\", max_retries=3):\n    \"\"\"\u200b\u5b89\u5168\u200b\u7684\u200b\u6d41\u5f0f\u200b\u8c03\u7528\u200b\"\"\"\n    for attempt in range(max_retries):\n        try:\n            for chunk in agent.stream(input_data, stream_mode=stream_mode):\n                yield chunk\n            break  # \u200b\u6210\u529f\u200b\u5b8c\u6210\u200b\uff0c\u200b\u9000\u51fa\u200b\u91cd\u8bd5\u200b\u5faa\u73af\u200b\n        except Exception as e:\n            print(f\"\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u9519\u8bef\u200b (\u200b\u5c1d\u8bd5\u200b {attempt + 1}/{max_retries}): {e}\")\n            if attempt == max_retries - 1:\n                raise  # \u200b\u6700\u540e\u200b\u4e00\u6b21\u200b\u5c1d\u8bd5\u200b\u4ecd\u7136\u200b\u5931\u8d25\u200b\uff0c\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\n            time.sleep(1)  # \u200b\u7b49\u5f85\u200b\u540e\u200b\u91cd\u8bd5\u200b\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nfor chunk in safe_stream_invoke(\n    agent,\n    {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u67e5\u8be2\u200b\u5929\u6c14\u200b\"}]},\n    stream_mode=\"messages\"\n):\n    print(chunk)\n</code></pre>"},{"location":"llmapps/langchain/core-components/streaming/#_8","title":"\u6545\u969c\u200b\u6392\u9664","text":""},{"location":"llmapps/langchain/core-components/streaming/#_9","title":"\u5e38\u89c1\u95ee\u9898\u200b\u53ca\u200b\u89e3\u51b3\u65b9\u6848","text":"<ol> <li>\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u4e0d\u200b\u5de5\u4f5c\u200b</li> <li>\u200b\u68c0\u67e5\u200b\u6a21\u578b\u200b\u662f\u5426\u200b\u652f\u6301\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b</li> <li>\u200b\u786e\u8ba4\u200b <code>stream_mode</code> \u200b\u53c2\u6570\u8bbe\u7f6e\u200b\u6b63\u786e\u200b</li> <li> <p>\u200b\u9a8c\u8bc1\u200b\u7f51\u7edc\u8fde\u63a5\u200b</p> </li> <li> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b\u4e0d\u200b\u663e\u793a\u200b</p> </li> <li>\u200b\u786e\u4fdd\u200b\u5728\u200b\u5de5\u5177\u200b\u4e2d\u200b\u6b63\u786e\u200b\u4f7f\u7528\u200b <code>get_stream_writer()</code></li> <li>\u200b\u68c0\u67e5\u200b <code>stream_mode</code> \u200b\u5305\u542b\u200b \"custom\"</li> <li> <p>\u200b\u786e\u8ba4\u200b\u5728\u200b LangGraph \u200b\u6267\u884c\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u8c03\u7528\u200b</p> </li> <li> <p>\u200b\u6027\u80fd\u200b\u95ee\u9898\u200b</p> </li> <li>\u200b\u51cf\u5c11\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u6d41\u5f0f\u200b\u66f4\u65b0\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u5408\u9002\u200b\u7684\u200b\u6279\u5904\u7406\u200b\u5927\u5c0f\u200b</li> <li>\u200b\u8003\u8651\u200b\u7981\u7528\u200b\u67d0\u4e9b\u200b\u6d41\u5f0f\u200b\u6a21\u5f0f\u200b</li> </ol>"},{"location":"llmapps/langchain/core-components/streaming/#_10","title":"\u603b\u7ed3","text":"<p>LangChain \u200b\u7684\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u7cfb\u7edf\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u7684\u200b\u5b9e\u65f6\u200b\u66f4\u65b0\u200b\u80fd\u529b\u200b\uff1a</p> <ul> <li>\u200b\u591a\u79cd\u200b\u6a21\u5f0f\u200b\uff1a\u200b\u4ee3\u7406\u200b\u8fdb\u5ea6\u200b\u3001LLM tokens\u3001\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b</li> <li>\u200b\u7075\u6d3b\u200b\u7ec4\u5408\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u4f7f\u7528\u200b\u591a\u79cd\u200b\u6d41\u5f0f\u200b\u6a21\u5f0f\u200b</li> <li>\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\uff1a\u200b\u9002\u7528\u200b\u4e8e\u200b\u804a\u5929\u200b\u3001\u200b\u76d1\u63a7\u200b\u3001\u200b\u6570\u636e\u5904\u7406\u200b\u7b49\u200b\u573a\u666f\u200b</li> <li>\u200b\u5065\u58ee\u6027\u200b\uff1a\u200b\u5305\u542b\u200b\u9519\u8bef\u5904\u7406\u200b\u548c\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u4f7f\u7528\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u663e\u8457\u200b\u63d0\u5347\u200b\u5e94\u7528\u200b\u7684\u200b\u54cd\u5e94\u200b\u6027\u200b\u548c\u200b\u7528\u6237\u200b\u4f53\u9a8c\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/structured-output/","title":"LangChain \u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa","text":""},{"location":"llmapps/langchain/core-components/structured-output/#_1","title":"\u6982\u8ff0","text":"<p>\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\u5141\u8bb8\u200b Agent \u200b\u4ee5\u200b\u7279\u5b9a\u200b\u3001\u200b\u53ef\u200b\u9884\u6d4b\u200b\u7684\u200b\u683c\u5f0f\u200b\u8fd4\u56de\u200b\u6570\u636e\u200b\u3002\u200b\u4e0e\u200b\u89e3\u6790\u200b\u81ea\u7136\u8bed\u8a00\u200b\u54cd\u5e94\u200b\u4e0d\u540c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b JSON \u200b\u5bf9\u8c61\u200b\u3001Pydantic \u200b\u6a21\u578b\u200b\u6216\u200b\u6570\u636e\u200b\u7c7b\u200b\u5f62\u5f0f\u200b\u7684\u200b\u7ed3\u6784\u5316\u200b\u6570\u636e\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5728\u200b\u4f60\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/structured-output/#_2","title":"\u6838\u5fc3\u200b\u4f18\u52bf","text":"<ul> <li>\u200b\u53ef\u9884\u6d4b\u6027\u200b\uff1a\u200b\u6570\u636e\u683c\u5f0f\u200b\u56fa\u5b9a\u200b\uff0c\u200b\u4fbf\u4e8e\u200b\u540e\u7eed\u200b\u5904\u7406\u200b</li> <li>\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\uff1a\u200b\u81ea\u52a8\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b</li> <li>\u200b\u76f4\u63a5\u200b\u96c6\u6210\u200b\uff1a\u200b\u65e0\u9700\u200b\u624b\u52a8\u200b\u89e3\u6790\u200b\uff0c\u200b\u53ef\u200b\u76f4\u63a5\u200b\u5728\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u4f7f\u7528\u200b</li> <li>\u200b\u9519\u8bef\u5904\u7406\u200b\uff1a\u200b\u5185\u7f6e\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u91cd\u8bd5\u200b\u673a\u5236\u200b</li> </ul>"},{"location":"llmapps/langchain/core-components/structured-output/#_3","title":"\u57fa\u7840\u200b\u7528\u6cd5","text":"<p>LangChain \u200b\u7684\u200b <code>create_agent</code> \u200b\u81ea\u52a8\u200b\u5904\u7406\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\u3002\u200b\u7528\u6237\u200b\u8bbe\u7f6e\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5f53\u200b\u6a21\u578b\u200b\u751f\u6210\u200b\u7ed3\u6784\u5316\u200b\u6570\u636e\u200b\u65f6\u200b\uff0c\u200b\u5b83\u4f1a\u200b\u88ab\u200b\u6355\u83b7\u200b\u3001\u200b\u9a8c\u8bc1\u200b\u5e76\u200b\u8fd4\u56de\u200b\u5230\u200b Agent \u200b\u72b6\u6001\u200b\u7684\u200b <code>'structured_response'</code> \u200b\u952e\u4e2d\u200b\u3002</p> <pre><code>from langchain.agents import create_agent\n\n# \u200b\u57fa\u672c\u200b\u8bed\u6cd5\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[...],\n    response_format=YourSchema  # \u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\u6a21\u5f0f\u200b\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#_4","title":"\u54cd\u5e94\u200b\u683c\u5f0f\u200b\u7b56\u7565","text":""},{"location":"llmapps/langchain/core-components/structured-output/#1-providerstrategy","title":"1. ProviderStrategy\uff08\u200b\u63d0\u4f9b\u8005\u200b\u7b56\u7565\u200b\uff09","text":"<p>\u200b\u5f53\u200b\u6a21\u578b\u200b\u63d0\u4f9b\u5546\u200b\u539f\u751f\u200b\u652f\u6301\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\u65f6\u200b\u4f7f\u7528\u200b\uff08\u200b\u76ee\u524d\u200b\u652f\u6301\u200b OpenAI \u200b\u548c\u200b Grok\uff09\uff0c\u200b\u8fd9\u200b\u662f\u200b\u6700\u200b\u53ef\u9760\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002</p> <pre><code># LangChain \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u9009\u62e9\u200b ProviderStrategy\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=tools,\n    response_format=ContactInfo  # \u200b\u81ea\u52a8\u200b\u9009\u62e9\u200b\u6700\u4f73\u200b\u7b56\u7565\u200b\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#2-toolstrategy","title":"2. ToolStrategy\uff08\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u7b56\u7565\u200b\uff09","text":"<p>\u200b\u5bf9\u4e8e\u200b\u4e0d\u200b\u652f\u6301\u200b\u539f\u751f\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\u7684\u200b\u6a21\u578b\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u6765\u200b\u5b9e\u73b0\u200b\u76f8\u540c\u200b\u6548\u679c\u200b\u3002</p> <pre><code>from langchain.agents.structured_output import ToolStrategy\n\nagent = create_agent(\n    model=\"anthropic:claude-3-5-sonnet\",\n    tools=tools,\n    response_format=ToolStrategy(ContactInfo)\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#3","title":"3. \u200b\u81ea\u52a8\u200b\u9009\u62e9\u200b\u7b56\u7565","text":"<p>\u200b\u76f4\u63a5\u200b\u4f20\u9012\u200b\u6a21\u5f0f\u200b\u7c7b\u578b\u200b\uff0cLangChain \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u9009\u62e9\u200b\u6700\u4f73\u200b\u7b56\u7565\u200b\uff1a</p> <pre><code># LangChain \u200b\u6839\u636e\u200b\u6a21\u578b\u200b\u80fd\u529b\u200b\u81ea\u52a8\u200b\u9009\u62e9\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",  # \u200b\u652f\u6301\u200b\u539f\u751f\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b \u2192 ProviderStrategy\n    tools=tools,\n    response_format=ContactInfo  # \u200b\u81ea\u52a8\u200b\u9009\u62e9\u200b\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#_5","title":"\u6a21\u5f0f\u5b9a\u4e49\u200b\u65b9\u5f0f","text":""},{"location":"llmapps/langchain/core-components/structured-output/#1-pydantic","title":"1. Pydantic \u200b\u6a21\u578b\u200b\uff08\u200b\u63a8\u8350\u200b\uff09","text":"<pre><code>from pydantic import BaseModel, Field\nfrom typing import Optional, List\nfrom langchain.agents import create_agent\n\nclass ContactInfo(BaseModel):\n    \"\"\"\u200b\u8054\u7cfb\u4eba\u200b\u4fe1\u606f\u200b\"\"\"\n    name: str = Field(description=\"\u200b\u59d3\u540d\u200b\")\n    email: str = Field(description=\"\u200b\u90ae\u7bb1\u5730\u5740\u200b\")\n    phone: Optional[str] = Field(description=\"\u200b\u7535\u8bdd\u53f7\u7801\u200b\")\n    tags: List[str] = Field(description=\"\u200b\u6807\u7b7e\u200b\u5217\u8868\u200b\")\n\nclass ProductReview(BaseModel):\n    \"\"\"\u200b\u4ea7\u54c1\u200b\u8bc4\u4ef7\u200b\u5206\u6790\u200b\"\"\"\n    rating: int = Field(description=\"\u200b\u8bc4\u5206\u200b(1-5)\", ge=1, le=5)\n    sentiment: str = Field(description=\"\u200b\u60c5\u611f\u200b\u503e\u5411\u200b\")\n    key_points: List[str] = Field(description=\"\u200b\u5173\u952e\u70b9\u200b\")\n    summary: str = Field(description=\"\u200b\u603b\u7ed3\u200b\")\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=ContactInfo\n)\n\nresult = agent.invoke({\n    \"messages\": [{\n        \"role\": \"user\", \n        \"content\": \"\u200b\u63d0\u53d6\u200b\u8054\u7cfb\u4eba\u200b\uff1a\u200b\u5f20\u4e09\u200b\uff0c\u200b\u90ae\u7bb1\u200bzhangsan@example.com\uff0c\u200b\u7535\u8bdd\u200b13800138000\uff0c\u200b\u6807\u7b7e\u200b\uff1aVIP\u200b\u5ba2\u6237\u200b\u3001\u200b\u6280\u672f\u90e8\u200b\"\n    }]\n})\n\nprint(result[\"structured_response\"])\n# ContactInfo(name='\u200b\u5f20\u4e09\u200b', email='zhangsan@example.com', phone='13800138000', tags=['VIP\u200b\u5ba2\u6237\u200b', '\u200b\u6280\u672f\u90e8\u200b'])\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#2-dataclass","title":"2. Dataclass","text":"<pre><code>from dataclasses import dataclass\nfrom typing import List, Optional\n\n@dataclass\nclass MeetingNotes:\n    \"\"\"\u200b\u4f1a\u8bae\u8bb0\u5f55\u200b\"\"\"\n    topic: str                    # \u200b\u4f1a\u8bae\u4e3b\u9898\u200b\n    participants: List[str]       # \u200b\u53c2\u4f1a\u200b\u4eba\u5458\u200b\n    decisions: List[str]          # \u200b\u51b3\u7b56\u200b\u4e8b\u9879\u200b\n    action_items: List[str]       # \u200b\u884c\u52a8\u200b\u9879\u200b\n    next_meeting: Optional[str]   # \u200b\u4e0b\u6b21\u200b\u4f1a\u8bae\u200b\u65f6\u95f4\u200b\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=MeetingNotes\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#3-typeddict","title":"3. TypedDict","text":"<pre><code>from typing_extensions import TypedDict, List, Optional\n\nclass CustomerOrder(TypedDict):\n    \"\"\"\u200b\u5ba2\u6237\u200b\u8ba2\u5355\u200b\"\"\"\n    order_id: str\n    customer_name: str\n    items: List[str]\n    total_amount: float\n    status: str\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=CustomerOrder\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#4-json-schema","title":"4. JSON Schema","text":"<pre><code>order_schema = {\n    \"type\": \"object\",\n    \"description\": \"\u200b\u5ba2\u6237\u200b\u8ba2\u5355\u200b\u4fe1\u606f\u200b\",\n    \"properties\": {\n        \"order_id\": {\"type\": \"string\", \"description\": \"\u200b\u8ba2\u5355\u200bID\"},\n        \"customer_name\": {\"type\": \"string\", \"description\": \"\u200b\u5ba2\u6237\u200b\u59d3\u540d\u200b\"},\n        \"items\": {\n            \"type\": \"array\",\n            \"items\": {\"type\": \"string\"},\n            \"description\": \"\u200b\u5546\u54c1\u200b\u5217\u8868\u200b\"\n        },\n        \"total_amount\": {\"type\": \"number\", \"description\": \"\u200b\u603b\u91d1\u989d\u200b\"},\n        \"status\": {\"type\": \"string\", \"description\": \"\u200b\u8ba2\u5355\u200b\u72b6\u6001\u200b\"}\n    },\n    \"required\": [\"order_id\", \"customer_name\", \"items\", \"total_amount\"]\n}\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=order_schema\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#_6","title":"\u9ad8\u7ea7\u200b\u529f\u80fd","text":""},{"location":"llmapps/langchain/core-components/structured-output/#1","title":"1. \u200b\u8054\u5408\u200b\u7c7b\u578b\u200b\uff08\u200b\u591a\u200b\u6a21\u5f0f\u200b\u9009\u62e9\u200b\uff09","text":"<pre><code>from typing import Union\nfrom pydantic import BaseModel, Field\n\nclass ProductQuery(BaseModel):\n    \"\"\"\u200b\u4ea7\u54c1\u200b\u67e5\u8be2\u200b\"\"\"\n    product_name: str = Field(description=\"\u200b\u4ea7\u54c1\u540d\u79f0\u200b\")\n    features: List[str] = Field(description=\"\u200b\u4ea7\u54c1\u200b\u7279\u6027\u200b\")\n\nclass TechnicalSupport(BaseModel):\n    \"\"\"\u200b\u6280\u672f\u652f\u6301\u200b\u8bf7\u6c42\u200b\"\"\"\n    issue_type: str = Field(description=\"\u200b\u95ee\u9898\u200b\u7c7b\u578b\u200b\")\n    severity: str = Field(description=\"\u200b\u4e25\u91cd\u200b\u7a0b\u5ea6\u200b\")\n    description: str = Field(description=\"\u200b\u95ee\u9898\u200b\u63cf\u8ff0\u200b\")\n\nclass SalesInquiry(BaseModel):\n    \"\"\"\u200b\u9500\u552e\u200b\u54a8\u8be2\u200b\"\"\"\n    interest_level: str = Field(description=\"\u200b\u5174\u8da3\u200b\u7b49\u7ea7\u200b\")\n    budget_range: str = Field(description=\"\u200b\u9884\u7b97\u200b\u8303\u56f4\u200b\")\n    timeline: str = Field(description=\"\u200b\u65f6\u95f4\u200b\u7ebf\u200b\")\n\n# \u200b\u6a21\u578b\u200b\u6839\u636e\u200b\u4e0a\u4e0b\u6587\u200b\u9009\u62e9\u200b\u6700\u5408\u9002\u200b\u7684\u200b\u6a21\u5f0f\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=ToolStrategy(\n        Union[ProductQuery, TechnicalSupport, SalesInquiry]\n    )\n)\n\n# \u200b\u6a21\u578b\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u9009\u62e9\u200b TechnicalSupport\nresult = agent.invoke({\n    \"messages\": [{\n        \"role\": \"user\", \n        \"content\": \"\u200b\u6211\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u65e0\u6cd5\u200b\u542f\u52a8\u200b\uff0c\u200b\u663e\u793a\u200b\u9519\u8bef\u4ee3\u7801\u200b500\uff0c\u200b\u9700\u8981\u200b\u7d27\u6025\u200b\u5e2e\u52a9\u200b\"\n    }]\n})\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#2","title":"2. \u200b\u81ea\u5b9a\u4e49\u200b\u5de5\u5177\u200b\u6d88\u606f\u200b\u5185\u5bb9","text":"<pre><code>from langchain.agents.structured_output import ToolStrategy\n\nclass BugReport(BaseModel):\n    \"\"\"Bug\u200b\u62a5\u544a\u200b\"\"\"\n    title: str = Field(description=\"\u200b\u95ee\u9898\u200b\u6807\u9898\u200b\")\n    severity: str = Field(description=\"\u200b\u4e25\u91cd\u200b\u7a0b\u5ea6\u200b\")\n    steps_to_reproduce: List[str] = Field(description=\"\u200b\u91cd\u73b0\u200b\u6b65\u9aa4\u200b\")\n    expected_behavior: str = Field(description=\"\u200b\u9884\u671f\u200b\u884c\u4e3a\u200b\")\n    actual_behavior: str = Field(description=\"\u200b\u5b9e\u9645\u200b\u884c\u4e3a\u200b\")\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=ToolStrategy(\n        schema=BugReport,\n        tool_message_content=\"\u2705 Bug\u200b\u62a5\u544a\u200b\u5df2\u200b\u6210\u529f\u200b\u8bb0\u5f55\u200b\u5230\u200b\u7cfb\u7edf\u200b\uff01\"\n    )\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#3_1","title":"3. \u200b\u590d\u6742\u200b\u5d4c\u5957\u200b\u7ed3\u6784","text":"<pre><code>from typing import List, Optional\nfrom pydantic import BaseModel, Field\n\nclass Address(BaseModel):\n    \"\"\"\u200b\u5730\u5740\u200b\u4fe1\u606f\u200b\"\"\"\n    street: str = Field(description=\"\u200b\u8857\u9053\u200b\")\n    city: str = Field(description=\"\u200b\u57ce\u5e02\u200b\")\n    country: str = Field(description=\"\u200b\u56fd\u5bb6\u200b\")\n    postal_code: str = Field(description=\"\u200b\u90ae\u7f16\u200b\")\n\nclass OrderItem(BaseModel):\n    \"\"\"\u200b\u8ba2\u5355\u200b\u9879\u200b\"\"\"\n    product_name: str = Field(description=\"\u200b\u5546\u54c1\u540d\u79f0\u200b\")\n    quantity: int = Field(description=\"\u200b\u6570\u91cf\u200b\")\n    price: float = Field(description=\"\u200b\u5355\u4ef7\u200b\")\n\nclass CustomerOrder(BaseModel):\n    \"\"\"\u200b\u5b8c\u6574\u200b\u5ba2\u6237\u200b\u8ba2\u5355\u200b\"\"\"\n    order_id: str = Field(description=\"\u200b\u8ba2\u5355\u200bID\")\n    customer_name: str = Field(description=\"\u200b\u5ba2\u6237\u200b\u59d3\u540d\u200b\")\n    shipping_address: Address = Field(description=\"\u200b\u914d\u9001\u200b\u5730\u5740\u200b\")\n    items: List[OrderItem] = Field(description=\"\u200b\u8ba2\u5355\u200b\u9879\u200b\u5217\u8868\u200b\")\n    total_amount: float = Field(description=\"\u200b\u603b\u91d1\u989d\u200b\")\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=CustomerOrder\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#_7","title":"\u9519\u8bef\u5904\u7406","text":""},{"location":"llmapps/langchain/core-components/structured-output/#1_1","title":"1. \u200b\u57fa\u672c\u200b\u9519\u8bef\u5904\u7406","text":"<pre><code>from langchain.agents.structured_output import ToolStrategy\n\nclass ProductRating(BaseModel):\n    rating: int = Field(description=\"\u200b\u8bc4\u5206\u200b(1-5)\", ge=1, le=5)\n    comment: str = Field(description=\"\u200b\u8bc4\u4ef7\u200b\u5185\u5bb9\u200b\")\n\n# \u200b\u9ed8\u8ba4\u200b\u9519\u8bef\u5904\u7406\u200b\uff08\u200b\u81ea\u52a8\u200b\u91cd\u8bd5\u200b\uff09\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=ToolStrategy(ProductRating)  # handle_errors=True\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#2_1","title":"2. \u200b\u81ea\u5b9a\u4e49\u200b\u9519\u8bef\u200b\u6d88\u606f","text":"<pre><code>agent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=ToolStrategy(\n        schema=ProductRating,\n        handle_errors=\"\u200b\u8bf7\u200b\u63d0\u4f9b\u200b1-5\u200b\u5206\u200b\u7684\u200b\u8bc4\u5206\u200b\u548c\u200b\u6709\u6548\u200b\u7684\u200b\u8bc4\u4ef7\u200b\u5185\u5bb9\u200b\u3002\"\n    )\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#3_2","title":"3. \u200b\u7279\u5b9a\u200b\u5f02\u5e38\u200b\u5904\u7406","text":"<pre><code># \u200b\u53ea\u200b\u5904\u7406\u200b\u7279\u5b9a\u200b\u7c7b\u578b\u200b\u7684\u200b\u5f02\u5e38\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=ToolStrategy(\n        schema=ProductRating,\n        handle_errors=ValueError  # \u200b\u53ea\u200b\u5bf9\u200b ValueError \u200b\u91cd\u8bd5\u200b\n    )\n)\n\n# \u200b\u5904\u7406\u200b\u591a\u79cd\u200b\u5f02\u5e38\u200b\u7c7b\u578b\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=ToolStrategy(\n        schema=ProductRating,\n        handle_errors=(ValueError, TypeError)  # \u200b\u5bf9\u200b\u4e24\u79cd\u200b\u5f02\u5e38\u200b\u91cd\u8bd5\u200b\n    )\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#4","title":"4. \u200b\u81ea\u5b9a\u4e49\u200b\u9519\u8bef\u200b\u5904\u7406\u51fd\u6570","text":"<pre><code>def custom_error_handler(error: Exception) -&gt; str:\n    if \"rating\" in str(error):\n        return \"\u200b\u8bc4\u5206\u200b\u5fc5\u987b\u200b\u5728\u200b1-5\u200b\u4e4b\u95f4\u200b\uff0c\u200b\u8bf7\u200b\u4fee\u6b63\u200b\u3002\"\n    elif \"comment\" in str(error):\n        return \"\u200b\u8bc4\u4ef7\u200b\u5185\u5bb9\u200b\u4e0d\u80fd\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u8bf7\u200b\u8865\u5145\u200b\u3002\"\n    else:\n        return f\"\u200b\u683c\u5f0f\u200b\u9519\u8bef\u200b\uff1a{str(error)}\"\n\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=ToolStrategy(\n        schema=ProductRating,\n        handle_errors=custom_error_handler\n    )\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#5","title":"5. \u200b\u7981\u7528\u200b\u9519\u8bef\u5904\u7406","text":"<pre><code># \u200b\u6240\u6709\u200b\u9519\u8bef\u200b\u90fd\u200b\u4f1a\u200b\u76f4\u63a5\u200b\u629b\u51fa\u200b\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[],\n    response_format=ToolStrategy(\n        schema=ProductRating,\n        handle_errors=False  # \u200b\u4e0d\u200b\u8fdb\u884c\u200b\u9519\u8bef\u5904\u7406\u200b\n    )\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#_8","title":"\u5b9e\u9645\u200b\u5e94\u7528\u200b\u573a\u666f","text":""},{"location":"llmapps/langchain/core-components/structured-output/#1_2","title":"\u573a\u666f\u200b1\uff1a\u200b\u5ba2\u6237\u670d\u52a1\u200b\u81ea\u52a8\u5316","text":"<pre><code>from typing import Literal\nfrom pydantic import BaseModel, Field\n\nclass CustomerServiceTicket(BaseModel):\n    \"\"\"\u200b\u5ba2\u6237\u670d\u52a1\u200b\u5de5\u5355\u200b\"\"\"\n    ticket_type: Literal[\"technical\", \"billing\", \"general\", \"complaint\"] = Field(description=\"\u200b\u5de5\u5355\u200b\u7c7b\u578b\u200b\")\n    priority: Literal[\"low\", \"medium\", \"high\", \"urgent\"] = Field(description\u200b\u4f18\u5148\u7ea7\u200b\")\n    customer_issue: str = Field(description=\"\u200b\u5ba2\u6237\u200b\u95ee\u9898\u200b\u63cf\u8ff0\u200b\")\n    suggested_solution: str = Field(description=\"\u200b\u5efa\u8bae\u200b\u89e3\u51b3\u65b9\u6848\u200b\")\n    follow_up_required: bool = Field(description=\"\u200b\u662f\u5426\u200b\u9700\u8981\u200b\u8ddf\u8fdb\u200b\")\n\nclass CustomerServiceAgent:\n    def __init__(self):\n        self.agent = create_agent(\n            model=\"openai:gpt-4o\",\n            tools=[],  # \u200b\u53ef\u4ee5\u200b\u96c6\u6210\u200b\u77e5\u8bc6\u5e93\u200b\u641c\u7d22\u200b\u7b49\u200b\u5de5\u5177\u200b\n            response_format=CustomerServiceTicket\n        )\n\n    def process_customer_message(self, message: str):\n        result = self.agent.invoke({\n            \"messages\": [{\"role\": \"user\", \"content\": message}]\n        })\n\n        ticket = result[\"structured_response\"]\n        self._route_ticket(ticket)\n        return ticket\n\n    def _route_ticket(self, ticket: CustomerServiceTicket):\n        # \u200b\u6839\u636e\u200b\u5de5\u5355\u200b\u7c7b\u578b\u200b\u548c\u200b\u4f18\u5148\u7ea7\u200b\u8def\u7531\u200b\u5230\u200b\u4e0d\u540c\u200b\u56e2\u961f\u200b\n        if ticket.ticket_type == \"technical\" and ticket.priority in [\"high\", \"urgent\"]:\n            print(\"\ud83d\udea8 \u200b\u7d27\u6025\u200b\u6280\u672f\u200b\u95ee\u9898\u200b - \u200b\u8def\u7531\u200b\u5230\u200b\u6280\u672f\u200b\u56e2\u961f\u200b\")\n        elif ticket.ticket_type == \"billing\":\n            print(\"\ud83d\udcb0 \u200b\u8d26\u5355\u200b\u95ee\u9898\u200b - \u200b\u8def\u7531\u200b\u5230\u200b\u8d22\u52a1\u200b\u56e2\u961f\u200b\")\n        # ... \u200b\u5176\u4ed6\u200b\u8def\u7531\u200b\u903b\u8f91\u200b\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#2_2","title":"\u573a\u666f\u200b2\uff1a\u200b\u5185\u5bb9\u5206\u6790\u200b\u548c\u200b\u63d0\u53d6","text":"<pre><code>from datetime import datetime\nfrom typing import List, Optional\n\nclass NewsArticle(BaseModel):\n    \"\"\"\u200b\u65b0\u95fb\u200b\u6587\u7ae0\u200b\u5206\u6790\u200b\"\"\"\n    headline: str = Field(description=\"\u200b\u6807\u9898\u200b\")\n    summary: str = Field(description=\"\u200b\u6458\u8981\u200b\")\n    key_entities: List[str] = Field(description=\"\u200b\u5173\u952e\u200b\u5b9e\u4f53\u200b\")\n    sentiment: str = Field(description=\"\u200b\u60c5\u611f\u200b\u503e\u5411\u200b\")\n    categories: List[str] = Field(description=\"\u200b\u5206\u7c7b\u200b\")\n    publish_date: Optional[str] = Field(description=\"\u200b\u53d1\u5e03\u200b\u65e5\u671f\u200b\")\n\nclass ContentAnalyzer:\n    def __init__(self):\n        self.agent = create_agent(\n            model=\"openai:gpt-4o\",\n            tools=[],\n            response_format=NewsArticle\n        )\n\n    def analyze_article(self, content: str):\n        result = self.agent.invoke({\n            \"messages\": [{\n                \"role\": \"user\", \n                \"content\": f\"\u200b\u5206\u6790\u200b\u4ee5\u4e0b\u200b\u65b0\u95fb\u200b\u5185\u5bb9\u200b\uff1a\\n\\n{content}\"\n            }]\n        })\n        return result[\"structured_response\"]\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nanalyzer = ContentAnalyzer()\narticle_content = \"\"\"\n\u200b\u4eca\u65e5\u200b\uff0c\u200b\u67d0\u200b\u79d1\u6280\u200b\u516c\u53f8\u200b\u53d1\u5e03\u200b\u4e86\u200b\u65b0\u4e00\u4ee3\u200bAI\u200b\u82af\u7247\u200b\uff0c\u200b\u6027\u80fd\u200b\u63d0\u5347\u200b200%\u3002\n\u200b\u8be5\u200b\u82af\u7247\u200b\u91c7\u7528\u200b5nm\u200b\u5de5\u827a\u200b\uff0c\u200b\u529f\u8017\u200b\u964d\u4f4e\u200b30%\u3002CEO\u200b\u5f20\u4e09\u200b\u8868\u793a\u200b\uff0c\n\u200b\u8fd9\u200b\u5c06\u200b\u63a8\u52a8\u200b\u4eba\u5de5\u667a\u80fd\u200b\u5e94\u7528\u200b\u7684\u200b\u5feb\u901f\u200b\u53d1\u5c55\u200b\u3002\n\"\"\"\n\nanalysis = analyzer.analyze_article(article_content)\nprint(f\"\u200b\u6807\u9898\u200b: {analysis.headline}\")\nprint(f\"\u200b\u60c5\u611f\u200b: {analysis.sentiment}\")\nprint(f\"\u200b\u5173\u952e\u200b\u5b9e\u4f53\u200b: {analysis.key_entities}\")\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#3_3","title":"\u573a\u666f\u200b3\uff1a\u200b\u7535\u5b50\u5546\u52a1\u200b\u4ea7\u54c1\u200b\u4fe1\u606f\u63d0\u53d6","text":"<pre><code>from typing import List, Optional\nfrom decimal import Decimal\n\nclass ProductInfo(BaseModel):\n    \"\"\"\u200b\u4ea7\u54c1\u200b\u4fe1\u606f\u63d0\u53d6\u200b\"\"\"\n    name: str = Field(description=\"\u200b\u4ea7\u54c1\u540d\u79f0\u200b\")\n    brand: Optional[str] = Field(description=\"\u200b\u54c1\u724c\u200b\")\n    price: Optional[Decimal] = Field(description=\"\u200b\u4ef7\u683c\u200b\")\n    features: List[str] = Field(description=\"\u200b\u4ea7\u54c1\u200b\u7279\u6027\u200b\")\n    specifications: dict = Field(description=\"\u200b\u89c4\u683c\u200b\u53c2\u6570\u200b\")\n    availability: bool = Field(description=\"\u200b\u662f\u5426\u200b\u6709\u200b\u8d27\u200b\")\n\nclass EcommerceParser:\n    def __init__(self):\n        self.agent = create_agent(\n            model=\"openai:gpt-4o\",\n            tools=[],\n            response_format=ProductInfo\n        )\n\n    def parse_product_description(self, description: str):\n        result = self.agent.invoke({\n            \"messages\": [{\n                \"role\": \"user\",\n                \"content\": f\"\u200b\u4ece\u200b\u4ee5\u4e0b\u200b\u63cf\u8ff0\u200b\u4e2d\u200b\u63d0\u53d6\u200b\u4ea7\u54c1\u200b\u4fe1\u606f\u200b\uff1a\\n\\n{description}\"\n            }]\n        })\n        return result[\"structured_response\"]\n\n# \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nparser = EcommerceParser()\nproduct_desc = \"\"\"\n\u200b\u82f9\u679c\u200b iPhone 15 Pro Max\uff0c256GB\uff0c\u200b\u949b\u200b\u91d1\u5c5e\u200b\u6750\u8d28\u200b\n\u200b\u4ef7\u683c\u200b\uff1a\u00a59,999\n\u200b\u7279\u6027\u200b\uff1aA17 Pro\u200b\u82af\u7247\u200b\u30014800\u200b\u4e07\u200b\u50cf\u7d20\u200b\u4e3b\u6444\u200b\u30015\u200b\u500d\u200b\u5149\u5b66\u200b\u53d8\u7126\u200b\n\u200b\u89c4\u683c\u200b\uff1a\u200b\u91cd\u91cf\u200b221g\uff0c6.7\u200b\u82f1\u5bf8\u200b\u8d85\u200b\u89c6\u7f51\u819c\u200bXDR\u200b\u663e\u793a\u5c4f\u200b\n\u200b\u5e93\u5b58\u200b\u5145\u8db3\u200b\uff0c\u200b\u6b21\u65e5\u200b\u8fbe\u200b\n\"\"\"\n\nproduct_info = parser.parse_product_description(product_desc)\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#_9","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"llmapps/langchain/core-components/structured-output/#1_3","title":"1. \u200b\u8bbe\u8ba1\u200b\u6709\u6548\u200b\u7684\u200b\u6a21\u5f0f","text":"<pre><code># \u2705 \u200b\u597d\u200b\u7684\u200b\u6a21\u5f0f\u200b\u8bbe\u8ba1\u200b\nclass EffectiveSchema(BaseModel):\n    # \u200b\u660e\u786e\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u63cf\u8ff0\u200b\n    name: str = Field(description=\"\u200b\u7528\u6237\u200b\u59d3\u540d\u200b\")\n    # \u200b\u9002\u5f53\u200b\u7684\u200b\u7ea6\u675f\u200b\n    age: int = Field(description=\"\u200b\u5e74\u9f84\u200b\", ge=0, le=150)\n    # \u200b\u5408\u7406\u200b\u7684\u200b\u53ef\u200b\u9009\u5b57\u200b\u6bb5\u200b\n    email: Optional[str] = Field(description=\"\u200b\u90ae\u7bb1\u5730\u5740\u200b\")\n    # \u200b\u6e05\u6670\u200b\u7684\u200b\u679a\u4e3e\u200b\u503c\u200b\n    status: Literal[\"active\", \"inactive\", \"pending\"] = Field(description=\"\u200b\u72b6\u6001\u200b\")\n\n# \u274c \u200b\u907f\u514d\u200b\u7684\u200b\u6a21\u5f0f\u200b\u8bbe\u8ba1\u200b\nclass PoorSchema(BaseModel):\n    # \u200b\u63cf\u8ff0\u200b\u4e0d\u200b\u6e05\u6670\u200b\n    field1: str\n    # \u200b\u7ea6\u675f\u200b\u4e0d\u200b\u660e\u786e\u200b\n    field2: int\n    # \u200b\u8fc7\u4e8e\u200b\u590d\u6742\u200b\u7684\u200b\u5d4c\u5957\u200b\n    data: Dict[str, Any]\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#2_3","title":"2. \u200b\u9519\u8bef\u5904\u7406\u200b\u7b56\u7565","text":"<pre><code># \u200b\u6839\u636e\u200b\u4f7f\u7528\u200b\u573a\u666f\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u9519\u8bef\u5904\u7406\u200b\ndef create_robust_agent(schema):\n    return create_agent(\n        model=\"openai:gpt-4o\",\n        tools=[],\n        response_format=ToolStrategy(\n            schema=schema,\n            handle_errors=lambda e: f\"\u200b\u683c\u5f0f\u200b\u9519\u8bef\u200b\uff0c\u200b\u8bf7\u200b\u91cd\u65b0\u200b\u8f93\u5165\u200b\uff1a{str(e)}\"\n        ),\n        system_prompt=\"\u200b\u8bf7\u200b\u4e25\u683c\u200b\u6309\u7167\u200b\u8981\u6c42\u200b\u7684\u200b\u683c\u5f0f\u200b\u8f93\u51fa\u200b\u6570\u636e\u200b\u3002\"\n    )\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#3_4","title":"3. \u200b\u6027\u80fd\u200b\u4f18\u5316","text":"<pre><code># \u200b\u91cd\u7528\u200b Agent \u200b\u5b9e\u4f8b\u200b\nclass StructuredOutputService:\n    def __init__(self):\n        self._agents = {}\n\n    def get_agent(self, schema):\n        schema_key = str(schema)\n        if schema_key not in self._agents:\n            self._agents[schema_key] = create_agent(\n                model=\"openai:gpt-4o\",\n                tools=[],\n                response_format=schema\n            )\n        return self._agents[schema_key]\n</code></pre>"},{"location":"llmapps/langchain/core-components/structured-output/#_10","title":"\u6545\u969c\u200b\u6392\u9664","text":""},{"location":"llmapps/langchain/core-components/structured-output/#_11","title":"\u5e38\u89c1\u95ee\u9898\u200b\u53ca\u200b\u89e3\u51b3\u65b9\u6848","text":"<ol> <li> <p>\u200b\u6a21\u578b\u200b\u4e0d\u200b\u8fd4\u56de\u200b\u7ed3\u6784\u5316\u200b\u6570\u636e\u200b</p> <ul> <li>\u200b\u68c0\u67e5\u200b\u6a21\u578b\u200b\u662f\u5426\u200b\u652f\u6301\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b</li> <li>\u200b\u9a8c\u8bc1\u200b\u6a21\u5f0f\u5b9a\u4e49\u200b\u662f\u5426\u200b\u6e05\u6670\u200b</li> <li>\u200b\u6dfb\u52a0\u200b\u66f4\u200b\u8be6\u7ec6\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u63cf\u8ff0\u200b</li> </ul> </li> <li> <p>\u200b\u9a8c\u8bc1\u200b\u9519\u8bef\u200b\u9891\u7e41\u200b</p> <ul> <li>\u200b\u7b80\u5316\u200b\u6a21\u5f0f\u200b\u7ed3\u6784\u200b</li> <li>\u200b\u653e\u5bbd\u200b\u5b57\u200b\u6bb5\u200b\u7ea6\u675f\u200b</li> <li>\u200b\u63d0\u4f9b\u200b\u66f4\u200b\u660e\u786e\u200b\u7684\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b</li> </ul> </li> <li> <p>\u200b\u6027\u80fd\u200b\u95ee\u9898\u200b</p> <ul> <li>\u200b\u91cd\u7528\u200b Agent \u200b\u5b9e\u4f8b\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u66f4\u200b\u7b80\u5355\u200b\u7684\u200b\u6a21\u5f0f\u200b</li> <li>\u200b\u8003\u8651\u200b\u4f7f\u7528\u200b ProviderStrategy\uff08\u200b\u5982\u679c\u200b\u53ef\u7528\u200b\uff09</li> </ul> </li> </ol>"},{"location":"llmapps/langchain/core-components/structured-output/#_12","title":"\u603b\u7ed3","text":"<p>LangChain \u200b\u7684\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\u529f\u80fd\u200b\u4e3a\u200b\u6784\u5efa\u200b\u53ef\u9760\u200b\u7684\u200b AI \u200b\u5e94\u7528\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u57fa\u7840\u200b\uff1a</p> <ul> <li>\u200b\u7075\u6d3b\u200b\u7684\u200b\u6a21\u5f0f\u5b9a\u4e49\u200b\uff1a\u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u6a21\u5f0f\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u667a\u80fd\u200b\u7684\u200b\u7b56\u7565\u200b\u9009\u62e9\u200b\uff1a\u200b\u81ea\u52a8\u200b\u9009\u62e9\u200b\u6700\u4f73\u200b\u5b9e\u73b0\u200b\u65b9\u5f0f\u200b</li> <li>\u200b\u5f3a\u5927\u200b\u7684\u200b\u9519\u8bef\u5904\u7406\u200b\uff1a\u200b\u5185\u7f6e\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u91cd\u8bd5\u200b\u673a\u5236\u200b</li> <li>\u200b\u751f\u4ea7\u200b\u7ea7\u200b\u53ef\u9760\u6027\u200b\uff1a\u200b\u9002\u5408\u200b\u4f01\u4e1a\u7ea7\u200b\u5e94\u7528\u200b</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u4f7f\u7528\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u51fa\u200b\u66f4\u52a0\u200b\u7a33\u5b9a\u200b\u3001\u200b\u53ef\u200b\u7ef4\u62a4\u200b\u7684\u200b AI \u200b\u5e94\u7528\u200b\u7cfb\u7edf\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/tools/","title":"LangChain Tools","text":""},{"location":"llmapps/langchain/core-components/tools/#_1","title":"\u6982\u8ff0","text":"<p>Tools\uff08\u200b\u5de5\u5177\u200b\uff09\u200b\u662f\u200b AI Agent \u200b\u8c03\u7528\u200b\u4ee5\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u3002\u200b\u5b83\u4eec\u200b\u901a\u8fc7\u200b\u5b9a\u4e49\u200b\u826f\u597d\u200b\u7684\u200b\u8f93\u5165\u200b\u548c\u200b\u8f93\u51fa\u200b\u6765\u200b\u6269\u5c55\u200b\u6a21\u578b\u200b\u80fd\u529b\u200b\uff0c\u200b\u4f7f\u200b\u6a21\u578b\u200b\u80fd\u591f\u200b\u4e0e\u200b\u5916\u90e8\u200b\u7cfb\u7edf\u200b\uff08\u200b\u5982\u200b API\u3001\u200b\u6570\u636e\u5e93\u200b\u3001\u200b\u6587\u4ef6\u7cfb\u7edf\u200b\uff09\u200b\u8fdb\u884c\u200b\u4ea4\u4e92\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/tools/#_2","title":"\u6838\u5fc3\u200b\u6982\u5ff5","text":"<ul> <li>\u200b\u7ed3\u6784\u5316\u200b\u4ea4\u4e92\u200b\uff1aTools \u200b\u63d0\u4f9b\u200b\u6a21\u578b\u200b\u4e0e\u200b\u5916\u90e8\u200b\u7cfb\u7edf\u200b\u7684\u200b\u7ed3\u6784\u5316\u200b\u63a5\u53e3\u200b</li> <li>\u200b\u5c01\u88c5\u200b\u6027\u200b\uff1a\u200b\u5c01\u88c5\u200b\u53ef\u200b\u8c03\u7528\u51fd\u6570\u200b\u53ca\u5176\u200b\u8f93\u5165\u200b\u6a21\u5f0f\u200b</li> <li>\u200b\u667a\u80fd\u200b\u8c03\u7528\u200b\uff1a\u200b\u6a21\u578b\u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\u4ee5\u53ca\u200b\u4f7f\u7528\u200b\u4ec0\u4e48\u200b\u53c2\u6570\u200b</li> </ul>"},{"location":"llmapps/langchain/core-components/tools/#_3","title":"\u521b\u5efa\u200b\u5de5\u5177","text":""},{"location":"llmapps/langchain/core-components/tools/#1","title":"1. \u200b\u57fa\u7840\u200b\u5de5\u5177\u200b\u5b9a\u4e49","text":"<p>\u200b\u4f7f\u7528\u200b <code>@tool</code> \u200b\u88c5\u9970\u200b\u5668\u200b\u521b\u5efa\u200b\u5de5\u5177\u200b\uff0c\u200b\u51fd\u6570\u200b\u6587\u6863\u200b\u5b57\u7b26\u4e32\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u6210\u4e3a\u200b\u5de5\u5177\u200b\u63cf\u8ff0\u200b\uff1a</p> <pre><code>from langchain.tools import tool\n\n@tool\ndef search_database(query: str, limit: int = 10) -&gt; str:\n    \"\"\"\u200b\u5728\u200b\u5ba2\u6237\u200b\u6570\u636e\u5e93\u200b\u4e2d\u200b\u641c\u7d22\u200b\u5339\u914d\u200b\u67e5\u8be2\u200b\u7684\u200b\u8bb0\u5f55\u200b\u3002\n\n    Args:\n        query: \u200b\u8981\u200b\u67e5\u627e\u200b\u7684\u200b\u641c\u7d22\u8bcd\u200b\n        limit: \u200b\u8fd4\u56de\u200b\u7684\u200b\u6700\u5927\u200b\u7ed3\u679c\u200b\u6570\u200b\n    \"\"\"\n    # \u200b\u6a21\u62df\u200b\u6570\u636e\u5e93\u200b\u641c\u7d22\u200b\n    return f\"\u200b\u627e\u5230\u200b {limit} \u200b\u6761\u200b\u5173\u4e8e\u200b '{query}' \u200b\u7684\u200b\u7ed3\u679c\u200b\"\n\n# \u200b\u4f7f\u7528\u200b\u5de5\u5177\u200b\nresult = search_database.invoke({\"query\": \"\u200b\u5ba2\u6237\u200b\u6295\u8bc9\u200b\", \"limit\": 5})\nprint(result)\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#2","title":"2. \u200b\u81ea\u5b9a\u4e49\u200b\u5de5\u5177\u200b\u5c5e\u6027","text":""},{"location":"llmapps/langchain/core-components/tools/#_4","title":"\u81ea\u5b9a\u4e49\u200b\u5de5\u5177\u200b\u540d\u79f0","text":"<pre><code>@tool(\"web_search\")  # \u200b\u81ea\u5b9a\u4e49\u200b\u540d\u79f0\u200b\ndef search_web(query: str) -&gt; str:\n    \"\"\"\u200b\u5728\u200b\u7f51\u7edc\u200b\u4e0a\u200b\u641c\u7d22\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n    return f\"\u200b\u641c\u7d22\u200b '{query}' \u200b\u7684\u200b\u7ed3\u679c\u200b\"\n\nprint(search_web.name)  # \u200b\u8f93\u51fa\u200b: web_search\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#_5","title":"\u81ea\u5b9a\u4e49\u200b\u5de5\u5177\u200b\u63cf\u8ff0","text":"<pre><code>@tool(\"calculator\", description=\"\u200b\u6267\u884c\u200b\u7b97\u672f\u200b\u8ba1\u7b97\u200b\u3002\u200b\u7528\u4e8e\u200b\u4efb\u4f55\u200b\u6570\u5b66\u200b\u95ee\u9898\u200b\u3002\")\ndef calculate(expression: str) -&gt; str:\n    \"\"\"\u200b\u8bc4\u4f30\u200b\u6570\u5b66\u200b\u8868\u8fbe\u5f0f\u200b\u3002\"\"\"\n    return str(eval(expression))\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#3","title":"3. \u200b\u9ad8\u7ea7\u200b\u6a21\u5f0f\u5b9a\u4e49","text":""},{"location":"llmapps/langchain/core-components/tools/#pydantic","title":"\u4f7f\u7528\u200b Pydantic \u200b\u6a21\u578b\u200b\u5b9a\u4e49\u200b\u590d\u6742\u200b\u8f93\u5165","text":"<pre><code>from pydantic import BaseModel, Field\nfrom typing import Literal, List\n\nclass WeatherInput(BaseModel):\n    \"\"\"\u200b\u5929\u6c14\u200b\u67e5\u8be2\u200b\u7684\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\u3002\"\"\"\n    location: str = Field(description=\"\u200b\u57ce\u5e02\u200b\u540d\u79f0\u200b\u6216\u200b\u5750\u6807\u200b\")\n    units: Literal[\"celsius\", \"fahrenheit\"] = Field(\n        default=\"celsius\",\n        description=\"\u200b\u6e29\u5ea6\u200b\u5355\u4f4d\u200b\u504f\u597d\u200b\"\n    )\n    include_forecast: bool = Field(\n        default=False,\n        description=\"\u200b\u5305\u542b\u200b5\u200b\u5929\u200b\u9884\u62a5\u200b\"\n    )\n    forecast_days: int = Field(\n        default=5,\n        ge=1,\n        le=10,\n        description=\"\u200b\u9884\u62a5\u200b\u5929\u6570\u200b\uff081-10\uff09\"\n    )\n\n@tool(args_schema=WeatherInput)\ndef get_weather(\n    location: str, \n    units: str = \"celsius\", \n    include_forecast: bool = False,\n    forecast_days: int = 5\n) -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b\u5929\u6c14\u200b\u548c\u200b\u53ef\u9009\u200b\u9884\u62a5\u200b\u3002\"\"\"\n    temp = 22 if units == \"celsius\" else 72\n    result = f\"{location}\u200b\u5f53\u524d\u200b\u5929\u6c14\u200b: {temp}\u200b\u5ea6\u200b {units}\"\n\n    if include_forecast:\n        result += f\"\\n\u200b\u672a\u6765\u200b{forecast_days}\u200b\u5929\u200b\u9884\u62a5\u200b: \u200b\u6674\u6717\u200b\"\n\n    return result\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#json-schema","title":"\u4f7f\u7528\u200b JSON Schema \u200b\u5b9a\u4e49","text":"<pre><code>weather_schema = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"location\": {\"type\": \"string\"},\n        \"units\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\n        \"include_forecast\": {\"type\": \"boolean\"},\n        \"forecast_days\": {\"type\": \"integer\", \"minimum\": 1, \"maximum\": 10}\n    },\n    \"required\": [\"location\"]\n}\n\n@tool(args_schema=weather_schema)\ndef get_weather_json(\n    location: str, \n    units: str = \"celsius\", \n    include_forecast: bool = False,\n    forecast_days: int = 5\n) -&gt; str:\n    \"\"\"\u200b\u4f7f\u7528\u200b JSON Schema \u200b\u5b9a\u4e49\u200b\u83b7\u53d6\u200b\u5929\u6c14\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n    temp = 22 if units == \"celsius\" else 72\n    result = f\"{location}\u200b\u5f53\u524d\u200b\u5929\u6c14\u200b: {temp}\u200b\u5ea6\u200b {units}\"\n\n    if include_forecast:\n        result += f\"\\n\u200b\u672a\u6765\u200b{forecast_days}\u200b\u5929\u200b\u9884\u62a5\u200b: \u200b\u6674\u6717\u200b\"\n\n    return result\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#_6","title":"\u8bbf\u95ee\u200b\u4e0a\u4e0b\u6587","text":"<p>Tools \u200b\u6700\u200b\u5f3a\u5927\u200b\u7684\u200b\u529f\u80fd\u200b\u662f\u200b\u80fd\u591f\u200b\u8bbf\u95ee\u200b Agent \u200b\u72b6\u6001\u200b\u3001\u200b\u8fd0\u884c\u200b\u65f6\u200b\u4e0a\u4e0b\u6587\u200b\u548c\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\uff0c\u200b\u4ece\u800c\u200b\u5b9e\u73b0\u200b\u4e0a\u4e0b\u6587\u200b\u611f\u77e5\u200b\u51b3\u7b56\u200b\u548c\u200b\u4e2a\u6027\u5316\u200b\u54cd\u5e94\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/tools/#toolruntime","title":"ToolRuntime \u200b\u6982\u8ff0","text":"<p><code>ToolRuntime</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7edf\u4e00\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u5de5\u5177\u200b\u8bbf\u95ee\u200b\u4ee5\u4e0b\u200b\u4fe1\u606f\u200b\u7684\u200b\u80fd\u529b\u200b\uff1a</p> <ul> <li>State\uff1a\u200b\u6267\u884c\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u53ef\u53d8\u200b\u6570\u636e\u200b\uff08\u200b\u6d88\u606f\u200b\u3001\u200b\u8ba1\u6570\u5668\u200b\u3001\u200b\u81ea\u5b9a\u4e49\u200b\u5b57\u200b\u6bb5\u200b\uff09</li> <li>Context\uff1a\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u914d\u7f6e\u200b\uff08\u200b\u7528\u6237\u200b ID\u3001\u200b\u4f1a\u8bdd\u200b\u8be6\u60c5\u200b\u3001\u200b\u5e94\u7528\u200b\u7279\u5b9a\u200b\u914d\u7f6e\u200b\uff09</li> <li>Store\uff1a\u200b\u8de8\u200b\u5bf9\u8bdd\u200b\u7684\u200b\u6301\u4e45\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b</li> <li>Stream Writer\uff1a\u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u65f6\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u81ea\u5b9a\u4e49\u200b\u66f4\u65b0\u200b</li> <li>Config\uff1a\u200b\u6267\u884c\u200b\u7684\u200b RunnableConfig</li> <li>Tool Call ID\uff1a\u200b\u5f53\u524d\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u7684\u200b ID</li> </ul>"},{"location":"llmapps/langchain/core-components/tools/#state","title":"\u8bbf\u95ee\u200b\u72b6\u6001\u200b\uff08State\uff09","text":"<pre><code>from langchain.tools import tool, ToolRuntime\n\n@tool\ndef analyze_conversation(runtime: ToolRuntime) -&gt; str:\n    \"\"\"\u200b\u5206\u6790\u200b\u5f53\u524d\u200b\u5bf9\u8bdd\u200b\u72b6\u6001\u200b\u3002\"\"\"\n    messages = runtime.state[\"messages\"]\n\n    # \u200b\u7edf\u8ba1\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u6d88\u606f\u200b\n    human_count = sum(1 for m in messages if m.type == \"human\")\n    ai_count = sum(1 for m in messages if m.type == \"ai\")\n    tool_count = sum(1 for m in messages if m.type == \"tool\")\n\n    return f\"\u200b\u5bf9\u8bdd\u200b\u7edf\u8ba1\u200b: {human_count}\u200b\u6761\u200b\u7528\u6237\u200b\u6d88\u606f\u200b, {ai_count}\u200b\u6761\u200bAI\u200b\u56de\u590d\u200b, {tool_count}\u200b\u6761\u200b\u5de5\u5177\u200b\u7ed3\u679c\u200b\"\n\n@tool\ndef get_user_preference(pref_name: str, runtime: ToolRuntime) -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u7528\u6237\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b\u3002\"\"\"\n    preferences = runtime.state.get(\"user_preferences\", {})\n    return preferences.get(pref_name, \"\u200b\u672a\u200b\u8bbe\u7f6e\u200b\")\n</code></pre> <p>\u200b\u91cd\u8981\u200b\u63d0\u793a\u200b\uff1a<code>runtime</code> \u200b\u53c2\u6570\u200b\u5bf9\u6a21\u578b\u200b\u4e0d\u200b\u53ef\u89c1\u200b\uff0c\u200b\u6a21\u578b\u200b\u53ea\u80fd\u200b\u770b\u5230\u200b\u5176\u4ed6\u200b\u53c2\u6570\u200b\u3002</p>"},{"location":"llmapps/langchain/core-components/tools/#command","title":"\u66f4\u65b0\u200b\u72b6\u6001\u200b\uff08\u200b\u4f7f\u7528\u200b Command\uff09","text":"<pre><code>from langgraph.types import Command\nfrom langchain.messages import RemoveMessage\nfrom langgraph.graph.message import REMOVE_ALL_MESSAGES\n\n@tool\ndef clear_conversation(runtime: ToolRuntime) -&gt; Command:\n    \"\"\"\u200b\u6e05\u9664\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\u3002\"\"\"\n    return Command(\n        update={\n            \"messages\": [RemoveMessage(id=REMOVE_ALL_MESSAGES)],\n        }\n    )\n\n@tool\ndef update_user_profile(name: str, age: int, runtime: ToolRuntime) -&gt; Command:\n    \"\"\"\u200b\u66f4\u65b0\u200b\u7528\u6237\u200b\u6863\u6848\u200b\u3002\"\"\"\n    return Command(\n        update={\n            \"user_profile\": {\n                \"name\": name,\n                \"age\": age,\n                \"updated_at\": \"2024-01-01\"\n            }\n        }\n    )\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#context","title":"\u8bbf\u95ee\u200b\u4e0a\u4e0b\u6587\u200b\uff08Context\uff09","text":"<pre><code>from dataclasses import dataclass\nfrom langchain.agents import create_agent\nfrom langchain.tools import tool, ToolRuntime\n\n# \u200b\u6a21\u62df\u200b\u7528\u6237\u200b\u6570\u636e\u5e93\u200b\nUSER_DATABASE = {\n    \"user123\": {\n        \"name\": \"\u200b\u5f20\u4e09\u200b\",\n        \"account_type\": \"\u200b\u9ad8\u7ea7\u200b\u4f1a\u5458\u200b\",\n        \"balance\": 5000,\n        \"email\": \"zhangsan@example.com\"\n    },\n    \"user456\": {\n        \"name\": \"\u200b\u674e\u56db\u200b\",\n        \"account_type\": \"\u200b\u6807\u51c6\u200b\u4f1a\u5458\u200b\",\n        \"balance\": 1200,\n        \"email\": \"lisi@example.com\"\n    }\n}\n\n@dataclass\nclass UserContext:\n    user_id: str\n\n@tool\ndef get_account_info(runtime: ToolRuntime[UserContext]) -&gt; str:\n    \"\"\"\u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b\u7528\u6237\u200b\u7684\u200b\u8d26\u6237\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n    user_id = runtime.context.user_id\n\n    if user_id in USER_DATABASE:\n        user = USER_DATABASE[user_id]\n        return f\"\"\"\n        \u200b\u8d26\u6237\u200b\u4fe1\u606f\u200b:\n        - \u200b\u59d3\u540d\u200b: {user['name']}\n        - \u200b\u8d26\u6237\u200b\u7c7b\u578b\u200b: {user['account_type']}\n        - \u200b\u4f59\u989d\u200b: \u00a5{user['balance']}\n        - \u200b\u90ae\u7bb1\u200b: {user['email']}\n        \"\"\"\n    return \"\u200b\u7528\u6237\u200b\u672a\u627e\u5230\u200b\"\n\n@tool\ndef transfer_funds(amount: float, to_user: str, runtime: ToolRuntime[UserContext]) -&gt; str:\n    \"\"\"\u200b\u8f6c\u8d26\u200b\u5230\u200b\u5176\u4ed6\u200b\u7528\u6237\u200b\u3002\"\"\"\n    from_user_id = runtime.context.user_id\n\n    if from_user_id not in USER_DATABASE or to_user not in USER_DATABASE:\n        return \"\u200b\u7528\u6237\u200b\u4e0d\u200b\u5b58\u5728\u200b\"\n\n    from_user = USER_DATABASE[from_user_id]\n    to_user_info = USER_DATABASE[to_user]\n\n    if from_user[\"balance\"] &lt; amount:\n        return \"\u200b\u4f59\u989d\u200b\u4e0d\u8db3\u200b\"\n\n    # \u200b\u6a21\u62df\u200b\u8f6c\u8d26\u200b\u64cd\u4f5c\u200b\n    from_user[\"balance\"] -= amount\n    to_user_info[\"balance\"] += amount\n\n    return f\"\u200b\u6210\u529f\u200b\u8f6c\u8d26\u200b \u00a5{amount} \u200b\u7ed9\u200b {to_user_info['name']}\"\n\n# \u200b\u521b\u5efa\u200b\u4f7f\u7528\u200b\u4e0a\u4e0b\u6587\u200b\u7684\u200b Agent\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[get_account_info, transfer_funds],\n    context_schema=UserContext,\n    system_prompt=\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u91d1\u878d\u200b\u52a9\u624b\u200b\u3002\"\n)\n\n# \u200b\u4f7f\u7528\u200b\u4e0a\u4e0b\u6587\u200b\u8c03\u7528\u200b\nresult = agent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"\u200b\u67e5\u770b\u200b\u6211\u200b\u7684\u200b\u8d26\u6237\u200b\u4f59\u989d\u200b\"}]},\n    context=UserContext(user_id=\"user123\")\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#store-","title":"\u8bbf\u95ee\u200b\u5b58\u50a8\u200b\uff08Store\uff09- \u200b\u957f\u671f\u200b\u8bb0\u5fc6","text":"<pre><code>from typing import Any\nfrom langgraph.store.memory import InMemoryStore\nfrom langchain.agents import create_agent\nfrom langchain.tools import tool, ToolRuntime\n\n@tool\ndef save_user_preferences(user_id: str, preferences: dict, runtime: ToolRuntime) -&gt; str:\n    \"\"\"\u200b\u4fdd\u5b58\u200b\u7528\u6237\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b\u5230\u200b\u957f\u671f\u200b\u5b58\u50a8\u200b\u3002\"\"\"\n    store = runtime.store\n    store.put((\"user_preferences\",), user_id, preferences)\n    return \"\u200b\u7528\u6237\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b\u5df2\u200b\u4fdd\u5b58\u200b\"\n\n@tool\ndef get_user_preferences(user_id: str, runtime: ToolRuntime) -&gt; str:\n    \"\"\"\u200b\u4ece\u200b\u957f\u671f\u200b\u5b58\u50a8\u200b\u83b7\u53d6\u200b\u7528\u6237\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b\u3002\"\"\"\n    store = runtime.store\n    preferences = store.get((\"user_preferences\",), user_id)\n\n    if preferences and preferences.value:\n        prefs = preferences.value\n        return f\"\u200b\u7528\u6237\u200b {user_id} \u200b\u7684\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b: {prefs}\"\n    else:\n        return f\"\u200b\u672a\u627e\u5230\u200b\u7528\u6237\u200b {user_id} \u200b\u7684\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b\"\n\n@tool\ndef save_conversation_summary(conversation_id: str, summary: str, runtime: ToolRuntime) -&gt; str:\n    \"\"\"\u200b\u4fdd\u5b58\u200b\u5bf9\u8bdd\u200b\u603b\u7ed3\u200b\u5230\u200b\u957f\u671f\u200b\u5b58\u50a8\u200b\u3002\"\"\"\n    store = runtime.store\n    store.put((\"conversations\",), conversation_id, {\n        \"summary\": summary,\n        \"timestamp\": \"2024-01-01T10:00:00\"\n    })\n    return \"\u200b\u5bf9\u8bdd\u200b\u603b\u7ed3\u200b\u5df2\u200b\u4fdd\u5b58\u200b\"\n\n# \u200b\u521b\u5efa\u200b\u4f7f\u7528\u200b\u5b58\u50a8\u200b\u7684\u200b Agent\nstore = InMemoryStore()\nagent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[save_user_preferences, get_user_preferences, save_conversation_summary],\n    store=store\n)\n\n# \u200b\u7b2c\u4e00\u6b21\u200b\u4f1a\u8bdd\u200b\uff1a\u200b\u4fdd\u5b58\u200b\u7528\u6237\u200b\u504f\u597d\u200b\nagent.invoke({\n    \"messages\": [{\n        \"role\": \"user\", \n        \"content\": \"\u200b\u4fdd\u5b58\u200b\u7528\u6237\u200b123\u200b\u7684\u200b\u504f\u597d\u200b\uff1a\u200b\u8bed\u8a00\u200b=\u200b\u4e2d\u6587\u200b\uff0c\u200b\u4e3b\u9898\u200b=\u200b\u6df1\u8272\u200b\uff0c\u200b\u901a\u77e5\u200b=\u200b\u5f00\u542f\u200b\"\n    }]\n})\n\n# \u200b\u540e\u7eed\u200b\u4f1a\u8bdd\u200b\uff1a\u200b\u83b7\u53d6\u200b\u7528\u6237\u200b\u504f\u597d\u200b\nagent.invoke({\n    \"messages\": [{\n        \"role\": \"user\", \n        \"content\": \"\u200b\u83b7\u53d6\u200b\u7528\u6237\u200b123\u200b\u7684\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b\"\n    }]\n})\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#stream-writer","title":"\u4f7f\u7528\u200b\u6d41\u200b\u5199\u5165\u200b\u5668\u200b\uff08Stream Writer\uff09","text":"<pre><code>from langchain.tools import tool, ToolRuntime\nimport time\n\n@tool\ndef process_large_data(data_source: str, runtime: ToolRuntime) -&gt; str:\n    \"\"\"\u200b\u5904\u7406\u200b\u5927\u578b\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u5de5\u5177\u200b\uff0c\u200b\u5e26\u200b\u8fdb\u5ea6\u200b\u53cd\u9988\u200b\u3002\"\"\"\n    writer = runtime.stream_writer\n\n    writer(f\"\ud83d\udd04 \u200b\u5f00\u59cb\u200b\u5904\u7406\u200b\u6570\u636e\u6e90\u200b: {data_source}\")\n    writer(\"\ud83d\udcca \u200b\u8fde\u63a5\u200b\u6570\u636e\u6e90\u200b...\")\n    time.sleep(0.5)\n\n    writer(\"\ud83d\udd0d \u200b\u8bfb\u53d6\u6570\u636e\u200b...\")\n    time.sleep(1)\n\n    # \u200b\u6a21\u62df\u200b\u5904\u7406\u200b\u6b65\u9aa4\u200b\n    steps = [\"\u200b\u6570\u636e\u200b\u6e05\u6d17\u200b\", \"\u200b\u7279\u5f81\u63d0\u53d6\u200b\", \"\u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\", \"\u200b\u7ed3\u679c\u200b\u5206\u6790\u200b\"]\n    for i, step in enumerate(steps, 1):\n        writer(f\"\u23f3 \u200b\u6b65\u9aa4\u200b {i}/{len(steps)}: {step}\")\n        time.sleep(0.8)\n\n    writer(\"\u2705 \u200b\u6570\u636e\u5904\u7406\u200b\u5b8c\u6210\u200b\")\n    return f\"\u200b\u6210\u529f\u200b\u5904\u7406\u200b {data_source}\uff0c\u200b\u751f\u6210\u200b\u5206\u6790\u200b\u62a5\u544a\u200b\"\n\n@tool\ndef search_with_progress(query: str, runtime: ToolRuntime) -&gt; str:\n    \"\"\"\u200b\u5e26\u200b\u8fdb\u5ea6\u200b\u53cd\u9988\u200b\u7684\u200b\u641c\u7d22\u200b\u5de5\u5177\u200b\u3002\"\"\"\n    writer = runtime.stream_writer\n\n    writer(f\"\ud83d\udd0d \u200b\u5f00\u59cb\u200b\u641c\u7d22\u200b: {query}\")\n    writer(\"\ud83c\udf10 \u200b\u8fde\u63a5\u200b\u641c\u7d22\u5f15\u64ce\u200b...\")\n    time.sleep(0.3)\n\n    writer(\"\ud83d\udce1 \u200b\u53d1\u9001\u200b\u641c\u7d22\u200b\u8bf7\u6c42\u200b...\")\n    time.sleep(0.5)\n\n    writer(\"\ud83d\udcc4 \u200b\u89e3\u6790\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b...\")\n    time.sleep(0.7)\n\n    writer(\"\u2705 \u200b\u641c\u7d22\u200b\u5b8c\u6210\u200b\")\n    return f\"\u200b\u627e\u5230\u200b\u5173\u4e8e\u200b '{query}' \u200b\u7684\u200b 15 \u200b\u4e2a\u200b\u76f8\u5173\u200b\u7ed3\u679c\u200b\"\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#_7","title":"\u5b9e\u9645\u200b\u5e94\u7528\u200b\u573a\u666f","text":""},{"location":"llmapps/langchain/core-components/tools/#1_1","title":"\u573a\u666f\u200b1\uff1a\u200b\u7535\u5546\u200b\u5ba2\u670d\u200b\u7cfb\u7edf","text":"<pre><code>from datetime import datetime\nfrom typing import Dict, List\nfrom langchain.tools import tool, ToolRuntime\n\nclass EcommerceTools:\n    \"\"\"\u200b\u7535\u5546\u200b\u5ba2\u670d\u200b\u5de5\u5177\u96c6\u200b\"\"\"\n\n    @staticmethod\n    @tool\n    def check_order_status(order_id: str, runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u68c0\u67e5\u200b\u8ba2\u5355\u200b\u72b6\u6001\u200b\u3002\"\"\"\n        # \u200b\u6a21\u62df\u200b\u8ba2\u5355\u200b\u6570\u636e\u5e93\u200b\n        orders = {\n            \"ORD001\": {\"status\": \"\u200b\u5df2\u200b\u53d1\u8d27\u200b\", \"tracking\": \"SF123456789\", \"items\": [\"\u200b\u5546\u54c1\u200bA\", \"\u200b\u5546\u54c1\u200bB\"]},\n            \"ORD002\": {\"status\": \"\u200b\u5904\u7406\u200b\u4e2d\u200b\", \"tracking\": None, \"items\": [\"\u200b\u5546\u54c1\u200bC\"]},\n            \"ORD003\": {\"status\": \"\u200b\u5df2\u200b\u9001\u8fbe\u200b\", \"tracking\": \"SF987654321\", \"items\": [\"\u200b\u5546\u54c1\u200bD\"]}\n        }\n\n        if order_id in orders:\n            order = orders[order_id]\n            result = f\"\u200b\u8ba2\u5355\u200b {order_id} \u200b\u72b6\u6001\u200b: {order['status']}\"\n            if order['tracking']:\n                result += f\"\\n\u200b\u7269\u6d41\u200b\u5355\u200b\u53f7\u200b: {order['tracking']}\"\n            result += f\"\\n\u200b\u5546\u54c1\u200b: {', '.join(order['items'])}\"\n            return result\n        else:\n            return f\"\u200b\u672a\u627e\u5230\u200b\u8ba2\u5355\u200b {order_id}\"\n\n    @staticmethod\n    @tool\n    def get_product_info(product_id: str, runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u83b7\u53d6\u200b\u5546\u54c1\u4fe1\u606f\u200b\u3002\"\"\"\n        products = {\n            \"P001\": {\"name\": \"\u200b\u667a\u80fd\u624b\u673a\u200b\", \"price\": 2999, \"stock\": 50, \"description\": \"\u200b\u6700\u65b0\u6b3e\u200b\u667a\u80fd\u624b\u673a\u200b\"},\n            \"P002\": {\"name\": \"\u200b\u7b14\u8bb0\u672c\u7535\u8111\u200b\", \"price\": 5999, \"stock\": 25, \"description\": \"\u200b\u9ad8\u6027\u80fd\u200b\u7b14\u8bb0\u672c\u7535\u8111\u200b\"},\n            \"P003\": {\"name\": \"\u200b\u65e0\u7ebf\u8033\u673a\u200b\", \"price\": 399, \"stock\": 100, \"description\": \"\u200b\u964d\u566a\u200b\u65e0\u7ebf\u8033\u673a\u200b\"}\n        }\n\n        if product_id in products:\n            product = products[product_id]\n            return f\"\"\"\n            {product['name']}\n            - \u200b\u4ef7\u683c\u200b: \u00a5{product['price']}\n            - \u200b\u5e93\u5b58\u200b: {product['stock']}\u200b\u4ef6\u200b\n            - \u200b\u63cf\u8ff0\u200b: {product['description']}\n            \"\"\"\n        else:\n            return f\"\u200b\u672a\u627e\u5230\u200b\u5546\u54c1\u200b {product_id}\"\n\n    @staticmethod\n    @tool\n    def process_return(request_id: str, reason: str, runtime: ToolRuntime) -&gt; Command:\n        \"\"\"\u200b\u5904\u7406\u200b\u9000\u8d27\u200b\u7533\u8bf7\u200b\u3002\"\"\"\n        from langgraph.types import Command\n\n        # \u200b\u6a21\u62df\u200b\u5904\u7406\u200b\u9000\u8d27\u200b\n        return_info = {\n            \"request_id\": request_id,\n            \"reason\": reason,\n            \"status\": \"\u200b\u5904\u7406\u200b\u4e2d\u200b\",\n            \"processed_at\": datetime.now().isoformat()\n        }\n\n        return Command(\n            update={\n                \"return_requests\": runtime.state.get(\"return_requests\", []) + [return_info]\n            }\n        )\n\n# \u200b\u521b\u5efa\u200b\u7535\u5546\u200b\u5ba2\u670d\u200b Agent\necommerce_agent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[\n        EcommerceTools.check_order_status,\n        EcommerceTools.get_product_info,\n        EcommerceTools.process_return\n    ],\n    system_prompt=\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e13\u4e1a\u200b\u7684\u200b\u7535\u5546\u200b\u5ba2\u670d\u200b\u52a9\u624b\u200b\u3002\"\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#2_1","title":"\u573a\u666f\u200b2\uff1a\u200b\u667a\u80fd\u200b\u6570\u636e\u5206\u6790\u200b\u5de5\u5177","text":"<pre><code>import pandas as pd\nimport numpy as np\nfrom io import StringIO\nfrom langchain.tools import tool, ToolRuntime\n\nclass DataAnalysisTools:\n    \"\"\"\u200b\u6570\u636e\u5206\u6790\u200b\u5de5\u5177\u96c6\u200b\"\"\"\n\n    @staticmethod\n    @tool\n    def load_csv_data(csv_content: str, runtime: ToolRuntime) -&gt; Command:\n        \"\"\"\u200b\u52a0\u8f7d\u200b CSV \u200b\u6570\u636e\u200b\u5230\u200b\u5206\u6790\u200b\u73af\u5883\u200b\u3002\"\"\"\n        from langgraph.types import Command\n\n        try:\n            # \u200b\u4ece\u200b CSV \u200b\u5b57\u7b26\u4e32\u200b\u521b\u5efa\u200b DataFrame\n            df = pd.read_csv(StringIO(csv_content))\n\n            # \u200b\u8fd4\u56de\u200b\u6570\u636e\u200b\u7edf\u8ba1\u200b\u4fe1\u606f\u200b\n            stats = {\n                \"rows\": len(df),\n                \"columns\": len(df.columns),\n                \"columns_list\": list(df.columns),\n                \"memory_usage\": df.memory_usage(deep=True).sum()\n            }\n\n            return Command(\n                update={\n                    \"current_dataset\": df.to_dict(),\n                    \"dataset_stats\": stats\n                }\n            )\n        except Exception as e:\n            return f\"\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\u5931\u8d25\u200b: {str(e)}\"\n\n    @staticmethod\n    @tool\n    def describe_dataset(runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u63cf\u8ff0\u200b\u5f53\u524d\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n        stats = runtime.state.get(\"dataset_stats\", {})\n\n        if not stats:\n            return \"\u200b\u6ca1\u6709\u200b\u52a0\u8f7d\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\"\n\n        return f\"\"\"\n        \u200b\u6570\u636e\u200b\u96c6\u200b\u4fe1\u606f\u200b:\n        - \u200b\u884c\u200b\u6570\u200b: {stats['rows']}\n        - \u200b\u5217\u6570\u200b: {stats['columns']}\n        - \u200b\u5217\u540d\u200b: {', '.join(stats['columns_list'])}\n        - \u200b\u5185\u5b58\u200b\u4f7f\u7528\u200b: {stats['memory_usage']} \u200b\u5b57\u8282\u200b\n        \"\"\"\n\n    @staticmethod\n    @tool\n    def calculate_statistics(column: str, runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u8ba1\u7b97\u200b\u6307\u5b9a\u200b\u5217\u200b\u7684\u200b\u7edf\u8ba1\u200b\u4fe1\u606f\u200b\u3002\"\"\"\n        dataset = runtime.state.get(\"current_dataset\", {})\n\n        if not dataset:\n            return \"\u200b\u6ca1\u6709\u200b\u52a0\u8f7d\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\"\n\n        try:\n            df = pd.DataFrame(dataset)\n\n            if column not in df.columns:\n                return f\"\u200b\u5217\u200b '{column}' \u200b\u4e0d\u200b\u5b58\u5728\u200b\"\n\n            series = df[column]\n            stats = {\n                \"count\": len(series),\n                \"mean\": series.mean(),\n                \"std\": series.std(),\n                \"min\": series.min(),\n                \"max\": series.max(),\n                \"null_count\": series.isnull().sum()\n            }\n\n            return f\"\"\"\n            {column} \u200b\u5217\u200b\u7edf\u8ba1\u200b\u4fe1\u606f\u200b:\n            - \u200b\u6570\u91cf\u200b: {stats['count']}\n            - \u200b\u5e73\u5747\u503c\u200b: {stats['mean']:.2f}\n            - \u200b\u6807\u51c6\u5dee\u200b: {stats['std']:.2f}\n            - \u200b\u6700\u5c0f\u503c\u200b: {stats['min']}\n            - \u200b\u6700\u5927\u503c\u200b: {stats['max']}\n            - \u200b\u7a7a\u503c\u200b\u6570\u91cf\u200b: {stats['null_count']}\n            \"\"\"\n        except Exception as e:\n            return f\"\u200b\u8ba1\u7b97\u200b\u7edf\u8ba1\u200b\u4fe1\u606f\u200b\u5931\u8d25\u200b: {str(e)}\"\n\n# \u200b\u521b\u5efa\u200b\u6570\u636e\u5206\u6790\u200b Agent\ndata_analysis_agent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[\n        DataAnalysisTools.load_csv_data,\n        DataAnalysisTools.describe_dataset,\n        DataAnalysisTools.calculate_statistics\n    ],\n    system_prompt=\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6570\u636e\u5206\u6790\u200b\u52a9\u624b\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u7528\u6237\u200b\u5206\u6790\u200b\u548c\u200b\u7406\u89e3\u200b\u6570\u636e\u200b\u3002\"\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#3_1","title":"\u573a\u666f\u200b3\uff1a\u200b\u9879\u76ee\u7ba1\u7406\u200b\u5de5\u5177","text":"<pre><code>from typing import List, Dict\nfrom datetime import datetime, timedelta\nfrom langchain.tools import tool, ToolRuntime\n\nclass ProjectManagementTools:\n    \"\"\"\u200b\u9879\u76ee\u7ba1\u7406\u200b\u5de5\u5177\u96c6\u200b\"\"\"\n\n    @staticmethod\n    @tool\n    def create_task(title: str, description: str, assignee: str, due_date: str, runtime: ToolRuntime) -&gt; Command:\n        \"\"\"\u200b\u521b\u5efa\u200b\u65b0\u200b\u4efb\u52a1\u200b\u3002\"\"\"\n        from langgraph.types import Command\n\n        task = {\n            \"id\": f\"TASK_{datetime.now().strftime('%Y%m%d_%H%M%S')}\",\n            \"title\": title,\n            \"description\": description,\n            \"assignee\": assignee,\n            \"due_date\": due_date,\n            \"status\": \"\u200b\u5f85\u200b\u5f00\u59cb\u200b\",\n            \"created_at\": datetime.now().isoformat()\n        }\n\n        return Command(\n            update={\n                \"project_tasks\": runtime.state.get(\"project_tasks\", []) + [task]\n            }\n        )\n\n    @staticmethod\n    @tool\n    def update_task_status(task_id: str, new_status: str, runtime: ToolRuntime) -&gt; Command:\n        \"\"\"\u200b\u66f4\u65b0\u200b\u4efb\u52a1\u200b\u72b6\u6001\u200b\u3002\"\"\"\n        from langgraph.types import Command\n\n        tasks = runtime.state.get(\"project_tasks\", [])\n        updated_tasks = []\n        task_found = False\n\n        for task in tasks:\n            if task[\"id\"] == task_id:\n                task[\"status\"] = new_status\n                task[\"updated_at\"] = datetime.now().isoformat()\n                task_found = True\n            updated_tasks.append(task)\n\n        if task_found:\n            return Command(update={\"project_tasks\": updated_tasks})\n        else:\n            return f\"\u200b\u672a\u627e\u5230\u200b\u4efb\u52a1\u200b {task_id}\"\n\n    @staticmethod\n    @tool\n    def get_project_progress(runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u83b7\u53d6\u200b\u9879\u76ee\u200b\u8fdb\u5ea6\u200b\u6982\u89c8\u200b\u3002\"\"\"\n        tasks = runtime.state.get(\"project_tasks\", [])\n\n        if not tasks:\n            return \"\u200b\u9879\u76ee\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u4efb\u52a1\u200b\"\n\n        status_count = {}\n        for task in tasks:\n            status = task[\"status\"]\n            status_count[status] = status_count.get(status, 0) + 1\n\n        total_tasks = len(tasks)\n        completed_tasks = status_count.get(\"\u200b\u5df2\u200b\u5b8c\u6210\u200b\", 0)\n        progress_percentage = (completed_tasks / total_tasks) * 100\n\n        return f\"\"\"\n        \u200b\u9879\u76ee\u200b\u8fdb\u5ea6\u200b\u6982\u89c8\u200b:\n        - \u200b\u603b\u4efb\u52a1\u200b\u6570\u200b: {total_tasks}\n        - \u200b\u5df2\u200b\u5b8c\u6210\u200b: {completed_tasks}\n        - \u200b\u8fdb\u884c\u200b\u4e2d\u200b: {status_count.get('\u200b\u8fdb\u884c\u200b\u4e2d\u200b', 0)}\n        - \u200b\u5f85\u200b\u5f00\u59cb\u200b: {status_count.get('\u200b\u5f85\u200b\u5f00\u59cb\u200b', 0)}\n        - \u200b\u603b\u4f53\u200b\u8fdb\u5ea6\u200b: {progress_percentage:.1f}%\n        \"\"\"\n\n    @staticmethod\n    @tool\n    def assign_task(task_id: str, new_assignee: str, runtime: ToolRuntime) -&gt; Command:\n        \"\"\"\u200b\u91cd\u65b0\u5206\u914d\u200b\u4efb\u52a1\u200b\u3002\"\"\"\n        from langgraph.types import Command\n\n        tasks = runtime.state.get(\"project_tasks\", [])\n        updated_tasks = []\n        task_found = False\n\n        for task in tasks:\n            if task[\"id\"] == task_id:\n                old_assignee = task[\"assignee\"]\n                task[\"assignee\"] = new_assignee\n                task[\"updated_at\"] = datetime.now().isoformat()\n                task_found = True\n            updated_tasks.append(task)\n\n        if task_found:\n            return Command(\n                update={\n                    \"project_tasks\": updated_tasks\n                }\n            )\n        else:\n            return f\"\u200b\u672a\u627e\u5230\u200b\u4efb\u52a1\u200b {task_id}\"\n\n# \u200b\u521b\u5efa\u200b\u9879\u76ee\u7ba1\u7406\u200b Agent\nproject_agent = create_agent(\n    model=\"openai:gpt-4o\",\n    tools=[\n        ProjectManagementTools.create_task,\n        ProjectManagementTools.update_task_status,\n        ProjectManagementTools.get_project_progress,\n        ProjectManagementTools.assign_task\n    ],\n    system_prompt=\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u9879\u76ee\u7ba1\u7406\u200b\u52a9\u624b\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u56e2\u961f\u200b\u7ba1\u7406\u200b\u4efb\u52a1\u200b\u548c\u200b\u8ddf\u8e2a\u200b\u8fdb\u5ea6\u200b\u3002\"\n)\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#_8","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"llmapps/langchain/core-components/tools/#1_2","title":"1. \u200b\u5de5\u5177\u200b\u8bbe\u8ba1\u200b\u539f\u5219","text":"<pre><code>from pydantic import BaseModel, Field\nfrom typing import Optional\n\nclass WellDesignedTool:\n    \"\"\"\u200b\u826f\u597d\u200b\u8bbe\u8ba1\u200b\u7684\u200b\u5de5\u5177\u200b\u793a\u4f8b\u200b\"\"\"\n\n    @staticmethod\n    @tool\n    def search_products(\n        query: str,\n        category: Optional[str] = None,\n        price_range: Optional[str] = None,\n        sort_by: str = \"relevance\",\n        runtime: ToolRuntime\n    ) -&gt; str:\n        \"\"\"\u200b\u641c\u7d22\u200b\u4ea7\u54c1\u200b\u4fe1\u606f\u200b\u3002\n\n        Args:\n            query: \u200b\u641c\u7d22\u200b\u5173\u952e\u8bcd\u200b\uff08\u200b\u5fc5\u9700\u200b\uff09\n            category: \u200b\u4ea7\u54c1\u7c7b\u522b\u200b\u7b5b\u9009\u200b\uff08\u200b\u53ef\u200b\u9009\u200b\uff09\n            price_range: \u200b\u4ef7\u683c\u200b\u8303\u56f4\u200b\u7b5b\u9009\u200b\uff0c\u200b\u5982\u200b \"100-500\"\uff08\u200b\u53ef\u200b\u9009\u200b\uff09\n            sort_by: \u200b\u6392\u5e8f\u200b\u65b9\u5f0f\u200b\uff1arelevance\uff08\u200b\u76f8\u5173\u5ea6\u200b\uff09\u3001price_asc\uff08\u200b\u4ef7\u683c\u200b\u5347\u5e8f\u200b\uff09\u3001price_desc\uff08\u200b\u4ef7\u683c\u200b\u964d\u5e8f\u200b\uff09\n        \"\"\"\n        # \u200b\u6e05\u6670\u200b\u7684\u200b\u53c2\u6570\u200b\u8bf4\u660e\u200b\n        # \u200b\u5408\u7406\u200b\u7684\u200b\u9ed8\u8ba4\u503c\u200b\n        # \u200b\u5b8c\u6574\u200b\u7684\u200b\u9519\u8bef\u5904\u7406\u200b\n\n        writer = runtime.stream_writer\n        writer(f\"\ud83d\udd0d \u200b\u641c\u7d22\u200b\u4ea7\u54c1\u200b: {query}\")\n\n        if category:\n            writer(f\"\ud83d\udcc1 \u200b\u7b5b\u9009\u200b\u7c7b\u522b\u200b: {category}\")\n        if price_range:\n            writer(f\"\ud83d\udcb0 \u200b\u4ef7\u683c\u200b\u8303\u56f4\u200b: {price_range}\")\n\n        # \u200b\u6a21\u62df\u200b\u641c\u7d22\u200b\u903b\u8f91\u200b\n        writer(\"\ud83d\udcca \u200b\u83b7\u53d6\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b...\")\n\n        return f\"\u200b\u627e\u5230\u200b 15 \u200b\u4e2a\u200b\u5339\u914d\u200b '{query}' \u200b\u7684\u200b\u4ea7\u54c1\u200b\"\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#2_2","title":"2. \u200b\u9519\u8bef\u5904\u7406","text":"<pre><code>from langchain.tools import tool, ToolRuntime\n\nclass RobustTools:\n    \"\"\"\u200b\u5065\u58ee\u200b\u7684\u200b\u5de5\u5177\u200b\u8bbe\u8ba1\u200b\"\"\"\n\n    @staticmethod\n    @tool\n    def safe_api_call(api_endpoint: str, params: dict, runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u5b89\u5168\u200b\u7684\u200b API \u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\u3002\"\"\"\n        import requests\n        import time\n\n        writer = runtime.stream_writer\n        writer(f\"\ud83c\udf10 \u200b\u8c03\u7528\u200b API: {api_endpoint}\")\n\n        max_retries = 3\n        for attempt in range(max_retries):\n            try:\n                response = requests.get(api_endpoint, params=params, timeout=10)\n                response.raise_for_status()\n                return f\"API \u200b\u8c03\u7528\u200b\u6210\u529f\u200b: {response.json()}\"\n\n            except requests.exceptions.Timeout:\n                writer(f\"\u23f0 \u200b\u8bf7\u6c42\u200b\u8d85\u65f6\u200b (\u200b\u5c1d\u8bd5\u200b {attempt + 1}/{max_retries})\")\n                if attempt == max_retries - 1:\n                    return \"\u200b\u9519\u8bef\u200b: API \u200b\u8bf7\u6c42\u200b\u8d85\u65f6\u200b\"\n                time.sleep(1)\n\n            except requests.exceptions.RequestException as e:\n                return f\"API \u200b\u8c03\u7528\u200b\u9519\u8bef\u200b: {str(e)}\"\n\n    @staticmethod\n    @tool\n    def validate_and_process_data(data: str, runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u9a8c\u8bc1\u200b\u548c\u200b\u5904\u7406\u200b\u6570\u636e\u200b\u3002\"\"\"\n        writer = runtime.stream_writer\n\n        # \u200b\u6570\u636e\u200b\u9a8c\u8bc1\u200b\n        if not data or not data.strip():\n            return \"\u200b\u9519\u8bef\u200b: \u200b\u6570\u636e\u200b\u4e0d\u80fd\u200b\u4e3a\u7a7a\u200b\"\n\n        writer(\"\u2705 \u200b\u6570\u636e\u200b\u9a8c\u8bc1\u200b\u901a\u8fc7\u200b\")\n        writer(\"\ud83d\udd04 \u200b\u5904\u7406\u200b\u6570\u636e\u200b...\")\n\n        try:\n            # \u200b\u6a21\u62df\u200b\u6570\u636e\u5904\u7406\u200b\n            processed = data.upper()\n            return f\"\u200b\u5904\u7406\u200b\u540e\u200b\u7684\u200b\u6570\u636e\u200b: {processed}\"\n        except Exception as e:\n            return f\"\u200b\u6570\u636e\u5904\u7406\u200b\u9519\u8bef\u200b: {str(e)}\"\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#3_2","title":"3. \u200b\u6027\u80fd\u200b\u4f18\u5316","text":"<pre><code>from langchain.tools import tool, ToolRuntime\nimport functools\n\nclass OptimizedTools:\n    \"\"\"\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\u7684\u200b\u5de5\u5177\u200b\"\"\"\n\n    # \u200b\u4f7f\u7528\u200b\u7f13\u5b58\u200b\u907f\u514d\u200b\u91cd\u590d\u200b\u8ba1\u7b97\u200b\n    @functools.lru_cache(maxsize=100)\n    def _expensive_calculation(self, input_data: str) -&gt; str:\n        \"\"\"\u200b\u6a21\u62df\u200b\u6602\u8d35\u200b\u7684\u200b\u8ba1\u7b97\u200b\u3002\"\"\"\n        # \u200b\u6a21\u62df\u200b\u590d\u6742\u200b\u8ba1\u7b97\u200b\n        return f\"\u200b\u8ba1\u7b97\u7ed3\u679c\u200b: {input_data.upper()}\"\n\n    @tool\n    def cached_calculation(self, input_data: str, runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u4f7f\u7528\u200b\u7f13\u5b58\u200b\u7684\u200b\u6602\u8d35\u200b\u8ba1\u7b97\u200b\u3002\"\"\"\n        writer = runtime.stream_writer\n        writer(\"\u26a1 \u200b\u4f7f\u7528\u200b\u7f13\u5b58\u200b\u8ba1\u7b97\u200b...\")\n\n        return self._expensive_calculation(input_data)\n\n    @tool\n    def batch_processing(self, items: list, runtime: ToolRuntime) -&gt; str:\n        \"\"\"\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\u5de5\u5177\u200b\u3002\"\"\"\n        writer = runtime.stream_writer\n\n        writer(f\"\ud83d\udce6 \u200b\u5f00\u59cb\u200b\u6279\u91cf\u200b\u5904\u7406\u200b {len(items)} \u200b\u4e2a\u200b\u9879\u76ee\u200b\")\n\n        results = []\n        batch_size = 5\n\n        for i in range(0, len(items), batch_size):\n            batch = items[i:i + batch_size]\n            writer(f\"\u200b\u5904\u7406\u200b\u6279\u6b21\u200b {i//batch_size + 1}/{(len(items)-1)//batch_size + 1}\")\n\n            # \u200b\u6a21\u62df\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\n            batch_results = [f\"\u200b\u5904\u7406\u200b: {item}\" for item in batch]\n            results.extend(batch_results)\n\n        writer(\"\u2705 \u200b\u6279\u91cf\u200b\u5904\u7406\u200b\u5b8c\u6210\u200b\")\n        return f\"\u200b\u6210\u529f\u200b\u5904\u7406\u200b {len(results)} \u200b\u4e2a\u200b\u9879\u76ee\u200b\"\n</code></pre>"},{"location":"llmapps/langchain/core-components/tools/#_9","title":"\u603b\u7ed3","text":"<p>LangChain Tools \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u7684\u200b\u80fd\u529b\u200b\u6765\u200b\u6269\u5c55\u200b AI Agent \u200b\u7684\u200b\u529f\u80fd\u200b\uff1a</p> <ul> <li>\u200b\u7b80\u5355\u200b\u521b\u5efa\u200b\uff1a\u200b\u4f7f\u7528\u200b <code>@tool</code> \u200b\u88c5\u9970\u200b\u5668\u200b\u5feb\u901f\u200b\u5b9a\u4e49\u200b\u5de5\u5177\u200b</li> <li>\u200b\u7075\u6d3b\u200b\u5b9a\u5236\u200b\uff1a\u200b\u652f\u6301\u200b\u81ea\u5b9a\u4e49\u200b\u540d\u79f0\u200b\u3001\u200b\u63cf\u8ff0\u200b\u548c\u200b\u590d\u6742\u200b\u8f93\u5165\u200b\u6a21\u5f0f\u200b</li> <li>\u200b\u4e0a\u4e0b\u6587\u200b\u611f\u77e5\u200b\uff1a\u200b\u901a\u8fc7\u200b <code>ToolRuntime</code> \u200b\u8bbf\u95ee\u200b\u72b6\u6001\u200b\u3001\u200b\u4e0a\u4e0b\u6587\u200b\u3001\u200b\u5b58\u50a8\u200b\u7b49\u200b</li> <li>\u200b\u5b9e\u65f6\u200b\u53cd\u9988\u200b\uff1a\u200b\u4f7f\u7528\u200b\u6d41\u200b\u5199\u5165\u200b\u5668\u200b\u63d0\u4f9b\u200b\u6267\u884c\u200b\u8fdb\u5ea6\u200b</li> <li>\u200b\u751f\u4ea7\u200b\u5c31\u7eea\u200b\uff1a\u200b\u5305\u542b\u200b\u9519\u8bef\u5904\u7406\u200b\u3001\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\u7b49\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u8bbe\u8ba1\u200b\u548c\u200b\u4f7f\u7528\u200b Tools\uff0c\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u51fa\u200b\u80fd\u591f\u200b\u4e0e\u200b\u5404\u79cd\u200b\u5916\u90e8\u200b\u7cfb\u7edf\u200b\u4ea4\u4e92\u200b\u7684\u200b\u667a\u80fd\u200b Agent\uff0c\u200b\u5b9e\u73b0\u200b\u771f\u6b63\u200b\u7684\u200b\u81ea\u52a8\u5316\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u3002</p>"},{"location":"llmapps/langgraph/Local%20server/","title":"LangGraph \u200b\u672c\u5730\u200b\u670d\u52a1\u5668\u200b\u8fd0\u884c\u200b\u5b8c\u5168\u200b\u6307\u5357","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u5c06\u200b\u6307\u5bfc\u200b\u4f60\u200b\u5982\u4f55\u200b\u5728\u200b\u672c\u5730\u200b\u8fd0\u884c\u200b LangGraph \u200b\u5e94\u7528\u7a0b\u5e8f\u200b\uff0c\u200b\u5305\u62ec\u200b\u5b89\u88c5\u200b\u3001\u200b\u914d\u7f6e\u200b\u3001\u200b\u542f\u52a8\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u5b8c\u6574\u200b\u6d41\u7a0b\u200b\u3002</p>"},{"location":"llmapps/langgraph/Local%20server/#_1","title":"\u524d\u7f6e\u200b\u8981\u6c42","text":"<p>\u200b\u5f00\u59cb\u200b\u4e4b\u524d\u200b\uff0c\u200b\u8bf7\u200b\u786e\u4fdd\u200b\u4f60\u200b\u5df2\u200b\u51c6\u5907\u200b\u597d\u200b\uff1a</p> <ul> <li>Python 3.11 \u200b\u6216\u200b\u66f4\u200b\u9ad8\u200b\u7248\u672c\u200b</li> <li>LangSmith API \u200b\u5bc6\u94a5\u200b\uff08\u200b\u514d\u8d39\u200b\u6ce8\u518c\u200b\uff09</li> </ul>"},{"location":"llmapps/langgraph/Local%20server/#1-langgraph-cli","title":"\u6b65\u9aa4\u200b 1\uff1a\u200b\u5b89\u88c5\u200b LangGraph CLI","text":"<p>\u200b\u9996\u5148\u200b\u5b89\u88c5\u200b LangGraph \u200b\u547d\u4ee4\u884c\u200b\u5de5\u5177\u200b\uff1a</p>"},{"location":"llmapps/langgraph/Local%20server/#pip","title":"\u4f7f\u7528\u200b pip \u200b\u5b89\u88c5","text":"<pre><code># \u200b\u9700\u8981\u200b Python &gt;= 3.11\npip install -U \"langgraph-cli[inmem]\"\n</code></pre>"},{"location":"llmapps/langgraph/Local%20server/#uv","title":"\u4f7f\u7528\u200b uv \u200b\u5b89\u88c5","text":"<pre><code># \u200b\u9700\u8981\u200b Python &gt;= 3.11\nuv add langgraph-cli[inmem]\n</code></pre>"},{"location":"llmapps/langgraph/Local%20server/#2-langgraph","title":"\u6b65\u9aa4\u200b 2\uff1a\u200b\u521b\u5efa\u200b LangGraph \u200b\u5e94\u7528\u200b \ud83c\udf31","text":"<p>\u200b\u4ece\u200b\u6a21\u677f\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b LangGraph \u200b\u5e94\u7528\u200b\uff1a</p> <pre><code>langgraph new path/to/your/app --template new-langgraph-project-python\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u6a21\u677f\u200b\u5c55\u793a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5355\u200b\u8282\u70b9\u200b\u5e94\u7528\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u57fa\u4e8e\u200b\u6b64\u200b\u6269\u5c55\u200b\u81ea\u5df1\u200b\u7684\u200b\u903b\u8f91\u200b\u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a\u200b\u66f4\u200b\u591a\u200b\u6a21\u677f\u200b\u9009\u62e9\u200b</p> <p>\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b <code>langgraph new</code> \u200b\u65f6\u200b\u4e0d\u200b\u6307\u5b9a\u200b\u6a21\u677f\u200b\uff0c\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u4ea4\u4e92\u5f0f\u200b\u83dc\u5355\u200b\u8ba9\u200b\u4f60\u200b\u4ece\u200b\u53ef\u7528\u200b\u6a21\u677f\u200b\u5217\u8868\u200b\u4e2d\u200b\u9009\u62e9\u200b\u3002</p>"},{"location":"llmapps/langgraph/Local%20server/#3","title":"\u6b65\u9aa4\u200b 3\uff1a\u200b\u5b89\u88c5\u200b\u4f9d\u8d56","text":"<p>\u200b\u8fdb\u5165\u200b\u65b0\u521b\u5efa\u200b\u7684\u200b LangGraph \u200b\u5e94\u7528\u200b\u6839\u76ee\u5f55\u200b\uff0c\u200b\u4ee5\u200b <code>edit</code> \u200b\u6a21\u5f0f\u200b\u5b89\u88c5\u200b\u4f9d\u8d56\u200b\uff0c\u200b\u8fd9\u6837\u200b\u670d\u52a1\u5668\u200b\u7684\u200b\u66f4\u6539\u200b\u4f1a\u200b\u7acb\u5373\u200b\u751f\u6548\u200b\uff1a</p>"},{"location":"llmapps/langgraph/Local%20server/#pip_1","title":"\u4f7f\u7528\u200b pip","text":"<pre><code>cd path/to/your/app\npip install -e .\n</code></pre>"},{"location":"llmapps/langgraph/Local%20server/#uv_1","title":"\u4f7f\u7528\u200b uv","text":"<pre><code>cd path/to/your/app\nuv add .\n</code></pre>"},{"location":"llmapps/langgraph/Local%20server/#4","title":"\u6b65\u9aa4\u200b 4\uff1a\u200b\u914d\u7f6e\u200b\u73af\u5883\u53d8\u91cf","text":"<p>\u200b\u5728\u200b\u4f60\u200b\u7684\u200b\u65b0\u200b LangGraph \u200b\u5e94\u7528\u200b\u6839\u76ee\u5f55\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u4f1a\u200b\u627e\u5230\u200b <code>.env.example</code> \u200b\u6587\u4ef6\u200b\u3002\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b <code>.env</code> \u200b\u6587\u4ef6\u200b\u5e76\u200b\u590d\u5236\u200b\u5185\u5bb9\u200b\uff0c\u200b\u586b\u5165\u200b\u5fc5\u8981\u200b\u7684\u200b API \u200b\u5bc6\u94a5\u200b\uff1a</p> <pre><code>LANGSMITH_API_KEY=lsv2_\u200b\u4f60\u200b\u7684\u200b\u5b9e\u9645\u200bAPI\u200b\u5bc6\u94a5\u200b\n</code></pre>"},{"location":"llmapps/langgraph/Local%20server/#5-langgraph","title":"\u6b65\u9aa4\u200b 5\uff1a\u200b\u542f\u52a8\u200b LangGraph \u200b\u670d\u52a1\u5668\u200b \ud83d\ude80","text":"<p>\u200b\u5728\u200b\u672c\u5730\u200b\u542f\u52a8\u200b LangGraph API \u200b\u670d\u52a1\u5668\u200b\uff1a</p> <pre><code>langgraph dev\n</code></pre> <p>\u200b\u6210\u529f\u200b\u542f\u52a8\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u4f1a\u200b\u770b\u5230\u200b\u7c7b\u4f3c\u200b\u4ee5\u4e0b\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>&gt;    Ready!\n&gt;\n&gt;    - API: [http://localhost:2024](http://localhost:2024/)\n&gt;\n&gt;    - Docs: http://localhost:2024/docs\n&gt;\n&gt;    - LangGraph Studio Web UI: https://smith.langchain.com/studio/?baseUrl=http://127.0.0.1:2024\n</code></pre> <p>\u200b\u91cd\u8981\u200b\u8bf4\u660e\u200b\uff1a<code>langgraph dev</code> \u200b\u547d\u4ee4\u200b\u4ee5\u200b\u5185\u5b58\u200b\u6a21\u5f0f\u200b\u542f\u52a8\u200b LangGraph \u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u5f00\u53d1\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u3002\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u8bf7\u200b\u4f7f\u7528\u200b\u6301\u4e45\u200b\u5316\u200b\u5b58\u50a8\u200b\u540e\u200b\u7aef\u200b\u90e8\u7f72\u200b\u3002</p>"},{"location":"llmapps/langgraph/Local%20server/#6-studio","title":"\u6b65\u9aa4\u200b 6\uff1a\u200b\u5728\u200b Studio \u200b\u4e2d\u200b\u6d4b\u8bd5\u200b\u5e94\u7528","text":"<p>[Studio]\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e13\u95e8\u200b\u7684\u200b UI \u200b\u754c\u9762\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8fde\u63a5\u200b\u5230\u200b LangGraph API \u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u7528\u4e8e\u200b\u53ef\u89c6\u5316\u200b\u3001\u200b\u4ea4\u4e92\u200b\u548c\u200b\u8c03\u8bd5\u200b\u4f60\u200b\u7684\u200b\u5e94\u7528\u200b\u3002</p> <p>\u200b\u8bbf\u95ee\u200b <code>langgraph dev</code> \u200b\u547d\u4ee4\u200b\u8f93\u51fa\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u7684\u200b URL \u200b\u6765\u200b\u5728\u200b Studio \u200b\u4e2d\u200b\u6d4b\u8bd5\u200b\u4f60\u200b\u7684\u200b\u56fe\u200b\uff1a</p> <pre><code>&gt;    - LangGraph Studio Web UI: https://smith.langchain.com/studio/?baseUrl=http://127.0.0.1:2024\n</code></pre> <p>\u200b\u5982\u679c\u200b LangGraph \u200b\u670d\u52a1\u5668\u200b\u8fd0\u884c\u200b\u5728\u200b\u81ea\u5b9a\u4e49\u200b\u4e3b\u673a\u200b/\u200b\u7aef\u53e3\u200b\u4e0a\u200b\uff0c\u200b\u8bf7\u200b\u66f4\u65b0\u200b baseURL \u200b\u53c2\u6570\u200b\u3002</p> Safari \u200b\u6d4f\u89c8\u5668\u200b\u517c\u5bb9\u6027\u200b\u8bf4\u660e\u200b  \u200b\u7531\u4e8e\u200b Safari \u200b\u5728\u200b\u8fde\u63a5\u200b localhost \u200b\u670d\u52a1\u5668\u65f6\u200b\u6709\u200b\u9650\u5236\u200b\uff0c\u200b\u4f7f\u7528\u200b `--tunnel` \u200b\u6807\u5fd7\u200b\u521b\u5efa\u200b\u5b89\u5168\u200b\u96a7\u9053\u200b\uff1a   <pre><code>langgraph dev --tunnel\n</code></pre>"},{"location":"llmapps/langgraph/Local%20server/#7-api","title":"\u6b65\u9aa4\u200b 7\uff1a\u200b\u6d4b\u8bd5\u200b API","text":""},{"location":"llmapps/langgraph/Local%20server/#python-sdk","title":"\u65b9\u6cd5\u200b\u4e00\u200b\uff1aPython SDK\uff08\u200b\u5f02\u6b65\u200b\uff09","text":"<ol> <li>\u200b\u5b89\u88c5\u200b LangGraph Python SDK\uff1a</li> </ol> <pre><code>pip install langgraph-sdk\n</code></pre> <ol> <li>\u200b\u53d1\u9001\u200b\u6d88\u606f\u200b\u5230\u200b\u52a9\u624b\u200b\uff08\u200b\u65e0\u7ebf\u200b\u7a0b\u200b\u8fd0\u884c\u200b\uff09\uff1a</li> </ol> <pre><code>from langgraph_sdk import get_client\nimport asyncio\n\n# \u200b\u8fde\u63a5\u200b\u5230\u200b\u672c\u5730\u200b\u670d\u52a1\u5668\u200b\nclient = get_client(url=\"http://localhost:2024\")\n\nasync def main():\n    async for chunk in client.runs.stream(\n        None,  # \u200b\u65e0\u7ebf\u200b\u7a0b\u200b\u8fd0\u884c\u200b\n        \"agent\",  # \u200b\u52a9\u624b\u200b\u540d\u79f0\u200b\uff0c\u200b\u5728\u200b langgraph.json \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\n        input={\n            \"messages\": [{\n                \"role\": \"human\",\n                \"content\": \"What is LangGraph?\",\n            }],\n        },\n    ):\n        print(f\"\u200b\u6536\u5230\u200b\u65b0\u200b\u4e8b\u4ef6\u200b\u7c7b\u578b\u200b: {chunk.event}...\")\n        print(chunk.data)\n        print(\"\\n\\n\")\n\nasyncio.run(main())\n</code></pre>"},{"location":"llmapps/langgraph/Local%20server/#python-sdk_1","title":"\u65b9\u6cd5\u200b\u4e8c\u200b\uff1aPython SDK\uff08\u200b\u540c\u6b65\u200b\uff09","text":"<ol> <li>\u200b\u5b89\u88c5\u200b LangGraph Python SDK\uff1a</li> </ol> <pre><code>pip install langgraph-sdk\n</code></pre> <ol> <li>\u200b\u53d1\u9001\u200b\u6d88\u606f\u200b\u5230\u200b\u52a9\u624b\u200b\uff1a</li> </ol> <pre><code>from langgraph_sdk import get_sync_client\n\n# \u200b\u8fde\u63a5\u200b\u5230\u200b\u672c\u5730\u200b\u670d\u52a1\u5668\u200b\nclient = get_sync_client(url=\"http://localhost:2024\")\n\nfor chunk in client.runs.stream(\n    None,  # \u200b\u65e0\u7ebf\u200b\u7a0b\u200b\u8fd0\u884c\u200b\n    \"agent\",  # \u200b\u52a9\u624b\u200b\u540d\u79f0\u200b\n    input={\n        \"messages\": [{\n            \"role\": \"human\",\n            \"content\": \"What is LangGraph?\",\n        }],\n    },\n    stream_mode=\"messages-tuple\",\n):\n    print(f\"\u200b\u6536\u5230\u200b\u65b0\u200b\u4e8b\u4ef6\u200b\u7c7b\u578b\u200b: {chunk.event}...\")\n    print(chunk.data)\n    print(\"\\n\\n\")\n</code></pre>"},{"location":"llmapps/langgraph/Local%20server/#rest-api","title":"\u65b9\u6cd5\u200b\u4e09\u200b\uff1aREST API","text":"<p>\u200b\u4f7f\u7528\u200b curl \u200b\u547d\u4ee4\u200b\u76f4\u63a5\u200b\u6d4b\u8bd5\u200b API\uff1a</p> <pre><code>curl -s --request POST \\\n    --url \"http://localhost:2024/runs/stream\" \\\n    --header 'Content-Type: application/json' \\\n    --data \"{\n        \\\"assistant_id\\\": \\\"agent\\\",\n        \\\"input\\\": {\n            \\\"messages\\\": [\n                {\n                    \\\"role\\\": \\\"human\\\",\n                    \\\"content\\\": \\\"What is LangGraph?\\\"\n                }\n            ]\n        },\n        \\\"stream_mode\\\": \\\"messages-tuple\\\"\n    }\"\n</code></pre>"},{"location":"llmapps/langgraph/Local%20server/#_2","title":"\u6545\u969c\u200b\u6392\u9664","text":""},{"location":"llmapps/langgraph/Local%20server/#_3","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u200b\u7aef\u53e3\u200b\u51b2\u7a81\u200b<ul> <li>\u200b\u5982\u679c\u200b 2024 \u200b\u7aef\u53e3\u200b\u88ab\u200b\u5360\u7528\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>--port</code> \u200b\u53c2\u6570\u200b\u6307\u5b9a\u200b\u5176\u4ed6\u200b\u7aef\u53e3\u200b\uff1a</li> </ul> </li> </ol> <pre><code>         langgraph dev --port 3030\n</code></pre> <ol> <li> <p>API \u200b\u5bc6\u94a5\u200b\u9519\u8bef\u200b</p> <ul> <li>\u200b\u786e\u4fdd\u200b <code>.env</code> \u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b <code>LANGSMITH_API_KEY</code> \u200b\u8bbe\u7f6e\u200b\u6b63\u786e\u200b</li> </ul> </li> <li> <p>\u200b\u4f9d\u8d56\u200b\u5b89\u88c5\u200b\u5931\u8d25\u200b</p> <ul> <li>\u200b\u786e\u4fdd\u200b Python \u200b\u7248\u672c\u200b &gt;= 3.11</li> <li>\u200b\u5c1d\u8bd5\u200b\u4f7f\u7528\u200b\u865a\u62df\u73af\u5883\u200b</li> </ul> </li> <li> <p>\u200b\u6a21\u677f\u200b\u521b\u5efa\u200b\u5931\u8d25\u200b</p> <ul> <li>\u200b\u68c0\u67e5\u200b\u7f51\u7edc\u8fde\u63a5\u200b</li> <li>\u200b\u5c1d\u8bd5\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u7684\u200b\u6a21\u677f\u200b\u540d\u79f0\u200b</li> </ul> </li> </ol>"},{"location":"llmapps/langgraph/Local%20server/#_4","title":"\u8c03\u8bd5\u200b\u6280\u5de7","text":"<ol> <li>\u200b\u67e5\u770b\u200b\u8be6\u7ec6\u200b\u65e5\u5fd7\u200b</li> </ol> <pre><code>   langgraph dev --verbose\n</code></pre> <ol> <li> <p>\u200b\u68c0\u67e5\u200b\u5e94\u7528\u200b\u914d\u7f6e\u200b</p> <ul> <li>\u200b\u786e\u8ba4\u200b <code>langgraph.json</code> \u200b\u6587\u4ef6\u200b\u914d\u7f6e\u200b\u6b63\u786e\u200b</li> <li>\u200b\u9a8c\u8bc1\u200b\u52a9\u624b\u200b\u540d\u79f0\u200b\u4e0e\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u7684\u200b\u540d\u79f0\u200b\u4e00\u81f4\u200b</li> </ul> </li> <li> <p>\u200b\u6d4b\u8bd5\u200b\u8fde\u63a5\u200b</p> </li> </ol> <pre><code>   curl http://localhost:2024/health\n</code></pre>"},{"location":"llmapps/langgraph/Local%20server/#_5","title":"\u9879\u76ee\u200b\u7ed3\u6784\u200b\u8bf4\u660e","text":"<p>\u200b\u6210\u529f\u200b\u521b\u5efa\u200b\u9879\u76ee\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u4f1a\u200b\u770b\u5230\u200b\u4ee5\u4e0b\u200b\u5178\u578b\u200b\u7ed3\u6784\u200b\uff1a</p> <pre><code>your-app/\n\u251c\u2500\u2500 langgraph.json          # \u200b\u5e94\u7528\u200b\u914d\u7f6e\u6587\u4ef6\u200b\n\u251c\u2500\u2500 pyproject.toml          # \u200b\u9879\u76ee\u200b\u4f9d\u8d56\u200b\u914d\u7f6e\u200b\n\u251c\u2500\u2500 .env.example            # \u200b\u73af\u5883\u53d8\u91cf\u200b\u793a\u4f8b\u200b\n\u251c\u2500\u2500 src/\n\u2502   \u2514\u2500\u2500 your_app/\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u2514\u2500\u2500 graph.py        # \u200b\u4e3b\u8981\u200b\u7684\u200b\u56fe\u200b\u5b9a\u4e49\u200b\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"llmapps/langgraph/Subgraphs/","title":"LangGraph \u200b\u5b50\u56fe\u200b\u4f7f\u7528\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langgraph/Subgraphs/#_1","title":"\u6982\u8ff0","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u5c06\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u5728\u200b LangGraph \u200b\u4e2d\u200b\u4f7f\u7528\u200b\u5b50\u56fe\u200b\uff08Subgraphs\uff09\u3002\u200b\u5b50\u56fe\u200b\u662f\u200b\u6307\u200b\u5728\u200b\u4e00\u4e2a\u200b\u56fe\u4e2d\u200b\u4f5c\u4e3a\u200b\u8282\u70b9\u200b\u4f7f\u7528\u200b\u7684\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u56fe\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u8bbe\u8ba1\u6a21\u5f0f\u200b\u5728\u200b\u6784\u5efa\u200b\u590d\u6742\u200b\u7cfb\u7edf\u200b\u65f6\u200b\u975e\u5e38\u200b\u6709\u7528\u200b\u3002</p>"},{"location":"llmapps/langgraph/Subgraphs/#_2","title":"\u5b50\u56fe\u200b\u7684\u200b\u4f18\u52bf","text":"<ul> <li>\u200b\u6784\u5efa\u200b\u591a\u200b\u667a\u80fd\u200b\u4f53\u200b\u7cfb\u7edf\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u667a\u80fd\u200b\u4f53\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u72ec\u7acb\u200b\u7684\u200b\u5b50\u200b\u56fe\u200b</li> <li>\u200b\u8282\u70b9\u200b\u590d\u7528\u200b\uff1a\u200b\u5728\u200b\u591a\u4e2a\u200b\u56fe\u4e2d\u200b\u91cd\u590d\u4f7f\u7528\u200b\u540c\u200b\u4e00\u7ec4\u200b\u8282\u70b9\u200b</li> <li>\u200b\u5206\u5e03\u5f0f\u200b\u5f00\u53d1\u200b\uff1a\u200b\u4e0d\u540c\u200b\u56e2\u961f\u200b\u53ef\u4ee5\u200b\u72ec\u7acb\u200b\u5f00\u53d1\u200b\u4e0d\u540c\u200b\u7684\u200b\u5b50\u200b\u56fe\u200b\u90e8\u5206\u200b\uff0c\u200b\u53ea\u8981\u200b\u4fdd\u6301\u200b\u63a5\u53e3\u200b\u89c4\u8303\u200b\u5373\u53ef\u200b</li> </ul>"},{"location":"llmapps/langgraph/Subgraphs/#_3","title":"\u73af\u5883\u200b\u8bbe\u7f6e","text":"<p>\u200b\u9996\u5148\u200b\u5b89\u88c5\u200b\u5fc5\u8981\u200b\u7684\u200b\u4f9d\u8d56\u200b\uff1a</p> <pre><code># \u200b\u4f7f\u7528\u200b pip\npip install -U langgraph\n\n# \u200b\u4f7f\u7528\u200b uv\nuv add langgraph\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a\u200b\u5efa\u8bae\u200b\u8bbe\u7f6e\u200b LangSmith \u200b\u6765\u200b\u76d1\u63a7\u200b\u548c\u200b\u8c03\u8bd5\u200b LangGraph \u200b\u5e94\u7528\u200b\u3002</p>"},{"location":"llmapps/langgraph/Subgraphs/#_4","title":"\u4e24\u79cd\u200b\u5b50\u56fe\u200b\u5b9e\u73b0\u200b\u65b9\u5f0f","text":""},{"location":"llmapps/langgraph/Subgraphs/#1","title":"1. \u200b\u4ece\u200b\u8282\u70b9\u200b\u8c03\u7528\u200b\u56fe","text":"<p>\u200b\u5f53\u5b50\u200b\u56fe\u200b\u548c\u200b\u7236\u56fe\u200b\u6709\u200b\u5b8c\u5168\u200b\u4e0d\u540c\u200b\u7684\u200b\u72b6\u6001\u200b\u6a21\u5f0f\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u3002</p> <pre><code>from typing_extensions import TypedDict\nfrom langgraph.graph.state import StateGraph, START\n\n# \u200b\u5b9a\u4e49\u200b\u5b50\u56fe\u200b\u72b6\u6001\u200b\nclass SubgraphState(TypedDict):\n    bar: str\n\n# \u200b\u5b50\u56fe\u200b\u5b9e\u73b0\u200b\ndef subgraph_node_1(state: SubgraphState):\n    return {\"bar\": \"hi! \" + state[\"bar\"]}\n\nsubgraph_builder = StateGraph(SubgraphState)\nsubgraph_builder.add_node(subgraph_node_1)\nsubgraph_builder.add_edge(START, \"subgraph_node_1\")\nsubgraph = subgraph_builder.compile()\n\n# \u200b\u7236\u56fe\u200b\u5b9e\u73b0\u200b\nclass State(TypedDict):\n    foo: str\n\ndef call_subgraph(state: State):\n    # \u200b\u5c06\u200b\u7236\u56fe\u200b\u72b6\u6001\u200b\u8f6c\u6362\u200b\u4e3a\u5b50\u200b\u56fe\u200b\u72b6\u6001\u200b\n    subgraph_output = subgraph.invoke({\"bar\": state[\"foo\"]})\n    # \u200b\u5c06\u5b50\u200b\u56fe\u200b\u54cd\u5e94\u200b\u8f6c\u6362\u200b\u56de\u7236\u200b\u56fe\u200b\u72b6\u6001\u200b\n    return {\"foo\": subgraph_output[\"bar\"]}\n\nbuilder = StateGraph(State)\nbuilder.add_node(\"node_1\", call_subgraph)\nbuilder.add_edge(START, \"node_1\")\ngraph = builder.compile()\n</code></pre>"},{"location":"llmapps/langgraph/Subgraphs/#2","title":"2. \u200b\u5c06\u200b\u56fe\u200b\u4f5c\u4e3a\u200b\u8282\u70b9\u200b\u6dfb\u52a0","text":"<p>\u200b\u5f53\u5b50\u200b\u56fe\u200b\u548c\u200b\u7236\u56fe\u200b\u5171\u4eab\u200b\u72b6\u6001\u200b\u952e\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5c06\u5b50\u200b\u56fe\u200b\u4f5c\u4e3a\u200b\u8282\u70b9\u200b\u6dfb\u52a0\u200b\u5230\u200b\u7236\u56fe\u200b\u4e2d\u200b\u3002</p> <pre><code>from typing_extensions import TypedDict\nfrom langgraph.graph.state import StateGraph, START\n\nclass State(TypedDict):\n    foo: str  # \u200b\u5171\u4eab\u200b\u7684\u200b\u72b6\u6001\u200b\u952e\u200b\n\n# \u200b\u5b50\u56fe\u200b\u5b9e\u73b0\u200b\ndef subgraph_node_1(state: State):\n    return {\"foo\": \"hi! \" + state[\"foo\"]}\n\nsubgraph_builder = StateGraph(State)\nsubgraph_builder.add_node(subgraph_node_1)\nsubgraph_builder.add_edge(START, \"subgraph_node_1\")\nsubgraph = subgraph_builder.compile()\n\n# \u200b\u7236\u56fe\u200b\u5b9e\u73b0\u200b - \u200b\u76f4\u63a5\u200b\u6dfb\u52a0\u200b\u5b50\u56fe\u200b\u4f5c\u4e3a\u200b\u8282\u70b9\u200b\nbuilder = StateGraph(State)\nbuilder.add_node(\"node_1\", subgraph)  # \u200b\u76f4\u63a5\u200b\u4f20\u9012\u200b\u7f16\u8bd1\u200b\u540e\u200b\u7684\u200b\u5b50\u200b\u56fe\u200b\nbuilder.add_edge(START, \"node_1\")\ngraph = builder.compile()\n</code></pre>"},{"location":"llmapps/langgraph/Subgraphs/#_5","title":"\u6dfb\u52a0\u200b\u6301\u4e45\u200b\u5316","text":""},{"location":"llmapps/langgraph/Subgraphs/#_6","title":"\u4e3a\u7236\u200b\u56fe\u548c\u5b50\u200b\u56fe\u200b\u5171\u4eab\u200b\u5b58\u50a8","text":"<pre><code>from langgraph.graph import START, StateGraph\nfrom langgraph.checkpoint.memory import MemorySaver\n\nclass State(TypedDict):\n    foo: str\n\n# \u200b\u5b50\u56fe\u200b\u5b9e\u73b0\u200b\ndef subgraph_node_1(state: State):\n    return {\"foo\": state[\"foo\"] + \"bar\"}\n\nsubgraph_builder = StateGraph(State)\nsubgraph_builder.add_node(subgraph_node_1)\nsubgraph_builder.add_edge(START, \"subgraph_node_1\")\nsubgraph = subgraph_builder.compile()\n\n# \u200b\u7236\u56fe\u200b\u5b9e\u73b0\u200b\nbuilder = StateGraph(State)\nbuilder.add_node(\"node_1\", subgraph)\nbuilder.add_edge(START, \"node_1\")\n\n# \u200b\u53ea\u4e3a\u200b\u7236\u56fe\u200b\u63d0\u4f9b\u200b\u68c0\u67e5\u70b9\u200b\uff0c\u200b\u5b50\u200b\u56fe\u4f1a\u200b\u81ea\u52a8\u200b\u7ee7\u627f\u200b\ncheckpointer = MemorySaver()\ngraph = builder.compile(checkpointer=checkpointer)\n</code></pre>"},{"location":"llmapps/langgraph/Subgraphs/#_7","title":"\u4e3a\u5b50\u200b\u56fe\u200b\u8bbe\u7f6e\u200b\u72ec\u7acb\u200b\u5b58\u50a8","text":"<p>\u200b\u5728\u200b\u591a\u200b\u667a\u80fd\u200b\u4f53\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u5b50\u56fe\u200b\u8bbe\u7f6e\u200b\u72ec\u7acb\u200b\u7684\u200b\u5b58\u50a8\u200b\uff1a</p> <pre><code>subgraph_builder = StateGraph(State)\nsubgraph = subgraph_builder.compile(checkpointer=True)  # \u200b\u5b50\u56fe\u200b\u6709\u200b\u81ea\u5df1\u200b\u7684\u200b\u5b58\u50a8\u200b\n</code></pre>"},{"location":"llmapps/langgraph/Subgraphs/#_8","title":"\u67e5\u770b\u200b\u5b50\u56fe\u200b\u72b6\u6001","text":"<p>\u200b\u5f53\u200b\u542f\u7528\u200b\u6301\u4e45\u200b\u5316\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u67e5\u770b\u200b\u5b50\u56fe\u200b\u7684\u200b\u72b6\u6001\u200b\u3002\u200b\u6ce8\u610f\u200b\uff1a\u200b\u53ea\u80fd\u200b\u5728\u5b50\u200b\u56fe\u200b\u88ab\u200b\u4e2d\u65ad\u200b\u65f6\u200b\u67e5\u770b\u200b\u5176\u200b\u72b6\u6001\u200b\u3002</p> <pre><code># \u200b\u83b7\u53d6\u200b\u7236\u56fe\u200b\u72b6\u6001\u200b\nparent_state = graph.get_state(config)\n\n# \u200b\u83b7\u53d6\u200b\u5b50\u56fe\u200b\u72b6\u6001\u200b\uff08\u200b\u4ec5\u200b\u5728\u200b\u5b50\u200b\u56fe\u200b\u4e2d\u65ad\u200b\u65f6\u200b\u53ef\u7528\u200b\uff09\nsubgraph_state = graph.get_state(config, subgraphs=True).tasks[0].state\n</code></pre>"},{"location":"llmapps/langgraph/Subgraphs/#_9","title":"\u6d41\u5f0f\u200b\u8f93\u51fa\u200b\u5b50\u56fe\u200b\u7ed3\u679c","text":"<p>\u200b\u8981\u200b\u5728\u200b\u6d41\u5f0f\u200b\u8f93\u51fa\u200b\u4e2d\u200b\u5305\u542b\u200b\u5b50\u56fe\u200b\u7684\u200b\u8f93\u51fa\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6d41\u5f0f\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8bbe\u7f6e\u200b <code>subgraphs=True</code>\uff1a</p> <pre><code>for chunk in graph.stream(\n    {\"foo\": \"foo\"},\n    subgraphs=True,  # \u200b\u5305\u542b\u200b\u5b50\u56fe\u200b\u8f93\u51fa\u200b\n    stream_mode=\"updates\",\n):\n    print(chunk)\n</code></pre>"},{"location":"llmapps/langgraph/Subgraphs/#_10","title":"\u5b8c\u6574\u200b\u793a\u4f8b","text":""},{"location":"llmapps/langgraph/Subgraphs/#_11","title":"\u5171\u4eab\u200b\u72b6\u6001\u200b\u6a21\u5f0f\u200b\u7684\u200b\u5b8c\u6574\u200b\u793a\u4f8b","text":"<pre><code>from typing_extensions import TypedDict\nfrom langgraph.graph.state import StateGraph, START\n\n# \u200b\u5b9a\u4e49\u200b\u5b50\u56fe\u200b\u72b6\u6001\u200b\nclass SubgraphState(TypedDict):\n    foo: str  # \u200b\u4e0e\u200b\u7236\u56fe\u200b\u5171\u4eab\u200b\n    bar: str  # \u200b\u5b50\u56fe\u200b\u79c1\u6709\u200b\n\ndef subgraph_node_1(state: SubgraphState):\n    return {\"bar\": \"bar\"}\n\ndef subgraph_node_2(state: SubgraphState):\n    return {\"foo\": state[\"foo\"] + state[\"bar\"]}\n\nsubgraph_builder = StateGraph(SubgraphState)\nsubgraph_builder.add_node(subgraph_node_1)\nsubgraph_builder.add_node(subgraph_node_2)\nsubgraph_builder.add_edge(START, \"subgraph_node_1\")\nsubgraph_builder.add_edge(\"subgraph_node_1\", \"subgraph_node_2\")\nsubgraph = subgraph_builder.compile()\n\n# \u200b\u7236\u56fe\u200b\u5b9e\u73b0\u200b\nclass ParentState(TypedDict):\n    foo: str\n\ndef node_1(state: ParentState):\n    return {\"foo\": \"hi! \" + state[\"foo\"]}\n\nbuilder = StateGraph(ParentState)\nbuilder.add_node(\"node_1\", node_1)\nbuilder.add_node(\"node_2\", subgraph)\nbuilder.add_edge(START, \"node_1\")\nbuilder.add_edge(\"node_1\", \"node_2\")\ngraph = builder.compile()\n\n# \u200b\u6267\u884c\u200b\u5e76\u200b\u67e5\u770b\u200b\u7ed3\u679c\u200b\nfor chunk in graph.stream({\"foo\": \"foo\"}):\n    print(chunk)\n</code></pre>"},{"location":"llmapps/langgraph/Subgraphs/#_12","title":"\u4f7f\u7528\u200b\u573a\u666f\u200b\u5efa\u8bae","text":"<ol> <li>\u200b\u9009\u62e9\u200b\u4ece\u200b\u8282\u70b9\u200b\u8c03\u7528\u200b\u56fe\u200b\uff1a\u200b\u5f53\u5b50\u200b\u56fe\u200b\u548c\u200b\u7236\u56fe\u200b\u72b6\u6001\u200b\u6a21\u5f0f\u200b\u5b8c\u5168\u200b\u4e0d\u200b\u540c\u65f6\u200b</li> <li>\u200b\u9009\u62e9\u200b\u5c06\u200b\u56fe\u200b\u4f5c\u4e3a\u200b\u8282\u70b9\u200b\u6dfb\u52a0\u200b\uff1a\u200b\u5f53\u5b50\u200b\u56fe\u200b\u548c\u200b\u7236\u56fe\u200b\u5171\u4eab\u200b\u90e8\u5206\u200b\u72b6\u6001\u200b\u952e\u65f6\u200b</li> <li>\u200b\u591a\u7ea7\u200b\u5b50\u56fe\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u7236\u56fe\u200b-&gt;\u200b\u5b50\u56fe\u200b-&gt;\u200b\u5b59\u56fe\u200b\u7684\u200b\u591a\u7ea7\u200b\u7ed3\u6784\u200b</li> <li>\u200b\u72ec\u7acb\u200b\u5b58\u50a8\u200b\uff1a\u200b\u5728\u200b\u591a\u200b\u667a\u80fd\u200b\u4f53\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u667a\u80fd\u200b\u4f53\u200b\u8bbe\u7f6e\u200b\u72ec\u7acb\u200b\u7684\u200b\u6d88\u606f\u200b\u5386\u53f2\u200b\u5b58\u50a8\u200b</li> </ol> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u4f7f\u7528\u200b\u5b50\u56fe\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u51fa\u200b\u7ed3\u6784\u200b\u6e05\u6670\u200b\u3001\u200b\u6613\u4e8e\u200b\u7ef4\u62a4\u200b\u7684\u200b\u590d\u6742\u200b\u56fe\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u3002</p>"},{"location":"llmapps/langgraph/application%20structure/","title":"LangGraph \u200b\u5e94\u7528\u200b\u7ed3\u6784\u200b\u5b8c\u6574\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langgraph/application%20structure/#_1","title":"\u6982\u8ff0","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u5c06\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u5b8c\u6574\u200b\u7684\u200b LangGraph \u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u3002LangGraph \u200b\u5e94\u7528\u200b\u7531\u200b\u4e00\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b\u56fe\u200b\u3001\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3001\u200b\u4f9d\u8d56\u200b\u6587\u4ef6\u200b\u4ee5\u53ca\u200b\u53ef\u9009\u200b\u7684\u200b\u73af\u5883\u53d8\u91cf\u200b\u6587\u4ef6\u200b\u7ec4\u6210\u200b\u3002</p>"},{"location":"llmapps/langgraph/application%20structure/#_2","title":"\u6838\u5fc3\u200b\u6982\u5ff5","text":"<p>\u200b\u8981\u200b\u6210\u529f\u200b\u90e8\u7f72\u200b LangGraph \u200b\u5e94\u7528\u200b\uff0c\u200b\u9700\u8981\u200b\u63d0\u4f9b\u200b\u4ee5\u4e0b\u200b\u5173\u952e\u200b\u7ec4\u4ef6\u200b\uff1a</p>"},{"location":"llmapps/langgraph/application%20structure/#1-langgraphjson","title":"1. \u200b\u914d\u7f6e\u6587\u4ef6\u200b (<code>langgraph.json</code>)","text":"<p>\u200b\u8fd9\u662f\u200b\u5e94\u7528\u200b\u7684\u200b\u6838\u5fc3\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u6307\u5b9a\u200b\u4e86\u200b\u4f9d\u8d56\u200b\u9879\u200b\u3001\u200b\u56fe\u200b\u548c\u200b\u73af\u5883\u53d8\u91cf\u200b\u3002</p>"},{"location":"llmapps/langgraph/application%20structure/#2-graphs","title":"2. \u200b\u56fe\u200b (Graphs)","text":"<p>\u200b\u5b9e\u73b0\u200b\u5e94\u7528\u903b\u8f91\u200b\u7684\u200b\u6d41\u7a0b\u56fe\u200b\u6216\u200b\u72b6\u6001\u673a\u200b\u3002</p>"},{"location":"llmapps/langgraph/application%20structure/#3","title":"3. \u200b\u4f9d\u8d56\u200b\u7ba1\u7406","text":"<p>\u200b\u5e94\u7528\u200b\u8fd0\u884c\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u5305\u200b\u4f9d\u8d56\u200b\u3002</p>"},{"location":"llmapps/langgraph/application%20structure/#4","title":"4. \u200b\u73af\u5883\u53d8\u91cf","text":"<p>\u200b\u5e94\u7528\u200b\u8fd0\u884c\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u73af\u5883\u200b\u914d\u7f6e\u200b\u3002</p>"},{"location":"llmapps/langgraph/application%20structure/#_3","title":"\u9879\u76ee\u200b\u7ed3\u6784\u200b\u8be6\u89e3","text":""},{"location":"llmapps/langgraph/application%20structure/#python-requirementstxt","title":"Python \u200b\u9879\u76ee\u200b\u7ed3\u6784\u200b\uff08\u200b\u4f7f\u7528\u200b requirements.txt\uff09","text":"<pre><code>my-app/\n\u251c\u2500\u2500 my_agent/                    # \u200b\u9879\u76ee\u200b\u4e3b\u200b\u4ee3\u7801\u200b\u76ee\u5f55\u200b\n\u2502   \u251c\u2500\u2500 utils/                   # \u200b\u5de5\u5177\u200b\u548c\u200b\u5de5\u5177\u200b\u51fd\u6570\u200b\u76ee\u5f55\u200b\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 tools.py            # \u200b\u56fe\u4e2d\u200b\u4f7f\u7528\u200b\u7684\u200b\u5de5\u5177\u200b\u51fd\u6570\u200b\n\u2502   \u2502   \u251c\u2500\u2500 nodes.py            # \u200b\u56fe\u200b\u8282\u70b9\u200b\u51fd\u6570\u200b\n\u2502   \u2502   \u2514\u2500\u2500 state.py            # \u200b\u72b6\u6001\u200b\u5b9a\u4e49\u200b\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 agent.py                # \u200b\u56fe\u200b\u6784\u5efa\u200b\u4ee3\u7801\u200b\n\u251c\u2500\u2500 .env                        # \u200b\u73af\u5883\u53d8\u91cf\u200b\u6587\u4ef6\u200b\n\u251c\u2500\u2500 requirements.txt            # Python \u200b\u5305\u200b\u4f9d\u8d56\u200b\n\u2514\u2500\u2500 langgraph.json             # LangGraph \u200b\u914d\u7f6e\u6587\u4ef6\u200b\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#python-pyprojecttoml","title":"Python \u200b\u9879\u76ee\u200b\u7ed3\u6784\u200b\uff08\u200b\u4f7f\u7528\u200b pyproject.toml\uff09","text":"<pre><code>my-app/\n\u251c\u2500\u2500 my_agent/\n\u2502   \u251c\u2500\u2500 utils/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 tools.py\n\u2502   \u2502   \u251c\u2500\u2500 nodes.py\n\u2502   \u2502   \u2514\u2500\u2500 state.py\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 agent.py\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 langgraph.json\n\u2514\u2500\u2500 pyproject.toml             # \u200b\u9879\u76ee\u200b\u4f9d\u8d56\u200b\u914d\u7f6e\u200b\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#_4","title":"\u914d\u7f6e\u6587\u4ef6\u200b\u8be6\u89e3","text":""},{"location":"llmapps/langgraph/application%20structure/#langgraphjson","title":"langgraph.json \u200b\u7ed3\u6784","text":"<pre><code>{\n  \"dependencies\": [\"langchain_openai\", \"./your_package\"],\n  \"graphs\": {\n    \"my_agent\": \"./your_package/your_file.py:agent\"\n  },\n  \"env\": \"./.env\"\n}\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#_5","title":"\u914d\u7f6e\u200b\u53c2\u6570\u200b\u8bf4\u660e","text":"<ul> <li>dependencies: \u200b\u4f9d\u8d56\u200b\u5305\u200b\u5217\u8868\u200b\uff0c\u200b\u652f\u6301\u200b\u672c\u5730\u200b\u5305\u200b\u548c\u200b PyPI \u200b\u5305\u200b</li> <li>graphs: \u200b\u56fe\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u683c\u5f0f\u200b\u4e3a\u200b <code>\"\u200b\u56fe\u200b\u540d\u200b\": \"\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b:\u200b\u53d8\u91cf\u540d\u200b\"</code></li> <li>env: \u200b\u73af\u5883\u53d8\u91cf\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b</li> </ul>"},{"location":"llmapps/langgraph/application%20structure/#_6","title":"\u4f9d\u8d56\u200b\u7ba1\u7406","text":""},{"location":"llmapps/langgraph/application%20structure/#requirementstxt","title":"\u65b9\u6cd5\u200b\u4e00\u200b\uff1arequirements.txt","text":"<pre><code>langchain_openai&gt;=0.1.0\nlanggraph&gt;=0.1.0\nrequests&gt;=2.31.0\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#pyprojecttoml","title":"\u65b9\u6cd5\u200b\u4e8c\u200b\uff1apyproject.toml","text":"<pre><code>[build-system]\nrequires = [\"setuptools\", \"wheel\"]\n\n[project]\nname = \"my-agent\"\ndependencies = [\n    \"langchain_openai&gt;=0.1.0\",\n    \"langgraph&gt;=0.1.0\",\n]\n\n[tool.setuptools.packages.find]\nwhere = [\".\"]\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#_7","title":"\u56fe\u200b\u5b9a\u4e49\u200b\u793a\u4f8b","text":""},{"location":"llmapps/langgraph/application%20structure/#agentpy-","title":"agent.py - \u200b\u56fe\u200b\u6784\u5efa\u200b\u4ee3\u7801","text":"<pre><code>from langgraph.graph import Graph\nfrom .utils.nodes import process_input, generate_response\nfrom .utils.state import AgentState\n\ndef create_agent_graph():\n    \"\"\"\u200b\u521b\u5efa\u200b\u4ee3\u7406\u200b\u56fe\u200b\"\"\"\n    graph = Graph()\n\n    # \u200b\u6dfb\u52a0\u200b\u8282\u70b9\u200b\n    graph.add_node(\"process\", process_input)\n    graph.add_node(\"generate\", generate_response)\n\n    # \u200b\u8bbe\u7f6e\u200b\u8fb9\u200b\n    graph.set_entry_point(\"process\")\n    graph.add_edge(\"process\", \"generate\")\n    graph.set_finish_point(\"generate\")\n\n    return graph.compile()\n\n# \u200b\u5bfc\u51fa\u200b\u7684\u200b\u56fe\u200b\u5b9e\u4f8b\u200b\nagent = create_agent_graph()\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#statepy-","title":"state.py - \u200b\u72b6\u6001\u200b\u5b9a\u4e49","text":"<pre><code>from typing import TypedDict, List, Annotated\nfrom langgraph.graph import add_messages\n\nclass AgentState(TypedDict):\n    messages: Annotated[List, add_messages]\n    input_data: str\n    processed_data: dict\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#nodespy-","title":"nodes.py - \u200b\u8282\u70b9\u200b\u51fd\u6570","text":"<pre><code>from .state import AgentState\n\ndef process_input(state: AgentState) -&gt; AgentState:\n    \"\"\"\u200b\u5904\u7406\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u7684\u200b\u8282\u70b9\u200b\"\"\"\n    # \u200b\u5904\u7406\u200b\u903b\u8f91\u200b\n    state[\"processed_data\"] = {\"content\": state[\"input_data\"]}\n    return state\n\ndef generate_response(state: AgentState) -&gt; AgentState:\n    \"\"\"\u200b\u751f\u6210\u200b\u54cd\u5e94\u200b\u7684\u200b\u8282\u70b9\u200b\"\"\"\n    # \u200b\u54cd\u5e94\u200b\u751f\u6210\u200b\u903b\u8f91\u200b\n    state[\"messages\"].append({\"role\": \"assistant\", \"content\": \"Response\"})\n    return state\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#toolspy-","title":"tools.py - \u200b\u5de5\u5177\u200b\u51fd\u6570","text":"<pre><code>from langchain.tools import tool\n\n@tool\ndef search_tool(query: str) -&gt; str:\n    \"\"\"\u200b\u641c\u7d22\u200b\u5de5\u5177\u200b\"\"\"\n    # \u200b\u5b9e\u73b0\u200b\u641c\u7d22\u200b\u903b\u8f91\u200b\n    return f\"Search results for: {query}\"\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#_8","title":"\u73af\u5883\u53d8\u91cf\u200b\u914d\u7f6e","text":""},{"location":"llmapps/langgraph/application%20structure/#env","title":".env \u200b\u6587\u4ef6\u200b\u793a\u4f8b","text":"<pre><code>OPENAI_API_KEY=your_openai_api_key_here\nLANGCHAIN_API_KEY=your_langchain_api_key\nDATABASE_URL=your_database_connection_string\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#_9","title":"\u90e8\u7f72\u200b\u914d\u7f6e\u200b\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"llmapps/langgraph/application%20structure/#1-langgraphjson_1","title":"1. \u200b\u5b8c\u6574\u200b\u7684\u200b langgraph.json \u200b\u914d\u7f6e","text":"<pre><code>{\n  \"dependencies\": [\n    \"langchain_openai\",\n    \"langgraph\",\n    \"pydantic&gt;=2.0.0\",\n    \"./my_agent\"\n  ],\n  \"graphs\": {\n    \"chat_agent\": \"./my_agent/agent.py:agent\",\n    \"analysis_agent\": \"./my_agent/analysis.py:analyzer\"\n  },\n  \"env\": \"./.env\",\n  \"dockerfile_lines\": [\n    \"RUN apt-get update &amp;&amp; apt-get install -y curl\",\n    \"RUN pip install --upgrade pip\"\n  ]\n}\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#2","title":"2. \u200b\u591a\u56fe\u200b\u5e94\u7528\u200b\u7ed3\u6784","text":"<p>\u200b\u5bf9\u4e8e\u200b\u5305\u542b\u200b\u591a\u4e2a\u200b\u56fe\u200b\u7684\u200b\u5e94\u7528\u200b\uff1a</p> <pre><code>multi-agent-app/\n\u251c\u2500\u2500 agents/\n\u2502   \u251c\u2500\u2500 chat_agent.py\n\u2502   \u251c\u2500\u2500 analysis_agent.py\n\u2502   \u2514\u2500\u2500 utils/\n\u251c\u2500\u2500 shared/\n\u2502   \u251c\u2500\u2500 state.py\n\u2502   \u2514\u2500\u2500 tools.py\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 requirements.txt\n\u2514\u2500\u2500 langgraph.json\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#_10","title":"\u5f00\u53d1\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b","text":""},{"location":"llmapps/langgraph/application%20structure/#1","title":"\u6b65\u9aa4\u200b 1\uff1a\u200b\u521d\u59cb\u5316\u200b\u9879\u76ee\u200b\u7ed3\u6784","text":"<pre><code>mkdir my-langgraph-app\ncd my-langgraph-app\nmkdir -p my_agent/utils\ntouch my_agent/__init__.py my_agent/utils/__init__.py\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#2_1","title":"\u6b65\u9aa4\u200b 2\uff1a\u200b\u521b\u5efa\u200b\u6838\u5fc3\u200b\u6587\u4ef6","text":"<pre><code>touch my_agent/agent.py my_agent/utils/state.py\ntouch my_agent/utils/nodes.py my_agent/utils/tools.py\ntouch .env requirements.txt langgraph.json\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#3_1","title":"\u6b65\u9aa4\u200b 3\uff1a\u200b\u914d\u7f6e\u200b\u4f9d\u8d56\u200b\u548c\u200b\u73af\u5883","text":"<pre><code># requirements.txt\necho \"langchain_openai\" &gt;&gt; requirements.txt\necho \"langgraph\" &gt;&gt; requirements.txt\n\n# .env\necho \"OPENAI_API_KEY=your_key_here\" &gt;&gt; .env\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#4_1","title":"\u6b65\u9aa4\u200b 4\uff1a\u200b\u6d4b\u8bd5\u200b\u548c\u200b\u90e8\u7f72","text":"<pre><code># \u200b\u672c\u5730\u200b\u6d4b\u8bd5\u200b\npython -c \"from my_agent.agent import agent; print('Graph compiled successfully')\"\n\n# \u200b\u4f7f\u7528\u200b LangGraph CLI \u200b\u90e8\u7f72\u200b\nlanggraph deploy\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#_11","title":"\u6545\u969c\u200b\u6392\u9664","text":""},{"location":"llmapps/langgraph/application%20structure/#_12","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u200b\u4f9d\u8d56\u200b\u89e3\u6790\u200b\u5931\u8d25\u200b</li> <li>\u200b\u68c0\u67e5\u200b\u4f9d\u8d56\u200b\u5305\u200b\u540d\u79f0\u200b\u548c\u200b\u7248\u672c\u200b</li> <li> <p>\u200b\u9a8c\u8bc1\u200b\u672c\u5730\u200b\u5305\u200b\u8def\u5f84\u200b\u662f\u5426\u200b\u6b63\u786e\u200b</p> </li> <li> <p>\u200b\u56fe\u200b\u52a0\u8f7d\u200b\u9519\u8bef\u200b</p> </li> <li>\u200b\u786e\u8ba4\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u548c\u200b\u53d8\u91cf\u540d\u200b\u6b63\u786e\u200b</li> <li> <p>\u200b\u68c0\u67e5\u200b\u56fe\u200b\u7f16\u8bd1\u200b\u662f\u5426\u200b\u6709\u200b\u8bed\u6cd5\u9519\u8bef\u200b</p> </li> <li> <p>\u200b\u73af\u5883\u53d8\u91cf\u200b\u7f3a\u5931\u200b</p> </li> <li>\u200b\u9a8c\u8bc1\u200b <code>.env</code> \u200b\u6587\u4ef6\u200b\u5b58\u5728\u200b\u4e14\u200b\u683c\u5f0f\u200b\u6b63\u786e\u200b</li> <li>\u200b\u68c0\u67e5\u200b\u751f\u4ea7\u200b\u73af\u5883\u53d8\u91cf\u200b\u914d\u7f6e\u200b</li> </ol>"},{"location":"llmapps/langgraph/application%20structure/#_13","title":"\u8c03\u8bd5\u200b\u6280\u5de7","text":"<pre><code># \u200b\u5728\u200b agent.py \u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u8c03\u8bd5\u4fe1\u606f\u200b\ndef create_agent_graph():\n    print(\"\u200b\u5f00\u59cb\u200b\u6784\u5efa\u200b\u56fe\u200b...\")\n    graph = Graph()\n    # ... \u200b\u6784\u5efa\u200b\u903b\u8f91\u200b\n    compiled_graph = graph.compile()\n    print(\"\u200b\u56fe\u200b\u6784\u5efa\u200b\u5b8c\u6210\u200b\")\n    return compiled_graph\n</code></pre>"},{"location":"llmapps/langgraph/application%20structure/#_14","title":"\u603b\u7ed3","text":"<p>\u200b\u901a\u8fc7\u200b\u672c\u200b\u6559\u7a0b\u200b\uff0c\u200b\u60a8\u200b\u5e94\u8be5\u200b\u80fd\u591f\u200b\uff1a</p> <ul> <li>\u2705 \u200b\u7406\u89e3\u200b LangGraph \u200b\u5e94\u7528\u200b\u7684\u200b\u6838\u5fc3\u200b\u7ec4\u4ef6\u200b</li> <li>\u2705 \u200b\u521b\u5efa\u200b\u6807\u51c6\u200b\u7684\u200b\u9879\u76ee\u200b\u7ed3\u6784\u200b</li> <li>\u2705 \u200b\u914d\u7f6e\u200b\u6b63\u786e\u200b\u7684\u200b\u4f9d\u8d56\u200b\u7ba1\u7406\u200b</li> <li>\u2705 \u200b\u5b9a\u4e49\u200b\u548c\u200b\u6784\u5efa\u200b\u529f\u80fd\u200b\u56fe\u200b</li> <li>\u2705 \u200b\u8bbe\u7f6e\u200b\u73af\u5883\u53d8\u91cf\u200b\u548c\u200b\u914d\u7f6e\u6587\u4ef6\u200b</li> <li>\u2705 \u200b\u51c6\u5907\u200b\u5e94\u7528\u200b\u8fdb\u884c\u200b\u90e8\u7f72\u200b</li> </ul> <p>\u200b\u9075\u5faa\u200b\u8fd9\u4e9b\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\u5c06\u200b\u786e\u4fdd\u60a8\u200b\u7684\u200b LangGraph \u200b\u5e94\u7528\u200b\u7ed3\u6784\u200b\u6e05\u6670\u200b\u3001\u200b\u6613\u4e8e\u200b\u7ef4\u62a4\u200b\uff0c\u200b\u5e76\u200b\u80fd\u591f\u200b\u987a\u5229\u200b\u90e8\u7f72\u200b\u5230\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u3002</p>"},{"location":"llmapps/langgraph/durable%20execution/","title":"LangGraph \u200b\u6301\u4e45\u200b\u5316\u200b\u6267\u884c\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langgraph/durable%20execution/#_1","title":"\u4ec0\u4e48\u200b\u662f\u200b\u6301\u4e45\u200b\u5316\u200b\u6267\u884c\u200b\uff1f","text":"<p>\u200b\u6301\u4e45\u200b\u5316\u200b\u6267\u884c\u200b\u662f\u200b\u4e00\u79cd\u200b\u6280\u672f\u200b\uff0c\u200b\u5141\u8bb8\u200b\u6d41\u7a0b\u200b\u6216\u200b\u5de5\u4f5c\u200b\u6d41\u5728\u200b\u5173\u952e\u70b9\u200b\u4fdd\u5b58\u200b\u8fdb\u5ea6\u200b\uff0c\u200b\u4ece\u800c\u200b\u80fd\u591f\u200b\u6682\u505c\u200b\u5e76\u200b\u5728\u200b\u4e4b\u540e\u200b\u4ece\u200b\u79bb\u5f00\u200b\u7684\u200b\u5730\u65b9\u200b\u51c6\u786e\u200b\u6062\u590d\u200b\u3002\u200b\u8fd9\u200b\u5728\u200b\u4ee5\u4e0b\u200b\u573a\u666f\u200b\u4e2d\u200b\u7279\u522b\u200b\u6709\u7528\u200b\uff1a</p> <ul> <li>\u200b\u4eba\u5de5\u200b\u4ecb\u5165\u200b\u573a\u666f\u200b\uff1a\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7ee7\u7eed\u200b\u4e4b\u524d\u200b\u68c0\u67e5\u200b\u3001\u200b\u9a8c\u8bc1\u200b\u6216\u200b\u4fee\u6539\u200b\u6d41\u7a0b\u200b</li> <li>\u200b\u957f\u65f6\u95f4\u200b\u8fd0\u884c\u200b\u4efb\u52a1\u200b\uff1a\u200b\u53ef\u80fd\u200b\u9047\u5230\u200b\u4e2d\u65ad\u200b\u6216\u200b\u9519\u8bef\u200b\u7684\u200b\u4efb\u52a1\u200b\uff08\u200b\u5982\u200b LLM \u200b\u8c03\u7528\u200b\u8d85\u65f6\u200b\uff09</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u4fdd\u5b58\u200b\u5df2\u200b\u5b8c\u6210\u200b\u7684\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u6301\u4e45\u200b\u5316\u200b\u6267\u884c\u200b\u786e\u4fdd\u200b\u6d41\u7a0b\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e0d\u200b\u91cd\u65b0\u5904\u7406\u200b\u5148\u524d\u200b\u6b65\u9aa4\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u6062\u590d\u200b\u2014\u2014\u200b\u5373\u4f7f\u200b\u5728\u200b\u957f\u200b\u65f6\u95f4\u5ef6\u8fdf\u200b\u540e\u200b\uff08\u200b\u5982\u200b\u4e00\u5468\u200b\u540e\u200b\uff09\u3002</p>"},{"location":"llmapps/langgraph/durable%20execution/#_2","title":"\u542f\u7528\u200b\u6301\u4e45\u200b\u5316\u200b\u6267\u884c","text":""},{"location":"llmapps/langgraph/durable%20execution/#1","title":"1. \u200b\u914d\u7f6e\u200b\u6301\u4e45\u200b\u5316\u200b\u5b58\u50a8","text":"<p>\u200b\u8981\u200b\u542f\u7528\u200b\u6301\u4e45\u200b\u5316\u200b\u6267\u884c\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b\u7f16\u8bd1\u200b\u56fe\u65f6\u200b\u6307\u5b9a\u200b\u4e00\u4e2a\u200b\u68c0\u67e5\u70b9\u200b\u5b58\u50a8\u5668\u200b\uff1a</p> <pre><code>from langgraph.checkpoint.memory import InMemorySaver\nfrom langgraph.graph import StateGraph\n\n# \u200b\u521b\u5efa\u200b\u72b6\u6001\u56fe\u200b\nbuilder = StateGraph(State)\nbuilder.add_node(\"process_data\", process_data)\nbuilder.add_edge(START, \"process_data\")\n\n# \u200b\u6307\u5b9a\u200b\u68c0\u67e5\u70b9\u200b\u5b58\u50a8\u5668\u200b\ncheckpointer = InMemorySaver()\n\n# \u200b\u7f16\u8bd1\u200b\u56fe\u200b\u5e76\u200b\u542f\u7528\u200b\u6301\u4e45\u200b\u5316\u200b\ngraph = builder.compile(checkpointer=checkpointer)\n</code></pre>"},{"location":"llmapps/langgraph/durable%20execution/#2","title":"2. \u200b\u6307\u5b9a\u200b\u7ebf\u7a0b\u200b\u6807\u8bc6\u7b26","text":"<p>\u200b\u6267\u884c\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u65f6\u200b\u9700\u8981\u200b\u63d0\u4f9b\u200b\u7ebf\u7a0b\u200bID\u200b\u6765\u200b\u8ddf\u8e2a\u200b\u7279\u5b9a\u200b\u5b9e\u4f8b\u200b\u7684\u200b\u6267\u884c\u200b\u5386\u53f2\u200b\uff1a</p> <pre><code>import uuid\n\n# \u200b\u751f\u6210\u200b\u552f\u4e00\u200b\u7684\u200b\u7ebf\u7a0b\u200bID\nthread_id = uuid.uuid4()\nconfig = {\"configurable\": {\"thread_id\": thread_id}}\n\n# \u200b\u6267\u884c\u200b\u5de5\u4f5c\u200b\u6d41\u200b\ngraph.invoke({\"input\": \"data\"}, config)\n</code></pre>"},{"location":"llmapps/langgraph/durable%20execution/#_3","title":"\u786e\u4fdd\u200b\u786e\u5b9a\u6027\u200b\u548c\u200b\u4e00\u81f4\u6027\u200b\u91cd\u200b\u653e","text":"<p>\u200b\u5f53\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u6062\u590d\u200b\u65f6\u200b\uff0c\u200b\u4ee3\u7801\u200b\u4e0d\u4f1a\u200b\u4ece\u200b\u505c\u6b62\u200b\u7684\u200b\u540c\u4e00\u200b\u884c\u200b\u4ee3\u7801\u200b\u6062\u590d\u200b\uff0c\u200b\u800c\u662f\u200b\u4ece\u200b\u9002\u5f53\u200b\u7684\u200b\u8d77\u70b9\u200b\u91cd\u65b0\u200b\u5f00\u59cb\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5fc5\u987b\u200b\u9075\u5faa\u200b\u4ee5\u4e0b\u200b\u51c6\u5219\u200b\uff1a</p>"},{"location":"llmapps/langgraph/durable%20execution/#_4","title":"\u4f7f\u7528\u200b\u4efb\u52a1\u200b\u5305\u88c5\u200b\u975e\u200b\u786e\u5b9a\u6027\u200b\u64cd\u4f5c","text":"<p>\u200b\u5c06\u200b\u4efb\u4f55\u200b\u975e\u200b\u786e\u5b9a\u6027\u200b\u64cd\u4f5c\u200b\uff08\u200b\u5982\u200b\u968f\u673a\u6570\u200b\u751f\u6210\u200b\uff09\u200b\u6216\u200b\u5177\u6709\u200b\u526f\u4f5c\u7528\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff08\u200b\u5982\u200b\u6587\u4ef6\u200b\u5199\u5165\u200b\u3001API\u200b\u8c03\u7528\u200b\uff09\u200b\u5305\u88c5\u200b\u5728\u200b <code>@task</code> \u200b\u88c5\u9970\u200b\u5668\u4e2d\u200b\uff1a</p> <pre><code>from langgraph.func import task\nimport requests\n\n@task\ndef make_api_call(url: str):\n    \"\"\"\u200b\u5305\u88c5\u200bAPI\u200b\u8c03\u7528\u200b\"\"\"\n    return requests.get(url).text[:100]\n\ndef process_data(state: State):\n    \"\"\"\u200b\u5904\u7406\u200b\u6570\u636e\u200b\u7684\u200b\u8282\u70b9\u200b\"\"\"\n    # \u200b\u4f7f\u7528\u200b\u4efb\u52a1\u200b\u6765\u200b\u786e\u4fdd\u200b\u786e\u5b9a\u6027\u200b\n    api_results = [make_api_call(url) for url in state['urls']]\n    results = [result.result() for result in api_results]\n    return {\"results\": results}\n</code></pre>"},{"location":"llmapps/langgraph/durable%20execution/#_5","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":"<ul> <li>\u200b\u907f\u514d\u200b\u91cd\u590d\u200b\u5de5\u4f5c\u200b\uff1a\u200b\u5c06\u200b\u591a\u4e2a\u200b\u526f\u4f5c\u7528\u200b\u64cd\u4f5c\u200b\u5305\u88c5\u200b\u5728\u200b\u5355\u72ec\u200b\u7684\u200b\u4efb\u52a1\u200b\u4e2d\u200b</li> <li>\u200b\u5c01\u88c5\u200b\u975e\u200b\u786e\u5b9a\u6027\u200b\u64cd\u4f5c\u200b\uff1a\u200b\u786e\u4fdd\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u9075\u5faa\u200b\u7cbe\u786e\u200b\u8bb0\u5f55\u200b\u7684\u200b\u6267\u884c\u200b\u5e8f\u5217\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u5e42\u200b\u7b49\u200b\u64cd\u4f5c\u200b\uff1a\u200b\u786e\u4fdd\u200b\u526f\u4f5c\u7528\u200b\u64cd\u4f5c\u200b\u53ef\u4ee5\u200b\u5b89\u5168\u200b\u91cd\u8bd5\u200b</li> </ul>"},{"location":"llmapps/langgraph/durable%20execution/#_6","title":"\u6301\u4e45\u200b\u5316\u200b\u6a21\u5f0f","text":"<p>LangGraph \u200b\u63d0\u4f9b\u200b\u4e09\u79cd\u200b\u6301\u4e45\u200b\u5316\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5e73\u8861\u200b\u6027\u80fd\u200b\u548c\u200b\u6570\u636e\u200b\u4e00\u81f4\u6027\u200b\uff1a</p>"},{"location":"llmapps/langgraph/durable%20execution/#1-exit","title":"1. <code>\"exit\"</code> \u200b\u6a21\u5f0f","text":"<p>\u200b\u4ec5\u200b\u5728\u200b\u56fe\u200b\u6267\u884c\u200b\u5b8c\u6210\u200b\u65f6\u200b\u6301\u4e45\u200b\u5316\u200b\u66f4\u6539\u200b\u3002\u200b\u6027\u80fd\u200b\u6700\u4f73\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u4fdd\u5b58\u200b\u4e2d\u95f4\u72b6\u6001\u200b\u3002</p> <pre><code>graph.stream(\n    {\"input\": \"test\"},\n    durability=\"exit\",\n    config=config\n)\n</code></pre>"},{"location":"llmapps/langgraph/durable%20execution/#2-async","title":"2. <code>\"async\"</code> \u200b\u6a21\u5f0f","text":"<p>\u200b\u5728\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u6267\u884c\u200b\u65f6\u200b\u5f02\u6b65\u200b\u6301\u4e45\u200b\u5316\u200b\u66f4\u6539\u200b\u3002\u200b\u63d0\u4f9b\u200b\u826f\u597d\u200b\u7684\u200b\u6027\u80fd\u200b\u548c\u200b\u6301\u4e45\u6027\u200b\u5e73\u8861\u200b\u3002</p> <pre><code>graph.stream(\n    {\"input\": \"test\"},\n    durability=\"async\", \n    config=config\n)\n</code></pre>"},{"location":"llmapps/langgraph/durable%20execution/#3-sync","title":"3. <code>\"sync\"</code> \u200b\u6a21\u5f0f","text":"<p>\u200b\u5728\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u5f00\u59cb\u200b\u524d\u200b\u540c\u6b65\u200b\u6301\u4e45\u200b\u5316\u200b\u66f4\u6539\u200b\u3002\u200b\u63d0\u4f9b\u200b\u6700\u9ad8\u200b\u7684\u200b\u6301\u4e45\u6027\u200b\u4fdd\u8bc1\u200b\u3002</p> <pre><code>graph.stream(\n    {\"input\": \"test\"},\n    durability=\"sync\",\n    config=config\n)\n</code></pre>"},{"location":"llmapps/langgraph/durable%20execution/#_7","title":"\u5728\u200b\u8282\u70b9\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u4efb\u52a1","text":"<p>\u200b\u5982\u679c\u200b\u8282\u70b9\u200b\u5305\u542b\u200b\u591a\u4e2a\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u64cd\u4f5c\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u4efb\u52a1\u200b\uff1a</p>"},{"location":"llmapps/langgraph/durable%20execution/#_8","title":"\u539f\u59cb\u200b\u5b9e\u73b0\u200b\uff08\u200b\u6709\u200b\u95ee\u9898\u200b\uff09","text":"<pre><code>def call_api(state: State):\n    \"\"\"\u200b\u6709\u200b\u95ee\u9898\u200b\u7684\u200b\u5b9e\u73b0\u200b - \u200b\u76f4\u63a5\u200b\u8fdb\u884c\u200bAPI\u200b\u8c03\u7528\u200b\"\"\"\n    result = requests.get(state['url']).text[:100]  # \u200b\u526f\u4f5c\u7528\u200b\u64cd\u4f5c\u200b\n    return {\"result\": result}\n</code></pre>"},{"location":"llmapps/langgraph/durable%20execution/#_9","title":"\u4f7f\u7528\u200b\u4efb\u52a1\u200b\u7684\u200b\u6539\u8fdb\u200b\u5b9e\u73b0","text":"<pre><code>@task\ndef _make_request(url: str):\n    \"\"\"\u200b\u5c06\u200bAPI\u200b\u8c03\u7528\u200b\u5305\u88c5\u200b\u4e3a\u200b\u4efb\u52a1\u200b\"\"\"\n    return requests.get(url).text[:100]\n\ndef call_api(state: State):\n    \"\"\"\u200b\u6539\u8fdb\u200b\u7684\u200b\u5b9e\u73b0\u200b - \u200b\u4f7f\u7528\u200b\u4efb\u52a1\u200b\"\"\"\n    requests = [_make_request(url) for url in state['urls']]\n    results = [request.result() for request in requests]\n    return {\"results\": results}\n</code></pre>"},{"location":"llmapps/langgraph/durable%20execution/#_10","title":"\u6062\u590d\u200b\u5de5\u4f5c\u200b\u6d41","text":""},{"location":"llmapps/langgraph/durable%20execution/#1_1","title":"1. \u200b\u6682\u505c\u200b\u548c\u200b\u6062\u590d\u200b\u5de5\u4f5c\u200b\u6d41","text":"<p>\u200b\u4f7f\u7528\u200b\u4e2d\u65ad\u200b\u673a\u5236\u200b\u5728\u200b\u7279\u5b9a\u200b\u70b9\u200b\u6682\u505c\u200b\u5de5\u4f5c\u200b\u6d41\u200b\uff1a</p> <pre><code>from langgraph.types import interrupt, Command\n\n# \u200b\u5728\u200b\u8282\u70b9\u200b\u4e2d\u200b\u8bbe\u7f6e\u200b\u4e2d\u65ad\u70b9\u200b\ndef review_step(state: State):\n    # ... \u200b\u5904\u7406\u200b\u903b\u8f91\u200b\n    interrupt()  # \u200b\u6682\u505c\u200b\u6267\u884c\u200b\u7b49\u5f85\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\n    return state\n\n# \u200b\u6062\u590d\u200b\u5de5\u4f5c\u200b\u6d41\u200b\ncommand = Command(resume=True, update={\"approved\": True})\ngraph.stream(None, config=config, command=command)\n</code></pre>"},{"location":"llmapps/langgraph/durable%20execution/#2_1","title":"2. \u200b\u4ece\u200b\u9519\u8bef\u200b\u4e2d\u200b\u6062\u590d","text":"<p>\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6210\u529f\u200b\u7684\u200b\u68c0\u67e5\u70b9\u200b\u81ea\u52a8\u200b\u6062\u590d\u200b\uff1a</p> <pre><code>try:\n    # \u200b\u9996\u6b21\u200b\u6267\u884c\u200b\n    graph.invoke({\"input\": \"data\"}, config)\nexcept Exception:\n    # \u200b\u4ece\u200b\u9519\u8bef\u200b\u4e2d\u200b\u6062\u590d\u200b - \u200b\u8f93\u5165\u200b\u4e3a\u200b None\n    graph.invoke(None, config)\n</code></pre>"},{"location":"llmapps/langgraph/durable%20execution/#_11","title":"\u6062\u590d\u200b\u8d77\u70b9","text":"<p>\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u6062\u590d\u200b\u65f6\u200b\u7684\u200b\u8d77\u70b9\u200b\u53d6\u51b3\u4e8e\u200b\u4f7f\u7528\u200b\u7684\u200bAPI\uff1a</p> <ul> <li>StateGraph\uff1a\u200b\u4ece\u200b\u6267\u884c\u200b\u505c\u6b62\u200b\u7684\u200b\u8282\u70b9\u200b\u5f00\u59cb\u200b</li> <li>\u200b\u5b50\u56fe\u200b\u8c03\u7528\u200b\uff1a\u200b\u4ece\u200b\u8c03\u7528\u200b\u88ab\u200b\u505c\u6b62\u200b\u5b50\u56fe\u200b\u7684\u200b\u7236\u200b\u8282\u70b9\u200b\u5f00\u59cb\u200b</li> <li>Functional API\uff1a\u200b\u4ece\u200b\u6267\u884c\u200b\u505c\u6b62\u200b\u7684\u200b\u5165\u53e3\u200b\u70b9\u200b\u5f00\u59cb\u200b</li> </ul>"},{"location":"llmapps/langgraph/durable%20execution/#_12","title":"\u5b8c\u6574\u200b\u793a\u4f8b","text":"<pre><code>from typing import List, Optional\nfrom typing_extensions import TypedDict\nimport uuid\nfrom langgraph.checkpoint.memory import InMemorySaver\nfrom langgraph.func import task\nfrom langgraph.graph import StateGraph, START, END\nimport requests\n\n# \u200b\u5b9a\u4e49\u200b\u72b6\u6001\u200b\nclass ProcessingState(TypedDict):\n    urls: List[str]\n    results: Optional[List[str]]\n    processed: bool\n\n# \u200b\u5305\u88c5\u200bAPI\u200b\u8c03\u7528\u200b\u4e3a\u200b\u4efb\u52a1\u200b\n@task\ndef fetch_url_content(url: str):\n    \"\"\"\u200b\u83b7\u53d6\u200bURL\u200b\u5185\u5bb9\u200b\"\"\"\n    return requests.get(url).text[:500]\n\ndef process_urls(state: ProcessingState):\n    \"\"\"\u200b\u5904\u7406\u200bURL\u200b\u7684\u200b\u8282\u70b9\u200b\"\"\"\n    # \u200b\u4f7f\u7528\u200b\u4efb\u52a1\u200b\u5e76\u884c\u5904\u7406\u200bURL\n    fetch_tasks = [fetch_url_content(url) for url in state['urls']]\n    results = [task.result() for task in fetch_tasks]\n\n    return {\n        \"results\": results,\n        \"processed\": True\n    }\n\n# \u200b\u6784\u5efa\u200b\u56fe\u200b\nbuilder = StateGraph(ProcessingState)\nbuilder.add_node(\"process_urls\", process_urls)\nbuilder.add_edge(START, \"process_urls\")\nbuilder.add_edge(\"process_urls\", END)\n\n# \u200b\u542f\u7528\u200b\u6301\u4e45\u200b\u5316\u200b\ncheckpointer = InMemorySaver()\ngraph = builder.compile(checkpointer=checkpointer)\n\n# \u200b\u6267\u884c\u200b\u5de5\u4f5c\u200b\u6d41\u200b\nthread_id = uuid.uuid4()\nconfig = {\"configurable\": {\"thread_id\": thread_id}}\n\ntry:\n    # \u200b\u9996\u6b21\u200b\u6267\u884c\u200b\n    result = graph.invoke({\n        \"urls\": [\"https://example.com\", \"https://example.org\"]\n    }, config)\n    print(\"\u200b\u5904\u7406\u200b\u5b8c\u6210\u200b:\", result)\n\nexcept Exception as e:\n    print(f\"\u200b\u6267\u884c\u200b\u51fa\u9519\u200b: {e}\")\n    # \u200b\u4ece\u200b\u9519\u8bef\u200b\u4e2d\u200b\u6062\u590d\u200b\n    recovery_result = graph.invoke(None, config)\n    print(\"\u200b\u6062\u590d\u200b\u540e\u200b\u7684\u200b\u7ed3\u679c\u200b:\", recovery_result)\n</code></pre> <p>\u200b\u901a\u8fc7\u200b\u9075\u5faa\u200b\u672c\u200b\u6559\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u5065\u58ee\u200b\u7684\u200b\u3001\u200b\u652f\u6301\u200b\u6301\u4e45\u200b\u5316\u200b\u6267\u884c\u200b\u7684\u200b LangGraph \u200b\u5de5\u4f5c\u200b\u6d41\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5728\u200b\u4e2d\u65ad\u200b\u6216\u200b\u9519\u8bef\u200b\u540e\u200b\u80fd\u591f\u200b\u53ef\u9760\u200b\u6062\u590d\u200b\u3002</p>"},{"location":"llmapps/langgraph/graph%20api%20overview/","title":"LangGraph \u200b\u5165\u95e8\u6559\u7a0b\u200b\uff1a\u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4ee3\u7406\u200b\u5de5\u4f5c\u200b\u6d41","text":""},{"location":"llmapps/langgraph/graph%20api%20overview/#_1","title":"\u6982\u8ff0","text":"<p>LangGraph \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4ee3\u7406\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u7684\u200b\u6846\u67b6\u200b\uff0c\u200b\u5b83\u200b\u5c06\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u5efa\u6a21\u200b\u4e3a\u200b\u56fe\u200b\u3002\u200b\u901a\u8fc7\u200b\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u3001\u200b\u8282\u70b9\u200b\u548c\u200b\u8fb9\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u590d\u6742\u200b\u3001\u200b\u53ef\u200b\u5faa\u73af\u200b\u7684\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u3002</p>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_2","title":"\u6838\u5fc3\u200b\u6982\u5ff5","text":""},{"location":"llmapps/langgraph/graph%20api%20overview/#1","title":"1. \u200b\u56fe\u200b\u7684\u200b\u57fa\u672c\u200b\u7ec4\u6210","text":"<p>LangGraph \u200b\u5de5\u4f5c\u200b\u6d41\u7531\u200b\u4e09\u4e2a\u200b\u6838\u5fc3\u200b\u7ec4\u4ef6\u200b\u6784\u6210\u200b\uff1a</p> <ul> <li>State\uff08\u200b\u72b6\u6001\u200b\uff09\uff1a\u200b\u5171\u4eab\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u8868\u793a\u200b\u5e94\u7528\u200b\u7684\u200b\u5f53\u524d\u200b\u5feb\u7167\u200b</li> <li>Nodes\uff08\u200b\u8282\u70b9\u200b\uff09\uff1a\u200b\u6267\u884c\u200b\u5177\u4f53\u200b\u903b\u8f91\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u63a5\u6536\u200b\u72b6\u6001\u200b\u5e76\u200b\u8fd4\u56de\u200b\u66f4\u65b0\u200b</li> <li>Edges\uff08\u200b\u8fb9\u200b\uff09\uff1a\u200b\u51b3\u5b9a\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u6267\u884c\u200b\u8282\u70b9\u200b\u7684\u200b\u8def\u7531\u200b\u903b\u8f91\u200b</li> </ul> <p>\u200b\u6838\u5fc3\u200b\u539f\u5219\u200b\uff1a\u200b\u8282\u70b9\u200b\u6267\u884c\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u8fb9\u200b\u51b3\u5b9a\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u505a\u200b\u4ec0\u4e48\u200b</p>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_3","title":"\u5feb\u901f\u200b\u5f00\u59cb","text":""},{"location":"llmapps/langgraph/graph%20api%20overview/#1_1","title":"\u6b65\u9aa4\u200b1\uff1a\u200b\u5b9a\u4e49\u200b\u72b6\u6001","text":"<p>\u200b\u9996\u5148\u200b\u5b9a\u4e49\u200b\u56fe\u200b\u7684\u200b\u72b6\u6001\u200b\u7ed3\u6784\u200b\uff0c\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200b <code>TypedDict</code>\uff1a</p> <pre><code>from typing_extensions import TypedDict\n\nclass State(TypedDict):\n    user_input: str\n    processed_result: str\n    conversation_history: list\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#2","title":"\u6b65\u9aa4\u200b2\uff1a\u200b\u521b\u5efa\u200b\u56fe\u200b\u6784\u5efa\u200b\u5668","text":"<pre><code>from langgraph.graph import StateGraph\n\nbuilder = StateGraph(State)\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#3","title":"\u6b65\u9aa4\u200b3\uff1a\u200b\u6dfb\u52a0\u200b\u8282\u70b9","text":"<p>\u200b\u8282\u70b9\u200b\u662f\u200b\u6267\u884c\u200b\u5177\u4f53\u200b\u5de5\u4f5c\u200b\u7684\u200b\u51fd\u6570\u200b\uff1a</p> <pre><code>def process_input(state: State):\n    # \u200b\u5904\u7406\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\n    processed = state[\"user_input\"].upper()\n    return {\"processed_result\": processed}\n\ndef generate_response(state: State):\n    # \u200b\u751f\u6210\u200b\u54cd\u5e94\u200b\n    response = f\"Processed: {state['processed_result']}\"\n    return {\"conversation_history\": [response]}\n\n# \u200b\u6dfb\u52a0\u200b\u8282\u70b9\u200b\u5230\u200b\u56fe\u200b\u4e2d\u200b\nbuilder.add_node(\"process_input\", process_input)\nbuilder.add_node(\"generate_response\", generate_response)\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#4","title":"\u6b65\u9aa4\u200b4\uff1a\u200b\u5b9a\u4e49\u200b\u8fb9","text":"<p>\u200b\u8fde\u63a5\u200b\u8282\u70b9\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u6267\u884c\u200b\u6d41\u7a0b\u200b\uff1a</p> <pre><code>from langgraph.graph import START, END\n\n# \u200b\u8bbe\u7f6e\u200b\u5165\u53e3\u200b\u70b9\u200b\nbuilder.add_edge(START, \"process_input\")\n# \u200b\u8fde\u63a5\u200b\u5904\u7406\u200b\u8282\u70b9\u200b\u5230\u200b\u54cd\u5e94\u200b\u8282\u70b9\u200b\nbuilder.add_edge(\"process_input\", \"generate_response\")\n# \u200b\u8bbe\u7f6e\u200b\u7ed3\u675f\u200b\u70b9\u200b\nbuilder.add_edge(\"generate_response\", END)\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#5","title":"\u6b65\u9aa4\u200b5\uff1a\u200b\u7f16\u8bd1\u200b\u56fe","text":"<p>\u200b\u5fc5\u987b\u200b\u7f16\u8bd1\u200b\u540e\u200b\u624d\u80fd\u200b\u4f7f\u7528\u200b\uff1a</p> <pre><code>graph = builder.compile()\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#6","title":"\u6b65\u9aa4\u200b6\uff1a\u200b\u6267\u884c\u200b\u56fe","text":"<pre><code># \u200b\u8f93\u5165\u200b\u521d\u59cb\u72b6\u6001\u200b\nresult = graph.invoke({\"user_input\": \"hello world\"})\nprint(result)\n# \u200b\u8f93\u51fa\u200b: {'user_input': 'hello world', 'processed_result': 'HELLO WORLD', 'conversation_history': ['Processed: HELLO WORLD']}\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_4","title":"\u6df1\u5165\u200b\u7406\u89e3\u200b\u72b6\u6001\u200b\u7ba1\u7406","text":""},{"location":"llmapps/langgraph/graph%20api%20overview/#_5","title":"\u72b6\u6001\u200b\u5f52\u7ea6\u200b\u5668","text":"<p>\u200b\u5f52\u7ea6\u200b\u5668\u200b\u5b9a\u4e49\u200b\u5982\u4f55\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\uff1a</p> <pre><code>from typing import Annotated\nfrom operator import add\n\nclass State(TypedDict):\n    # \u200b\u9ed8\u8ba4\u200b\u5f52\u7ea6\u200b\u5668\u200b\uff1a\u200b\u8986\u76d6\u200b\u66f4\u65b0\u200b\n    current_value: int\n    # \u200b\u4f7f\u7528\u200badd\u200b\u5f52\u7ea6\u200b\u5668\u200b\uff1a\u200b\u8ffd\u52a0\u200b\u66f4\u65b0\u200b\n    history: Annotated[list, add]\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_6","title":"\u6d88\u606f\u200b\u5904\u7406","text":"<p>\u200b\u5904\u7406\u200b\u5bf9\u8bdd\u200b\u6d88\u606f\u200b\u7684\u200b\u5e38\u7528\u200b\u6a21\u5f0f\u200b\uff1a</p> <pre><code>from langchain.messages import AnyMessage\nfrom langgraph.graph.message import add_messages\n\nclass GraphState(TypedDict):\n    messages: Annotated[list[AnyMessage], add_messages]\n</code></pre> <p>\u200b\u6216\u8005\u200b\u4f7f\u7528\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7684\u200b <code>MessagesState</code>\uff1a</p> <pre><code>from langgraph.graph import MessagesState\n\nclass State(MessagesState):\n    additional_data: str\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_7","title":"\u9ad8\u7ea7\u200b\u8282\u70b9\u200b\u529f\u80fd","text":""},{"location":"llmapps/langgraph/graph%20api%20overview/#_8","title":"\u8282\u70b9\u200b\u53c2\u6570","text":"<p>\u200b\u8282\u70b9\u200b\u53ef\u4ee5\u200b\u63a5\u6536\u200b\u591a\u79cd\u200b\u53c2\u6570\u200b\uff1a</p> <pre><code>def advanced_node(\n    state: State, \n    config: RunnableConfig, \n    runtime: Runtime\n):\n    print(f\"Thread ID: {config['configurable']['thread_id']}\")\n    # \u200b\u6267\u884c\u200b\u8282\u70b9\u200b\u903b\u8f91\u200b\n    return {\"result\": \"success\"}\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_9","title":"\u8282\u70b9\u200b\u7f13\u5b58","text":"<p>\u200b\u5bf9\u200b\u8ba1\u7b97\u200b\u5bc6\u96c6\u578b\u200b\u8282\u70b9\u200b\u542f\u7528\u200b\u7f13\u5b58\u200b\uff1a</p> <pre><code>from langgraph.types import CachePolicy\n\n# \u200b\u8bbe\u7f6e\u200b\u7f13\u5b58\u200b\u7b56\u7565\u200b\uff08TTL=5\u200b\u79d2\u200b\uff09\ncache_policy = CachePolicy(ttl=5)\nbuilder.add_node(\"expensive_node\", expensive_function, cache_policy=cache_policy)\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_10","title":"\u590d\u6742\u200b\u8def\u7531\u200b\u63a7\u5236","text":""},{"location":"llmapps/langgraph/graph%20api%20overview/#_11","title":"\u6761\u4ef6\u200b\u8fb9","text":"<p>\u200b\u6839\u636e\u200b\u6761\u4ef6\u200b\u51b3\u5b9a\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\uff1a</p> <pre><code>def routing_function(state: State):\n    if len(state[\"user_input\"]) &gt; 10:\n        return \"long_input_node\"\n    else:\n        return \"short_input_node\"\n\nbuilder.add_conditional_edges(\"process_input\", routing_function)\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_12","title":"\u4f7f\u7528\u200b\u6620\u5c04\u200b\u8868","text":"<pre><code>route_map = {\n    \"long\": \"long_input_node\",\n    \"short\": \"short_input_node\"\n}\nbuilder.add_conditional_edges(\"process_input\", routing_function, route_map)\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_13","title":"\u9ad8\u7ea7\u200b\u7279\u6027","text":""},{"location":"llmapps/langgraph/graph%20api%20overview/#send-api","title":"Send API","text":"<p>\u200b\u7528\u4e8e\u200b\u52a8\u6001\u200b\u751f\u6210\u200b\u8fb9\u200b\uff08\u200b\u5982\u200bmap-reduce\u200b\u6a21\u5f0f\u200b\uff09\uff1a</p> <pre><code>from langgraph.types import Send\n\ndef split_and_process(state: State):\n    words = state[\"user_input\"].split()\n    return [Send(\"process_word\", {\"word\": word}) for word in words]\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#command-api","title":"Command API","text":"<p>\u200b\u7ed3\u5408\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u548c\u200b\u8def\u7531\u200b\u63a7\u5236\u200b\uff1a</p> <pre><code>from langgraph.types import Command\nfrom typing import Literal\n\ndef smart_node(state: State) -&gt; Command[Literal[\"next_node\"]]:\n    if state[\"value\"] &gt; 100:\n        return Command(\n            update={\"status\": \"high\"},\n            goto=\"handle_high_value\"\n        )\n    else:\n        return Command(\n            update={\"status\": \"low\"}, \n            goto=\"handle_low_value\"\n        )\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_14","title":"\u8fd0\u884c\u200b\u65f6\u200b\u914d\u7f6e","text":""},{"location":"llmapps/langgraph/graph%20api%20overview/#_15","title":"\u6dfb\u52a0\u200b\u4e0a\u4e0b\u6587","text":"<pre><code>from dataclasses import dataclass\n\n@dataclass\nclass ContextSchema:\n    user_id: str\n    api_key: str\n\ngraph = StateGraph(State, context_schema=ContextSchema)\n\n# \u200b\u4f7f\u7528\u200b\u4e0a\u4e0b\u6587\u200b\ndef context_aware_node(state: State, runtime: Runtime[ContextSchema]):\n    user_id = runtime.context.user_id\n    # \u200b\u4f7f\u7528\u200b\u4e0a\u4e0b\u6587\u200b\u4fe1\u606f\u200b\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_16","title":"\u9012\u5f52\u200b\u9650\u5236","text":"<p>\u200b\u9632\u6b62\u200b\u65e0\u9650\u200b\u5faa\u73af\u200b\uff1a</p> <pre><code># \u200b\u9650\u5236\u200b\u6700\u5927\u200b\u6267\u884c\u200b\u6b65\u6570\u200b\nresult = graph.invoke(\n    inputs, \n    config={\"recursion_limit\": 50}\n)\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_17","title":"\u5b8c\u6574\u200b\u793a\u4f8b","text":"<p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b8c\u6574\u200b\u7684\u200b\u5bf9\u8bdd\u200b\u4ee3\u7406\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>from typing_extensions import TypedDict\nfrom typing import Annotated\nfrom langgraph.graph import StateGraph, MessagesState, add_messages\nfrom langchain.messages import HumanMessage, AIMessage\n\nclass State(MessagesState):\n    needs_clarification: bool = False\n\ndef process_input(state: State):\n    last_message = state[\"messages\"][-1]\n\n    if \"?\" in last_message.content:\n        return {\"needs_clarification\": True}\n    return {\"needs_clarification\": False}\n\ndef generate_clarification(state: State):\n    return {\"messages\": [AIMessage(content=\"Could you please clarify your question?\")]}\n\ndef generate_response(state: State):\n    last_message = state[\"messages\"][-1]\n    response = f\"I understand you said: {last_message.content}\"\n    return {\"messages\": [AIMessage(content=response)]}\n\ndef route_conversation(state: State):\n    if state[\"needs_clarification\"]:\n        return \"generate_clarification\"\n    else:\n        return \"generate_response\"\n\n# \u200b\u6784\u5efa\u200b\u56fe\u200b\nbuilder = StateGraph(State)\nbuilder.add_node(\"process_input\", process_input)\nbuilder.add_node(\"generate_clarification\", generate_clarification)\nbuilder.add_node(\"generate_response\", generate_response)\n\nbuilder.add_edge(START, \"process_input\")\nbuilder.add_conditional_edges(\"process_input\", route_conversation)\nbuilder.add_edge(\"generate_clarification\", END)\nbuilder.add_edge(\"generate_response\", END)\n\ngraph = builder.compile()\n\n# \u200b\u4f7f\u7528\u200b\u56fe\u200b\nresult = graph.invoke({\n    \"messages\": [HumanMessage(content=\"Hello, how are you?\")]\n})\n</code></pre>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_18","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":"<ol> <li>\u200b\u72b6\u6001\u200b\u8bbe\u8ba1\u200b\uff1a\u200b\u4fdd\u6301\u200b\u72b6\u6001\u200b\u7b80\u6d01\u200b\uff0c\u200b\u53ea\u200b\u5305\u542b\u200b\u5fc5\u8981\u200b\u7684\u200b\u6570\u636e\u200b</li> <li>\u200b\u8282\u70b9\u200b\u804c\u8d23\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u5e94\u8be5\u200b\u53ea\u200b\u8d1f\u8d23\u200b\u4e00\u4e2a\u200b\u660e\u786e\u200b\u7684\u200b\u804c\u8d23\u200b</li> <li>\u200b\u9519\u8bef\u5904\u7406\u200b\uff1a\u200b\u5728\u200b\u8282\u70b9\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u9002\u5f53\u200b\u7684\u200b\u9519\u8bef\u5904\u7406\u200b\u903b\u8f91\u200b</li> <li>\u200b\u6d4b\u8bd5\u200b\uff1a\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u8fdb\u884c\u200b\u5355\u5143\u6d4b\u8bd5\u200b\uff0c\u200b\u5bf9\u200b\u6574\u4e2a\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u8fdb\u884c\u200b\u96c6\u6210\u200b\u6d4b\u8bd5\u200b</li> <li>\u200b\u76d1\u63a7\u200b\uff1a\u200b\u5229\u7528\u200bLangGraph\u200b\u7684\u200b\u8ffd\u8e2a\u200b\u529f\u80fd\u200b\u76d1\u63a7\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u6267\u884c\u200b</li> </ol>"},{"location":"llmapps/langgraph/graph%20api%20overview/#_19","title":"\u603b\u7ed3","text":"<p>LangGraph \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5f3a\u5927\u200b\u7684\u200b\u6846\u67b6\u200b\u6765\u200b\u6784\u5efa\u200b\u590d\u6742\u200b\u7684\u200b\u4ee3\u7406\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u3002\u200b\u901a\u8fc7\u200b\u7406\u89e3\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u3001\u200b\u8282\u70b9\u200b\u6267\u884c\u200b\u548c\u200b\u8def\u7531\u200b\u63a7\u5236\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u9ad8\u6548\u200b\u3001\u200b\u53ef\u200b\u7ef4\u62a4\u200b\u7684\u200b\u667a\u80fd\u200b\u5e94\u7528\u200b\u3002\u200b\u8bb0\u4f4f\u200b\u5173\u952e\u200b\u7684\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff1a\u200b\u5b9a\u4e49\u200b\u72b6\u6001\u200b \u2192 \u200b\u6dfb\u52a0\u200b\u8282\u70b9\u200b \u2192 \u200b\u8fde\u63a5\u200b\u8fb9\u200b \u2192 \u200b\u7f16\u8bd1\u200b\u6267\u884c\u200b\u3002</p> <p>\u200b\u5f00\u59cb\u200b\u6784\u5efa\u200b\u4f60\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200bLangGraph\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u5427\u200b\uff01</p>"},{"location":"llmapps/langgraph/interrupts/","title":"LangGraph \u200b\u4e2d\u65ad\u200b\u529f\u80fd\u200b\u5b8c\u6574\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langgraph/interrupts/#_1","title":"\u4ec0\u4e48\u200b\u662f\u200b\u4e2d\u65ad\u200b\uff1f","text":"<p>\u200b\u4e2d\u65ad\u200b\uff08Interrupts\uff09\u200b\u5141\u8bb8\u200b\u4f60\u200b\u5728\u200b\u56fe\u200b\u6267\u884c\u200b\u7684\u200b\u7279\u5b9a\u200b\u70b9\u200b\u6682\u505c\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u7ee7\u7eed\u200b\u4e4b\u524d\u200b\u7b49\u5f85\u200b\u5916\u90e8\u200b\u8f93\u5165\u200b\u3002\u200b\u8fd9\u200b\u5b9e\u73b0\u200b\u4e86\u200b\"\u200b\u4eba\u200b\u5728\u200b\u56de\u8def\u200b\"\uff08human-in-the-loop\uff09\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u8ba9\u200b\u4f60\u200b\u80fd\u591f\u200b\u5728\u200b\u9700\u8981\u200b\u5916\u90e8\u200b\u8f93\u5165\u200b\u65f6\u200b\u6682\u505c\u200b\u6267\u884c\u200b\u3002</p>"},{"location":"llmapps/langgraph/interrupts/#_2","title":"\u6838\u5fc3\u200b\u7279\u6027","text":"<ul> <li>\u200b\u52a8\u6001\u200b\u4e2d\u65ad\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4ee3\u7801\u200b\u7684\u200b\u4efb\u4f55\u200b\u4f4d\u7f6e\u200b\u653e\u7f6e\u200b\u4e2d\u65ad\u200b\uff0c\u200b\u5e76\u200b\u57fa\u4e8e\u200b\u5e94\u7528\u903b\u8f91\u200b\u6761\u4ef6\u200b\u89e6\u53d1\u200b</li> <li>\u200b\u72b6\u6001\u200b\u6301\u4e45\u200b\u5316\u200b\uff1a\u200b\u89e6\u53d1\u200b\u4e2d\u65ad\u200b\u65f6\u200b\uff0cLangGraph \u200b\u4f7f\u7528\u200b\u6301\u4e45\u200b\u5316\u5c42\u200b\u4fdd\u5b58\u200b\u56fe\u200b\u72b6\u6001\u200b</li> <li>\u200b\u65e0\u9650\u200b\u7b49\u5f85\u200b\uff1a\u200b\u4e2d\u65ad\u200b\u540e\u200b\u4f1a\u200b\u4e00\u76f4\u200b\u7b49\u5f85\u200b\uff0c\u200b\u76f4\u5230\u200b\u4f60\u200b\u660e\u786e\u200b\u6062\u590d\u200b\u6267\u884c\u200b</li> </ul>"},{"location":"llmapps/langgraph/interrupts/#_3","title":"\u57fa\u7840\u200b\u4f7f\u7528","text":""},{"location":"llmapps/langgraph/interrupts/#_4","title":"\u8bbe\u7f6e\u200b\u4e2d\u65ad","text":"<p>\u200b\u8981\u200b\u4f7f\u7528\u200b\u4e2d\u65ad\u200b\u529f\u80fd\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u4e09\u4e2a\u200b\u5173\u952e\u200b\u7ec4\u4ef6\u200b\uff1a</p> <pre><code>from langgraph.types import interrupt\n\ndef approval_node(state: State):\n    # \u200b\u6682\u505c\u200b\u6267\u884c\u200b\u5e76\u200b\u8bf7\u6c42\u200b\u6279\u51c6\u200b\n    approved = interrupt(\"\u200b\u4f60\u200b\u662f\u5426\u200b\u6279\u51c6\u200b\u6b64\u200b\u64cd\u4f5c\u200b\uff1f\")\n\n    # \u200b\u6062\u590d\u200b\u65f6\u200b\uff0cCommand(resume=...)\u200b\u7684\u200b\u503c\u4f1a\u200b\u5728\u200b\u8fd9\u91cc\u200b\u8fd4\u56de\u200b\n    return {\"approved\": approved}\n</code></pre>"},{"location":"llmapps/langgraph/interrupts/#_5","title":"\u914d\u7f6e\u200b\u8981\u6c42","text":"<ol> <li>\u200b\u68c0\u67e5\u70b9\u200b\u5668\u200b\uff08Checkpointer\uff09\uff1a\u200b\u7528\u4e8e\u200b\u6301\u4e45\u200b\u5316\u56fe\u200b\u72b6\u6001\u200b\uff08\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u4f7f\u7528\u200b\u6301\u4e45\u200b\u5316\u200b\u68c0\u67e5\u70b9\u200b\u5668\u200b\uff09</li> <li>\u200b\u7ebf\u7a0b\u200bID\uff08thread_id\uff09\uff1a\u200b\u5728\u200b\u914d\u7f6e\u200b\u4e2d\u200b\u6307\u5b9a\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6807\u8bc6\u200b\u8981\u200b\u6062\u590d\u200b\u7684\u200b\u72b6\u6001\u200b</li> <li>JSON\u200b\u53ef\u200b\u5e8f\u5217\u5316\u200b\uff1a\u200b\u4f20\u9012\u200b\u7ed9\u200b <code>interrupt()</code> \u200b\u7684\u200b\u503c\u200b\u5fc5\u987b\u200b\u662f\u200b JSON \u200b\u53ef\u200b\u5e8f\u5217\u5316\u200b\u7684\u200b</li> </ol>"},{"location":"llmapps/langgraph/interrupts/#_6","title":"\u4e2d\u65ad\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b","text":""},{"location":"llmapps/langgraph/interrupts/#1","title":"1. \u200b\u89e6\u53d1\u200b\u4e2d\u65ad","text":"<p>\u200b\u5f53\u200b\u8c03\u7528\u200b <code>interrupt()</code> \u200b\u65f6\u200b\uff1a</p> <ol> <li>\u200b\u56fe\u200b\u6267\u884c\u200b\u6682\u505c\u200b\uff1a\u200b\u5728\u200b\u8c03\u7528\u200b <code>interrupt</code> \u200b\u7684\u200b\u7cbe\u786e\u200b\u70b9\u200b\u6682\u505c\u200b</li> <li>\u200b\u72b6\u6001\u200b\u4fdd\u5b58\u200b\uff1a\u200b\u4f7f\u7528\u200b\u68c0\u67e5\u70b9\u200b\u5668\u200b\u4fdd\u5b58\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b</li> <li>\u200b\u8fd4\u56de\u503c\u200b\uff1a\u200b\u4e2d\u65ad\u200b\u503c\u200b\u901a\u8fc7\u200b <code>__interrupt__</code> \u200b\u5b57\u200b\u6bb5\u200b\u8fd4\u56de\u200b\u7ed9\u200b\u8c03\u7528\u8005\u200b</li> <li>\u200b\u65e0\u9650\u200b\u7b49\u5f85\u200b\uff1a\u200b\u56fe\u4f1a\u200b\u4e00\u76f4\u200b\u7b49\u5f85\u200b\uff0c\u200b\u76f4\u5230\u200b\u4f60\u200b\u6062\u590d\u200b\u6267\u884c\u200b</li> <li>\u200b\u503c\u200b\u4f20\u9012\u200b\uff1a\u200b\u6062\u590d\u200b\u65f6\u200b\u7684\u200b\u54cd\u5e94\u503c\u200b\u4f1a\u200b\u6210\u4e3a\u200b <code>interrupt()</code> \u200b\u8c03\u7528\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b</li> </ol>"},{"location":"llmapps/langgraph/interrupts/#2","title":"2. \u200b\u6062\u590d\u200b\u4e2d\u65ad","text":"<pre><code>from langgraph.types import Command\n\n# \u200b\u521d\u59cb\u200b\u8fd0\u884c\u200b - \u200b\u9047\u5230\u200b\u4e2d\u65ad\u200b\u5e76\u200b\u6682\u505c\u200b\nconfig = {\"configurable\": {\"thread_id\": \"thread-1\"}}\nresult = graph.invoke({\"input\": \"data\"}, config=config)\n\n# \u200b\u68c0\u67e5\u200b\u4e2d\u65ad\u200b\u5185\u5bb9\u200b\nprint(result[\"__interrupt__\"])\n# \u200b\u8f93\u51fa\u200b: [Interrupt(value='\u200b\u4f60\u200b\u662f\u5426\u200b\u6279\u51c6\u200b\u6b64\u200b\u64cd\u4f5c\u200b\uff1f')]\n\n# \u200b\u4f7f\u7528\u200b\u4eba\u7c7b\u200b\u54cd\u5e94\u200b\u6062\u590d\u200b\u6267\u884c\u200b\n# resume \u200b\u7684\u200b\u503c\u4f1a\u200b\u6210\u4e3a\u200b\u8282\u70b9\u200b\u5185\u200b interrupt() \u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\ngraph.invoke(Command(resume=True), config=config)\n</code></pre> <p>\u200b\u6062\u590d\u200b\u8981\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u5fc5\u987b\u200b\u4f7f\u7528\u200b\u76f8\u540c\u200b\u7684\u200b\u7ebf\u7a0b\u200bID</li> <li><code>Command(resume=...)</code> \u200b\u7684\u200b\u503c\u200b\u6210\u4e3a\u200b <code>interrupt()</code> \u200b\u7684\u200b\u8fd4\u56de\u503c\u200b</li> <li>\u200b\u8282\u70b9\u200b\u4f1a\u200b\u4ece\u5934\u5f00\u59cb\u200b\u91cd\u65b0\u200b\u6267\u884c\u200b</li> </ul>"},{"location":"llmapps/langgraph/interrupts/#_7","title":"\u5e38\u89c1\u200b\u4f7f\u7528\u200b\u6a21\u5f0f","text":""},{"location":"llmapps/langgraph/interrupts/#1_1","title":"1. \u200b\u5ba1\u6279\u200b\u5de5\u4f5c\u200b\u6d41","text":"<p>\u200b\u5728\u200b\u5173\u952e\u200b\u64cd\u4f5c\u524d\u200b\u6682\u505c\u200b\u5e76\u200b\u8bf7\u6c42\u200b\u6279\u51c6\u200b\uff1a</p> <pre><code>from typing import Literal\nfrom langgraph.types import interrupt, Command\n\ndef approval_node(state: State) -&gt; Command[Literal[\"proceed\", \"cancel\"]]:\n    # \u200b\u6682\u505c\u200b\u6267\u884c\u200b\uff0cpayload \u200b\u4f1a\u200b\u51fa\u73b0\u200b\u5728\u200b result[\"__interrupt__\"] \u200b\u4e2d\u200b\n    is_approved = interrupt({\n        \"question\": \"\u200b\u662f\u5426\u200b\u8981\u200b\u7ee7\u7eed\u6267\u884c\u200b\u6b64\u200b\u64cd\u4f5c\u200b\uff1f\",\n        \"details\": state[\"action_details\"]\n    })\n\n    # \u200b\u57fa\u4e8e\u200b\u54cd\u5e94\u200b\u8def\u7531\u200b\n    if is_approved:\n        return Command(goto=\"proceed\")\n    else:\n        return Command(goto=\"cancel\")\n</code></pre> <p>\u200b\u6062\u590d\u200b\u65b9\u5f0f\u200b\uff1a</p> <pre><code># \u200b\u6279\u51c6\u200b\ngraph.invoke(Command(resume=True), config=config)\n\n# \u200b\u62d2\u7edd\u200b\ngraph.invoke(Command(resume=False), config=config)\n</code></pre>"},{"location":"llmapps/langgraph/interrupts/#2_1","title":"2. \u200b\u5ba1\u67e5\u200b\u548c\u200b\u7f16\u8f91\u200b\u72b6\u6001","text":"<p>\u200b\u8ba9\u200b\u4eba\u7c7b\u200b\u5728\u200b\u7ee7\u7eed\u200b\u4e4b\u524d\u200b\u5ba1\u67e5\u200b\u548c\u200b\u7f16\u8f91\u200b\u56fe\u200b\u72b6\u6001\u200b\uff1a</p> <pre><code>def review_node(state: State):\n    # \u200b\u6682\u505c\u200b\u5e76\u200b\u663e\u793a\u200b\u5f53\u524d\u200b\u5185\u5bb9\u200b\u4f9b\u200b\u5ba1\u67e5\u200b\n    edited_content = interrupt({\n        \"instruction\": \"\u200b\u5ba1\u67e5\u200b\u5e76\u200b\u7f16\u8f91\u200b\u6b64\u200b\u5185\u5bb9\u200b\",\n        \"content\": state[\"generated_text\"]\n    })\n\n    # \u200b\u4f7f\u7528\u200b\u7f16\u8f91\u200b\u540e\u200b\u7684\u200b\u7248\u672c\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\n    return {\"generated_text\": edited_content}\n</code></pre> <p>\u200b\u6062\u590d\u200b\u65f6\u200b\u63d0\u4f9b\u200b\u7f16\u8f91\u200b\u5185\u5bb9\u200b\uff1a</p> <pre><code>graph.invoke(\n    Command(resume=\"\u200b\u7f16\u8f91\u200b\u548c\u200b\u6539\u8fdb\u200b\u540e\u200b\u7684\u200b\u6587\u672c\u200b\"),\n    config=config\n)\n</code></pre>"},{"location":"llmapps/langgraph/interrupts/#3","title":"3. \u200b\u5728\u200b\u5de5\u5177\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u4e2d\u65ad","text":"<p>\u200b\u5728\u200b\u5de5\u5177\u200b\u51fd\u6570\u200b\u5185\u90e8\u200b\u76f4\u63a5\u200b\u653e\u7f6e\u200b\u4e2d\u65ad\u200b\uff1a</p> <pre><code>from langchain.tools import tool\nfrom langgraph.types import interrupt\n\n@tool\ndef send_email(to: str, subject: str, body: str):\n    \"\"\"\u200b\u53d1\u9001\u200b\u90ae\u4ef6\u200b\u7ed9\u200b\u6536\u4ef6\u4eba\u200b\"\"\"\n\n    # \u200b\u5728\u200b\u53d1\u9001\u200b\u524d\u200b\u6682\u505c\u200b\n    response = interrupt({\n        \"action\": \"send_email\",\n        \"to\": to,\n        \"subject\": subject,\n        \"body\": body,\n        \"message\": \"\u200b\u662f\u5426\u200b\u6279\u51c6\u200b\u53d1\u9001\u200b\u6b64\u200b\u90ae\u4ef6\u200b\uff1f\"\n    })\n\n    if response.get(\"action\") == \"approve\":\n        # \u200b\u6062\u590d\u200b\u503c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6267\u884c\u200b\u524d\u200b\u8986\u76d6\u200b\u8f93\u5165\u200b\n        final_to = response.get(\"to\", to)\n        final_subject = response.get(\"subject\", subject)\n        final_body = response.get(\"body\", body)\n        return f\"\u200b\u90ae\u4ef6\u200b\u5df2\u200b\u53d1\u9001\u81f3\u200b {final_to}\"\n    return \"\u200b\u7528\u6237\u200b\u53d6\u6d88\u200b\u4e86\u200b\u90ae\u4ef6\u200b\"\n</code></pre>"},{"location":"llmapps/langgraph/interrupts/#4","title":"4. \u200b\u9a8c\u8bc1\u200b\u4eba\u7c7b\u200b\u8f93\u5165","text":"<p>\u200b\u4f7f\u7528\u200b\u591a\u4e2a\u200b <code>interrupt</code> \u200b\u8c03\u7528\u200b\u6765\u200b\u9a8c\u8bc1\u200b\u8f93\u5165\u200b\uff1a</p> <pre><code>def get_age_node(state: State):\n    prompt = \"\u200b\u4f60\u200b\u7684\u200b\u5e74\u9f84\u200b\u662f\u200b\u591a\u5c11\u200b\uff1f\"\n\n    while True:\n        answer = interrupt(prompt)\n\n        # \u200b\u9a8c\u8bc1\u200b\u8f93\u5165\u200b\n        if isinstance(answer, int) and answer &gt; 0:\n            # \u200b\u6709\u6548\u200b\u8f93\u5165\u200b - \u200b\u7ee7\u7eed\u200b\n            break\n        else:\n            # \u200b\u65e0\u6548\u200b\u8f93\u5165\u200b - \u200b\u7528\u200b\u66f4\u200b\u660e\u786e\u200b\u7684\u200b\u63d0\u793a\u200b\u91cd\u65b0\u200b\u8be2\u95ee\u200b\n            prompt = f\"'{answer}' \u200b\u4e0d\u662f\u200b\u6709\u6548\u200b\u7684\u200b\u5e74\u9f84\u200b\u3002\u200b\u8bf7\u200b\u8f93\u5165\u200b\u6b63\u6570\u200b\u3002\"\n\n    return {\"age\": answer}\n</code></pre>"},{"location":"llmapps/langgraph/interrupts/#_8","title":"\u4e2d\u65ad\u200b\u7684\u200b\u91cd\u8981\u200b\u89c4\u5219","text":""},{"location":"llmapps/langgraph/interrupts/#1-interrupt-tryexcept","title":"1. \u200b\u4e0d\u8981\u200b\u5c06\u200b <code>interrupt</code> \u200b\u8c03\u7528\u200b\u5305\u88f9\u200b\u5728\u200b try/except \u200b\u4e2d","text":"<p>\u2705 \u200b\u6b63\u786e\u200b\u505a\u6cd5\u200b\uff1a</p> <pre><code>def node_a(state: State):\n    # \u200b\u5148\u200b\u5904\u7406\u200b\u4e2d\u65ad\u200b\uff0c\u200b\u518d\u200b\u5355\u72ec\u200b\u5904\u7406\u9519\u8bef\u200b\u6761\u4ef6\u200b\n    interrupt(\"\u200b\u4f60\u200b\u7684\u200b\u540d\u5b57\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f\")\n    try:\n        fetch_data()  # \u200b\u8fd9\u91cc\u200b\u53ef\u80fd\u200b\u5931\u8d25\u200b\n    except Exception as e:\n        print(e)\n    return state\n</code></pre> <p>\u274c \u200b\u9519\u8bef\u505a\u6cd5\u200b\uff1a</p> <pre><code>def node_a(state: State):\n    try:\n        interrupt(\"\u200b\u4f60\u200b\u7684\u200b\u540d\u5b57\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f\")\n    except Exception as e:\n        print(e)  # \u200b\u8fd9\u4f1a\u200b\u6355\u83b7\u200b\u4e2d\u65ad\u200b\u5f02\u5e38\u200b\uff01\n    return state\n</code></pre>"},{"location":"llmapps/langgraph/interrupts/#2-interrupt","title":"2. \u200b\u4e0d\u8981\u200b\u5728\u200b\u8282\u70b9\u200b\u5185\u200b\u91cd\u65b0\u200b\u6392\u5e8f\u200b <code>interrupt</code> \u200b\u8c03\u7528","text":"<p>\u2705 \u200b\u6b63\u786e\u200b\u505a\u6cd5\u200b - \u200b\u4fdd\u6301\u4e00\u81f4\u200b\u7684\u200b\u8c03\u7528\u200b\u987a\u5e8f\u200b\uff1a</p> <pre><code>def node_a(state: State):\n    name = interrupt(\"\u200b\u4f60\u200b\u7684\u200b\u540d\u5b57\u200b\uff1f\")\n    age = interrupt(\"\u200b\u4f60\u200b\u7684\u200b\u5e74\u9f84\u200b\uff1f\")\n    city = interrupt(\"\u200b\u4f60\u200b\u7684\u200b\u57ce\u5e02\u200b\uff1f\")\n    return {\"name\": name, \"age\": age, \"city\": city}\n</code></pre> <p>\u274c \u200b\u9519\u8bef\u505a\u6cd5\u200b - \u200b\u6761\u4ef6\u6027\u200b\u8df3\u8fc7\u200b\u4e2d\u65ad\u200b\uff1a</p> <pre><code>def node_a(state: State):\n    name = interrupt(\"\u200b\u4f60\u200b\u7684\u200b\u540d\u5b57\u200b\uff1f\")\n\n    # \u200b\u7b2c\u4e00\u6b21\u200b\u8fd0\u884c\u200b\u53ef\u80fd\u200b\u8df3\u8fc7\u200b\u6b64\u200b\u4e2d\u65ad\u200b\n    # \u200b\u6062\u590d\u200b\u65f6\u200b\u53ef\u80fd\u200b\u4e0d\u4f1a\u200b\u8df3\u8fc7\u200b - \u200b\u5bfc\u81f4\u200b\u7d22\u5f15\u200b\u4e0d\u200b\u5339\u914d\u200b\n    if state.get(\"needs_age\"):\n        age = interrupt(\"\u200b\u4f60\u200b\u7684\u200b\u5e74\u9f84\u200b\uff1f\")\n\n    city = interrupt(\"\u200b\u4f60\u200b\u7684\u200b\u57ce\u5e02\u200b\uff1f\")\n    return {\"name\": name, \"city\": city}\n</code></pre>"},{"location":"llmapps/langgraph/interrupts/#3-interrupt","title":"3. \u200b\u4e0d\u8981\u200b\u5728\u200b <code>interrupt</code> \u200b\u8c03\u7528\u200b\u4e2d\u200b\u4f20\u9012\u200b\u590d\u6742\u200b\u503c","text":"<p>\u2705 \u200b\u6b63\u786e\u200b\u505a\u6cd5\u200b - \u200b\u4f7f\u7528\u200b\u7b80\u5355\u200b\u53ef\u200b\u5e8f\u5217\u5316\u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>def node_a(state: State):\n    # \u200b\u4f20\u9012\u200b\u7b80\u5355\u200b\u7c7b\u578b\u200b\n    name = interrupt(\"\u200b\u4f60\u200b\u7684\u200b\u540d\u5b57\u200b\uff1f\")\n\n    # \u200b\u4f20\u9012\u200b\u5305\u542b\u200b\u7b80\u5355\u200b\u503c\u200b\u7684\u200b\u5b57\u5178\u200b\n    response = interrupt({\n        \"question\": \"\u200b\u8f93\u5165\u200b\u7528\u6237\u200b\u8be6\u60c5\u200b\",\n        \"fields\": [\"name\", \"email\", \"age\"]\n    })\n    return {\"user\": response}\n</code></pre> <p>\u274c \u200b\u9519\u8bef\u505a\u6cd5\u200b - \u200b\u4f20\u9012\u200b\u590d\u6742\u200b\u5bf9\u8c61\u200b\uff1a</p> <pre><code>def node_a(state: State):\n    class DataProcessor:\n        def __init__(self, config):\n            self.config = config\n\n    processor = DataProcessor({\"mode\": \"strict\"})\n\n    # \u200b\u8fd9\u4f1a\u200b\u5931\u8d25\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b9e\u4f8b\u200b\u65e0\u6cd5\u200b\u5e8f\u5217\u5316\u200b\n    response = interrupt({\n        \"question\": \"\u200b\u8f93\u5165\u200b\u8981\u200b\u5904\u7406\u200b\u7684\u200b\u6570\u636e\u200b\",\n        \"processor\": processor  # \u200b\u65e0\u6cd5\u200b\u5e8f\u5217\u5316\u200b\uff01\n    })\n    return {\"result\": response}\n</code></pre>"},{"location":"llmapps/langgraph/interrupts/#4-interrupt","title":"4. <code>interrupt</code> \u200b\u8c03\u7528\u200b\u524d\u200b\u7684\u200b\u526f\u4f5c\u7528\u200b\u5fc5\u987b\u200b\u662f\u200b\u5e42\u200b\u7b49\u200b\u7684","text":"<p>\u2705 \u200b\u6b63\u786e\u200b\u505a\u6cd5\u200b - \u200b\u4f7f\u7528\u200b\u5e42\u200b\u7b49\u200b\u64cd\u4f5c\u200b\u6216\u200b\u5728\u200b\u4e2d\u65ad\u200b\u540e\u200b\u6267\u884c\u200b\u526f\u4f5c\u7528\u200b\uff1a</p> <pre><code>def node_a(state: State):\n    # \u2705 \u200b\u4f7f\u7528\u200b\u5e42\u200b\u7b49\u200b\u7684\u200b upsert \u200b\u64cd\u4f5c\u200b\n    db.upsert_user(user_id=state[\"user_id\"], status=\"pending_approval\")\n\n    approved = interrupt(\"\u200b\u662f\u5426\u200b\u6279\u51c6\u200b\u6b64\u200b\u66f4\u6539\u200b\uff1f\")\n\n    # \u2705 \u200b\u526f\u4f5c\u7528\u200b\u653e\u5728\u200b\u4e2d\u65ad\u200b\u4e4b\u540e\u200b\n    if approved:\n        db.create_audit_log(user_id=state[\"user_id\"], action=\"approved\")\n\n    return {\"approved\": approved}\n</code></pre> <p>\u274c \u200b\u9519\u8bef\u505a\u6cd5\u200b - \u200b\u5728\u200b\u4e2d\u65ad\u200b\u524d\u200b\u6267\u884c\u200b\u975e\u5e42\u200b\u7b49\u200b\u64cd\u4f5c\u200b\uff1a</p> <pre><code>def node_a(state: State):\n    # \u274c \u200b\u5728\u200b\u4e2d\u65ad\u200b\u524d\u200b\u521b\u5efa\u200b\u65b0\u200b\u8bb0\u5f55\u200b\n    # \u200b\u6bcf\u6b21\u200b\u6062\u590d\u200b\u90fd\u200b\u4f1a\u200b\u521b\u5efa\u200b\u91cd\u590d\u8bb0\u5f55\u200b\n    audit_id = db.create_audit_log({\n        \"user_id\": state[\"user_id\"],\n        \"action\": \"pending_approval\"\n    })\n\n    approved = interrupt(\"\u200b\u662f\u5426\u200b\u6279\u51c6\u200b\u6b64\u200b\u66f4\u6539\u200b\uff1f\")\n    return {\"approved\": approved, \"audit_id\": audit_id}\n</code></pre>"},{"location":"llmapps/langgraph/interrupts/#_9","title":"\u8c03\u8bd5\u200b\u6280\u5de7","text":""},{"location":"llmapps/langgraph/interrupts/#_10","title":"\u4f7f\u7528\u200b\u9759\u6001\u200b\u4e2d\u65ad\u200b\u4f5c\u4e3a\u200b\u65ad\u70b9","text":"<p>\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u8bbe\u7f6e\u200b\u65ad\u70b9\u200b\uff1a</p> <pre><code>graph = builder.compile(\n    interrupt_before=[\"node_a\"],      # \u200b\u5728\u200b\u8282\u70b9\u200b\u6267\u884c\u200b\u524d\u200b\u6682\u505c\u200b\n    interrupt_after=[\"node_b\", \"node_c\"],  # \u200b\u5728\u200b\u8282\u70b9\u200b\u6267\u884c\u200b\u540e\u200b\u6682\u505c\u200b\n    checkpointer=checkpointer,\n)\n\n# \u200b\u8fd0\u884c\u200b\u5230\u200b\u7b2c\u4e00\u4e2a\u200b\u65ad\u70b9\u200b\ngraph.invoke(inputs, config=config)\n\n# \u200b\u7ee7\u7eed\u6267\u884c\u200b\u5230\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u65ad\u70b9\u200b\ngraph.invoke(None, config=config)\n</code></pre> <p>\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\u8bbe\u7f6e\u200b\u65ad\u70b9\u200b\uff1a</p> <pre><code>graph.invoke(\n    inputs,\n    interrupt_before=[\"node_a\"],\n    interrupt_after=[\"node_b\", \"node_c\"],\n    config=config,\n)\n</code></pre>"},{"location":"llmapps/langgraph/interrupts/#langgraph-studio","title":"\u4f7f\u7528\u200b LangGraph Studio","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b LangGraph Studio \u200b\u5728\u200b UI \u200b\u4e2d\u200b\u8bbe\u7f6e\u200b\u9759\u6001\u200b\u4e2d\u65ad\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u6267\u884c\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u968f\u65f6\u200b\u68c0\u67e5\u200b\u56fe\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"llmapps/langgraph/interrupts/#_11","title":"\u603b\u7ed3","text":"<p>\u200b\u4e2d\u65ad\u200b\u529f\u80fd\u200b\u4e3a\u200b LangGraph \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u7684\u200b\u4eba\u673a\u200b\u534f\u4f5c\u200b\u80fd\u529b\u200b\u3002\u200b\u5173\u952e\u200b\u8981\u70b9\u200b\uff1a</p> <ol> <li>\u200b\u52a8\u6001\u63a7\u5236\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4ee3\u7801\u200b\u7684\u200b\u4efb\u4f55\u200b\u4f4d\u7f6e\u200b\u6761\u4ef6\u6027\u200b\u5730\u200b\u89e6\u53d1\u200b\u4e2d\u65ad\u200b</li> <li>\u200b\u72b6\u6001\u200b\u6301\u4e45\u200b\u5316\u200b\uff1a\u200b\u4e2d\u65ad\u200b\u72b6\u6001\u200b\u4f1a\u200b\u88ab\u200b\u5b89\u5168\u200b\u4fdd\u5b58\u200b\uff0c\u200b\u652f\u6301\u200b\u957f\u65f6\u95f4\u200b\u6682\u505c\u200b</li> <li>\u200b\u7075\u6d3b\u200b\u6062\u590d\u200b\uff1a\u200b\u6062\u590d\u200b\u65f6\u200b\u53ef\u4ee5\u200b\u4f20\u9012\u200b\u4efb\u610f\u200b JSON \u200b\u53ef\u200b\u5e8f\u5217\u5316\u200b\u7684\u200b\u503c\u200b</li> <li>\u200b\u6a21\u5f0f\u200b\u4e30\u5bcc\u200b\uff1a\u200b\u652f\u6301\u200b\u5ba1\u6279\u200b\u3001\u200b\u5ba1\u67e5\u200b\u3001\u200b\u9a8c\u8bc1\u200b\u7b49\u200b\u591a\u79cd\u200b\u4eba\u673a\u4ea4\u4e92\u200b\u6a21\u5f0f\u200b</li> <li>\u200b\u9075\u5faa\u200b\u89c4\u5219\u200b\uff1a\u200b\u6ce8\u610f\u200b\u4e2d\u65ad\u200b\u7684\u200b\u4f7f\u7528\u200b\u89c4\u5219\u200b\uff0c\u200b\u907f\u514d\u200b\u5e38\u89c1\u200b\u9677\u9631\u200b</li> </ol> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u4f7f\u7528\u200b\u4e2d\u65ad\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u51fa\u200b\u66f4\u52a0\u200b\u7075\u6d3b\u200b\u3001\u200b\u5b89\u5168\u200b\u3001\u200b\u53ef\u63a7\u200b\u7684\u200b AI \u200b\u5e94\u7528\u200b\u7cfb\u7edf\u200b\u3002</p>"},{"location":"llmapps/langgraph/memory/","title":"LangGraph \u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u5b8c\u6574\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langgraph/memory/#_1","title":"\u6982\u8ff0","text":"<p>\u200b\u5728\u200bAI\u200b\u5e94\u7528\u200b\u4e2d\u200b\uff0c\u200b\u5185\u5b58\u200b\uff08Memory\uff09\u200b\u662f\u200b\u5b9e\u73b0\u200b\u591a\u8f6e\u200b\u5bf9\u8bdd\u200b\u548c\u200b\u4e0a\u4e0b\u6587\u200b\u5171\u4eab\u200b\u7684\u200b\u5173\u952e\u200b\u7ec4\u4ef6\u200b\u3002LangGraph\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e24\u79cd\u200b\u7c7b\u578b\u200b\u7684\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\uff1a</p> <ul> <li>\u200b\u77ed\u671f\u200b\u5185\u5b58\u200b\uff1a\u200b\u7528\u4e8e\u200b\u8ddf\u8e2a\u200b\u591a\u8f6e\u200b\u5bf9\u8bdd\u200b\u7684\u200b\u7ebf\u7a0b\u200b\u7ea7\u200b\u6301\u4e45\u200b\u5316\u200b</li> <li>\u200b\u957f\u671f\u200b\u5185\u5b58\u200b\uff1a\u200b\u7528\u4e8e\u200b\u8de8\u4f1a\u8bdd\u200b\u5b58\u50a8\u7528\u6237\u200b\u7279\u5b9a\u200b\u6216\u200b\u5e94\u7528\u200b\u7ea7\u522b\u200b\u7684\u200b\u6570\u636e\u200b</li> </ul>"},{"location":"llmapps/langgraph/memory/#_2","title":"\u77ed\u671f\u200b\u5185\u5b58\u200b\u914d\u7f6e","text":""},{"location":"llmapps/langgraph/memory/#_3","title":"\u57fa\u7840\u200b\u914d\u7f6e","text":"<pre><code>from langgraph.checkpoint.memory import InMemorySaver\nfrom langgraph.graph import StateGraph\n\n# \u200b\u521b\u5efa\u200b\u5185\u5b58\u200b\u68c0\u67e5\u70b9\u200b\u4fdd\u5b58\u200b\u5668\u200b\ncheckpointer = InMemorySaver()\n\n# \u200b\u6784\u5efa\u200b\u56fe\u200b\u5e76\u200b\u914d\u7f6e\u200b\u68c0\u67e5\u70b9\u200b\nbuilder = StateGraph(...)\ngraph = builder.compile(checkpointer=checkpointer)\n\n# \u200b\u4f7f\u7528\u200b\u7ebf\u7a0b\u200bID\u200b\u8c03\u7528\u200b\u56fe\u200b\ngraph.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"hi! i am Bob\"}]},\n    {\"configurable\": {\"thread_id\": \"1\"}},\n)\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_4","title":"\u751f\u4ea7\u200b\u73af\u5883\u200b\u914d\u7f6e","text":"<p>\u200b\u5728\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u4e2d\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u6570\u636e\u5e93\u200b\u652f\u6301\u200b\u7684\u200b\u68c0\u67e5\u70b9\u200b\uff1a</p> <pre><code>from langgraph.checkpoint.postgres import PostgresSaver\n\nDB_URI = \"postgresql://postgres:postgres@localhost:5442/postgres?sslmode=disable\"\nwith PostgresSaver.from_conn_string(DB_URI) as checkpointer:\n    builder = StateGraph(...)\n    graph = builder.compile(checkpointer=checkpointer)\n</code></pre>"},{"location":"llmapps/langgraph/memory/#postgresql","title":"PostgreSQL \u200b\u793a\u4f8b","text":"<pre><code>pip install -U \"psycopg[binary,pool]\" langgraph langgraph-checkpoint-postgres\n</code></pre> <p>\u200b\u540c\u6b65\u200b\u7248\u672c\u200b\uff1a</p> <pre><code>from langchain.chat_models import init_chat_model\nfrom langgraph.graph import StateGraph, MessagesState, START\nfrom langgraph.checkpoint.postgres import PostgresSaver\n\nmodel = init_chat_model(model=\"anthropic:claude-3-5-haiku-latest\")\n\nDB_URI = \"postgresql://postgres:postgres@localhost:5442/postgres?sslmode=disable\"\nwith PostgresSaver.from_conn_string(DB_URI) as checkpointer:\n    # \u200b\u9996\u6b21\u200b\u4f7f\u7528\u200b\u65f6\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b\uff1acheckpointer.setup()\n\n    def call_model(state: MessagesState):\n        response = model.invoke(state[\"messages\"])\n        return {\"messages\": response}\n\n    builder = StateGraph(MessagesState)\n    builder.add_node(call_model)\n    builder.add_edge(START, \"call_model\")\n\n    graph = builder.compile(checkpointer=checkpointer)\n\n    config = {\"configurable\": {\"thread_id\": \"1\"}}\n\n    # \u200b\u591a\u8f6e\u200b\u5bf9\u8bdd\u200b\u793a\u4f8b\u200b\n    for chunk in graph.stream(\n        {\"messages\": [{\"role\": \"user\", \"content\": \"hi! I'm bob\"}]},\n        config,\n        stream_mode=\"values\"\n    ):\n        chunk[\"messages\"][-1].pretty_print()\n\n    for chunk in graph.stream(\n        {\"messages\": [{\"role\": \"user\", \"content\": \"what's my name?\"}]},\n        config,\n        stream_mode=\"values\"\n    ):\n        chunk[\"messages\"][-1].pretty_print()\n</code></pre>"},{"location":"llmapps/langgraph/memory/#mongodb","title":"MongoDB \u200b\u793a\u4f8b","text":"<pre><code>pip install -U pymongo langgraph langgraph-checkpoint-mongodb\n</code></pre> <pre><code>from langgraph.checkpoint.mongodb import MongoDBSaver\n\nDB_URI = \"localhost:27017\"\nwith MongoDBSaver.from_conn_string(DB_URI) as checkpointer:\n    # \u200b\u914d\u7f6e\u56fe\u200b...\n</code></pre>"},{"location":"llmapps/langgraph/memory/#redis","title":"Redis \u200b\u793a\u4f8b","text":"<pre><code>pip install -U langgraph langgraph-checkpoint-redis\n</code></pre> <pre><code>from langgraph.checkpoint.redis import RedisSaver\n\nDB_URI = \"redis://localhost:6379\"\nwith RedisSaver.from_conn_string(DB_URI) as checkpointer:\n    # \u200b\u9996\u6b21\u200b\u4f7f\u7528\u200b\u65f6\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b\uff1acheckpointer.setup()\n    # \u200b\u914d\u7f6e\u56fe\u200b...\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_5","title":"\u5728\u5b50\u200b\u56fe\u4e2d\u200b\u4f7f\u7528\u200b\u5185\u5b58","text":"<p>\u200b\u5982\u679c\u200b\u56fe\u4e2d\u200b\u5305\u542b\u200b\u5b50\u56fe\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u5728\u200b\u7236\u56fe\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u63d0\u4f9b\u200b\u68c0\u67e5\u70b9\u200b\uff0cLangGraph\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u4f20\u64ad\u200b\u5230\u5b50\u200b\u56fe\u200b\uff1a</p> <pre><code>from langgraph.graph import START, StateGraph\nfrom langgraph.checkpoint.memory import InMemorySaver\nfrom typing import TypedDict\n\nclass State(TypedDict):\n    foo: str\n\n# \u200b\u5b50\u56fe\u200b\u914d\u7f6e\u200b\ndef subgraph_node_1(state: State):\n    return {\"foo\": state[\"foo\"] + \"bar\"}\n\nsubgraph_builder = StateGraph(State)\nsubgraph_builder.add_node(subgraph_node_1)\nsubgraph_builder.add_edge(START, \"subgraph_node_1\")\nsubgraph = subgraph_builder.compile()\n\n# \u200b\u7236\u56fe\u200b\u914d\u7f6e\u200b\nbuilder = StateGraph(State)\nbuilder.add_node(\"node_1\", subgraph)\nbuilder.add_edge(START, \"node_1\")\n\ncheckpointer = InMemorySaver()\ngraph = builder.compile(checkpointer=checkpointer)\n</code></pre> <p>\u200b\u5982\u679c\u200b\u5e0c\u671b\u200b\u5b50\u56fe\u200b\u62e5\u6709\u200b\u72ec\u7acb\u200b\u5185\u5b58\u200b\uff1a</p> <pre><code>subgraph_builder = StateGraph(...)\nsubgraph = subgraph_builder.compile(checkpointer=True)\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_6","title":"\u957f\u671f\u200b\u5185\u5b58\u200b\u914d\u7f6e","text":""},{"location":"llmapps/langgraph/memory/#_7","title":"\u57fa\u7840\u200b\u914d\u7f6e","text":"<pre><code>from langgraph.store.memory import InMemoryStore\nfrom langgraph.graph import StateGraph\n\nstore = InMemoryStore()\n\nbuilder = StateGraph(...)\ngraph = builder.compile(store=store)\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_8","title":"\u751f\u4ea7\u200b\u73af\u5883\u200b\u914d\u7f6e","text":"<pre><code>from langgraph.store.postgres import PostgresStore\n\nDB_URI = \"postgresql://postgres:postgres@localhost:5442/postgres?sslmode=disable\"\nwith PostgresStore.from_conn_string(DB_URI) as store:\n    builder = StateGraph(...)\n    graph = builder.compile(store=store)\n</code></pre>"},{"location":"llmapps/langgraph/memory/#postgresql_1","title":"PostgreSQL \u200b\u5b58\u50a8\u200b\u793a\u4f8b","text":"<pre><code>from langchain_core.runnables import RunnableConfig\nfrom langchain.chat_models import init_chat_model\nfrom langgraph.graph import StateGraph, MessagesState, START\nfrom langgraph.checkpoint.postgres import PostgresSaver\nfrom langgraph.store.postgres import PostgresStore\nfrom langgraph.store.base import BaseStore\nimport uuid\n\nmodel = init_chat_model(model=\"anthropic:claude-3-5-haiku-latest\")\n\nDB_URI = \"postgresql://postgres:postgres@localhost:5442/postgres?sslmode=disable\"\n\nwith (\n    PostgresStore.from_conn_string(DB_URI) as store,\n    PostgresSaver.from_conn_string(DB_URI) as checkpointer,\n):\n    # store.setup()  # \u200b\u9996\u6b21\u200b\u4f7f\u7528\u200b\u65f6\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b\n    # checkpointer.setup()\n\n    def call_model(\n        state: MessagesState,\n        config: RunnableConfig,\n        *,\n        store: BaseStore,\n    ):\n        user_id = config[\"configurable\"][\"user_id\"]\n        namespace = (\"memories\", user_id)\n\n        # \u200b\u641c\u7d22\u200b\u76f8\u5173\u200b\u8bb0\u5fc6\u200b\n        memories = store.search(namespace, query=str(state[\"messages\"][-1].content))\n        info = \"\\n\".join([d.value[\"data\"] for d in memories])\n        system_msg = f\"You are a helpful assistant talking to the user. User info: {info}\"\n\n        # \u200b\u5982\u679c\u200b\u7528\u6237\u200b\u8981\u6c42\u200b\u8bb0\u4f4f\u200b\uff0c\u200b\u5b58\u50a8\u200b\u65b0\u200b\u8bb0\u5fc6\u200b\n        last_message = state[\"messages\"][-1]\n        if \"remember\" in last_message.content.lower():\n            memory = \"User name is Bob\"\n            store.put(namespace, str(uuid.uuid4()), {\"data\": memory})\n\n        response = model.invoke(\n            [{\"role\": \"system\", \"content\": system_msg}] + state[\"messages\"]\n        )\n        return {\"messages\": response}\n\n    builder = StateGraph(MessagesState)\n    builder.add_node(call_model)\n    builder.add_edge(START, \"call_model\")\n\n    graph = builder.compile(\n        checkpointer=checkpointer,\n        store=store,\n    )\n\n    # \u200b\u8de8\u200b\u7ebf\u7a0b\u200b\u5171\u4eab\u200b\u7528\u6237\u200b\u8bb0\u5fc6\u200b\n    config1 = {\"configurable\": {\"thread_id\": \"1\", \"user_id\": \"1\"}}\n    config2 = {\"configurable\": {\"thread_id\": \"2\", \"user_id\": \"1\"}}\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_9","title":"\u8bed\u4e49\u200b\u641c\u7d22","text":"<p>\u200b\u542f\u7528\u200b\u8bed\u4e49\u200b\u641c\u7d22\u200b\u529f\u80fd\u200b\uff1a</p> <pre><code>from langchain.embeddings import init_embeddings\nfrom langgraph.store.memory import InMemoryStore\n\n# \u200b\u521b\u5efa\u200b\u652f\u6301\u200b\u8bed\u4e49\u200b\u641c\u7d22\u200b\u7684\u200b\u5b58\u50a8\u200b\nembeddings = init_embeddings(\"openai:text-embedding-3-small\")\nstore = InMemoryStore(\n    index={\n        \"embed\": embeddings,\n        \"dims\": 1536,\n    }\n)\n\n# \u200b\u5b58\u50a8\u200b\u6570\u636e\u200b\nstore.put((\"user_123\", \"memories\"), \"1\", {\"text\": \"I love pizza\"})\nstore.put((\"user_123\", \"memories\"), \"2\", {\"text\": \"I am a plumber\"})\n\n# \u200b\u8bed\u4e49\u200b\u641c\u7d22\u200b\nitems = store.search(\n    (\"user_123\", \"memories\"), query=\"I'm hungry\", limit=1\n)\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_10","title":"\u77ed\u671f\u200b\u5185\u5b58\u200b\u7ba1\u7406\u7b56\u7565","text":""},{"location":"llmapps/langgraph/memory/#_11","title":"\u6d88\u606f\u200b\u4fee\u526a","text":"<p>\u200b\u5f53\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\u8d85\u8fc7\u200bLLM\u200b\u4e0a\u4e0b\u6587\u200b\u7a97\u53e3\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4fee\u526a\u200b\u6d88\u606f\u200b\uff1a</p> <pre><code>from langchain_core.messages.utils import trim_messages, count_tokens_approximately\n\ndef call_model(state: MessagesState):\n    messages = trim_messages(\n        state[\"messages\"],\n        strategy=\"last\",  # \u200b\u4fdd\u7559\u200b\u6700\u540e\u200b\u7684\u200b\u6d88\u606f\u200b\n        token_counter=count_tokens_approximately,\n        max_tokens=128,   # \u200b\u6700\u5927\u200btoken\u200b\u6570\u200b\n        start_on=\"human\",\n        end_on=(\"human\", \"tool\"),\n    )\n    response = model.invoke(messages)\n    return {\"messages\": [response]}\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_12","title":"\u6d88\u606f\u200b\u5220\u9664","text":"<p>\u200b\u5220\u9664\u200b\u7279\u5b9a\u200b\u6d88\u606f\u200b\uff1a</p> <pre><code>from langchain.messages import RemoveMessage\n\ndef delete_messages(state):\n    messages = state[\"messages\"]\n    if len(messages) &gt; 2:\n        # \u200b\u5220\u9664\u200b\u6700\u65e9\u200b\u7684\u200b\u4e24\u6761\u200b\u6d88\u606f\u200b\n        return {\"messages\": [RemoveMessage(id=m.id) for m in messages[:2]]}\n</code></pre> <p>\u200b\u5220\u9664\u200b\u6240\u6709\u200b\u6d88\u606f\u200b\uff1a</p> <pre><code>from langgraph.graph.message import REMOVE_ALL_MESSAGES\n\ndef delete_all_messages(state):\n    return {\"messages\": [RemoveMessage(id=REMOVE_ALL_MESSAGES)]}\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_13","title":"\u6d88\u606f\u200b\u6458\u8981","text":"<p>\u200b\u4f7f\u7528\u200b\u6458\u8981\u200b\u6765\u200b\u538b\u7f29\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\uff1a</p> <pre><code>from typing import Any, TypedDict\nfrom langchain.messages import AnyMessage\nfrom langgraph.graph import StateGraph, START, MessagesState\nfrom langmem.short_term import SummarizationNode, RunningSummary\n\nclass State(MessagesState):\n    context: dict[str, RunningSummary]\n\nsummarization_node = SummarizationNode(\n    token_counter=count_tokens_approximately,\n    model=summarization_model,\n    max_tokens=256,\n    max_tokens_before_summary=256,\n    max_summary_tokens=128,\n)\n\n# \u200b\u5728\u200b\u56fe\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u6458\u8981\u200b\u8282\u70b9\u200b\nbuilder = StateGraph(State)\nbuilder.add_node(call_model)\nbuilder.add_node(\"summarize\", summarization_node)\nbuilder.add_edge(START, \"summarize\")\nbuilder.add_edge(\"summarize\", \"call_model\")\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_14","title":"\u68c0\u67e5\u70b9\u200b\u7ba1\u7406","text":""},{"location":"llmapps/langgraph/memory/#_15","title":"\u67e5\u770b\u200b\u7ebf\u7a0b\u200b\u72b6\u6001","text":"<pre><code>config = {\"configurable\": {\"thread_id\": \"1\"}}\n\n# \u200b\u4f7f\u7528\u200b\u56fe\u200bAPI\nstate_snapshot = graph.get_state(config)\n\n# \u200b\u4f7f\u7528\u200b\u68c0\u67e5\u70b9\u200bAPI\ncheckpoint_tuple = checkpointer.get_tuple(config)\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_16","title":"\u67e5\u770b\u200b\u7ebf\u7a0b\u200b\u5386\u53f2","text":"<pre><code>config = {\"configurable\": {\"thread_id\": \"1\"}}\n\n# \u200b\u83b7\u53d6\u200b\u72b6\u6001\u200b\u5386\u53f2\u200b\nhistory = list(graph.get_state_history(config))\n\n# \u200b\u83b7\u53d6\u200b\u68c0\u67e5\u70b9\u200b\u5386\u53f2\u200b\ncheckpoints = list(checkpointer.list(config))\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_17","title":"\u5220\u9664\u200b\u7ebf\u7a0b\u200b\u68c0\u67e5\u70b9","text":"<pre><code>thread_id = \"1\"\ncheckpointer.delete_thread(thread_id)\n</code></pre>"},{"location":"llmapps/langgraph/memory/#_18","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":"<ol> <li>\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\uff1a\u200b\u59cb\u7ec8\u200b\u4f7f\u7528\u200b\u6570\u636e\u5e93\u200b\u652f\u6301\u200b\u7684\u200b\u68c0\u67e5\u70b9\u200b\u548c\u200b\u5b58\u50a8\u200b</li> <li>\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\uff1a\u200b\u6839\u636e\u200b\u5bf9\u8bdd\u200b\u957f\u5ea6\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u7b56\u7565\u200b\uff08\u200b\u4fee\u526a\u200b\u3001\u200b\u5220\u9664\u200b\u6216\u200b\u6458\u8981\u200b\uff09</li> <li>\u200b\u9519\u8bef\u5904\u7406\u200b\uff1a\u200b\u786e\u4fdd\u200b\u6d88\u606f\u200b\u5220\u9664\u200b\u540e\u200b\u7684\u200b\u5386\u53f2\u200b\u4ecd\u7136\u200b\u6709\u6548\u200b</li> <li>\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\uff1a\u200b\u4f7f\u7528\u200b\u8bed\u4e49\u200b\u641c\u7d22\u200b\u63d0\u9ad8\u200b\u957f\u671f\u200b\u5185\u5b58\u200b\u7684\u200b\u68c0\u7d22\u200b\u6548\u7387\u200b</li> <li>\u200b\u591a\u200b\u79df\u6237\u200b\uff1a\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u7684\u200b\u547d\u540d\u200b\u7a7a\u95f4\u9694\u79bb\u200b\u4e0d\u540c\u200b\u7528\u6237\u200b\u7684\u200b\u6570\u636e\u200b</li> </ol>"},{"location":"llmapps/langgraph/memory/#_19","title":"\u9884\u200b\u6784\u5efa\u200b\u5185\u5b58\u200b\u5de5\u5177","text":"<p>LangMem\u200b\u662f\u200bLangChain\u200b\u7ef4\u62a4\u200b\u7684\u200b\u5e93\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u7ba1\u7406\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\u7684\u200b\u5de5\u5177\u200b\u3002\u200b\u53c2\u8003\u200bLangMem\u200b\u6587\u6863\u200b\u83b7\u53d6\u200b\u66f4\u200b\u591a\u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u5408\u7406\u914d\u7f6e\u200b\u77ed\u671f\u200b\u548c\u200b\u957f\u671f\u200b\u5185\u5b58\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u51fa\u200b\u80fd\u591f\u200b\u8fdb\u884c\u200b\u590d\u6742\u200b\u591a\u8f6e\u200b\u5bf9\u8bdd\u200b\u5e76\u200b\u4fdd\u6301\u200b\u4e0a\u4e0b\u6587\u200b\u8fde\u8d2f\u6027\u200b\u7684\u200bAI\u200b\u5e94\u7528\u200b\u3002</p>"},{"location":"llmapps/langgraph/overview/","title":"LangGraph \u200b\u5b8c\u5168\u200b\u5165\u95e8\u6559\u7a0b","text":""},{"location":"llmapps/langgraph/overview/#langgraph_1","title":"\u4ec0\u4e48\u200b\u662f\u200b LangGraph\uff1f","text":"<p>LangGraph \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f4e\u7ea7\u200b\u522b\u7684\u200b\u7f16\u6392\u200b\u6846\u67b6\u200b\u548c\u200b\u8fd0\u884c\u200b\u65f6\u200b\uff0c\u200b\u4e13\u95e8\u200b\u7528\u4e8e\u200b\u6784\u5efa\u200b\u3001\u200b\u7ba1\u7406\u200b\u548c\u200b\u90e8\u7f72\u200b\u957f\u65f6\u95f4\u200b\u8fd0\u884c\u200b\u7684\u200b\u6709\u200b\u72b6\u6001\u200b\u667a\u80fd\u200b\u4f53\u200b\u3002\u200b\u5b83\u200b\u88ab\u200b Klarna\u3001Replit\u3001Elastic \u200b\u7b49\u200b\u9886\u5148\u200b\u516c\u53f8\u200b\u5e7f\u6cdb\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4e13\u6ce8\u200b\u4e8e\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u7f16\u6392\u200b\u6838\u5fc3\u200b\u80fd\u529b\u200b\u3002</p> <p>\u200b\u91cd\u8981\u200b\u901a\u77e5\u200b: LangGraph v1.0 \u200b\u5df2\u200b\u6b63\u5f0f\u200b\u53d1\u5e03\u200b\uff01\u200b\u5982\u9700\u200b\u67e5\u770b\u200b\u5b8c\u6574\u200b\u53d8\u66f4\u200b\u5217\u8868\u200b\u548c\u200b\u5347\u7ea7\u200b\u6307\u5357\u200b\u3002</p>"},{"location":"llmapps/langgraph/overview/#_1","title":"\u6838\u5fc3\u200b\u4f18\u52bf","text":""},{"location":"llmapps/langgraph/overview/#durable-execution","title":"\ud83d\udee1\ufe0f \u200b\u6301\u4e45\u200b\u6267\u884c\u200b (Durable Execution)","text":"<p>\u200b\u6784\u5efa\u200b\u80fd\u591f\u200b\u4ece\u200b\u6545\u969c\u200b\u4e2d\u200b\u6062\u590d\u200b\u5e76\u200b\u957f\u671f\u200b\u8fd0\u884c\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\uff0c\u200b\u652f\u6301\u200b\u4ece\u200b\u4e2d\u65ad\u200b\u5904\u200b\u7ee7\u7eed\u6267\u884c\u200b\u3002</p>"},{"location":"llmapps/langgraph/overview/#human-in-the-loop","title":"\ud83d\udc65 \u200b\u4eba\u5de5\u5e72\u9884\u200b (Human-in-the-loop)","text":"<p>\u200b\u5728\u200b\u4efb\u4f55\u200b\u65f6\u95f4\u200b\u70b9\u200b\u68c0\u67e5\u548c\u200b\u4fee\u6539\u200b\u667a\u80fd\u200b\u4f53\u200b\u72b6\u6001\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u4eba\u5de5\u200b\u76d1\u7763\u200b\u3002</p>"},{"location":"llmapps/langgraph/overview/#comprehensive-memory","title":"\ud83e\udde0 \u200b\u5168\u9762\u200b\u8bb0\u5fc6\u7cfb\u7edf\u200b (Comprehensive Memory)","text":"<p>\u200b\u521b\u5efa\u200b\u5177\u6709\u200b\u77ed\u671f\u200b\u5de5\u4f5c\u8bb0\u5fc6\u200b\u548c\u200b\u957f\u671f\u200b\u4f1a\u8bdd\u200b\u8bb0\u5fc6\u200b\u7684\u200b\u6709\u200b\u72b6\u6001\u200b\u667a\u80fd\u200b\u4f53\u200b\u3002</p>"},{"location":"llmapps/langgraph/overview/#langsmith","title":"\ud83d\udd0d LangSmith \u200b\u8c03\u8bd5","text":"<p>\u200b\u901a\u8fc7\u200b\u53ef\u89c6\u5316\u200b\u5de5\u5177\u200b\u6df1\u5ea6\u200b\u6d1e\u5bdf\u200b\u590d\u6742\u200b\u667a\u80fd\u200b\u4f53\u200b\u884c\u4e3a\u200b\uff0c\u200b\u8ffd\u8e2a\u200b\u6267\u884c\u200b\u8def\u5f84\u200b\u548c\u200b\u72b6\u6001\u200b\u8f6c\u6362\u200b\u3002</p>"},{"location":"llmapps/langgraph/overview/#_2","title":"\ud83d\ude80 \u200b\u751f\u4ea7\u200b\u5c31\u7eea\u200b\u90e8\u7f72","text":"<p>\u200b\u4e3a\u200b\u6709\u200b\u72b6\u6001\u200b\u3001\u200b\u957f\u65f6\u95f4\u200b\u8fd0\u884c\u200b\u7684\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u63d0\u4f9b\u200b\u53ef\u200b\u6269\u5c55\u200b\u7684\u200b\u57fa\u7840\u8bbe\u65bd\u200b\u3002</p>"},{"location":"llmapps/langgraph/overview/#_3","title":"\u5b89\u88c5\u200b\u6307\u5357","text":""},{"location":"llmapps/langgraph/overview/#pip","title":"\u4f7f\u7528\u200b pip \u200b\u5b89\u88c5","text":"<pre><code>pip install -U langgraph\n</code></pre>"},{"location":"llmapps/langgraph/overview/#uv","title":"\u4f7f\u7528\u200b uv \u200b\u5b89\u88c5","text":"<pre><code>uv add langgraph\n</code></pre>"},{"location":"llmapps/langgraph/overview/#hello-world","title":"\u5feb\u901f\u200b\u5f00\u59cb\u200b\uff1aHello World \u200b\u793a\u4f8b","text":"<p>\u200b\u8ba9\u200b\u6211\u4eec\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b LangGraph \u200b\u5e94\u7528\u200b\u6765\u200b\u7406\u89e3\u200b\u57fa\u672c\u6982\u5ff5\u200b\uff1a</p> <pre><code>from langgraph.graph import StateGraph, MessagesState, START, END\n\n# \u200b\u5b9a\u4e49\u200b\u6a21\u62df\u200b\u7684\u200b LLM \u200b\u8282\u70b9\u200b\ndef mock_llm(state: MessagesState):\n    return {\"messages\": [{\"role\": \"ai\", \"content\": \"hello world\"}]}\n\n# \u200b\u521b\u5efa\u200b\u72b6\u6001\u56fe\u200b\ngraph = StateGraph(MessagesState)\n\n# \u200b\u6dfb\u52a0\u200b\u8282\u70b9\u200b\ngraph.add_node(\"mock_llm\", mock_llm)\n\n# \u200b\u5efa\u7acb\u200b\u8fde\u63a5\u200b\u5173\u7cfb\u200b\ngraph.add_edge(START, \"mock_llm\")  # \u200b\u4ece\u200b\u5f00\u59cb\u200b\u5230\u200b LLM \u200b\u8282\u70b9\u200b\ngraph.add_edge(\"mock_llm\", END)   # \u200b\u4ece\u200b LLM \u200b\u8282\u70b9\u200b\u5230\u200b\u7ed3\u675f\u200b\n\n# \u200b\u7f16\u8bd1\u200b\u56fe\u200b\ngraph = graph.compile()\n\n# \u200b\u6267\u884c\u200b\u56fe\u200b\nresult = graph.invoke({\"messages\": [{\"role\": \"user\", \"content\": \"hi!\"}]})\nprint(result)\n</code></pre>"},{"location":"llmapps/langgraph/overview/#_4","title":"\u6838\u5fc3\u200b\u6982\u5ff5\u200b\u8be6\u89e3","text":""},{"location":"llmapps/langgraph/overview/#stategraph","title":"\u72b6\u6001\u56fe\u200b (StateGraph)","text":"<p>LangGraph \u200b\u7684\u200b\u6838\u5fc3\u200b\u662f\u200b\u72b6\u6001\u56fe\u200b\uff0c\u200b\u5b83\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u6267\u884c\u200b\u6d41\u7a0b\u200b\uff1a</p> <pre><code># \u200b\u521b\u5efa\u200b\u72b6\u6001\u56fe\u200b\uff0c\u200b\u6307\u5b9a\u200b\u72b6\u6001\u200b\u7c7b\u578b\u200b\ngraph = StateGraph(MessagesState)\n</code></pre>"},{"location":"llmapps/langgraph/overview/#nodes","title":"\u8282\u70b9\u200b (Nodes)","text":"<p>\u200b\u8282\u70b9\u200b\u662f\u200b\u56fe\u200b\u7684\u200b\u57fa\u672c\u200b\u6784\u5efa\u200b\u5757\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u6267\u884c\u200b\u7279\u5b9a\u200b\u7684\u200b\u4efb\u52a1\u200b\uff1a</p> <pre><code>def my_node(state: MessagesState):\n    # \u200b\u5904\u7406\u200b\u72b6\u6001\u200b\u5e76\u200b\u8fd4\u56de\u200b\u66f4\u65b0\u200b\n    new_message = {\"role\": \"ai\", \"content\": \"\u200b\u5904\u7406\u200b\u5b8c\u6210\u200b\"}\n    return {\"messages\": state[\"messages\"] + [new_message]}\n</code></pre>"},{"location":"llmapps/langgraph/overview/#edges","title":"\u8fb9\u200b (Edges)","text":"<p>\u200b\u8fb9\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u8282\u70b9\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6267\u884c\u200b\u8def\u5f84\u200b\uff1a</p> <pre><code>graph.add_edge(START, \"first_node\")      # \u200b\u4ece\u200b\u5f00\u59cb\u200b\u5230\u200b\u7b2c\u4e00\u4e2a\u200b\u8282\u70b9\u200b\ngraph.add_edge(\"first_node\", \"second_node\")  # \u200b\u8282\u70b9\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8fde\u63a5\u200b\ngraph.add_edge(\"second_node\", END)       # \u200b\u4ece\u200b\u8282\u70b9\u200b\u5230\u200b\u7ed3\u675f\u200b\n</code></pre>"},{"location":"llmapps/langgraph/overview/#_5","title":"\u8fdb\u9636\u200b\u793a\u4f8b\u200b\uff1a\u200b\u6761\u4ef6\u200b\u5de5\u4f5c\u200b\u6d41","text":"<p>\u200b\u521b\u5efa\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b\u6709\u200b\u6761\u4ef6\u200b\u6267\u884c\u200b\u7684\u200b\u5de5\u4f5c\u200b\u6d41\u200b\uff1a</p> <pre><code>from langgraph.graph import StateGraph, MessagesState, START, END\nfrom typing import Literal\n\ndef router(state: MessagesState) -&gt; Literal[\"end\", \"continue\"]:\n    last_message = state[\"messages\"][-1][\"content\"]\n    if \"\u200b\u7ed3\u675f\u200b\" in last_message or \"stop\" in last_message.lower():\n        return \"end\"\n    else:\n        return \"continue\"\n\ndef process_message(state: MessagesState):\n    last_message = state[\"messages\"][-1][\"content\"]\n    response = f\"\u200b\u5df2\u200b\u5904\u7406\u200b\u60a8\u200b\u7684\u200b\u6d88\u606f\u200b: {last_message}\"\n    return {\"messages\": [{\"role\": \"ai\", \"content\": response}]}\n\ndef final_response(state: MessagesState):\n    return {\"messages\": [{\"role\": \"ai\", \"content\": \"\u200b\u5bf9\u8bdd\u200b\u7ed3\u675f\u200b\uff0c\u200b\u611f\u8c22\u200b\u4f7f\u7528\u200b\uff01\"}]}\n\n# \u200b\u6784\u5efa\u200b\u56fe\u200b\ngraph = StateGraph(MessagesState)\ngraph.add_node(\"router\", router)\ngraph.add_node(\"process\", process_message)\ngraph.add_node(\"final\", final_response)\n\n# \u200b\u8bbe\u7f6e\u200b\u6761\u4ef6\u200b\u8fb9\u200b\ngraph.add_conditional_edges(\n    \"router\",\n    router,\n    {\n        \"continue\": \"process\",\n        \"end\": \"final\"\n    }\n)\n\ngraph.add_edge(\"process\", \"router\")  # \u200b\u5faa\u73af\u200b\u56de\u5230\u200b\u8def\u7531\u200b\u8282\u70b9\u200b\ngraph.add_edge(\"final\", END)\n\ngraph = graph.compile()\n</code></pre>"},{"location":"llmapps/langgraph/overview/#langgraph_2","title":"LangGraph \u200b\u751f\u6001\u200b\u7cfb\u7edf\u96c6\u6210","text":""},{"location":"llmapps/langgraph/overview/#langsmith_1","title":"\u4e0e\u200b LangSmith \u200b\u96c6\u6210","text":"<p>\u200b\u83b7\u5f97\u200b\u5b8c\u6574\u200b\u7684\u200b\u53ef\u200b\u89c2\u6d4b\u200b\u6027\u200b\uff1a</p> <pre><code># \u200b\u8bbe\u7f6e\u200b\u73af\u5883\u53d8\u91cf\u200b\nimport os\nos.environ[\"LANGSMITH_API_KEY\"] = \"your-api-key\"\nos.environ[\"LANGSMITH_PROJECT\"] = \"your-project-name\"\n\n# \u200b\u73b0\u5728\u200b\u6240\u6709\u200b\u7684\u200b\u8c03\u7528\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u8ffd\u8e2a\u200b\nresult = graph.invoke({\"messages\": [{\"role\": \"user\", \"content\": \"hi\"}]})\n</code></pre>"},{"location":"llmapps/langgraph/overview/#langchain","title":"\u4e0e\u200b LangChain \u200b\u7ec4\u4ef6\u200b\u96c6\u6210","text":"<p>\u200b\u867d\u7136\u200b LangGraph \u200b\u53ef\u4ee5\u200b\u72ec\u7acb\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4f46\u200b\u4e0e\u200b LangChain \u200b\u96c6\u6210\u200b\u53ef\u4ee5\u200b\u63d0\u4f9b\u200b\u66f4\u200b\u4e30\u5bcc\u200b\u7684\u200b\u529f\u80fd\u200b\uff1a</p> <pre><code>from langchain_community.chat_models import ChatOpenAI\nfrom langchain_core.messages import HumanMessage\n\ndef llm_node(state: MessagesState):\n    llm = ChatOpenAI(model=\"gpt-4\")\n    response = llm.invoke(state[\"messages\"])\n    return {\"messages\": [response]}\n</code></pre>"},{"location":"llmapps/langgraph/overview/#_6","title":"\u751f\u4ea7\u200b\u73af\u5883\u200b\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"llmapps/langgraph/overview/#1","title":"1. \u200b\u9519\u8bef\u5904\u7406","text":"<pre><code>def robust_node(state: MessagesState):\n    try:\n        # \u200b\u4f60\u200b\u7684\u200b\u4e1a\u52a1\u200b\u903b\u8f91\u200b\n        return {\"messages\": [{\"role\": \"ai\", \"content\": \"\u200b\u6210\u529f\u200b\"}]}\n    except Exception as e:\n        return {\"messages\": [{\"role\": \"ai\", \"content\": f\"\u200b\u5904\u7406\u200b\u51fa\u9519\u200b: {str(e)}\"}]}\n</code></pre>"},{"location":"llmapps/langgraph/overview/#2","title":"2. \u200b\u72b6\u6001\u200b\u6301\u4e45\u200b\u5316","text":"<pre><code># \u200b\u4fdd\u5b58\u200b\u68c0\u67e5\u70b9\u200b\ncheckpoint = graph.get_state()\n# \u200b\u6062\u590d\u200b\u6267\u884c\u200b\ngraph.invoke({\"messages\": [...]}, config={\"configurable\": {\"thread_id\": \"123\"}})\n</code></pre>"},{"location":"llmapps/langgraph/overview/#3","title":"3. \u200b\u6d41\u5f0f\u200b\u8f93\u51fa","text":"<pre><code>for chunk in graph.stream({\"messages\": [...]}):\n    print(\"\u200b\u6536\u5230\u200b\u66f4\u65b0\u200b:\", chunk)\n</code></pre>"},{"location":"llmapps/langgraph/overview/#_7","title":"\u6545\u969c\u200b\u6392\u9664","text":""},{"location":"llmapps/langgraph/overview/#_8","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u200b\u72b6\u6001\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u5339\u914d\u200b</li> <li> <p>\u200b\u786e\u4fdd\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u8fd4\u56de\u200b\u7684\u200b\u72b6\u6001\u200b\u7ed3\u6784\u200b\u4e0e\u200b\u56fe\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e00\u81f4\u200b</p> </li> <li> <p>\u200b\u5faa\u73af\u200b\u4f9d\u8d56\u200b</p> </li> <li> <p>\u200b\u4f7f\u7528\u200b\u6761\u4ef6\u200b\u8fb9\u200b\u907f\u514d\u200b\u65e0\u9650\u200b\u5faa\u73af\u200b</p> </li> <li> <p>\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b</p> </li> <li>\u200b\u5bf9\u4e8e\u200b\u957f\u65f6\u95f4\u200b\u8fd0\u884c\u200b\u7684\u200b\u5de5\u4f5c\u200b\u6d41\u200b\uff0c\u200b\u5b9a\u671f\u200b\u6e05\u7406\u200b\u4e0d\u200b\u9700\u8981\u200b\u7684\u200b\u72b6\u6001\u200b</li> </ol>"},{"location":"llmapps/langgraph/persistence/","title":"\ud83e\udde0 LangGraph \u200b\u6301\u4e45\u200b\u5316\u673a\u5236\u200b\u6559\u7a0b\u200b\uff08Persistence Tutorial\uff09","text":"<p>LangGraph \u200b\u662f\u200b LangChain \u200b\u56e2\u961f\u200b\u63a8\u51fa\u200b\u7684\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u53ef\u89c6\u5316\u200b\u4e0e\u200b\u53ef\u7f16\u7a0b\u200b\u5316\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u7684\u200b\u6846\u67b6\u200b\u3002 \u200b\u5b83\u200b\u7684\u200b\u4e00\u5927\u200b\u6838\u5fc3\u200b\u80fd\u529b\u200b\u2014\u2014\u200b\u6301\u4e45\u200b\u5316\u200b\uff08Persistence\uff09\uff0c\u200b\u901a\u8fc7\u200b\u201c\u200b\u68c0\u67e5\u70b9\u200b\uff08Checkpoint\uff09\u201d\u200b\u4e0e\u200b\u201c\u200b\u7ebf\u7a0b\u200b\uff08Thread\uff09\u201d\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u72b6\u6001\u200b\u7684\u200b\u4fdd\u5b58\u200b\u3001\u200b\u6062\u590d\u200b\u3001\u200b\u5206\u652f\u200b\u3001\u200b\u56de\u653e\u200b\u4e0e\u200b\u5171\u4eab\u200b\u3002</p> <p>\u200b\u8fd9\u200b\u4f7f\u5f97\u200b\u4f60\u200b\u80fd\u200b\u50cf\u200b\u73a9\u200b\u65f6\u95f4\u673a\u5668\u200b\u4e00\u6837\u200b\u5728\u200b\u5bf9\u8bdd\u200b\u4e0e\u200b\u4efb\u52a1\u200b\u6d41\u4e2d\u200b\u7a7f\u68ad\u200b\uff1a\u200b\u4fdd\u5b58\u200b\u8fc7\u53bb\u200b\u3001\u200b\u7f16\u8f91\u200b\u73b0\u5728\u200b\u3001\u200b\u5206\u53c9\u200b\u672a\u6765\u200b\u3002</p>"},{"location":"llmapps/langgraph/persistence/#_1","title":"\u4e00\u200b\u3001\u200b\u6301\u4e45\u200b\u5316\u200b\u7684\u200b\u6838\u5fc3\u200b\u6982\u5ff5","text":"<p>LangGraph \u200b\u5185\u7f6e\u200b\u4e00\u4e2a\u200b\u201c\u200b\u68c0\u67e5\u70b9\u200b\u7cfb\u7edf\u200b\uff08Checkpointer\uff09\u201d\uff0c\u200b\u6bcf\u5f53\u200b\u56fe\u200b\uff08Graph\uff09\u200b\u8fd0\u884c\u200b\u4e00\u4e2a\u200b\u201c\u200b\u8d85\u7ea7\u200b\u6b65\u9aa4\u200b\uff08super-step\uff09\u201d\uff0c\u200b\u5b83\u200b\u5c31\u200b\u81ea\u52a8\u200b\u4fdd\u5b58\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\uff08State\uff09\u200b\u7684\u200b\u5feb\u7167\u200b\uff0c\u200b\u79f0\u4e3a\u200b Checkpoint\u3002 \u200b\u8fd9\u4e9b\u200b\u68c0\u67e5\u70b9\u200b\u5c5e\u4e8e\u200b\u67d0\u4e2a\u200b\u201c\u200b\u7ebf\u7a0b\u200b\uff08Thread\uff09\u201d\uff0c\u200b\u6bcf\u4e2a\u200b\u7ebf\u7a0b\u200b\u5c31\u200b\u50cf\u200b\u4e00\u6b21\u200b\u72ec\u7acb\u200b\u7684\u200b\u6267\u884c\u200b\u4f1a\u8bdd\u200b\u6216\u200b\u5bf9\u8bdd\u200b\u5386\u53f2\u200b\u3002</p> <p>\u200b\u5f97\u76ca\u4e8e\u200b\u8fd9\u79cd\u200b\u673a\u5236\u200b\uff0cLangGraph \u200b\u80fd\u591f\u200b\u5b9e\u73b0\u200b\uff1a</p> <ul> <li>\u200b\u4eba\u7c7b\u200b\u4ecb\u5165\u200b\uff08Human-in-the-loop\uff09\uff1a\u200b\u968f\u65f6\u200b\u67e5\u770b\u200b\u4e0e\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\uff1b</li> <li>\u200b\u8bb0\u5fc6\u200b\uff08Memory\uff09\uff1a\u200b\u4fdd\u5b58\u200b\u957f\u671f\u200b\u4e0a\u4e0b\u6587\u200b\uff1b</li> <li>\u200b\u65f6\u95f4\u200b\u65c5\u884c\u200b\uff08Time Travel\uff09\uff1a\u200b\u56de\u653e\u200b\u4efb\u610f\u200b\u5386\u53f2\u200b\u72b6\u6001\u200b\uff1b</li> <li>\u200b\u5bb9\u9519\u200b\uff08Fault-tolerance\uff09\uff1a\u200b\u4efb\u52a1\u200b\u4e2d\u65ad\u200b\u53ef\u200b\u6062\u590d\u200b\u3002</li> </ul> <p>\u2705 \u200b\u63d0\u793a\u200b\uff1a\u200b\u4f7f\u7528\u200b LangGraph API \u200b\u65f6\u200b\uff0c\u200b\u8fd9\u200b\u4e00\u5207\u200b\u90fd\u200b\u81ea\u52a8\u200b\u5b8c\u6210\u200b\uff0c\u200b\u65e0\u9700\u200b\u624b\u52a8\u200b\u7ba1\u7406\u200b\u3002</p>"},{"location":"llmapps/langgraph/persistence/#threads","title":"\u4e8c\u200b\u3001\u200b\u7ebf\u7a0b\u200b\uff08Threads\uff09","text":"<p>\u200b\u7ebf\u7a0b\u200b\u662f\u200b\u6301\u4e45\u200b\u5316\u200b\u72b6\u6001\u200b\u7684\u200b\u8f7d\u4f53\u200b\u3002 \u200b\u6bcf\u5f53\u200b\u4f60\u200b\u6267\u884c\u200b\u4e00\u4e2a\u200b\u5e26\u6709\u200b checkpointer \u200b\u7684\u200b\u56fe\u65f6\u200b\uff0c\u200b\u5fc5\u987b\u200b\u6307\u5b9a\u200b\u4e00\u4e2a\u200b\u552f\u4e00\u200b\u7684\u200b <code>thread_id</code>\uff1a</p> <pre><code>config = {\"configurable\": {\"thread_id\": \"1\"}}\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u7ebf\u7a0b\u200b\u4f1a\u200b\u4fdd\u5b58\u200b\u6574\u4e2a\u200b\u6267\u884c\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4ea7\u751f\u200b\u7684\u200b\u6240\u6709\u200b\u68c0\u67e5\u70b9\u200b\uff08checkpoints\uff09\u3002 \u200b\u7a0d\u540e\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>thread_id</code> \u200b\u6765\u200b\u8bbf\u95ee\u200b\uff1a</p> <ul> <li>\u200b\u6700\u65b0\u200b\u72b6\u6001\u200b\uff1b</li> <li>\u200b\u5386\u53f2\u200b\u72b6\u6001\u200b\uff1b</li> <li>\u200b\u4efb\u610f\u200b\u65f6\u95f4\u200b\u70b9\u200b\u7684\u200b\u5feb\u7167\u200b\uff1b</li> <li>\u200b\u4ece\u200b\u4efb\u610f\u200b\u68c0\u67e5\u70b9\u200b\u7ee7\u7eed\u6267\u884c\u200b\u3002</li> </ul>"},{"location":"llmapps/langgraph/persistence/#checkpoints","title":"\u4e09\u200b\u3001\u200b\u68c0\u67e5\u70b9\u200b\uff08Checkpoints\uff09","text":"<p>\u200b\u6bcf\u4e2a\u200b Checkpoint \u200b\u5c31\u662f\u200b\u4e00\u5f20\u200b\u72b6\u6001\u200b\u5feb\u7167\u200b\uff0c\u200b\u5305\u542b\u200b\u4ee5\u4e0b\u200b\u6838\u5fc3\u200b\u4fe1\u606f\u200b\uff1a</p> <ul> <li><code>values</code>: \u200b\u5f53\u524d\u200b\u56fe\u4e2d\u200b\u5404\u200b\u901a\u9053\u200b\uff08channel\uff09\u200b\u7684\u200b\u72b6\u6001\u503c\u200b\uff1b</li> <li><code>config</code>: \u200b\u8fd0\u884c\u200b\u65f6\u200b\u914d\u7f6e\u200b\uff1b</li> <li><code>metadata</code>: \u200b\u5143\u200b\u6570\u636e\u200b\uff08\u200b\u5982\u200b\u6267\u884c\u200b\u8282\u70b9\u200b\u3001\u200b\u9519\u8bef\u200b\u3001\u200b\u6b65\u9aa4\u200b\u7f16\u53f7\u200b\u7b49\u200b\uff09\uff1b</li> <li><code>next</code>: \u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5f85\u200b\u6267\u884c\u200b\u8282\u70b9\u200b\uff1b</li> <li><code>tasks</code>: \u200b\u5f53\u524d\u4efb\u52a1\u200b\u4fe1\u606f\u200b\uff08\u200b\u53ef\u542b\u200b\u9519\u8bef\u200b\u3001\u200b\u6682\u505c\u200b\u3001\u200b\u6216\u200b\u4e2d\u65ad\u200b\u6570\u636e\u200b\uff09\u3002</li> </ul> <p>\u200b\u8fd9\u4e9b\u200b\u5feb\u7167\u200b\u88ab\u200b\u8fde\u7eed\u200b\u4fdd\u5b58\u200b\uff0c\u200b\u5c31\u200b\u6784\u6210\u200b\u4e86\u200b\u5b8c\u6574\u200b\u7684\u200b\u7ebf\u7a0b\u200b\u6267\u884c\u200b\u5386\u53f2\u200b\u3002</p>"},{"location":"llmapps/langgraph/persistence/#_2","title":"\u793a\u4f8b\u200b\uff1a\u200b\u521b\u5efa\u200b\u5e76\u200b\u8fd0\u884c\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u56fe","text":"<pre><code>from langgraph.graph import StateGraph, START, END\nfrom langgraph.checkpoint.memory import InMemorySaver\nfrom typing import Annotated\nfrom typing_extensions import TypedDict\nfrom operator import add\n\nclass State(TypedDict):\n    foo: str\n    bar: Annotated[list[str], add]\n\ndef node_a(state: State):\n    return {\"foo\": \"a\", \"bar\": [\"a\"]}\n\ndef node_b(state: State):\n    return {\"foo\": \"b\", \"bar\": [\"b\"]}\n\n# \u200b\u5b9a\u4e49\u200b\u56fe\u200b\u7ed3\u6784\u200b\nworkflow = StateGraph(State)\nworkflow.add_node(node_a)\nworkflow.add_node(node_b)\nworkflow.add_edge(START, \"node_a\")\nworkflow.add_edge(\"node_a\", \"node_b\")\nworkflow.add_edge(\"node_b\", END)\n\n# \u200b\u6dfb\u52a0\u200b\u5185\u5b58\u200b\u578b\u200b checkpointer\ncheckpointer = InMemorySaver()\ngraph = workflow.compile(checkpointer=checkpointer)\n\n# \u200b\u6307\u5b9a\u200b\u7ebf\u7a0b\u200b\u5e76\u200b\u6267\u884c\u200b\nconfig = {\"configurable\": {\"thread_id\": \"1\"}}\ngraph.invoke({\"foo\": \"\"}, config)\n</code></pre> <p>\u200b\u6267\u884c\u200b\u540e\u200b\uff0cLangGraph \u200b\u81ea\u52a8\u200b\u751f\u6210\u200b 4 \u200b\u4e2a\u200b\u68c0\u67e5\u70b9\u200b\uff0c\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b\uff1a</p> <ol> <li>\u200b\u521d\u59cb\u72b6\u6001\u200b\uff08\u200b\u5f85\u200b\u6267\u884c\u200b\u8282\u70b9\u200b\uff1aSTART\uff09</li> <li>\u200b\u8f93\u5165\u200b\u52a0\u8f7d\u200b\uff08\u200b\u5f85\u200b\u6267\u884c\u200b\u8282\u70b9\u200b\uff1anode_a\uff09</li> <li>node_a \u200b\u6267\u884c\u200b\u540e\u200b\uff08\u200b\u5f85\u200b\u6267\u884c\u200b\u8282\u70b9\u200b\uff1anode_b\uff09</li> <li>node_b \u200b\u6267\u884c\u200b\u540e\u200b\uff08\u200b\u6267\u884c\u200b\u7ed3\u675f\u200b\uff09</li> </ol>"},{"location":"llmapps/langgraph/persistence/#_3","title":"\u56db\u200b\u3001\u200b\u8bfb\u53d6\u200b\u72b6\u6001","text":""},{"location":"llmapps/langgraph/persistence/#1","title":"1. \u200b\u83b7\u53d6\u200b\u6700\u65b0\u200b\u72b6\u6001","text":"<pre><code>graph.get_state({\"configurable\": {\"thread_id\": \"1\"}})\n</code></pre> <p>\u200b\u8fd4\u56de\u503c\u200b\u662f\u200b\u4e00\u4e2a\u200b <code>StateSnapshot</code> \u200b\u5bf9\u8c61\u200b\u3002</p>"},{"location":"llmapps/langgraph/persistence/#2","title":"2. \u200b\u83b7\u53d6\u200b\u7279\u5b9a\u200b\u68c0\u67e5\u70b9\u200b\u7684\u200b\u72b6\u6001","text":"<pre><code>config = {\"configurable\": {\n    \"thread_id\": \"1\",\n    \"checkpoint_id\": \"1ef663ba-28fe-6528-8002-5a559208592c\"\n}}\ngraph.get_state(config)\n</code></pre>"},{"location":"llmapps/langgraph/persistence/#3","title":"3. \u200b\u83b7\u53d6\u200b\u6574\u4e2a\u200b\u72b6\u6001\u200b\u5386\u53f2","text":"<pre><code>config = {\"configurable\": {\"thread_id\": \"1\"}}\nhistory = list(graph.get_state_history(config))\n</code></pre> <p>\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u65f6\u95f4\u200b\u5012\u5e8f\u200b\u6392\u5217\u200b\u7684\u200b <code>StateSnapshot</code> \u200b\u5217\u8868\u200b\u3002</p>"},{"location":"llmapps/langgraph/persistence/#replay","title":"\u4e94\u200b\u3001\u200b\u91cd\u200b\u653e\u200b\uff08Replay\uff09","text":"<p>\u201c\u200b\u91cd\u200b\u653e\u200b\u201d\u200b\u5141\u8bb8\u200b\u4f60\u200b\u4ece\u200b\u4efb\u610f\u200b\u5386\u53f2\u200b\u72b6\u6001\u200b\u91cd\u65b0\u200b\u8fd0\u884c\u56fe\u200b\u3002 \u200b\u8fd9\u200b\u76f8\u5f53\u4e8e\u200b\u201c\u200b\u65f6\u95f4\u200b\u65c5\u884c\u200b\u201d\u200b\u5230\u200b\u4e00\u4e2a\u200b\u65e7\u200b\u72b6\u6001\u200b\uff0c\u200b\u7136\u540e\u200b\u4ece\u200b\u90a3\u91cc\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u5206\u652f\u200b\u3002</p> <pre><code>config = {\n    \"configurable\": {\n        \"thread_id\": \"1\",\n        \"checkpoint_id\": \"0c62ca34-ac19-445d-bbb0-5b4984975b2a\"\n    }\n}\ngraph.invoke(None, config=config)\n</code></pre> <p>LangGraph \u200b\u4f1a\u200b\u81ea\u52a8\u8bc6\u522b\u200b\u54ea\u4e9b\u200b\u6b65\u9aa4\u200b\u5df2\u200b\u6267\u884c\u200b\u8fc7\u200b\uff0c\u200b\u53ea\u200b\u201c\u200b\u91cd\u200b\u653e\u200b\u201d\u200b\u8fd9\u4e9b\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u91cd\u65b0\u200b\u8ba1\u7b97\u200b\u3002\u200b\u4e4b\u540e\u200b\u7684\u200b\u6b65\u9aa4\u200b\u5219\u200b\u4f1a\u200b\u88ab\u200b\u771f\u6b63\u200b\u6267\u884c\u200b\uff08\u200b\u76f8\u5f53\u4e8e\u200b\u65f6\u95f4\u200b\u7ebf\u200b\u5206\u53c9\u200b\uff09\u3002</p>"},{"location":"llmapps/langgraph/persistence/#update-state","title":"\u516d\u200b\u3001\u200b\u7f16\u8f91\u200b\u72b6\u6001\u200b\uff08Update State\uff09","text":"<p><code>update_state()</code> \u200b\u65b9\u6cd5\u200b\u5141\u8bb8\u200b\u4f60\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\uff0c\u200b\u751a\u81f3\u200b\u201c\u200b\u4f2a\u9020\u200b\u201d\u200b\u8282\u70b9\u200b\u8f93\u51fa\u200b\u3002</p> <pre><code>graph.update_state(config, {\"foo\": 2, \"bar\": [\"b\"]})\n</code></pre> <p>\u200b\u5982\u679c\u200b <code>bar</code> \u200b\u6709\u200b reducer\uff08\u200b\u5982\u200b <code>add</code>\uff09\uff0c\u200b\u5219\u200b\u4f1a\u200b\u5408\u5e76\u200b\uff1a</p> <pre><code>\u200b\u539f\u200b\u72b6\u6001\u200b: {\"foo\": 1, \"bar\": [\"a\"]}\n\u200b\u66f4\u65b0\u200b\u540e\u200b: {\"foo\": 2, \"bar\": [\"a\", \"b\"]}\n</code></pre> <p>\u200b\u5982\u679c\u200b\u8981\u200b\u6a21\u62df\u200b\u8282\u70b9\u200b\u6267\u884c\u200b\uff0c\u200b\u53ef\u200b\u4f7f\u7528\u200b <code>as_node</code> \u200b\u53c2\u6570\u200b\uff1a</p> <pre><code>graph.update_state(config, {\"foo\": 3}, as_node=\"node_b\")\n</code></pre>"},{"location":"llmapps/langgraph/persistence/#memory-store","title":"\u4e03\u200b\u3001\u200b\u8de8\u200b\u7ebf\u7a0b\u200b\u5171\u4eab\u200b\u8bb0\u5fc6\u200b\uff08Memory Store\uff09","text":"<p>Checkpointer \u200b\u4fdd\u5b58\u200b\u72b6\u6001\u200b\u5728\u200b\u5355\u4e2a\u200b\u7ebf\u7a0b\u200b\u5185\u200b\uff0c\u200b\u800c\u200b\u6709\u65f6\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u5728\u200b\u4e0d\u540c\u200b\u7ebf\u7a0b\u200b\u4e4b\u95f4\u200b\u5171\u4eab\u200b\u8bb0\u5fc6\u200b\uff08\u200b\u5982\u540c\u200b\u4e00\u4e2a\u200b\u7528\u6237\u200b\u7684\u200b\u591a\u8f6e\u200b\u5bf9\u8bdd\u200b\uff09\u3002 \u200b\u8fd9\u200b\u5c31\u200b\u9700\u8981\u200b Store\uff08\u200b\u5b58\u50a8\u200b\uff09 \u200b\u63a5\u53e3\u200b\u3002</p> <p>LangGraph \u200b\u63d0\u4f9b\u200b <code>InMemoryStore</code>\uff0c\u200b\u7528\u4e8e\u200b\u8de8\u200b\u7ebf\u7a0b\u200b\u5b58\u50a8\u200b\u4e0e\u200b\u68c0\u7d22\u200b\u4fe1\u606f\u200b\u3002</p> <pre><code>from langgraph.store.memory import InMemoryStore\nstore = InMemoryStore()\n</code></pre>"},{"location":"llmapps/langgraph/persistence/#_4","title":"\u5b58\u50a8\u7528\u6237\u200b\u8bb0\u5fc6","text":"<pre><code>import uuid\nuser_id = \"1\"\nnamespace = (user_id, \"memories\")\nmemory_id = str(uuid.uuid4())\nmemory = {\"food_preference\": \"I like pizza\"}\n\nstore.put(namespace, memory_id, memory)\n</code></pre>"},{"location":"llmapps/langgraph/persistence/#_5","title":"\u68c0\u7d22\u200b\u8bb0\u5fc6","text":"<pre><code>memories = store.search(namespace)\nprint(memories[-1].dict())\n</code></pre> <p>\u200b\u8fd4\u56de\u200b\u7684\u200b\u5bf9\u8c61\u200b\u5305\u542b\u200b\uff1a</p> <ul> <li><code>value</code>: \u200b\u5b9e\u9645\u200b\u5185\u5bb9\u200b\uff1b</li> <li><code>namespace</code>: \u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\uff1b</li> <li><code>created_at</code> / <code>updated_at</code>: \u200b\u65f6\u95f4\u200b\u6233\u200b\u3002</li> </ul>"},{"location":"llmapps/langgraph/persistence/#semantic-search","title":"\u516b\u200b\u3001\u200b\u8bed\u4e49\u200b\u68c0\u7d22\u200b\uff08Semantic Search\uff09","text":"<p>Store \u200b\u4e0d\u4ec5\u200b\u80fd\u200b\u505a\u200b\u5173\u952e\u8bcd\u200b\u68c0\u7d22\u200b\uff0c\u200b\u8fd8\u200b\u80fd\u200b\u8fdb\u884c\u200b\u8bed\u4e49\u200b\u5339\u914d\u200b\u3002</p> <p>\u200b\u542f\u7528\u200b\u65b9\u6cd5\u200b\uff1a</p> <pre><code>from langchain.embeddings import init_embeddings\n\nstore = InMemoryStore(\n    index={\n        \"embed\": init_embeddings(\"openai:text-embedding-3-small\"),\n        \"dims\": 1536,\n        \"fields\": [\"food_preference\", \"$\"]\n    }\n)\n</code></pre> <p>\u200b\u67e5\u8be2\u200b\uff1a</p> <pre><code>store.search(namespace, query=\"\u200b\u7528\u6237\u200b\u559c\u6b22\u200b\u5403\u200b\u4ec0\u4e48\u200b\uff1f\", limit=3)\n</code></pre>"},{"location":"llmapps/langgraph/persistence/#langgraph-store","title":"\u4e5d\u200b\u3001\u200b\u5728\u200b LangGraph \u200b\u4e2d\u200b\u96c6\u6210\u200b Store","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u4f20\u5165\u200b checkpointer \u200b\u4e0e\u200b store\uff1a</p> <pre><code>from langgraph.checkpoint.memory import InMemorySaver\n\ncheckpointer = InMemorySaver()\ngraph = graph.compile(checkpointer=checkpointer, store=store)\n</code></pre> <p>\u200b\u5728\u200b\u8282\u70b9\u200b\u4e2d\u200b\u5373\u53ef\u200b\u4f7f\u7528\u200b Store\uff1a</p> <pre><code>def update_memory(state, config, *, store):\n    user_id = config[\"configurable\"][\"user_id\"]\n    namespace = (user_id, \"memories\")\n    store.put(namespace, str(uuid.uuid4()), {\"memory\": \"User likes pizza\"})\n</code></pre> <p>\u200b\u591a\u4e2a\u200b\u7ebf\u7a0b\u200b\uff08thread_id \u200b\u4e0d\u540c\u200b\uff09\u200b\u5171\u4eab\u200b\u540c\u4e00\u200b user_id \u200b\u5373\u53ef\u200b\u8bbf\u95ee\u200b\u540c\u4e00\u200b\u8bb0\u5fc6\u200b\u3002</p>"},{"location":"llmapps/langgraph/persistence/#checkpointer","title":"\u5341\u200b\u3001Checkpointer \u200b\u5b9e\u73b0\u200b\u5e93","text":"<p>LangGraph \u200b\u7684\u200b\u6301\u4e45\u200b\u5316\u200b\u5e95\u5c42\u200b\u7531\u200b\u591a\u4e2a\u200b\u53ef\u9009\u200b\u7684\u200b Checkpointer \u200b\u5e93\u200b\u5b9e\u73b0\u200b\uff1a</p> \u200b\u5e93\u200b \u200b\u5b58\u50a8\u200b\u7c7b\u578b\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b <code>langgraph-checkpoint</code> \u200b\u5185\u5b58\u200b \u200b\u9ed8\u8ba4\u200b\u5185\u7f6e\u200b\uff0c\u200b\u5feb\u901f\u200b\u5b9e\u9a8c\u200b <code>langgraph-checkpoint-sqlite</code> SQLite \u200b\u672c\u5730\u200b\u6301\u4e45\u200b\u5316\u200b <code>langgraph-checkpoint-postgres</code> PostgreSQL \u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u7ea7\u200b\u6301\u4e45\u200b\u5316\u200b <p>\u200b\u6240\u6709\u200b\u5b9e\u73b0\u200b\u90fd\u200b\u7b26\u5408\u200b <code>BaseCheckpointSaver</code> \u200b\u63a5\u53e3\u200b\u3002</p>"},{"location":"llmapps/langgraph/persistence/#_6","title":"\ud83c\udfaf \u200b\u603b\u7ed3","text":"<p>LangGraph \u200b\u7684\u200b\u6301\u4e45\u200b\u5316\u200b\u7cfb\u7edf\u200b\u8ba9\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u4e0d\u518d\u200b\u662f\u200b\u201c\u200b\u4e00\u6b21\u6027\u200b\u201d\u200b\u7684\u200b\u3002 \u200b\u901a\u8fc7\u200b Checkpointer + Thread + Store \u200b\u7684\u200b\u4e09\u5c42\u200b\u67b6\u6784\u200b\uff0c\u200b\u5b83\u200b\u8ba9\u200b\u4f60\u200b\u7684\u200b AI \u200b\u7cfb\u7edf\u200b\u62e5\u6709\u200b\uff1a</p> <ul> <li>\u200b\u53ef\u200b\u56de\u6eaf\u200b\u7684\u200b\u72b6\u6001\u200b\uff1b</li> <li>\u200b\u53ef\u200b\u6301\u4e45\u200b\u5316\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\uff1b</li> <li>\u200b\u53ef\u200b\u5171\u4eab\u200b\u7684\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\uff1b</li> <li>\u200b\u53ef\u91cd\u200b\u653e\u200b\u4e0e\u200b\u5206\u53c9\u200b\u7684\u200b\u6267\u884c\u200b\u8def\u5f84\u200b\u3002</li> </ul> <p>\u200b\u6362\u53e5\u8bdd\u8bf4\u200b\uff0cLangGraph \u200b\u8ba9\u200b\u201cAI \u200b\u7a0b\u5e8f\u200b\u7684\u200b\u65f6\u95f4\u200b\u201d\u200b\u6210\u4e3a\u200b\u4e00\u79cd\u200b\u53ef\u7f16\u7a0b\u200b\u8d44\u6e90\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5e0c\u671b\u200b\u6211\u200b\u7ee7\u7eed\u200b\u8865\u5145\u200b\u4e0b\u200b\u4e00\u7bc7\u200b\u6559\u7a0b\u200b\uff0c\u200b\u6bd4\u5982\u200b \ud83d\udc49\u300cLangGraph \u200b\u65f6\u95f4\u200b\u65c5\u884c\u200b (Time Travel) \u200b\u5b9e\u6218\u200b\u300d \u200b\u6216\u200b \ud83d\udc49\u300cLangGraph \u200b\u4e2d\u200b\u7684\u200b Store \u200b\u4e0e\u200b\u8bed\u4e49\u200b\u68c0\u7d22\u200b\u5b9e\u6218\u200b\u6307\u5357\u200b\u300d \u200b\u6211\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5728\u200b\u6b64\u57fa\u7840\u200b\u4e0a\u200b\u7eed\u5199\u200b\u3002 \u200b\u4f60\u200b\u60f3\u200b\u6211\u200b\u5f80\u200b\u54ea\u4e2a\u200b\u65b9\u5411\u200b\u5c55\u5f00\u200b\uff1f</p>"},{"location":"llmapps/langgraph/quickstart/","title":"LangGraph \u200b\u5feb\u901f\u200b\u5165\u95e8\u6559\u7a0b\u200b\uff1a\u200b\u6784\u5efa\u200b\u8ba1\u7b97\u5668\u200b\u667a\u80fd\u200b\u4f53","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u5c06\u200b\u6559\u200b\u4f60\u200b\u4f7f\u7528\u200b LangGraph \u200b\u7684\u200b\u4e24\u79cd\u200b\u4e0d\u540c\u200b API \u200b\u6765\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u8ba1\u7b97\u5668\u200b\u667a\u80fd\u200b\u4f53\u200b\uff1a</p> <ul> <li>Graph API\uff1a\u200b\u901a\u8fc7\u200b\u5b9a\u4e49\u200b\u8282\u70b9\u200b\u548c\u200b\u8fb9\u200b\u6765\u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4f53\u56fe\u200b</li> <li>Functional API\uff1a\u200b\u901a\u8fc7\u200b\u5355\u4e2a\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u667a\u80fd\u200b\u4f53\u200b\u903b\u8f91\u200b</li> </ul> <p>\u200b\u524d\u7f6e\u200b\u8981\u6c42\u200b\uff1a\u200b\u4f60\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b Claude (Anthropic) \u200b\u8d26\u6237\u200b\u5e76\u200b\u83b7\u53d6\u200b API \u200b\u5bc6\u94a5\u200b\uff0c\u200b\u7136\u540e\u200b\u5728\u200b\u7ec8\u7aef\u200b\u4e2d\u200b\u8bbe\u7f6e\u200b <code>ANTHROPIC_API_KEY</code> \u200b\u73af\u5883\u53d8\u91cf\u200b\u3002</p>"},{"location":"llmapps/langgraph/quickstart/#graph-api","title":"\u65b9\u6cd5\u200b\u4e00\u200b\uff1a\u200b\u4f7f\u7528\u200b Graph API","text":"<p>Graph API \u200b\u9002\u5408\u200b\u559c\u6b22\u200b\u901a\u8fc7\u200b\u53ef\u89c6\u5316\u200b\u8282\u70b9\u200b\u548c\u200b\u8fb9\u200b\u6765\u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u5f00\u53d1\u8005\u200b\u3002</p>"},{"location":"llmapps/langgraph/quickstart/#1","title":"\u6b65\u9aa4\u200b 1\uff1a\u200b\u5b9a\u4e49\u200b\u5de5\u5177\u200b\u548c\u200b\u6a21\u578b","text":"<p>\u200b\u9996\u5148\u200b\uff0c\u200b\u6211\u4eec\u200b\u5b9a\u4e49\u200b Claude Sonnet 4.5 \u200b\u6a21\u578b\u200b\u548c\u200b\u6570\u5b66\u8ba1\u7b97\u200b\u5de5\u5177\u200b\uff1a</p> <pre><code>from langchain.tools import tool\nfrom langchain.chat_models import init_chat_model\n\n# \u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b\nmodel = init_chat_model(\n    \"anthropic:claude-sonnet-4-5\",\n    temperature=0\n)\n\n# \u200b\u5b9a\u4e49\u200b\u6570\u5b66\u200b\u5de5\u5177\u200b\n@tool\ndef multiply(a: int, b: int) -&gt; int:\n    \"\"\"Multiply `a` and `b`.\"\"\"\n    return a * b\n\n@tool\ndef add(a: int, b: int) -&gt; int:\n    \"\"\"Adds `a` and `b`.\"\"\"\n    return a + b\n\n@tool\ndef divide(a: int, b: int) -&gt; float:\n    \"\"\"Divide `a` and `b`.\"\"\"\n    return a / b\n\n# \u200b\u5c06\u200b\u5de5\u5177\u200b\u7ed1\u5b9a\u200b\u5230\u200b\u6a21\u578b\u200b\ntools = [add, multiply, divide]\ntools_by_name = {tool.name: tool for tool in tools}\nmodel_with_tools = model.bind_tools(tools)\n</code></pre>"},{"location":"llmapps/langgraph/quickstart/#2","title":"\u6b65\u9aa4\u200b 2\uff1a\u200b\u5b9a\u4e49\u200b\u72b6\u6001","text":"<p>\u200b\u72b6\u6001\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200b\u6d88\u606f\u200b\u548c\u200b\u8ffd\u8e2a\u200b LLM \u200b\u8c03\u7528\u200b\u6b21\u6570\u200b\uff1a</p> <pre><code>from langchain.messages import AnyMessage\nfrom typing_extensions import TypedDict, Annotated\nimport operator\n\nclass MessagesState(TypedDict):\n    messages: Annotated[list[AnyMessage], operator.add]  # \u200b\u81ea\u52a8\u200b\u8ffd\u52a0\u200b\u65b0\u200b\u6d88\u606f\u200b\n    llm_calls: int\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a<code>Annotated</code> \u200b\u7c7b\u578b\u200b\u914d\u5408\u200b <code>operator.add</code> \u200b\u786e\u4fdd\u200b\u65b0\u200b\u6d88\u606f\u200b\u4f1a\u200b\u8ffd\u52a0\u200b\u5230\u200b\u73b0\u6709\u200b\u5217\u8868\u200b\u4e2d\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u66ff\u6362\u200b\u5b83\u200b\u3002</p>"},{"location":"llmapps/langgraph/quickstart/#3","title":"\u6b65\u9aa4\u200b 3\uff1a\u200b\u5b9a\u4e49\u200b\u6a21\u578b\u200b\u8282\u70b9","text":"<p>\u200b\u8fd9\u4e2a\u200b\u8282\u70b9\u200b\u8d1f\u8d23\u200b\u8c03\u7528\u200b LLM \u200b\u5e76\u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\uff1a</p> <pre><code>from langchain.messages import SystemMessage\n\ndef llm_call(state: dict):\n    \"\"\"LLM \u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\"\"\"\n    return {\n        \"messages\": [\n            model_with_tools.invoke(\n                [\n                    SystemMessage(\n                        content=\"You are a helpful assistant tasked with performing arithmetic on a set of inputs.\"\n                    )\n                ] + state[\"messages\"]\n            )\n        ],\n        \"llm_calls\": state.get('llm_calls', 0) + 1  # \u200b\u8ffd\u8e2a\u200b\u8c03\u7528\u200b\u6b21\u6570\u200b\n    }\n</code></pre>"},{"location":"llmapps/langgraph/quickstart/#4","title":"\u6b65\u9aa4\u200b 4\uff1a\u200b\u5b9a\u4e49\u200b\u5de5\u5177\u200b\u8282\u70b9","text":"<p>\u200b\u8fd9\u4e2a\u200b\u8282\u70b9\u200b\u8d1f\u8d23\u200b\u6267\u884c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u5e76\u200b\u8fd4\u56de\u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>from langchain.messages import ToolMessage\n\ndef tool_node(state: dict):\n    \"\"\"\u200b\u6267\u884c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\"\"\"\n    result = []\n    for tool_call in state[\"messages\"][-1].tool_calls:\n        tool = tools_by_name[tool_call[\"name\"]]\n        observation = tool.invoke(tool_call[\"args\"])\n        result.append(ToolMessage(content=observation, tool_call_id=tool_call[\"id\"]))\n    return {\"messages\": result}\n</code></pre>"},{"location":"llmapps/langgraph/quickstart/#5","title":"\u6b65\u9aa4\u200b 5\uff1a\u200b\u5b9a\u4e49\u200b\u7ed3\u675f\u200b\u903b\u8f91","text":"<p>\u200b\u6761\u4ef6\u200b\u8fb9\u200b\u51fd\u6570\u200b\u51b3\u5b9a\u200b\u662f\u200b\u7ee7\u7eed\u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\u8fd8\u662f\u200b\u7ed3\u675f\u200b\u5bf9\u8bdd\u200b\uff1a</p> <pre><code>from typing import Literal\nfrom langgraph.graph import StateGraph, START, END\n\ndef should_continue(state: MessagesState) -&gt; Literal[\"tool_node\", END]:\n    \"\"\"\u200b\u6839\u636e\u200b LLM \u200b\u662f\u5426\u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\u6765\u200b\u51b3\u5b9a\u200b\u7ee7\u7eed\u200b\u8fd8\u662f\u200b\u505c\u6b62\u200b\"\"\"\n    messages = state[\"messages\"]\n    last_message = messages[-1]\n\n    # \u200b\u5982\u679c\u200b LLM \u200b\u8c03\u7528\u200b\u4e86\u200b\u5de5\u5177\u200b\uff0c\u200b\u5219\u200b\u6267\u884c\u200b\u5de5\u5177\u200b\u8282\u70b9\u200b\n    if last_message.tool_calls:\n        return \"tool_node\"\n\n    # \u200b\u5426\u5219\u200b\u7ed3\u675f\u200b\u5bf9\u8bdd\u200b\uff08\u200b\u56de\u590d\u200b\u7528\u6237\u200b\uff09\n    return END\n</code></pre>"},{"location":"llmapps/langgraph/quickstart/#6","title":"\u6b65\u9aa4\u200b 6\uff1a\u200b\u6784\u5efa\u200b\u548c\u200b\u7f16\u8bd1\u200b\u667a\u80fd\u200b\u4f53","text":"<p>\u200b\u4f7f\u7528\u200b <code>StateGraph</code> \u200b\u7c7b\u200b\u6784\u5efa\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u5e76\u200b\u7f16\u8bd1\u200b\uff1a</p> <pre><code># \u200b\u6784\u5efa\u200b\u5de5\u4f5c\u200b\u6d41\u200b\nagent_builder = StateGraph(MessagesState)\n\n# \u200b\u6dfb\u52a0\u200b\u8282\u70b9\u200b\nagent_builder.add_node(\"llm_call\", llm_call)\nagent_builder.add_node(\"tool_node\", tool_node)\n\n# \u200b\u6dfb\u52a0\u200b\u8fb9\u200b\u8fde\u63a5\u200b\u8282\u70b9\u200b\nagent_builder.add_edge(START, \"llm_call\")\nagent_builder.add_conditional_edges(\n    \"llm_call\",\n    should_continue,\n    [\"tool_node\", END]\n)\nagent_builder.add_edge(\"tool_node\", \"llm_call\")\n\n# \u200b\u7f16\u8bd1\u200b\u667a\u80fd\u200b\u4f53\u200b\nagent = agent_builder.compile()\n\n# \u200b\u53ef\u89c6\u5316\u200b\u667a\u80fd\u200b\u4f53\u56fe\u200b\nfrom IPython.display import Image, display\ndisplay(Image(agent.get_graph(xray=True).draw_mermaid_png()))\n\n# \u200b\u6d4b\u8bd5\u200b\u667a\u80fd\u200b\u4f53\u200b\nfrom langchain.messages import HumanMessage\nmessages = [HumanMessage(content=\"Add 3 and 4.\")]\nresult = agent.invoke({\"messages\": messages})\nfor m in result[\"messages\"]:\n    m.pretty_print()\n</code></pre> <p>\u200b\u606d\u559c\u200b\uff01 \u200b\u4f60\u200b\u5df2\u7ecf\u200b\u4f7f\u7528\u200b Graph API \u200b\u6210\u529f\u200b\u6784\u5efa\u200b\u4e86\u200b\u7b2c\u4e00\u4e2a\u200b\u667a\u80fd\u200b\u4f53\u200b\uff01</p>"},{"location":"llmapps/langgraph/quickstart/#functional-api","title":"\u65b9\u6cd5\u200b\u4e8c\u200b\uff1a\u200b\u4f7f\u7528\u200b Functional API","text":"<p>Functional API \u200b\u9002\u5408\u200b\u559c\u6b22\u200b\u5728\u200b\u5355\u4e2a\u200b\u51fd\u6570\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u903b\u8f91\u200b\u7684\u200b\u5f00\u53d1\u8005\u200b\u3002</p>"},{"location":"llmapps/langgraph/quickstart/#1_1","title":"\u6b65\u9aa4\u200b 1\uff1a\u200b\u5b9a\u4e49\u200b\u5de5\u5177\u200b\u548c\u200b\u6a21\u578b","text":"<p>\u200b\u5de5\u5177\u200b\u548c\u200b\u6a21\u578b\u200b\u5b9a\u4e49\u200b\u4e0e\u200b Graph API \u200b\u76f8\u540c\u200b\uff1a</p> <pre><code>from langchain.tools import tool\nfrom langchain.chat_models import init_chat_model\n\nmodel = init_chat_model(\n    \"anthropic:claude-sonnet-4-5\",\n    temperature=0\n)\n\n# \u200b\u5b9a\u4e49\u200b\u76f8\u540c\u200b\u7684\u200b\u6570\u5b66\u200b\u5de5\u5177\u200b\n@tool\ndef multiply(a: int, b: int) -&gt; int:\n    \"\"\"Multiply `a` and `b`.\"\"\"\n    return a * b\n\n@tool\ndef add(a: int, b: int) -&gt; int:\n    \"\"\"Adds `a` and `b`.\"\"\"\n    return a + b\n\n@tool\ndef divide(a: int, b: int) -&gt; float:\n    \"\"\"Divide `a` and `b`.\"\"\"\n    return a / b\n\n# \u200b\u7ed1\u5b9a\u200b\u5de5\u5177\u200b\u5230\u200b\u6a21\u578b\u200b\ntools = [add, multiply, divide]\ntools_by_name = {tool.name: tool for tool in tools}\nmodel_with_tools = model.bind_tools(tools)\n\nfrom langgraph.graph import add_messages\nfrom langchain.messages import SystemMessage, HumanMessage, ToolCall\nfrom langchain_core.messages import BaseMessage\nfrom langgraph.func import entrypoint, task\n</code></pre>"},{"location":"llmapps/langgraph/quickstart/#2_1","title":"\u6b65\u9aa4\u200b 2\uff1a\u200b\u5b9a\u4e49\u200b\u6a21\u578b\u200b\u8282\u70b9","text":"<p>\u200b\u4f7f\u7528\u200b <code>@task</code> \u200b\u88c5\u9970\u200b\u5668\u200b\u6807\u8bb0\u200b\u53ef\u200b\u6267\u884c\u200b\u4efb\u52a1\u200b\uff1a</p> <pre><code>@task\ndef call_llm(messages: list[BaseMessage]):\n    \"\"\"LLM \u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\"\"\"\n    return model_with_tools.invoke(\n        [\n            SystemMessage(\n                content=\"You are a helpful assistant tasked with performing arithmetic on a set of inputs.\"\n            )\n        ] + messages\n    )\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a<code>@task</code> \u200b\u88c5\u9970\u200b\u5668\u200b\u6807\u8bb0\u200b\u7684\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u6267\u884c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u540c\u6b65\u200b\u6216\u200b\u5f02\u6b65\u200b\u8c03\u7528\u200b\u3002</p>"},{"location":"llmapps/langgraph/quickstart/#3_1","title":"\u6b65\u9aa4\u200b 3\uff1a\u200b\u5b9a\u4e49\u200b\u5de5\u5177\u200b\u8282\u70b9","text":"<pre><code>@task\ndef call_tool(tool_call: ToolCall):\n    \"\"\"\u200b\u6267\u884c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\"\"\"\n    tool = tools_by_name[tool_call[\"name\"]]\n    return tool.invoke(tool_call)\n</code></pre>"},{"location":"llmapps/langgraph/quickstart/#4_1","title":"\u6b65\u9aa4\u200b 4\uff1a\u200b\u5b9a\u4e49\u200b\u667a\u80fd\u200b\u4f53","text":"<p>\u200b\u4f7f\u7528\u200b <code>@entrypoint</code> \u200b\u51fd\u6570\u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4f53\u200b\uff1a</p> <pre><code>@entrypoint()\ndef agent(messages: list[BaseMessage]):\n    model_response = call_llm(messages).result()\n\n    while True:\n        if not model_response.tool_calls:\n            break\n\n        # \u200b\u6267\u884c\u200b\u5de5\u5177\u200b\n        tool_result_futures = [\n            call_tool(tool_call) for tool_call in model_response.tool_calls\n        ]\n        tool_results = [fut.result() for fut in tool_result_futures]\n        messages = add_messages(messages, [model_response, *tool_results])\n        model_response = call_llm(messages).result()\n\n    messages = add_messages(messages, model_response)\n    return messages\n\n# \u200b\u6d4b\u8bd5\u200b\u667a\u80fd\u200b\u4f53\u200b\nmessages = [HumanMessage(content=\"Add 3 and 4.\")]\nfor chunk in agent.stream(messages, stream_mode=\"updates\"):\n    print(chunk)\n    print(\"\\n\")\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u5728\u200b Functional API \u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u4e0d\u200b\u9700\u8981\u200b\u663e\u5f0f\u200b\u5b9a\u4e49\u200b\u8282\u70b9\u200b\u548c\u200b\u8fb9\u200b\uff0c\u200b\u800c\u662f\u200b\u5728\u200b\u5355\u4e2a\u200b\u51fd\u6570\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u6807\u51c6\u200b\u7684\u200b\u63a7\u5236\u6d41\u200b\u903b\u8f91\u200b\uff08\u200b\u5faa\u73af\u200b\u3001\u200b\u6761\u4ef6\u200b\u8bed\u53e5\u200b\uff09\u3002</p> <p>\u200b\u606d\u559c\u200b\uff01 \u200b\u4f60\u200b\u5df2\u7ecf\u200b\u4f7f\u7528\u200b Functional API \u200b\u6210\u529f\u200b\u6784\u5efa\u200b\u4e86\u200b\u7b2c\u4e00\u4e2a\u200b\u667a\u80fd\u200b\u4f53\u200b\uff01</p>"},{"location":"llmapps/langgraph/quickstart/#_1","title":"\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\u7684\u200b\u6bd4\u8f83","text":"\u7279\u6027\u200b Graph API Functional API \u200b\u53ef\u89c6\u5316\u200b \u2705 \u200b\u652f\u6301\u200b\u56fe\u200b\u53ef\u89c6\u5316\u200b \u274c \u200b\u65e0\u200b\u53ef\u89c6\u5316\u200b \u200b\u63a7\u5236\u7cbe\u5ea6\u200b \u2705 \u200b\u7ec6\u7c92\u5ea6\u200b\u63a7\u5236\u200b \u26a0\ufe0f \u200b\u4e2d\u7b49\u200b\u63a7\u5236\u200b \u200b\u5b66\u4e60\u66f2\u7ebf\u200b \u200b\u8f83\u200b\u9661\u5ced\u200b \u200b\u8f83\u200b\u5e73\u7f13\u200b \u200b\u4ee3\u7801\u200b\u590d\u6742\u5ea6\u200b \u200b\u8f83\u200b\u9ad8\u200b \u200b\u8f83\u200b\u4f4e\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b \u200b\u590d\u6742\u200b\u5de5\u4f5c\u200b\u6d41\u200b \u200b\u7b80\u5355\u200b\u5230\u200b\u4e2d\u7b49\u200b\u590d\u6742\u5ea6"},{"location":"llmapps/langgraph/streaming/","title":"LangGraph \u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u5b8c\u6574\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langgraph/streaming/#_1","title":"\u6982\u8ff0","text":"<p>LangGraph \u200b\u5b9e\u73b0\u200b\u4e86\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u80fd\u591f\u200b\u5b9e\u65f6\u200b\u5c55\u793a\u200b\u66f4\u65b0\u200b\u3002\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u5bf9\u4e8e\u200b\u63d0\u5347\u200b\u57fa\u4e8e\u200b LLM \u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u7684\u200b\u54cd\u5e94\u200b\u80fd\u529b\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002\u200b\u901a\u8fc7\u200b\u9010\u6b65\u200b\u663e\u793a\u200b\u8f93\u51fa\u200b\uff08\u200b\u5373\u4f7f\u200b\u5728\u200b\u5b8c\u6574\u200b\u54cd\u5e94\u200b\u51c6\u5907\u200b\u597d\u200b\u4e4b\u524d\u200b\uff09\uff0c\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u663e\u8457\u200b\u6539\u5584\u200b\u4e86\u200b\u7528\u6237\u200b\u4f53\u9a8c\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u5904\u7406\u200b LLM \u200b\u5ef6\u8fdf\u200b\u65f6\u200b\u3002</p>"},{"location":"llmapps/langgraph/streaming/#_2","title":"\u652f\u6301\u200b\u7684\u200b\u6d41\u200b\u6a21\u5f0f","text":"\u6a21\u5f0f\u200b \u200b\u8f93\u51fa\u200b\u5185\u5bb9\u200b \u200b\u6027\u80fd\u200b \u200b\u573a\u666f\u200b <code>values</code> \u200b\u6bcf\u6b65\u200b\u5b8c\u6574\u200b\u72b6\u6001\u200b \u200b\u8f83\u6162\u200b \u200b\u8c03\u8bd5\u200b\u6216\u200b\u72b6\u6001\u200b\u8ddf\u8e2a\u200b <code>updates</code> \u200b\u589e\u91cf\u200b\u66f4\u65b0\u200b \u200b\u5feb\u200b \u200b\u5b9e\u65f6\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b <code>messages</code> LLM token\u200b\u6d41\u200b \u200b\u4e2d\u200b \u200b\u804a\u5929\u200b UI \u200b\u5b9e\u65f6\u200b\u751f\u6210\u200b <code>custom</code> \u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b \u200b\u53ef\u63a7\u200b \u200b\u8fdb\u5ea6\u200b\u65e5\u5fd7\u200b\u3001\u200b\u81ea\u5b9a\u4e49\u200b\u4e8b\u4ef6\u200b <code>debug</code> \u200b\u5168\u90e8\u200b\u7ec6\u8282\u200b \u200b\u6700\u6162\u200b \u200b\u6df1\u5ea6\u200b\u8c03\u8bd5\u200b\u5206\u6790"},{"location":"llmapps/langgraph/streaming/#_3","title":"\u57fa\u7840\u200b\u7528\u6cd5","text":""},{"location":"llmapps/langgraph/streaming/#_4","title":"\u57fa\u672c\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u793a\u4f8b","text":"<pre><code># \u200b\u540c\u6b65\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\nfor chunk in graph.stream(inputs, stream_mode=\"updates\"):\n    print(chunk)\n\n# \u200b\u5f02\u6b65\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\nasync for chunk in graph.astream(inputs, stream_mode=\"updates\"):\n    print(chunk)\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#_5","title":"\u5b8c\u6574\u200b\u793a\u4f8b","text":"<pre><code>from typing import TypedDict\nfrom langgraph.graph import StateGraph, START, END\n\nclass State(TypedDict):\n    topic: str\n    joke: str\n\ndef refine_topic(state: State):\n    return {\"topic\": state[\"topic\"] + \" and cats\"}\n\ndef generate_joke(state: State):\n    return {\"joke\": f\"This is a joke about {state['topic']}\"}\n\n# \u200b\u6784\u5efa\u200b\u56fe\u200b\ngraph = (\n    StateGraph(State)\n    .add_node(refine_topic)\n    .add_node(generate_joke)\n    .add_edge(START, \"refine_topic\")\n    .add_edge(\"refine_topic\", \"generate_joke\")\n    .add_edge(\"generate_joke\", END)\n    .compile()\n)\n\n# \u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u66f4\u65b0\u200b\nfor chunk in graph.stream(\n    {\"topic\": \"ice cream\"},\n    stream_mode=\"updates\",\n):\n    print(chunk)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>{'refine_topic': {'topic': 'ice cream and cats'}}\n{'generate_joke': {'joke': 'This is a joke about ice cream and cats'}}\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#_6","title":"\u591a\u200b\u6a21\u5f0f\u200b\u6d41\u5f0f\u200b\u4f20\u8f93","text":"<p>\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u591a\u79cd\u200b\u6a21\u5f0f\u200b\uff1a</p> <pre><code>for mode, chunk in graph.stream(\n    inputs, \n    stream_mode=[\"updates\", \"custom\"]\n):\n    print(f\"{mode}: {chunk}\")\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#_7","title":"\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u56fe\u200b\u72b6\u6001","text":""},{"location":"llmapps/langgraph/streaming/#updates","title":"\u4f7f\u7528\u200b updates \u200b\u6a21\u5f0f","text":"<p>\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\uff08\u200b\u4ec5\u200b\u663e\u793a\u200b\u53d8\u5316\u200b\u7684\u200b\u90e8\u5206\u200b\uff09\uff1a</p> <pre><code>for chunk in graph.stream(\n    {\"topic\": \"ice cream\"},\n    stream_mode=\"updates\",\n):\n    print(chunk)\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#values","title":"\u4f7f\u7528\u200b values \u200b\u6a21\u5f0f","text":"<p>\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u5b8c\u6574\u200b\u72b6\u6001\u503c\u200b\uff1a</p> <pre><code>for chunk in graph.stream(\n    {\"topic\": \"ice cream\"},\n    stream_mode=\"values\",\n):\n    print(chunk)\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#_8","title":"\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u5b50\u56fe\u200b\u8f93\u51fa","text":"<p>\u200b\u5305\u542b\u200b\u5b50\u56fe\u200b\u8f93\u51fa\u200b\u7684\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\uff1a</p> <pre><code>for chunk in graph.stream(\n    {\"foo\": \"foo\"},\n    subgraphs=True,  # \u200b\u542f\u7528\u200b\u5b50\u56fe\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\n    stream_mode=\"updates\",\n):\n    print(chunk)\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#llm-token","title":"\u6d41\u5f0f\u200b\u4f20\u8f93\u200b LLM Token","text":""},{"location":"llmapps/langgraph/streaming/#llm-token_1","title":"\u57fa\u7840\u200b LLM Token \u200b\u6d41\u5f0f\u200b\u4f20\u8f93","text":"<pre><code>from langchain.chat_models import init_chat_model\nfrom langgraph.graph import StateGraph, START\n\nmodel = init_chat_model(model=\"openai:gpt-4o-mini\")\n\ndef call_model(state):\n    \"\"\"\u200b\u8c03\u7528\u200b LLM \u200b\u751f\u6210\u200b\u5173\u4e8e\u200b\u4e3b\u9898\u200b\u7684\u200b\u7b11\u8bdd\u200b\"\"\"\n    model_response = model.invoke([\n        {\"role\": \"user\", \"content\": f\"Generate a joke about {state['topic']}\"}\n    ])\n    return {\"joke\": model_response.content}\n\ngraph = (\n    StateGraph(State)\n    .add_node(call_model)\n    .add_edge(START, \"call_model\")\n    .compile()\n)\n\n# \u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b LLM token\nfor message_chunk, metadata in graph.stream(\n    {\"topic\": \"ice cream\"},\n    stream_mode=\"messages\",\n):\n    if message_chunk.content:\n        print(message_chunk.content, end=\"|\", flush=True)\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#llm","title":"\u6309\u200b\u6807\u7b7e\u200b\u8fc7\u6ee4\u200b LLM \u200b\u8c03\u7528","text":"<pre><code># \u200b\u4e3a\u200b\u4e0d\u540c\u200b\u6a21\u578b\u200b\u8bbe\u7f6e\u200b\u6807\u7b7e\u200b\njoke_model = init_chat_model(model=\"openai:gpt-4o-mini\", tags=['joke'])\npoem_model = init_chat_model(model=\"openai:gpt-4o-mini\", tags=['poem'])\n\n# \u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u65f6\u200b\u6309\u200b\u6807\u7b7e\u200b\u8fc7\u6ee4\u200b\nasync for msg, metadata in graph.astream(\n    {\"topic\": \"cats\"},\n    stream_mode=\"messages\",\n):\n    if metadata[\"tags\"] == [\"joke\"]:\n        print(msg.content, end=\"|\", flush=True)\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#_9","title":"\u6309\u200b\u8282\u70b9\u200b\u8fc7\u6ee4","text":"<pre><code>for msg, metadata in graph.stream(\n    inputs,\n    stream_mode=\"messages\",\n):\n    # \u200b\u53ea\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u7279\u5b9a\u200b\u8282\u70b9\u200b\u7684\u200b token\n    if msg.content and metadata[\"langgraph_node\"] == \"write_poem\":\n        print(msg.content, end=\"|\", flush=True)\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#_10","title":"\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e","text":""},{"location":"llmapps/langgraph/streaming/#_11","title":"\u4ece\u200b\u8282\u70b9\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e","text":"<pre><code>from typing import TypedDict\nfrom langgraph.config import get_stream_writer\nfrom langgraph.graph import StateGraph, START\n\nclass State(TypedDict):\n    query: str\n    answer: str\n\ndef node(state: State):\n    # \u200b\u83b7\u53d6\u200b\u6d41\u200b\u5199\u5165\u200b\u5668\u200b\u53d1\u9001\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\n    writer = get_stream_writer()\n    # \u200b\u53d1\u9001\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\n    writer({\"custom_key\": \"Generating custom data inside node\"})\n    return {\"answer\": \"some data\"}\n\ngraph = (\n    StateGraph(State)\n    .add_node(node)\n    .add_edge(START, \"node\")\n    .compile()\n)\n\n# \u200b\u63a5\u6536\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\nfor chunk in graph.stream(inputs, stream_mode=\"custom\"):\n    print(chunk)\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#_12","title":"\u4ece\u200b\u5de5\u5177\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e","text":"<pre><code>from langchain.tools import tool\nfrom langgraph.config import get_stream_writer\n\n@tool\ndef query_database(query: str) -&gt; str:\n    \"\"\"\u200b\u67e5\u8be2\u6570\u636e\u5e93\u200b\"\"\"\n    writer = get_stream_writer()\n    # \u200b\u53d1\u9001\u200b\u8fdb\u5ea6\u200b\u66f4\u65b0\u200b\n    writer({\"data\": \"Retrieved 0/100 records\", \"type\": \"progress\"})\n    # \u200b\u6267\u884c\u200b\u67e5\u8be2\u200b\n    writer({\"data\": \"Retrieved 100/100 records\", \"type\": \"progress\"})\n    return \"some-answer\"\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#llm_1","title":"\u4e0e\u200b\u4efb\u610f\u200b LLM \u200b\u4e00\u8d77\u200b\u4f7f\u7528","text":"<p>\u200b\u5373\u4f7f\u200b LLM API \u200b\u6ca1\u6709\u200b\u5b9e\u73b0\u200b LangChain \u200b\u804a\u5929\u200b\u6a21\u578b\u200b\u63a5\u53e3\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u6a21\u5f0f\u200b\u8fdb\u884c\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\uff1a</p> <pre><code>from langgraph.config import get_stream_writer\n\ndef call_arbitrary_model(state):\n    \"\"\"\u200b\u8c03\u7528\u200b\u4efb\u610f\u200b\u6a21\u578b\u200b\u5e76\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u8f93\u51fa\u200b\"\"\"\n    writer = get_stream_writer()\n\n    # \u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u6d41\u5f0f\u200b\u5ba2\u6237\u7aef\u200b\n    for chunk in your_custom_streaming_client(state[\"topic\"]):\n        # \u200b\u5c06\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u53d1\u9001\u5230\u200b\u6d41\u200b\n        writer({\"custom_llm_chunk\": chunk})\n\n    return {\"result\": \"completed\"}\n\n# \u200b\u63a5\u6536\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\nfor chunk in graph.stream(\n    {\"topic\": \"cats\"},\n    stream_mode=\"custom\",\n):\n    print(chunk)\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#_13","title":"\u8c03\u8bd5\u6a21\u5f0f","text":"<p>\u200b\u4f7f\u7528\u200b\u8c03\u8bd5\u6a21\u5f0f\u200b\u83b7\u53d6\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\uff1a</p> <pre><code>for chunk in graph.stream(\n    {\"topic\": \"ice cream\"},\n    stream_mode=\"debug\",\n):\n    print(chunk)\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#_14","title":"\u7981\u7528\u200b\u7279\u5b9a\u200b\u804a\u5929\u200b\u6a21\u578b\u200b\u7684\u200b\u6d41\u5f0f\u200b\u4f20\u8f93","text":"<p>\u200b\u5bf9\u4e8e\u200b\u4e0d\u200b\u652f\u6301\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u7684\u200b\u6a21\u578b\u200b\uff1a</p> <pre><code>from langchain.chat_models import init_chat_model\n\nmodel = init_chat_model(\n    \"anthropic:claude-sonnet-4-5\",\n    disable_streaming=True  # \u200b\u7981\u7528\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\n)\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#python-311","title":"Python &lt; 3.11 \u200b\u7684\u200b\u5f02\u6b65\u200b\u5904\u7406","text":""},{"location":"llmapps/langgraph/streaming/#_15","title":"\u624b\u52a8\u200b\u4f20\u9012\u200b\u914d\u7f6e","text":"<pre><code>async def call_model(state, config):\n    topic = state[\"topic\"]\n    # \u200b\u5fc5\u987b\u200b\u663e\u5f0f\u200b\u4f20\u9012\u200b config\n    joke_response = await model.ainvoke(\n        [{\"role\": \"user\", \"content\": f\"Write a joke about {topic}\"}],\n        config,  # \u200b\u663e\u5f0f\u200b\u4f20\u9012\u200b\u914d\u7f6e\u200b\n    )\n    return {\"joke\": joke_response.content}\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#_16","title":"\u5f02\u6b65\u200b\u81ea\u5b9a\u4e49\u200b\u6d41\u5f0f\u200b\u4f20\u8f93","text":"<pre><code>from langgraph.types import StreamWriter\n\nasync def generate_joke(state: State, writer: StreamWriter):\n    # \u200b\u5728\u200b\u5f02\u6b65\u200b\u51fd\u6570\u200b\u4e2d\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b writer \u200b\u53c2\u6570\u200b\n    writer({\"custom_key\": \"Streaming custom data\"})\n    return {\"joke\": f\"This is a joke about {state['topic']}\"}\n</code></pre>"},{"location":"llmapps/langgraph/streaming/#_17","title":"\u6700\u4f73\u200b\u5b9e\u8df5","text":"<ol> <li>\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u6d41\u200b\u6a21\u5f0f\u200b\uff1a\u200b\u6839\u636e\u200b\u9700\u6c42\u200b\u9009\u62e9\u200b <code>updates</code>\u3001<code>values</code>\u3001<code>messages</code> \u200b\u6216\u200b <code>custom</code> \u200b\u6a21\u5f0f\u200b</li> <li>\u200b\u5408\u7406\u200b\u4f7f\u7528\u200b\u8fc7\u6ee4\u200b\uff1a\u200b\u4f7f\u7528\u200b\u6807\u7b7e\u200b\u6216\u200b\u8282\u70b9\u200b\u540d\u79f0\u200b\u8fc7\u6ee4\u200b\u6d41\u5f0f\u200b\u8f93\u51fa\u200b</li> <li>\u200b\u5904\u7406\u200b\u5f02\u6b65\u200b\u573a\u666f\u200b\uff1a\u200b\u5728\u200b Python &lt; 3.11 \u200b\u4e2d\u200b\u6ce8\u610f\u200b\u624b\u52a8\u200b\u4f20\u9012\u200b\u914d\u7f6e\u200b</li> <li>\u200b\u9519\u8bef\u5904\u7406\u200b\uff1a\u200b\u5728\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u9002\u5f53\u200b\u7684\u200b\u9519\u8bef\u5904\u7406\u200b\u673a\u5236\u200b</li> <li>\u200b\u6027\u80fd\u200b\u8003\u8651\u200b\uff1a\u200b\u907f\u514d\u200b\u5728\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u4e2d\u200b\u6267\u884c\u200b\u963b\u585e\u200b\u64cd\u4f5c\u200b</li> </ol> <p>\u200b\u901a\u8fc7\u200b\u672c\u200b\u6559\u7a0b\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u5145\u5206\u5229\u7528\u200b LangGraph \u200b\u7684\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u529f\u80fd\u200b\uff0c\u200b\u6784\u5efa\u200b\u54cd\u5e94\u200b\u8fc5\u901f\u200b\u3001\u200b\u7528\u6237\u200b\u4f53\u9a8c\u200b\u826f\u597d\u200b\u7684\u200b LLM \u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/","title":"LangGraph \u200b\u601d\u7ef4\u200b\u6a21\u5f0f\u200b\u5b8c\u5168\u200b\u6307\u5357","text":"<p>\u200b\u901a\u8fc7\u200b\u5c06\u200b\u5ba2\u6237\u200b\u652f\u6301\u200b\u90ae\u4ef6\u200b\u667a\u80fd\u200b\u4f53\u200b\u5206\u89e3\u200b\u4e3a\u200b\u79bb\u6563\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u5b66\u4e60\u200b\u5982\u4f55\u200b\u7528\u200b LangGraph \u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4f53\u200b</p> <p>LangGraph \u200b\u53ef\u4ee5\u200b\u6539\u53d8\u200b\u4f60\u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u601d\u7ef4\u200b\u65b9\u5f0f\u200b\u3002\u200b\u4f7f\u7528\u200b LangGraph \u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4f53\u65f6\u200b\uff0c\u200b\u4f60\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u5c06\u200b\u5176\u200b\u5206\u89e3\u200b\u4e3a\u200b\u79f0\u4e3a\u200b\u8282\u70b9\u200b\u7684\u200b\u79bb\u6563\u200b\u6b65\u9aa4\u200b\u3002\u200b\u7136\u540e\u200b\uff0c\u200b\u63cf\u8ff0\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u4e0d\u540c\u200b\u51b3\u7b56\u200b\u548c\u200b\u8f6c\u6362\u200b\u3002\u200b\u6700\u540e\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5171\u4eab\u200b\u7684\u200b\u72b6\u6001\u200b\u5c06\u200b\u8282\u70b9\u200b\u8fde\u63a5\u8d77\u6765\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u8bfb\u53d6\u200b\u548c\u200b\u5199\u5165\u200b\u8fd9\u4e2a\u200b\u72b6\u6001\u200b\u3002\u200b\u672c\u200b\u6559\u7a0b\u200b\u5c06\u200b\u6307\u5bfc\u200b\u4f60\u200b\u5b8c\u6210\u200b\u6784\u5efa\u200b\u5ba2\u6237\u200b\u652f\u6301\u200b\u90ae\u4ef6\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u601d\u7ef4\u8fc7\u7a0b\u200b\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_1","title":"\u4ece\u8981\u200b\u81ea\u52a8\u5316\u200b\u7684\u200b\u6d41\u7a0b\u200b\u5f00\u59cb","text":"<p>\u200b\u5047\u8bbe\u200b\u4f60\u200b\u9700\u8981\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u5904\u7406\u200b\u5ba2\u6237\u200b\u652f\u6301\u200b\u90ae\u4ef6\u200b\u7684\u200b AI \u200b\u667a\u80fd\u200b\u4f53\u200b\u3002\u200b\u4ea7\u54c1\u200b\u56e2\u961f\u200b\u7ed9\u200b\u4e86\u200b\u4f60\u200b\u4ee5\u4e0b\u200b\u8981\u6c42\u200b\uff1a</p> <p>\u200b\u667a\u80fd\u200b\u4f53\u200b\u5e94\u8be5\u200b\u80fd\u591f\u200b\uff1a</p> <ul> <li>\u200b\u8bfb\u53d6\u200b\u4f20\u5165\u200b\u7684\u200b\u5ba2\u6237\u200b\u90ae\u4ef6\u200b</li> <li>\u200b\u6309\u200b\u7d27\u6025\u200b\u7a0b\u5ea6\u200b\u548c\u200b\u4e3b\u9898\u200b\u8fdb\u884c\u200b\u5206\u7c7b\u200b</li> <li>\u200b\u641c\u7d22\u200b\u76f8\u5173\u200b\u6587\u6863\u200b\u6765\u200b\u56de\u7b54\u200b\u95ee\u9898\u200b</li> <li>\u200b\u8d77\u8349\u200b\u9002\u5f53\u200b\u7684\u200b\u56de\u590d\u200b</li> <li>\u200b\u5c06\u200b\u590d\u6742\u200b\u95ee\u9898\u200b\u8f6c\u200b\u4ea4\u7ed9\u200b\u4eba\u5de5\u200b\u4ee3\u7406\u200b</li> <li>\u200b\u9700\u8981\u200b\u65f6\u200b\u5b89\u6392\u200b\u8ddf\u8fdb\u200b</li> </ul> <p>\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u7684\u200b\u793a\u4f8b\u200b\u573a\u666f\u200b\uff1a</p> <ol> <li>\u200b\u7b80\u5355\u200b\u4ea7\u54c1\u200b\u95ee\u9898\u200b\uff1a\"\u200b\u5982\u4f55\u200b\u91cd\u7f6e\u200b\u5bc6\u7801\u200b\uff1f\"</li> <li>\u200b\u9519\u8bef\u62a5\u544a\u200b\uff1a\"\u200b\u9009\u62e9\u200b PDF \u200b\u683c\u5f0f\u200b\u65f6\u200b\u5bfc\u51fa\u200b\u529f\u80fd\u200b\u5d29\u6e83\u200b\"</li> <li>\u200b\u7d27\u6025\u200b\u8d26\u5355\u200b\u95ee\u9898\u200b\uff1a\"\u200b\u6211\u200b\u7684\u200b\u8ba2\u9605\u200b\u88ab\u200b\u91cd\u590d\u200b\u6536\u8d39\u200b\u4e86\u200b\uff01\"</li> <li>\u200b\u529f\u80fd\u200b\u8bf7\u6c42\u200b\uff1a\"\u200b\u80fd\u5426\u200b\u4e3a\u200b\u79fb\u52a8\u200b\u5e94\u7528\u200b\u6dfb\u52a0\u200b\u6df1\u8272\u200b\u6a21\u5f0f\u200b\uff1f\"</li> <li>\u200b\u590d\u6742\u200b\u6280\u672f\u200b\u95ee\u9898\u200b\uff1a\"\u200b\u6211\u4eec\u200b\u7684\u200b API \u200b\u96c6\u6210\u200b\u95f4\u6b47\u6027\u200b\u5931\u8d25\u200b\uff0c\u200b\u51fa\u73b0\u200b 504 \u200b\u9519\u8bef\u200b\"</li> </ol> <p>\u200b\u8981\u200b\u5728\u200b LangGraph \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u667a\u80fd\u200b\u4f53\u200b\uff0c\u200b\u4f60\u200b\u901a\u5e38\u200b\u9700\u8981\u200b\u9075\u5faa\u200b\u76f8\u540c\u200b\u7684\u200b\u4e94\u4e2a\u200b\u6b65\u9aa4\u200b\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#1","title":"\u6b65\u9aa4\u200b 1\uff1a\u200b\u5c06\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u6620\u5c04\u200b\u4e3a\u200b\u79bb\u6563\u200b\u6b65\u9aa4","text":"<p>\u200b\u9996\u5148\u200b\u8bc6\u522b\u200b\u6d41\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u4e0d\u540c\u200b\u6b65\u9aa4\u200b\u3002\u200b\u6bcf\u4e2a\u200b\u6b65\u9aa4\u200b\u5c06\u200b\u6210\u4e3a\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\uff08\u200b\u6267\u884c\u200b\u7279\u5b9a\u200b\u64cd\u4f5c\u200b\u7684\u200b\u51fd\u6570\u200b\uff09\u3002\u200b\u7136\u540e\u200b\u52fe\u753b\u200b\u8fd9\u4e9b\u200b\u6b65\u9aa4\u200b\u5982\u4f55\u200b\u76f8\u4e92\u8fde\u63a5\u200b\u3002</p> <p></p> <p>\u200b\u7bad\u5934\u200b\u663e\u793a\u200b\u53ef\u80fd\u200b\u7684\u200b\u8def\u5f84\u200b\uff0c\u200b\u4f46\u200b\u5b9e\u9645\u200b\u9009\u62e9\u200b\u54ea\u6761\u200b\u8def\u5f84\u200b\u7684\u200b\u51b3\u7b56\u200b\u53d1\u751f\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u5185\u90e8\u200b\u3002</p> <p>\u200b\u73b0\u5728\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u8bc6\u522b\u200b\u4e86\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u8ba9\u200b\u6211\u4eec\u200b\u7406\u89e3\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u9700\u8981\u200b\u505a\u200b\u4ec0\u4e48\u200b\uff1a</p> <ul> <li>\u200b\u8bfb\u53d6\u200b\u90ae\u4ef6\u200b\uff1a\u200b\u63d0\u53d6\u200b\u548c\u200b\u89e3\u6790\u200b\u90ae\u4ef6\u200b\u5185\u5bb9\u200b</li> <li>\u200b\u5206\u7c7b\u200b\u610f\u56fe\u200b\uff1a\u200b\u4f7f\u7528\u200b LLM \u200b\u5206\u7c7b\u200b\u7d27\u6025\u200b\u7a0b\u5ea6\u200b\u548c\u200b\u4e3b\u9898\u200b\uff0c\u200b\u7136\u540e\u200b\u8def\u7531\u200b\u5230\u200b\u9002\u5f53\u200b\u7684\u200b\u64cd\u4f5c\u200b</li> <li>\u200b\u6587\u6863\u200b\u641c\u7d22\u200b\uff1a\u200b\u67e5\u8be2\u200b\u77e5\u8bc6\u5e93\u200b\u83b7\u53d6\u200b\u76f8\u5173\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u9519\u8bef\u200b\u8ddf\u8e2a\u200b\uff1a\u200b\u5728\u200b\u8ddf\u8e2a\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u521b\u5efa\u200b\u6216\u200b\u66f4\u65b0\u200b\u95ee\u9898\u200b</li> <li>\u200b\u8d77\u8349\u200b\u56de\u590d\u200b\uff1a\u200b\u751f\u6210\u200b\u9002\u5f53\u200b\u7684\u200b\u54cd\u5e94\u200b</li> <li>\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\uff1a\u200b\u8f6c\u200b\u4ea4\u7ed9\u200b\u4eba\u5de5\u200b\u4ee3\u7406\u200b\u8fdb\u884c\u200b\u6279\u51c6\u200b\u6216\u200b\u5904\u7406\u200b</li> <li>\u200b\u53d1\u9001\u200b\u56de\u590d\u200b\uff1a\u200b\u53d1\u9001\u200b\u90ae\u4ef6\u200b\u56de\u590d\u200b</li> </ul> <p>\u200b\u63d0\u793a\u200b\uff1a\u200b\u6ce8\u610f\u200b\u6709\u4e9b\u200b\u8282\u70b9\u200b\u51b3\u5b9a\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u53bb\u200b\u54ea\u91cc\u200b\uff08\u200b\u5206\u7c7b\u200b\u610f\u56fe\u200b\u3001\u200b\u8d77\u8349\u200b\u56de\u590d\u200b\u3001\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\uff09\uff0c\u200b\u800c\u200b\u5176\u4ed6\u200b\u8282\u70b9\u200b\u603b\u662f\u200b\u8fdb\u5165\u200b\u76f8\u540c\u200b\u7684\u200b\u4e0b\u200b\u4e00\u6b65\u200b\uff08\u200b\u8bfb\u53d6\u200b\u90ae\u4ef6\u200b\u603b\u662f\u200b\u5230\u200b\u5206\u7c7b\u200b\u610f\u56fe\u200b\uff0c\u200b\u6587\u6863\u200b\u641c\u7d22\u200b\u603b\u662f\u200b\u5230\u200b\u8d77\u8349\u200b\u56de\u590d\u200b\uff09\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#2","title":"\u6b65\u9aa4\u200b 2\uff1a\u200b\u8bc6\u522b\u200b\u6bcf\u4e2a\u200b\u6b65\u9aa4\u200b\u9700\u8981\u200b\u505a\u200b\u4ec0\u4e48","text":"<p>\u200b\u5bf9\u4e8e\u200b\u56fe\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u786e\u5b9a\u200b\u5b83\u200b\u4ee3\u8868\u200b\u4ec0\u4e48\u200b\u7c7b\u578b\u200b\u7684\u200b\u64cd\u4f5c\u200b\u4ee5\u53ca\u200b\u9700\u8981\u200b\u4ec0\u4e48\u200b\u4e0a\u4e0b\u6587\u200b\u624d\u80fd\u200b\u6b63\u5e38\u200b\u5de5\u4f5c\u200b\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#llm","title":"LLM \u200b\u6b65\u9aa4","text":"<p>\u200b\u5f53\u200b\u6b65\u9aa4\u200b\u9700\u8981\u200b\u7406\u89e3\u200b\u3001\u200b\u5206\u6790\u200b\u3001\u200b\u751f\u6210\u200b\u6587\u672c\u200b\u6216\u200b\u505a\u51fa\u200b\u63a8\u7406\u200b\u51b3\u7b56\u200b\u65f6\u200b\u4f7f\u7528\u200b\uff1a</p> <p>\u200b\u5206\u7c7b\u200b\u610f\u56fe\u200b\u8282\u70b9\u200b</p> <ul> <li>\u200b\u9759\u6001\u200b\u4e0a\u4e0b\u6587\u200b\uff08\u200b\u63d0\u793a\u200b\uff09\uff1a\u200b\u5206\u7c7b\u200b\u7c7b\u522b\u200b\u3001\u200b\u7d27\u6025\u200b\u7a0b\u5ea6\u200b\u5b9a\u4e49\u200b\u3001\u200b\u54cd\u5e94\u200b\u683c\u5f0f\u200b</li> <li>\u200b\u52a8\u6001\u200b\u4e0a\u4e0b\u6587\u200b\uff08\u200b\u6765\u81ea\u200b\u72b6\u6001\u200b\uff09\uff1a\u200b\u90ae\u4ef6\u200b\u5185\u5bb9\u200b\u3001\u200b\u53d1\u4ef6\u4eba\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u671f\u671b\u200b\u7ed3\u679c\u200b\uff1a\u200b\u786e\u5b9a\u200b\u8def\u7531\u200b\u7684\u200b\u7ed3\u6784\u5316\u200b\u5206\u7c7b\u200b</li> </ul> <p>\u200b\u8d77\u8349\u200b\u56de\u590d\u200b\u8282\u70b9\u200b</p> <ul> <li>\u200b\u9759\u6001\u200b\u4e0a\u4e0b\u6587\u200b\uff08\u200b\u63d0\u793a\u200b\uff09\uff1a\u200b\u8bed\u6c14\u200b\u6307\u5357\u200b\u3001\u200b\u516c\u53f8\u200b\u653f\u7b56\u200b\u3001\u200b\u54cd\u5e94\u200b\u6a21\u677f\u200b</li> <li>\u200b\u52a8\u6001\u200b\u4e0a\u4e0b\u6587\u200b\uff08\u200b\u6765\u81ea\u200b\u72b6\u6001\u200b\uff09\uff1a\u200b\u5206\u7c7b\u200b\u7ed3\u679c\u200b\u3001\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b\u3001\u200b\u5ba2\u6237\u200b\u5386\u53f2\u200b</li> <li>\u200b\u671f\u671b\u200b\u7ed3\u679c\u200b\uff1a\u200b\u51c6\u5907\u200b\u5ba1\u6838\u200b\u7684\u200b\u4e13\u4e1a\u200b\u90ae\u4ef6\u200b\u56de\u590d\u200b</li> </ul>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_2","title":"\u6570\u636e\u200b\u6b65\u9aa4","text":"<p>\u200b\u5f53\u200b\u6b65\u9aa4\u200b\u9700\u8981\u200b\u4ece\u200b\u5916\u90e8\u200b\u6e90\u200b\u68c0\u7d22\u200b\u4fe1\u606f\u200b\u65f6\u200b\u4f7f\u7528\u200b\uff1a</p> <p>\u200b\u6587\u6863\u200b\u641c\u7d22\u200b\u8282\u70b9\u200b</p> <ul> <li>\u200b\u53c2\u6570\u200b\uff1a\u200b\u6839\u636e\u200b\u610f\u56fe\u200b\u548c\u200b\u4e3b\u9898\u200b\u6784\u5efa\u200b\u7684\u200b\u67e5\u8be2\u200b</li> <li>\u200b\u91cd\u8bd5\u200b\u7b56\u7565\u200b\uff1a\u200b\u662f\u200b\uff0c\u200b\u5bf9\u200b\u6682\u65f6\u6027\u200b\u6545\u969c\u200b\u4f7f\u7528\u200b\u6307\u6570\u200b\u9000\u907f\u200b</li> <li>\u200b\u7f13\u5b58\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u7f13\u5b58\u200b\u5e38\u89c1\u200b\u67e5\u8be2\u200b\u4ee5\u200b\u51cf\u5c11\u200b API \u200b\u8c03\u7528\u200b</li> </ul> <p>\u200b\u5ba2\u6237\u200b\u5386\u53f2\u200b\u67e5\u8be2\u200b</p> <ul> <li>\u200b\u53c2\u6570\u200b\uff1a\u200b\u6765\u81ea\u200b\u72b6\u6001\u200b\u7684\u200b\u5ba2\u6237\u200b\u90ae\u4ef6\u200b\u6216\u200b ID</li> <li>\u200b\u91cd\u8bd5\u200b\u7b56\u7565\u200b\uff1a\u200b\u662f\u200b\uff0c\u200b\u4f46\u200b\u5982\u679c\u200b\u4e0d\u53ef\u200b\u7528\u5219\u200b\u56de\u9000\u200b\u5230\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u7f13\u5b58\u200b\uff1a\u200b\u662f\u200b\uff0c\u200b\u4f7f\u7528\u200b\u751f\u5b58\u200b\u65f6\u95f4\u200b\u6765\u200b\u5e73\u8861\u200b\u65b0\u9c9c\u5ea6\u200b\u548c\u200b\u6027\u80fd\u200b</li> </ul>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_3","title":"\u64cd\u4f5c\u6b65\u9aa4","text":"<p>\u200b\u5f53\u200b\u6b65\u9aa4\u200b\u9700\u8981\u200b\u6267\u884c\u200b\u5916\u90e8\u200b\u64cd\u4f5c\u200b\u65f6\u200b\u4f7f\u7528\u200b\uff1a</p> <p>\u200b\u53d1\u9001\u200b\u56de\u590d\u200b\u8282\u70b9\u200b</p> <ul> <li>\u200b\u6267\u884c\u200b\u65f6\u673a\u200b\uff1a\u200b\u6279\u51c6\u200b\u540e\u200b\uff08\u200b\u4eba\u5de5\u200b\u6216\u200b\u81ea\u52a8\u200b\uff09</li> <li>\u200b\u91cd\u8bd5\u200b\u7b56\u7565\u200b\uff1a\u200b\u662f\u200b\uff0c\u200b\u5bf9\u200b\u7f51\u7edc\u200b\u95ee\u9898\u200b\u4f7f\u7528\u200b\u6307\u6570\u200b\u9000\u907f\u200b</li> <li>\u200b\u4e0d\u200b\u5e94\u200b\u7f13\u5b58\u200b\uff1a\u200b\u6bcf\u6b21\u200b\u53d1\u9001\u200b\u90fd\u200b\u662f\u200b\u552f\u4e00\u200b\u64cd\u4f5c\u200b</li> </ul> <p>\u200b\u9519\u8bef\u200b\u8ddf\u8e2a\u200b\u8282\u70b9\u200b</p> <ul> <li>\u200b\u6267\u884c\u200b\u65f6\u673a\u200b\uff1a\u200b\u610f\u56fe\u200b\u4e3a\u200b\"\u200b\u9519\u8bef\u200b\"\u200b\u65f6\u200b\u603b\u662f\u200b\u6267\u884c\u200b</li> <li>\u200b\u91cd\u8bd5\u200b\u7b56\u7565\u200b\uff1a\u200b\u662f\u200b\uff0c\u200b\u5173\u952e\u200b\u662f\u200b\u4e0d\u80fd\u200b\u4e22\u5931\u200b\u9519\u8bef\u62a5\u544a\u200b</li> <li>\u200b\u8fd4\u56de\u200b\uff1a\u200b\u8981\u200b\u5728\u200b\u54cd\u5e94\u200b\u4e2d\u200b\u5305\u542b\u200b\u7684\u200b\u5de5\u5355\u200b ID</li> </ul>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_4","title":"\u7528\u6237\u200b\u8f93\u5165\u200b\u6b65\u9aa4","text":"<p>\u200b\u5f53\u200b\u6b65\u9aa4\u200b\u9700\u8981\u200b\u4eba\u5de5\u5e72\u9884\u200b\u65f6\u200b\u4f7f\u7528\u200b\uff1a</p> <p>\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\u8282\u70b9\u200b</p> <ul> <li>\u200b\u51b3\u7b56\u200b\u4e0a\u4e0b\u6587\u200b\uff1a\u200b\u539f\u59cb\u200b\u90ae\u4ef6\u200b\u3001\u200b\u8349\u7a3f\u200b\u56de\u590d\u200b\u3001\u200b\u7d27\u6025\u200b\u7a0b\u5ea6\u200b\u3001\u200b\u5206\u7c7b\u200b</li> <li>\u200b\u671f\u671b\u200b\u8f93\u5165\u200b\u683c\u5f0f\u200b\uff1a\u200b\u6279\u51c6\u200b\u5e03\u5c14\u503c\u200b\u52a0\u4e0a\u200b\u53ef\u9009\u200b\u7684\u200b\u7f16\u8f91\u200b\u54cd\u5e94\u200b</li> <li>\u200b\u89e6\u53d1\u200b\u65f6\u673a\u200b\uff1a\u200b\u9ad8\u200b\u7d27\u6025\u200b\u7a0b\u5ea6\u200b\u3001\u200b\u590d\u6742\u200b\u95ee\u9898\u200b\u6216\u200b\u8d28\u91cf\u200b\u62c5\u5fe7\u200b</li> </ul>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#3","title":"\u6b65\u9aa4\u200b 3\uff1a\u200b\u8bbe\u8ba1\u200b\u4f60\u200b\u7684\u200b\u72b6\u6001","text":"<p>\u200b\u72b6\u6001\u200b\u662f\u200b\u4f60\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u4e2d\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u7684\u200b\u5171\u4eab\u200b[\u200b\u5185\u5b58\u200b]\u3002\u200b\u53ef\u4ee5\u200b\u628a\u200b\u5b83\u200b\u770b\u4f5c\u200b\u4f60\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u5728\u200b\u5904\u7406\u8fc7\u7a0b\u200b\u4e2d\u200b\u7528\u6765\u200b\u8ddf\u8e2a\u200b\u4e00\u5207\u200b\u5b66\u4e60\u200b\u548c\u200b\u51b3\u7b56\u200b\u7684\u200b\u7b14\u8bb0\u672c\u200b\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_5","title":"\u4ec0\u4e48\u200b\u5e94\u8be5\u200b\u653e\u5728\u200b\u72b6\u6001\u200b\u4e2d\u200b\uff1f","text":"<p>\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u6570\u636e\u200b\u7247\u6bb5\u200b\u95ee\u200b\u81ea\u5df1\u200b\u8fd9\u4e9b\u200b\u95ee\u9898\u200b\uff1a</p> <p>\u200b\u5305\u542b\u200b\u5728\u200b\u72b6\u6001\u200b\u4e2d\u200b</p> <ul> <li>\u200b\u662f\u5426\u200b\u9700\u8981\u200b\u8de8\u200b\u6b65\u9aa4\u200b\u6301\u4e45\u200b\u5316\u200b\uff1f\u200b\u5982\u679c\u200b\u662f\u200b\uff0c\u200b\u5c31\u200b\u653e\u5728\u200b\u72b6\u6001\u200b\u4e2d\u200b</li> </ul> <p>\u200b\u4e0d\u8981\u200b\u5b58\u50a8\u200b</p> <ul> <li>\u200b\u80fd\u5426\u200b\u4ece\u200b\u5176\u4ed6\u200b\u6570\u636e\u200b\u63a8\u5bfc\u200b\u51fa\u6765\u200b\uff1f\u200b\u5982\u679c\u200b\u662f\u200b\uff0c\u200b\u5728\u200b\u9700\u8981\u200b\u65f6\u200b\u8ba1\u7b97\u200b\u800c\u200b\u4e0d\u662f\u200b\u5b58\u50a8\u200b\u5728\u200b\u72b6\u6001\u200b\u4e2d\u200b</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u6211\u4eec\u200b\u7684\u200b\u90ae\u4ef6\u200b\u667a\u80fd\u200b\u4f53\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u8ddf\u8e2a\u200b\uff1a</p> <ul> <li>\u200b\u539f\u59cb\u200b\u90ae\u4ef6\u200b\u548c\u200b\u53d1\u4ef6\u4eba\u200b\u4fe1\u606f\u200b\uff08\u200b\u65e0\u6cd5\u200b\u91cd\u5efa\u200b\u8fd9\u4e9b\u200b\uff09</li> <li>\u200b\u5206\u7c7b\u200b\u7ed3\u679c\u200b\uff08\u200b\u591a\u4e2a\u200b\u4e0b\u6e38\u200b\u8282\u70b9\u200b\u9700\u8981\u200b\uff09</li> <li>\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b\u548c\u200b\u5ba2\u6237\u200b\u6570\u636e\u200b\uff08\u200b\u91cd\u65b0\u200b\u83b7\u53d6\u200b\u6210\u672c\u200b\u9ad8\u200b\uff09</li> <li>\u200b\u8349\u7a3f\u200b\u56de\u590d\u200b\uff08\u200b\u9700\u8981\u200b\u901a\u8fc7\u200b\u5ba1\u6838\u200b\u6301\u4e45\u200b\u5316\u200b\uff09</li> <li>\u200b\u6267\u884c\u200b\u5143\u200b\u6570\u636e\u200b\uff08\u200b\u7528\u4e8e\u200b\u8c03\u8bd5\u200b\u548c\u200b\u6062\u590d\u200b\uff09</li> </ul>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_6","title":"\u4fdd\u6301\u200b\u72b6\u6001\u200b\u539f\u59cb\u200b\uff0c\u200b\u6309\u200b\u9700\u200b\u683c\u5f0f\u5316\u200b\u63d0\u793a","text":"<p>\u200b\u5173\u952e\u200b\u539f\u5219\u200b\uff1a\u200b\u4f60\u200b\u7684\u200b\u72b6\u6001\u200b\u5e94\u8be5\u200b\u5b58\u50a8\u200b\u539f\u59cb\u6570\u636e\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u683c\u5f0f\u5316\u200b\u6587\u672c\u200b\u3002\u200b\u5728\u200b\u9700\u8981\u200b\u65f6\u200b\u5728\u200b\u8282\u70b9\u200b\u5185\u90e8\u200b\u683c\u5f0f\u5316\u200b\u63d0\u793a\u200b\u3002</p> <p>\u200b\u8fd9\u79cd\u200b\u5206\u79bb\u200b\u610f\u5473\u7740\u200b\uff1a</p> <ul> <li>\u200b\u4e0d\u540c\u200b\u8282\u70b9\u200b\u53ef\u4ee5\u200b\u4e3a\u4e86\u200b\u5404\u81ea\u200b\u7684\u200b\u9700\u8981\u200b\u4ee5\u200b\u4e0d\u540c\u200b\u65b9\u5f0f\u200b\u683c\u5f0f\u5316\u200b\u76f8\u540c\u200b\u7684\u200b\u6570\u636e\u200b</li> <li>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u66f4\u6539\u200b\u63d0\u793a\u200b\u6a21\u677f\u200b\u800c\u200b\u4e0d\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\u6a21\u5f0f\u200b</li> <li>\u200b\u8c03\u8bd5\u200b\u66f4\u200b\u6e05\u6670\u200b - \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u63a5\u6536\u200b\u5230\u200b\u7684\u200b\u786e\u5207\u200b\u6570\u636e\u200b</li> <li>\u200b\u4f60\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\u53ef\u4ee5\u200b\u6f14\u8fdb\u200b\u800c\u200b\u4e0d\u200b\u7834\u574f\u200b\u73b0\u6709\u200b\u72b6\u6001\u200b</li> </ul> <p>\u200b\u8ba9\u200b\u6211\u4eec\u200b\u5b9a\u4e49\u200b\u6211\u4eec\u200b\u7684\u200b\u72b6\u6001\u200b\uff1a</p> <pre><code>from typing import TypedDict, Literal\n\n# \u200b\u5b9a\u4e49\u200b\u90ae\u4ef6\u200b\u5206\u7c7b\u200b\u7ed3\u6784\u200b\nclass EmailClassification(TypedDict):\n    intent: Literal[\"question\", \"bug\", \"billing\", \"feature\", \"complex\"]\n    urgency: Literal[\"low\", \"medium\", \"high\", \"critical\"]\n    topic: str\n    summary: str\n\nclass EmailAgentState(TypedDict):\n    # \u200b\u539f\u59cb\u200b\u90ae\u4ef6\u200b\u6570\u636e\u200b\n    email_content: str\n    sender_email: str\n    email_id: str\n\n    # \u200b\u5206\u7c7b\u200b\u7ed3\u679c\u200b\n    classification: EmailClassification | None\n\n    # \u200b\u539f\u59cb\u200b\u641c\u7d22\u200b/API \u200b\u7ed3\u679c\u200b\n    search_results: list[str] | None  # \u200b\u539f\u59cb\u200b\u6587\u6863\u200b\u5757\u200b\u5217\u8868\u200b\n    customer_history: dict | None  # \u200b\u6765\u81ea\u200b CRM \u200b\u7684\u200b\u539f\u59cb\u200b\u5ba2\u6237\u200b\u6570\u636e\u200b\n\n    # \u200b\u751f\u6210\u200b\u7684\u200b\u5185\u5bb9\u200b\n    draft_response: str | None\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\u72b6\u6001\u200b\u53ea\u200b\u5305\u542b\u200b\u539f\u59cb\u6570\u636e\u200b - \u200b\u6ca1\u6709\u200b\u63d0\u793a\u200b\u6a21\u677f\u200b\uff0c\u200b\u6ca1\u6709\u200b\u683c\u5f0f\u5316\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u6ca1\u6709\u200b\u6307\u4ee4\u200b\u3002\u200b\u5206\u7c7b\u200b\u8f93\u51fa\u200b\u4f5c\u4e3a\u200b\u5355\u4e2a\u200b\u5b57\u5178\u200b\u5b58\u50a8\u200b\uff0c\u200b\u76f4\u63a5\u200b\u6765\u81ea\u200b LLM\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#4","title":"\u6b65\u9aa4\u200b 4\uff1a\u200b\u6784\u5efa\u200b\u4f60\u200b\u7684\u200b\u8282\u70b9","text":"<p>\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u5b9e\u73b0\u200b\u6bcf\u4e2a\u200b\u6b65\u9aa4\u200b\u4f5c\u4e3a\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u3002LangGraph \u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9\u200b\u53ea\u662f\u200b\u4e00\u4e2a\u200b Python \u200b\u51fd\u6570\u200b\uff0c\u200b\u5b83\u200b\u63a5\u53d7\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\u5e76\u200b\u8fd4\u56de\u200b\u5bf9\u200b\u5176\u200b\u7684\u200b\u66f4\u65b0\u200b\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_7","title":"\u9002\u5f53\u200b\u5904\u7406\u9519\u8bef","text":"<p>\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u9519\u8bef\u200b\u9700\u8981\u200b\u4e0d\u540c\u200b\u7684\u200b\u5904\u7406\u200b\u7b56\u7565\u200b\uff1a</p> \u200b\u9519\u8bef\u200b\u7c7b\u578b\u200b \u200b\u8c01\u200b\u4fee\u590d\u200b \u200b\u7b56\u7565\u200b \u200b\u4f7f\u7528\u200b\u65f6\u673a\u200b \u200b\u6682\u65f6\u6027\u200b\u9519\u8bef\u200b\uff08\u200b\u7f51\u7edc\u200b\u95ee\u9898\u200b\u3001\u200b\u901f\u7387\u200b\u9650\u5236\u200b\uff09 \u200b\u7cfb\u7edf\u200b\uff08\u200b\u81ea\u52a8\u200b\uff09 \u200b\u91cd\u8bd5\u200b\u7b56\u7565\u200b \u200b\u901a\u5e38\u200b\u91cd\u8bd5\u200b\u80fd\u200b\u89e3\u51b3\u200b\u7684\u200b\u4e34\u65f6\u200b\u6545\u969c\u200b LLM \u200b\u53ef\u200b\u6062\u590d\u200b\u9519\u8bef\u200b\uff08\u200b\u5de5\u5177\u200b\u6545\u969c\u200b\u3001\u200b\u89e3\u6790\u200b\u95ee\u9898\u200b\uff09 LLM \u200b\u5c06\u200b\u9519\u8bef\u200b\u5b58\u50a8\u200b\u5728\u200b\u72b6\u6001\u200b\u4e2d\u200b\u5e76\u200b\u5faa\u73af\u200b\u56de\u53bb\u200b LLM \u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u9519\u8bef\u200b\u5e76\u200b\u8c03\u6574\u200b\u65b9\u6cd5\u200b \u200b\u7528\u6237\u200b\u53ef\u200b\u4fee\u590d\u200b\u9519\u8bef\u200b\uff08\u200b\u7f3a\u5c11\u200b\u4fe1\u606f\u200b\u3001\u200b\u6307\u4ee4\u200b\u4e0d\u6e05\u200b\uff09 \u200b\u4eba\u5de5\u200b \u200b\u4f7f\u7528\u200b <code>interrupt()</code> \u200b\u6682\u505c\u200b \u200b\u9700\u8981\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u624d\u80fd\u200b\u7ee7\u7eed\u200b \u200b\u610f\u5916\u200b\u9519\u8bef\u200b \u200b\u5f00\u53d1\u8005\u200b \u200b\u8ba9\u200b\u5b83\u4eec\u200b\u5192\u6ce1\u200b \u200b\u9700\u8981\u200b\u8c03\u8bd5\u200b\u7684\u200b\u672a\u77e5\u200b\u95ee\u9898\u200b <p>\u200b\u6682\u65f6\u6027\u200b\u9519\u8bef\u5904\u7406\u200b</p> <pre><code>from langgraph.types import RetryPolicy\n\nworkflow.add_node(\n    \"search_documentation\",\n    search_documentation,\n    retry_policy=RetryPolicy(max_attempts=3, initial_interval=1.0)\n)\n</code></pre> <p>LLM \u200b\u53ef\u200b\u6062\u590d\u200b\u9519\u8bef\u5904\u7406\u200b</p> <pre><code>from langgraph.types import Command\n\ndef execute_tool(state: State) -&gt; Command[Literal[\"agent\", \"execute_tool\"]]:\n    try:\n        result = run_tool(state['tool_call'])\n        return Command(update={\"tool_result\": result}, goto=\"agent\")\n    except ToolError as e:\n        # \u200b\u8ba9\u200b LLM \u200b\u770b\u5230\u200b\u95ee\u9898\u200b\u5e76\u91cd\u200b\u8bd5\u200b\n        return Command(\n            update={\"tool_result\": f\"\u200b\u5de5\u5177\u200b\u9519\u8bef\u200b: {str(e)}\"},\n            goto=\"agent\"\n        )\n</code></pre> <p>\u200b\u7528\u6237\u200b\u53ef\u200b\u4fee\u590d\u200b\u9519\u8bef\u5904\u7406\u200b</p> <pre><code>from langgraph.types import Command\n\ndef lookup_customer_history(state: State) -&gt; Command[Literal[\"draft_response\"]]:\n    if not state.get('customer_id'):\n        user_input = interrupt({\n            \"message\": \"\u200b\u9700\u8981\u200b\u5ba2\u6237\u200b ID\",\n            \"request\": \"\u200b\u8bf7\u200b\u63d0\u4f9b\u200b\u5ba2\u6237\u200b\u8d26\u6237\u200b ID \u200b\u4ee5\u200b\u67e5\u8be2\u200b\u8ba2\u9605\u200b\u5386\u53f2\u200b\"\n        })\n        return Command(\n            update={\"customer_id\": user_input['customer_id']},\n            goto=\"lookup_customer_history\"\n        )\n    # \u200b\u73b0\u5728\u200b\u7ee7\u7eed\u200b\u67e5\u8be2\u200b\n    customer_data = fetch_customer_history(state['customer_id'])\n    return Command(update={\"customer_history\": customer_data}, goto=\"draft_response\")\n</code></pre> <p>\u200b\u610f\u5916\u200b\u9519\u8bef\u5904\u7406\u200b</p> <pre><code>def send_reply(state: EmailAgentState):\n    try:\n        email_service.send(state[\"draft_response\"])\n    except Exception:\n        raise  # \u200b\u629b\u51fa\u200b\u610f\u5916\u200b\u9519\u8bef\u200b\n</code></pre>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_8","title":"\u5b9e\u73b0\u200b\u6211\u4eec\u200b\u7684\u200b\u90ae\u4ef6\u200b\u667a\u80fd\u200b\u4f53\u200b\u8282\u70b9","text":"<p>\u200b\u6211\u4eec\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u5b9e\u73b0\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u8bb0\u4f4f\u200b\uff1a\u200b\u8282\u70b9\u200b\u63a5\u53d7\u200b\u72b6\u6001\u200b\uff0c\u200b\u6267\u884c\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u66f4\u65b0\u200b\u3002</p> <p>\u200b\u8bfb\u53d6\u200b\u548c\u200b\u5206\u7c7b\u200b\u8282\u70b9\u200b</p> <pre><code>from typing import Literal\nfrom langgraph.graph import StateGraph, START, END\nfrom langgraph.types import interrupt, Command, RetryPolicy\nfrom langchain_openai import ChatOpenAI\nfrom langchain_core.messages import HumanMessage\n\nllm = ChatOpenAI(model=\"gpt-4\")\n\ndef read_email(state: EmailAgentState) -&gt; dict:\n    \"\"\"\u200b\u63d0\u53d6\u200b\u548c\u200b\u89e3\u6790\u200b\u90ae\u4ef6\u200b\u5185\u5bb9\u200b\"\"\"\n    # \u200b\u5728\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u4e2d\u200b\uff0c\u200b\u8fd9\u200b\u5c06\u200b\u8fde\u63a5\u200b\u5230\u200b\u4f60\u200b\u7684\u200b\u90ae\u4ef6\u200b\u670d\u52a1\u200b\n    return {\n        \"messages\": [HumanMessage(content=f\"\u200b\u5904\u7406\u200b\u90ae\u4ef6\u200b: {state['email_content']}\")]\n    }\n\ndef classify_intent(state: EmailAgentState) -&gt; Command[Literal[\"search_documentation\", \"human_review\", \"draft_response\", \"bug_tracking\"]]:\n    \"\"\"\u200b\u4f7f\u7528\u200b LLM \u200b\u5206\u7c7b\u200b\u90ae\u4ef6\u200b\u610f\u56fe\u200b\u548c\u200b\u7d27\u6025\u200b\u7a0b\u5ea6\u200b\uff0c\u200b\u7136\u540e\u200b\u76f8\u5e94\u200b\u8def\u7531\u200b\"\"\"\n\n    # \u200b\u521b\u5efa\u200b\u8fd4\u56de\u200b EmailClassification \u200b\u5b57\u5178\u200b\u7684\u200b\u7ed3\u6784\u5316\u200b LLM\n    structured_llm = llm.with_structured_output(EmailClassification)\n\n    # \u200b\u6309\u200b\u9700\u200b\u683c\u5f0f\u5316\u200b\u63d0\u793a\u200b\uff0c\u200b\u4e0d\u200b\u5b58\u50a8\u200b\u5728\u200b\u72b6\u6001\u200b\u4e2d\u200b\n    classification_prompt = f\"\"\"\n    \u200b\u5206\u6790\u200b\u6b64\u200b\u5ba2\u6237\u200b\u90ae\u4ef6\u200b\u5e76\u200b\u5206\u7c7b\u200b\uff1a\n\n    \u200b\u90ae\u4ef6\u200b: {state['email_content']}\n    \u200b\u53d1\u4ef6\u4eba\u200b: {state['sender_email']}\n\n    \u200b\u63d0\u4f9b\u200b\u5206\u7c7b\u200b\uff0c\u200b\u5305\u62ec\u200b\u610f\u56fe\u200b\u3001\u200b\u7d27\u6025\u200b\u7a0b\u5ea6\u200b\u3001\u200b\u4e3b\u9898\u200b\u548c\u200b\u6458\u8981\u200b\u3002\n    \"\"\"\n\n    # \u200b\u76f4\u63a5\u200b\u83b7\u53d6\u200b\u7ed3\u6784\u5316\u200b\u54cd\u5e94\u200b\u4f5c\u4e3a\u200b\u5b57\u5178\u200b\n    classification = structured_llm.invoke(classification_prompt)\n\n    # \u200b\u6839\u636e\u200b\u5206\u7c7b\u200b\u786e\u5b9a\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\n    if classification['intent'] == 'billing' or classification['urgency'] == 'critical':\n        goto = \"human_review\"\n    elif classification['intent'] in ['question', 'feature']:\n        goto = \"search_documentation\"\n    elif classification['intent'] == 'bug':\n        goto = \"bug_tracking\"\n    else:\n        goto = \"draft_response\"\n\n    # \u200b\u5c06\u200b\u5206\u7c7b\u200b\u4f5c\u4e3a\u200b\u5355\u4e2a\u200b\u5b57\u5178\u200b\u5b58\u50a8\u200b\u5728\u200b\u72b6\u6001\u200b\u4e2d\u200b\n    return Command(\n        update={\"classification\": classification},\n        goto=goto\n    )\n</code></pre> <p>\u200b\u641c\u7d22\u200b\u548c\u200b\u8ddf\u8e2a\u200b\u8282\u70b9\u200b</p> <pre><code>def search_documentation(state: EmailAgentState) -&gt; Command[Literal[\"draft_response\"]]:\n    \"\"\"\u200b\u641c\u7d22\u200b\u77e5\u8bc6\u5e93\u200b\u83b7\u53d6\u200b\u76f8\u5173\u200b\u4fe1\u606f\u200b\"\"\"\n\n    # \u200b\u4ece\u200b\u5206\u7c7b\u200b\u6784\u5efa\u200b\u641c\u7d22\u200b\u67e5\u8be2\u200b\n    classification = state.get('classification', {})\n    query = f\"{classification.get('intent', '')} {classification.get('topic', '')}\"\n\n    try:\n        # \u200b\u5728\u200b\u6b64\u200b\u5b9e\u73b0\u200b\u4f60\u200b\u7684\u200b\u641c\u7d22\u200b\u903b\u8f91\u200b\n        # \u200b\u5b58\u50a8\u200b\u539f\u59cb\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b\uff0c\u200b\u4e0d\u662f\u200b\u683c\u5f0f\u5316\u200b\u6587\u672c\u200b\n        search_results = [\n            \"\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b &gt; \u200b\u5b89\u5168\u200b &gt; \u200b\u66f4\u6539\u200b\u5bc6\u7801\u200b\u91cd\u7f6e\u200b\u5bc6\u7801\u200b\",\n            \"\u200b\u5bc6\u7801\u200b\u5fc5\u987b\u200b\u81f3\u5c11\u200b12\u200b\u4e2a\u5b57\u7b26\u200b\",\n            \"\u200b\u5305\u542b\u200b\u5927\u5199\u5b57\u6bcd\u200b\u3001\u200b\u5c0f\u5199\u5b57\u6bcd\u200b\u3001\u200b\u6570\u5b57\u200b\u548c\u200b\u7b26\u53f7\u200b\"\n        ]\n    except SearchAPIError as e:\n        # \u200b\u5bf9\u4e8e\u200b\u53ef\u200b\u6062\u590d\u200b\u7684\u200b\u641c\u7d22\u200b\u9519\u8bef\u200b\uff0c\u200b\u5b58\u50a8\u200b\u9519\u8bef\u200b\u5e76\u200b\u7ee7\u7eed\u200b\n        search_results = [f\"\u200b\u641c\u7d22\u200b\u6682\u65f6\u200b\u4e0d\u53ef\u200b\u7528\u200b: {str(e)}\"]\n\n    return Command(\n        update={\"search_results\": search_results},  # \u200b\u5b58\u50a8\u200b\u539f\u59cb\u200b\u7ed3\u679c\u200b\u6216\u200b\u9519\u8bef\u200b\n        goto=\"draft_response\"\n    )\n\ndef bug_tracking(state: EmailAgentState) -&gt; Command[Literal[\"draft_response\"]]:\n    \"\"\"\u200b\u5728\u200b\u9519\u8bef\u200b\u8ddf\u8e2a\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u521b\u5efa\u200b\u6216\u200b\u66f4\u65b0\u200b\u5de5\u5355\u200b\"\"\"\n\n    # \u200b\u901a\u8fc7\u200b API \u200b\u5728\u200b\u4f60\u200b\u7684\u200b\u9519\u8bef\u200b\u8ddf\u8e2a\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u521b\u5efa\u200b\u5de5\u5355\u200b\n    ticket_id = \"BUG-12345\"  # \u200b\u5c06\u200b\u901a\u8fc7\u200b API \u200b\u521b\u5efa\u200b\n\n    return Command(\n        update={\n            \"search_results\": [f\"\u200b\u9519\u8bef\u200b\u5de5\u5355\u200b {ticket_id} \u200b\u5df2\u200b\u521b\u5efa\u200b\"],\n            \"current_step\": \"bug_tracked\"\n        },\n        goto=\"draft_response\"\n    )\n</code></pre> <p>\u200b\u54cd\u5e94\u200b\u8282\u70b9\u200b</p> <pre><code>def draft_response(state: EmailAgentState) -&gt; Command[Literal[\"human_review\", \"send_reply\"]]:\n    \"\"\"\u200b\u4f7f\u7528\u200b\u4e0a\u4e0b\u6587\u200b\u751f\u6210\u200b\u54cd\u5e94\u200b\u5e76\u200b\u6839\u636e\u200b\u8d28\u91cf\u200b\u8def\u7531\u200b\"\"\"\n\n    classification = state.get('classification', {})\n\n    # \u200b\u6309\u200b\u9700\u200b\u4ece\u200b\u539f\u59cb\u200b\u72b6\u6001\u200b\u6570\u636e\u200b\u683c\u5f0f\u5316\u200b\u4e0a\u4e0b\u6587\u200b\n    context_sections = []\n\n    if state.get('search_results'):\n        # \u200b\u4e3a\u200b\u63d0\u793a\u200b\u683c\u5f0f\u5316\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b\n        formatted_docs = \"\\n\".join([f\"- {doc}\" for doc in state['search_results']])\n        context_sections.append(f\"\u200b\u76f8\u5173\u200b\u6587\u6863\u200b:\\n{formatted_docs}\")\n\n    if state.get('customer_history'):\n        # \u200b\u4e3a\u200b\u63d0\u793a\u200b\u683c\u5f0f\u5316\u200b\u5ba2\u6237\u200b\u6570\u636e\u200b\n        context_sections.append(f\"\u200b\u5ba2\u6237\u200b\u5c42\u7ea7\u200b: {state['customer_history'].get('tier', 'standard')}\")\n\n    # \u200b\u4f7f\u7528\u200b\u683c\u5f0f\u5316\u200b\u4e0a\u4e0b\u6587\u200b\u6784\u5efa\u200b\u63d0\u793a\u200b\n    draft_prompt = f\"\"\"\n    \u200b\u8d77\u8349\u200b\u5bf9\u6b64\u200b\u5ba2\u6237\u200b\u90ae\u4ef6\u200b\u7684\u200b\u56de\u590d\u200b\uff1a\n    {state['email_content']}\n\n    \u200b\u90ae\u4ef6\u200b\u610f\u56fe\u200b: {classification.get('intent', 'unknown')}\n    \u200b\u7d27\u6025\u200b\u7a0b\u5ea6\u200b: {classification.get('urgency', 'medium')}\n\n    {chr(10).join(context_sections)}\n\n    \u200b\u6307\u5357\u200b\uff1a\n    - \u200b\u4e13\u4e1a\u200b\u4e14\u200b\u4e50\u4e8e\u52a9\u4eba\u200b\n    - \u200b\u89e3\u51b3\u200b\u4ed6\u4eec\u200b\u7684\u200b\u5177\u4f53\u200b\u95ee\u9898\u200b\n    - \u200b\u76f8\u5173\u200b\u65f6\u200b\u4f7f\u7528\u200b\u63d0\u4f9b\u200b\u7684\u200b\u6587\u6863\u200b\n    \"\"\"\n\n    response = llm.invoke(draft_prompt)\n\n    # \u200b\u6839\u636e\u200b\u7d27\u6025\u200b\u7a0b\u5ea6\u200b\u548c\u200b\u610f\u56fe\u200b\u786e\u5b9a\u200b\u662f\u5426\u200b\u9700\u8981\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\n    needs_review = (\n        classification.get('urgency') in ['high', 'critical'] or\n        classification.get('intent') == 'complex'\n    )\n\n    # \u200b\u8def\u7531\u200b\u5230\u200b\u9002\u5f53\u200b\u7684\u200b\u4e0b\u200b\u4e00\u200b\u8282\u70b9\u200b\n    goto = \"human_review\" if needs_review else \"send_reply\"\n\n    return Command(\n        update={\"draft_response\": response.content},  # \u200b\u53ea\u200b\u5b58\u50a8\u200b\u539f\u59cb\u200b\u54cd\u5e94\u200b\n        goto=goto\n    )\n\ndef human_review(state: EmailAgentState) -&gt; Command[Literal[\"send_reply\", END]]:\n    \"\"\"\u200b\u4f7f\u7528\u200b interrupt \u200b\u6682\u505c\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\u5e76\u200b\u6839\u636e\u200b\u51b3\u7b56\u200b\u8def\u7531\u200b\"\"\"\n\n    classification = state.get('classification', {})\n\n    # interrupt() \u200b\u5fc5\u987b\u200b\u9996\u5148\u200b\u51fa\u73b0\u200b - \u200b\u5b83\u200b\u4e4b\u524d\u200b\u7684\u200b\u4efb\u4f55\u200b\u4ee3\u7801\u200b\u90fd\u200b\u5c06\u200b\u5728\u200b\u6062\u590d\u200b\u65f6\u200b\u91cd\u65b0\u200b\u8fd0\u884c\u200b\n    human_decision = interrupt({\n        \"email_id\": state['email_id'],\n        \"original_email\": state['email_content'],\n        \"draft_response\": state['draft_response'],\n        \"urgency\": classification.get('urgency'),\n        \"intent\": classification.get('intent'),\n        \"action\": \"\u200b\u8bf7\u200b\u5ba1\u6838\u200b\u5e76\u200b\u6279\u51c6\u200b/\u200b\u7f16\u8f91\u200b\u6b64\u200b\u54cd\u5e94\u200b\"\n    })\n\n    # \u200b\u73b0\u5728\u200b\u5904\u7406\u200b\u4eba\u5de5\u200b\u51b3\u7b56\u200b\n    if human_decision.get(\"approved\"):\n        return Command(\n            update={\"draft_response\": human_decision.get(\"edited_response\", state['draft_response'])},\n            goto=\"send_reply\"\n        )\n    else:\n        # \u200b\u62d2\u7edd\u200b\u610f\u5473\u7740\u200b\u4eba\u5de5\u200b\u5c06\u200b\u76f4\u63a5\u200b\u5904\u7406\u200b\n        return Command(update={}, goto=END)\n\ndef send_reply(state: EmailAgentState) -&gt; dict:\n    \"\"\"\u200b\u53d1\u9001\u200b\u90ae\u4ef6\u200b\u56de\u590d\u200b\"\"\"\n    # \u200b\u4e0e\u200b\u90ae\u4ef6\u200b\u670d\u52a1\u200b\u96c6\u6210\u200b\n    print(f\"\u200b\u53d1\u9001\u200b\u56de\u590d\u200b: {state['draft_response'][:100]}...\")\n    return {}\n</code></pre>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#5","title":"\u6b65\u9aa4\u200b 5\uff1a\u200b\u5c06\u200b\u5b83\u4eec\u200b\u8fde\u63a5\u8d77\u6765","text":"<p>\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u5c06\u200b\u8282\u70b9\u200b\u8fde\u63a5\u6210\u200b\u4e00\u4e2a\u200b\u5de5\u4f5c\u200b\u56fe\u200b\u3002\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b\u7684\u200b\u8282\u70b9\u200b\u5904\u7406\u200b\u81ea\u5df1\u200b\u7684\u200b\u8def\u7531\u200b\u51b3\u7b56\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u4e00\u4e9b\u200b\u57fa\u672c\u200b\u7684\u200b\u8fb9\u200b\u3002</p> <p>\u200b\u8981\u200b\u4f7f\u7528\u200b <code>interrupt()</code> \u200b\u542f\u7528\u200b[\u200b\u4eba\u5de5\u5e72\u9884\u200b]\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b[\u200b\u68c0\u67e5\u70b9\u200b]\u200b\u8fdb\u884c\u200b\u7f16\u8bd1\u200b\u4ee5\u200b\u5728\u200b\u8fd0\u884c\u200b\u4e4b\u95f4\u200b\u4fdd\u5b58\u200b\u72b6\u6001\u200b\uff1a</p> <pre><code>from langgraph.checkpoint.memory import MemorySaver\nfrom langgraph.types import RetryPolicy\n\n# \u200b\u521b\u5efa\u200b\u56fe\u200b\nworkflow = StateGraph(EmailAgentState)\n\n# \u200b\u6dfb\u52a0\u200b\u5e26\u6709\u200b\u9002\u5f53\u200b\u9519\u8bef\u5904\u7406\u200b\u7684\u200b\u8282\u70b9\u200b\nworkflow.add_node(\"read_email\", read_email)\nworkflow.add_node(\"classify_intent\", classify_intent)\n\n# \u200b\u4e3a\u200b\u53ef\u80fd\u200b\u6709\u200b\u6682\u65f6\u6027\u200b\u6545\u969c\u200b\u7684\u200b\u8282\u70b9\u200b\u6dfb\u52a0\u200b\u91cd\u8bd5\u200b\u7b56\u7565\u200b\nworkflow.add_node(\n    \"search_documentation\",\n    search_documentation,\n    retry_policy=RetryPolicy(max_attempts=3)\n)\nworkflow.add_node(\"bug_tracking\", bug_tracking)\nworkflow.add_node(\"draft_response\", draft_response)\nworkflow.add_node(\"human_review\", human_review)\nworkflow.add_node(\"send_reply\", send_reply)\n\n# \u200b\u53ea\u200b\u6dfb\u52a0\u200b\u57fa\u672c\u200b\u8fb9\u200b\nworkflow.add_edge(START, \"read_email\")\nworkflow.add_edge(\"read_email\", \"classify_intent\")\nworkflow.add_edge(\"send_reply\", END)\n\n# \u200b\u4f7f\u7528\u200b\u68c0\u67e5\u70b9\u200b\u8fdb\u884c\u200b\u6301\u4e45\u200b\u5316\u200b\u7f16\u8bd1\u200b\nmemory = MemorySaver()\napp = workflow.compile(checkpointer=memory)\n</code></pre> <p>\u200b\u56fe\u200b\u7ed3\u6784\u200b\u662f\u200b\u6700\u5c0f\u200b\u7684\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8def\u7531\u200b\u901a\u8fc7\u200b <code>Command</code> \u200b\u5bf9\u8c61\u200b\u5728\u200b\u8282\u70b9\u200b\u5185\u90e8\u200b\u53d1\u751f\u200b\u3002\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u4f7f\u7528\u200b\u7c7b\u578b\u200b\u63d0\u793a\u200b\u5982\u200b <code>Command[Literal[\"node1\", \"node2\"]]</code> \u200b\u58f0\u660e\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u53bb\u200b\u54ea\u91cc\u200b\uff0c\u200b\u4f7f\u200b\u6d41\u7a0b\u200b\u660e\u786e\u200b\u4e14\u200b\u53ef\u8ffd\u8e2a\u200b\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_9","title":"\u6d4b\u8bd5\u200b\u4f60\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53","text":"<p>\u200b\u8ba9\u200b\u6211\u4eec\u200b\u7528\u200b\u4e00\u4e2a\u200b\u9700\u8981\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\u7684\u200b\u7d27\u6025\u200b\u8d26\u5355\u200b\u95ee\u9898\u200b\u6765\u200b\u8fd0\u884c\u200b\u6211\u4eec\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\uff1a</p> <pre><code># \u200b\u6d4b\u8bd5\u200b\u7d27\u6025\u200b\u8d26\u5355\u200b\u95ee\u9898\u200b\ninitial_state = {\n    \"email_content\": \"\u200b\u6211\u200b\u7684\u200b\u8ba2\u9605\u200b\u88ab\u200b\u91cd\u590d\u200b\u6536\u8d39\u200b\u4e86\u200b\uff01\u200b\u8fd9\u200b\u5f88\u200b\u7d27\u6025\u200b\uff01\",\n    \"sender_email\": \"customer@example.com\",\n    \"email_id\": \"email_123\",\n    \"messages\": []\n}\n\n# \u200b\u4f7f\u7528\u200b thread_id \u200b\u8fdb\u884c\u200b\u6301\u4e45\u200b\u5316\u200b\u8fd0\u884c\u200b\nconfig = {\"configurable\": {\"thread_id\": \"customer_123\"}}\nresult = app.invoke(initial_state, config)\n# \u200b\u56fe\u200b\u5c06\u200b\u5728\u200b human_review \u200b\u5904\u200b\u6682\u505c\u200b\nprint(f\"\u200b\u51c6\u5907\u200b\u5ba1\u6838\u200b\u7684\u200b\u8349\u7a3f\u200b: {result['draft_response'][:100]}...\")\n\n# \u200b\u51c6\u5907\u5c31\u7eea\u200b\u65f6\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4eba\u5de5\u200b\u8f93\u5165\u200b\u4ee5\u200b\u6062\u590d\u200b\nfrom langgraph.types import Command\n\nhuman_response = Command(\n    resume={\n        \"approved\": True,\n        \"edited_response\": \"\u200b\u6211\u4eec\u200b\u4e3a\u200b\u91cd\u590d\u200b\u6536\u8d39\u200b\u8bda\u631a\u200b\u9053\u6b49\u200b\u3002\u200b\u6211\u200b\u5df2\u200b\u7acb\u5373\u200b\u542f\u52a8\u200b\u9000\u6b3e\u200b...\"\n    }\n)\n\n# \u200b\u6062\u590d\u200b\u6267\u884c\u200b\nfinal_result = app.invoke(human_response, config)\nprint(f\"\u200b\u90ae\u4ef6\u200b\u53d1\u9001\u200b\u6210\u529f\u200b\uff01\")\n</code></pre> <p>\u200b\u5f53\u56fe\u200b\u9047\u5230\u200b <code>interrupt()</code> \u200b\u65f6\u200b\u6682\u505c\u200b\uff0c\u200b\u5c06\u200b\u6240\u6709\u200b\u5185\u5bb9\u200b\u4fdd\u5b58\u200b\u5230\u200b\u68c0\u67e5\u70b9\u200b\uff0c\u200b\u5e76\u200b\u7b49\u5f85\u200b\u3002\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u5728\u200b\u51e0\u5929\u200b\u540e\u200b\u6062\u590d\u200b\uff0c\u200b\u4ece\u200b\u505c\u6b62\u200b\u7684\u200b\u5730\u65b9\u200b\u51c6\u786e\u200b\u7ee7\u7eed\u200b\u3002<code>thread_id</code> \u200b\u786e\u4fdd\u200b\u6b64\u200b\u5bf9\u8bdd\u200b\u7684\u200b\u6240\u6709\u200b\u72b6\u6001\u200b\u90fd\u200b\u4e00\u8d77\u200b\u4fdd\u5b58\u200b\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_10","title":"\u603b\u7ed3\u200b\u548c\u200b\u4e0b\u200b\u4e00\u6b65","text":""},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_11","title":"\u5173\u952e\u200b\u89c1\u89e3","text":"<p>\u200b\u6784\u5efa\u200b\u8fd9\u4e2a\u200b\u90ae\u4ef6\u200b\u667a\u80fd\u200b\u4f53\u5411\u200b\u6211\u4eec\u200b\u5c55\u793a\u200b\u4e86\u200b LangGraph \u200b\u7684\u200b\u601d\u7ef4\u200b\u65b9\u5f0f\u200b\uff1a</p> <p>\u200b\u5206\u89e3\u200b\u4e3a\u200b\u79bb\u6563\u200b\u6b65\u9aa4\u200b * \u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u505a\u597d\u200b\u4e00\u4ef6\u200b\u4e8b\u200b\u3002\u200b\u8fd9\u79cd\u200b\u5206\u89e3\u200b\u652f\u6301\u200b\u6d41\u5f0f\u200b\u8fdb\u5ea6\u200b\u66f4\u65b0\u200b\u3001\u200b\u53ef\u4ee5\u200b\u6682\u505c\u200b\u548c\u200b\u6062\u590d\u200b\u7684\u200b\u6301\u4e45\u200b\u6267\u884c\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u6e05\u6670\u200b\u7684\u200b\u8c03\u8bd5\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6b65\u9aa4\u200b\u4e4b\u95f4\u200b\u68c0\u67e5\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u72b6\u6001\u200b\u662f\u200b\u5171\u4eab\u5185\u5b58\u200b * \u200b\u5b58\u50a8\u200b\u539f\u59cb\u6570\u636e\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u683c\u5f0f\u5316\u200b\u6587\u672c\u200b\u3002\u200b\u8fd9\u200b\u8ba9\u200b\u4e0d\u540c\u200b\u8282\u70b9\u200b\u4ee5\u200b\u4e0d\u540c\u200b\u65b9\u5f0f\u200b\u4f7f\u7528\u200b\u76f8\u540c\u200b\u7684\u200b\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u8282\u70b9\u200b\u662f\u200b\u51fd\u6570\u200b * \u200b\u5b83\u4eec\u200b\u63a5\u53d7\u200b\u72b6\u6001\u200b\uff0c\u200b\u6267\u884c\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u66f4\u65b0\u200b\u3002\u200b\u5f53\u200b\u9700\u8981\u200b\u505a\u51fa\u200b\u8def\u7531\u200b\u51b3\u7b56\u200b\u65f6\u200b\uff0c\u200b\u5b83\u4eec\u200b\u6307\u5b9a\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u548c\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u76ee\u7684\u5730\u200b\u3002</p> <p>\u200b\u9519\u8bef\u200b\u662f\u200b\u6d41\u7a0b\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b * \u200b\u6682\u65f6\u6027\u200b\u6545\u969c\u200b\u91cd\u8bd5\u200b\uff0cLLM \u200b\u53ef\u200b\u6062\u590d\u200b\u9519\u8bef\u200b\u5faa\u73af\u200b\u56de\u53bb\u200b\u5e76\u200b\u63d0\u4f9b\u200b\u4e0a\u4e0b\u6587\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u200b\u4fee\u590d\u200b\u95ee\u9898\u200b\u6682\u505c\u200b\u7b49\u5f85\u200b\u8f93\u5165\u200b\uff0c\u200b\u610f\u5916\u200b\u9519\u8bef\u200b\u5192\u6ce1\u200b\u7528\u4e8e\u200b\u8c03\u8bd5\u200b\u3002</p> <p>\u200b\u4eba\u5de5\u200b\u8f93\u5165\u200b\u662f\u200b\u4e00\u7b49\u200b\u516c\u6c11\u200b * <code>interrupt()</code> \u200b\u51fd\u6570\u200b\u65e0\u9650\u671f\u200b\u6682\u505c\u200b\u6267\u884c\u200b\uff0c\u200b\u4fdd\u5b58\u200b\u6240\u6709\u200b\u72b6\u6001\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u4f60\u200b\u63d0\u4f9b\u200b\u8f93\u5165\u200b\u65f6\u200b\u4ece\u200b\u505c\u6b62\u200b\u7684\u200b\u5730\u65b9\u200b\u51c6\u786e\u200b\u6062\u590d\u200b\u3002\u200b\u5f53\u200b\u4e0e\u200b\u8282\u70b9\u200b\u4e2d\u200b\u7684\u200b\u5176\u4ed6\u200b\u64cd\u4f5c\u200b\u7ed3\u5408\u200b\u65f6\u200b\uff0c\u200b\u5b83\u200b\u5fc5\u987b\u200b\u9996\u5148\u200b\u51fa\u73b0\u200b\u3002</p> <p>\u200b\u56fe\u200b\u7ed3\u6784\u200b\u81ea\u7136\u200b\u51fa\u73b0\u200b * \u200b\u4f60\u200b\u5b9a\u4e49\u200b\u57fa\u672c\u200b\u8fde\u63a5\u200b\uff0c\u200b\u4f60\u200b\u7684\u200b\u8282\u70b9\u200b\u5904\u7406\u200b\u81ea\u5df1\u200b\u7684\u200b\u8def\u7531\u200b\u903b\u8f91\u200b\u3002\u200b\u8fd9\u4f7f\u200b\u63a7\u5236\u6d41\u200b\u660e\u786e\u200b\u4e14\u200b\u53ef\u8ffd\u8e2a\u200b - \u200b\u4f60\u200b\u603b\u662f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u67e5\u770b\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u6765\u200b\u7406\u89e3\u200b\u4f60\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u4e0b\u200b\u4e00\u6b65\u200b\u5c06\u200b\u505a\u200b\u4ec0\u4e48\u200b\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_12","title":"\u9ad8\u7ea7\u200b\u8003\u8651","text":"<p>\u200b\u8282\u70b9\u200b\u7c92\u5ea6\u200b\u6743\u8861\u200b \u200b\u4f60\u200b\u53ef\u80fd\u200b\u4f1a\u60f3\u200b\uff1a\u200b\u4e3a\u4ec0\u4e48\u200b\u4e0d\u200b\u5c06\u200b\"\u200b\u8bfb\u53d6\u200b\u90ae\u4ef6\u200b\"\u200b\u548c\u200b\"\u200b\u5206\u7c7b\u200b\u610f\u56fe\u200b\"\u200b\u5408\u5e76\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\uff1f\u200b\u6216\u8005\u200b\u4e3a\u4ec0\u4e48\u200b\u5c06\u200b\u6587\u6863\u200b\u641c\u7d22\u200b\u4e0e\u200b\u8d77\u8349\u200b\u56de\u590d\u200b\u5206\u5f00\u200b\uff1f</p> <p>\u200b\u7b54\u6848\u200b\u6d89\u53ca\u200b\u5f39\u6027\u200b\u4e0e\u200b\u53ef\u200b\u89c2\u5bdf\u200b\u6027\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6743\u8861\u200b\u3002</p> <p>\u200b\u5f39\u6027\u200b\u8003\u8651\u200b\uff1a LangGraph \u200b\u7684\u200b[\u200b\u6301\u4e45\u200b\u6267\u884c\u200b]\u200b\u5728\u200b\u8282\u70b9\u200b\u8fb9\u754c\u200b\u521b\u5efa\u200b\u68c0\u67e5\u70b9\u200b\u3002\u200b\u5f53\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u5728\u200b\u4e2d\u65ad\u200b\u6216\u200b\u6545\u969c\u200b\u540e\u200b\u6062\u590d\u200b\u65f6\u200b\uff0c\u200b\u5b83\u200b\u4ece\u200b\u6267\u884c\u200b\u505c\u6b62\u200b\u7684\u200b\u8282\u70b9\u200b\u5f00\u59cb\u200b\u3002\u200b\u8f83\u200b\u5c0f\u200b\u7684\u200b\u8282\u70b9\u200b\u610f\u5473\u7740\u200b\u66f4\u200b\u9891\u7e41\u200b\u7684\u200b\u68c0\u67e5\u70b9\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u5982\u679c\u200b\u51fa\u73b0\u200b\u95ee\u9898\u200b\uff0c\u200b\u91cd\u590d\u200b\u7684\u200b\u5de5\u4f5c\u200b\u66f4\u200b\u5c11\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u5c06\u200b\u591a\u4e2a\u200b\u64cd\u4f5c\u200b\u5408\u5e76\u200b\u5230\u200b\u4e00\u4e2a\u200b\u5927\u200b\u8282\u70b9\u200b\u4e2d\u200b\uff0c\u200b\u63a5\u8fd1\u200b\u672b\u5c3e\u200b\u7684\u200b\u5931\u8d25\u200b\u610f\u5473\u7740\u200b\u4ece\u200b\u8be5\u200b\u8282\u70b9\u200b\u5f00\u59cb\u200b\u91cd\u65b0\u200b\u6267\u884c\u200b\u4e00\u5207\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u4e3a\u200b\u90ae\u4ef6\u200b\u667a\u80fd\u200b\u4f53\u200b\u9009\u62e9\u200b\u8fd9\u79cd\u200b\u5206\u89e3\u200b\u7684\u200b\u539f\u56e0\u200b\uff1a</p> <ul> <li> <p>\u200b\u5916\u90e8\u200b\u670d\u52a1\u200b\u9694\u79bb\u200b\uff1a \u200b\u6587\u6863\u200b\u641c\u7d22\u200b\u548c\u200b\u9519\u8bef\u200b\u8ddf\u8e2a\u200b\u662f\u200b\u5355\u72ec\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u4eec\u200b\u8c03\u7528\u200b\u5916\u90e8\u200b API\u3002\u200b\u5982\u679c\u200b\u641c\u7d22\u200b\u670d\u52a1\u200b\u7f13\u6162\u200b\u6216\u200b\u5931\u8d25\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u5c06\u200b\u5176\u200b\u4e0e\u200b LLM \u200b\u8c03\u7528\u200b\u9694\u79bb\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u8fd9\u4e9b\u200b\u7279\u5b9a\u200b\u8282\u70b9\u200b\u6dfb\u52a0\u200b\u91cd\u8bd5\u200b\u7b56\u7565\u200b\u800c\u200b\u4e0d\u200b\u5f71\u54cd\u200b\u5176\u4ed6\u200b\u8282\u70b9\u200b\u3002</p> </li> <li> <p>\u200b\u4e2d\u95f4\u200b\u53ef\u89c1\u200b\u6027\u200b\uff1a \u200b\u5c06\u200b\"\u200b\u5206\u7c7b\u200b\u610f\u56fe\u200b\"\u200b\u4f5c\u4e3a\u200b\u81ea\u5df1\u200b\u7684\u200b\u8282\u70b9\u200b\u8ba9\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u91c7\u53d6\u884c\u52a8\u200b\u4e4b\u524d\u200b\u68c0\u67e5\u200b LLM \u200b\u7684\u200b\u51b3\u5b9a\u200b\u3002\u200b\u8fd9\u200b\u5bf9\u4e8e\u200b\u8c03\u8bd5\u200b\u548c\u200b\u76d1\u63a7\u200b\u5f88\u200b\u6709\u200b\u4ef7\u503c\u200b - \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u51c6\u786e\u200b\u770b\u5230\u200b\u667a\u80fd\u200b\u4f53\u200b\u4f55\u65f6\u200b\u4ee5\u53ca\u200b\u4e3a\u4f55\u200b\u8def\u7531\u200b\u5230\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\u3002</p> </li> <li> <p>\u200b\u4e0d\u540c\u200b\u7684\u200b\u6545\u969c\u200b\u6a21\u5f0f\u200b\uff1a LLM \u200b\u8c03\u7528\u200b\u3001\u200b\u6570\u636e\u5e93\u200b\u67e5\u8be2\u200b\u548c\u200b\u90ae\u4ef6\u200b\u53d1\u9001\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u91cd\u8bd5\u200b\u7b56\u7565\u200b\u3002\u200b\u5355\u72ec\u200b\u7684\u200b\u8282\u70b9\u200b\u8ba9\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u72ec\u7acb\u200b\u914d\u7f6e\u200b\u8fd9\u4e9b\u200b\u3002</p> </li> <li> <p>\u200b\u53ef\u200b\u91cd\u7528\u200b\u6027\u200b\u548c\u200b\u6d4b\u8bd5\u200b\uff1a \u200b\u8f83\u200b\u5c0f\u200b\u7684\u200b\u8282\u70b9\u200b\u66f4\u200b\u5bb9\u6613\u200b\u5355\u72ec\u200b\u6d4b\u8bd5\u200b\u5e76\u200b\u5728\u200b\u5176\u4ed6\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u4e2d\u200b\u91cd\u7528\u200b\u3002</p> </li> </ul> <p>\u200b\u4e0d\u540c\u200b\u7684\u200b\u6709\u6548\u200b\u65b9\u6cd5\u200b\uff1a\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5c06\u200b\"\u200b\u8bfb\u53d6\u200b\u90ae\u4ef6\u200b\"\u200b\u548c\u200b\"\u200b\u5206\u7c7b\u200b\u610f\u56fe\u200b\"\u200b\u5408\u5e76\u200b\u4e3a\u200b\u5355\u4e2a\u200b\u8282\u70b9\u200b\u3002\u200b\u4f60\u200b\u5c06\u200b\u5931\u53bb\u200b\u5728\u200b\u5206\u7c7b\u200b\u4e4b\u524d\u200b\u68c0\u67e5\u200b\u539f\u59cb\u200b\u90ae\u4ef6\u200b\u7684\u200b\u80fd\u529b\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b\u8be5\u200b\u8282\u70b9\u200b\u51fa\u73b0\u200b\u4efb\u4f55\u200b\u6545\u969c\u200b\u65f6\u4f1a\u200b\u91cd\u590d\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u64cd\u4f5c\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u5927\u591a\u6570\u200b\u5e94\u7528\u200b\uff0c\u200b\u5355\u72ec\u200b\u8282\u70b9\u200b\u7684\u200b\u53ef\u200b\u89c2\u5bdf\u200b\u6027\u200b\u548c\u200b\u8c03\u8bd5\u200b\u597d\u5904\u200b\u662f\u200b\u503c\u5f97\u200b\u7684\u200b\u6743\u8861\u200b\u3002</p> <p>\u200b\u63a7\u5236\u200b\u68c0\u67e5\u70b9\u200b\u884c\u4e3a\u200b\uff1a \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b[\u200b\u6301\u4e45\u6027\u200b\u6a21\u5f0f\u200b]\u200b\u8c03\u6574\u200b\u68c0\u67e5\u70b9\u200b\u7684\u200b\u5199\u5165\u200b\u65f6\u95f4\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u7684\u200b <code>\"async\"</code> \u200b\u6a21\u5f0f\u200b\u5728\u200b\u540e\u53f0\u200b\u5199\u5165\u200b\u68c0\u67e5\u70b9\u200b\u4ee5\u200b\u83b7\u5f97\u200b\u826f\u597d\u200b\u7684\u200b\u6027\u80fd\u200b\uff0c\u200b\u540c\u65f6\u200b\u4fdd\u6301\u200b\u6301\u4e45\u6027\u200b\u3002\u200b\u4f7f\u7528\u200b <code>\"exit\"</code> \u200b\u6a21\u5f0f\u200b\u4ec5\u200b\u5728\u200b\u5b8c\u6210\u200b\u65f6\u200b\u68c0\u67e5\u70b9\u200b\uff08\u200b\u5bf9\u4e8e\u200b\u4e0d\u200b\u9700\u8981\u200b\u4e2d\u95f4\u200b\u6267\u884c\u200b\u6062\u590d\u200b\u7684\u200b\u957f\u65f6\u95f4\u200b\u8fd0\u884c\u56fe\u200b\u66f4\u200b\u5feb\u200b\uff09\uff0c\u200b\u6216\u200b\u4f7f\u7528\u200b <code>\"sync\"</code> \u200b\u6a21\u5f0f\u200b\u4fdd\u8bc1\u200b\u5728\u200b\u7ee7\u7eed\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u4e4b\u524d\u200b\u5199\u5165\u200b\u68c0\u67e5\u70b9\u200b\uff08\u200b\u5f53\u200b\u4f60\u200b\u9700\u8981\u200b\u786e\u4fdd\u200b\u72b6\u6001\u200b\u5728\u200b\u7ee7\u7eed\u6267\u884c\u200b\u4e4b\u524d\u200b\u6301\u4e45\u200b\u5316\u65f6\u200b\u5f88\u200b\u6709\u7528\u200b\uff09\u3002</p>"},{"location":"llmapps/langgraph/thinking%20in%20Langgraph/#_13","title":"\u4ece\u200b\u8fd9\u91cc\u200b\u53bb\u200b\u54ea\u91cc","text":"<p>\u200b\u8fd9\u662f\u200b\u5173\u4e8e\u200b\u4f7f\u7528\u200b LangGraph \u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u601d\u7ef4\u200b\u65b9\u5f0f\u200b\u7684\u200b\u4ecb\u7ecd\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4ee5\u4e0b\u5185\u5bb9\u200b\u6269\u5c55\u200b\u8fd9\u4e2a\u200b\u57fa\u7840\u200b\uff1a</p> <p>\u200b\u4eba\u5de5\u5e72\u9884\u200b\u6a21\u5f0f\u200b * \u200b\u5b66\u4e60\u200b\u5982\u4f55\u200b\u5728\u200b\u6267\u884c\u200b\u524d\u200b\u6dfb\u52a0\u200b\u5de5\u5177\u200b\u6279\u51c6\u200b\u3001\u200b\u6279\u91cf\u200b\u6279\u51c6\u200b\u548c\u200b\u5176\u4ed6\u200b\u6a21\u5f0f\u200b</p> <p>\u200b\u5b50\u56fe\u200b * \u200b\u4e3a\u200b\u590d\u6742\u200b\u7684\u200b\u591a\u200b\u6b65\u9aa4\u200b\u64cd\u4f5c\u200b\u521b\u5efa\u200b\u5b50\u56fe\u200b</p> <p>\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b * \u200b\u6dfb\u52a0\u200b\u6d41\u5f0f\u200b\u4f20\u8f93\u200b\u4ee5\u5411\u200b\u7528\u6237\u200b\u663e\u793a\u200b\u5b9e\u65f6\u200b\u8fdb\u5ea6\u200b</p> <p>\u200b\u53ef\u200b\u89c2\u5bdf\u200b\u6027\u200b * \u200b\u4f7f\u7528\u200b LangSmith \u200b\u6dfb\u52a0\u200b\u53ef\u200b\u89c2\u5bdf\u200b\u6027\u4ee5\u200b\u8fdb\u884c\u200b\u8c03\u8bd5\u200b\u548c\u200b\u76d1\u63a7\u200b</p> <p>\u200b\u5de5\u5177\u200b\u96c6\u6210\u200b * \u200b\u96c6\u6210\u200b\u66f4\u200b\u591a\u200b\u5de5\u5177\u200b\u4ee5\u200b\u8fdb\u884c\u200b\u7f51\u7edc\u200b\u641c\u7d22\u200b\u3001\u200b\u6570\u636e\u5e93\u200b\u67e5\u8be2\u200b\u548c\u200b API \u200b\u8c03\u7528\u200b</p> <p>\u200b\u91cd\u8bd5\u200b\u903b\u8f91\u200b * \u200b\u4e3a\u200b\u5931\u8d25\u200b\u7684\u200b\u64cd\u4f5c\u200b\u5b9e\u73b0\u200b\u6307\u6570\u200b\u9000\u907f\u200b\u7684\u200b\u91cd\u8bd5\u200b\u903b\u8f91\u200b</p> <p>\u200b\u901a\u8fc7\u200b\u638c\u63e1\u200b\u8fd9\u4e9b\u200b\u6838\u5fc3\u200b\u6982\u5ff5\u200b\uff0c\u200b\u4f60\u200b\u73b0\u5728\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u590d\u6742\u200b\u3001\u200b\u6709\u200b\u72b6\u6001\u200b\u3001\u200b\u751f\u4ea7\u200b\u5c31\u7eea\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\uff0c\u200b\u80fd\u591f\u200b\u5904\u7406\u200b\u73b0\u5b9e\u200b\u4e16\u754c\u200b\u7684\u200b\u4e1a\u52a1\u6d41\u7a0b\u200b\uff0c\u200b\u540c\u65f6\u200b\u4fdd\u6301\u200b\u5bf9\u200b\u6267\u884c\u200b\u6d41\u7a0b\u200b\u7684\u200b\u5b8c\u5168\u200b\u63a7\u5236\u200b\u548c\u200b\u53ef\u89c1\u200b\u6027\u200b\u3002</p>"},{"location":"llmapps/langgraph/time%20travel/","title":"LangGraph \u200b\u65f6\u95f4\u200b\u65c5\u884c\u200b\u4f7f\u7528\u200b\u6559\u7a0b","text":""},{"location":"llmapps/langgraph/time%20travel/#_1","title":"\u4ec0\u4e48\u200b\u662f\u200b\u65f6\u95f4\u200b\u65c5\u884c\u200b\uff1f","text":"<p>\u200b\u5728\u200b\u57fa\u4e8e\u200b\u6a21\u578b\u200b\u51b3\u7b56\u200b\u7684\u200b\u975e\u200b\u786e\u5b9a\u6027\u200b\u7cfb\u7edf\u200b\uff08\u200b\u5982\u200bLLM\u200b\u9a71\u52a8\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\uff09\u200b\u4e2d\u200b\uff0c\u200b\u65f6\u95f4\u200b\u65c5\u884c\u200b\u529f\u80fd\u200b\u8ba9\u200b\u60a8\u200b\u80fd\u591f\u200b\u8be6\u7ec6\u200b\u68c0\u67e5\u200b\u51b3\u7b56\u200b\u8fc7\u7a0b\u200b\uff1a</p> <ul> <li>\ud83d\udd0d \u200b\u7406\u89e3\u200b\u63a8\u7406\u200b\u903b\u8f91\u200b\uff1a\u200b\u5206\u6790\u200b\u5bfc\u81f4\u200b\u6210\u529f\u200b\u7ed3\u679c\u200b\u7684\u200b\u5404\u4e2a\u200b\u6b65\u9aa4\u200b</li> <li>\ud83d\udc1b \u200b\u8c03\u8bd5\u200b\u9519\u8bef\u200b\uff1a\u200b\u8bc6\u522b\u200b\u9519\u8bef\u200b\u53d1\u751f\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u548c\u200b\u539f\u56e0\u200b  </li> <li>\ud83d\udd04 \u200b\u63a2\u7d22\u200b\u66ff\u4ee3\u200b\u65b9\u6848\u200b\uff1a\u200b\u6d4b\u8bd5\u200b\u4e0d\u540c\u200b\u8def\u5f84\u200b\u4ee5\u200b\u53d1\u73b0\u200b\u66f4\u597d\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b</li> </ul>"},{"location":"llmapps/langgraph/time%20travel/#_2","title":"\u65f6\u95f4\u200b\u65c5\u884c\u200b\u6838\u5fc3\u200b\u6982\u5ff5","text":"<p>LangGraph\u200b\u7684\u200b\u65f6\u95f4\u200b\u65c5\u884c\u200b\u529f\u80fd\u200b\u5141\u8bb8\u200b\u60a8\u200b\u4ece\u200b\u4e4b\u524d\u200b\u7684\u200b\u68c0\u67e5\u70b9\u200b\u6062\u590d\u200b\u6267\u884c\u200b\u2014\u2014\u200b\u53ef\u4ee5\u200b\u91cd\u200b\u653e\u200b\u76f8\u540c\u200b\u72b6\u6001\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\u6765\u200b\u63a2\u7d22\u200b\u66ff\u4ee3\u200b\u65b9\u6848\u200b\u3002\u200b\u65e0\u8bba\u200b\u54ea\u200b\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6062\u590d\u200b\u8fc7\u53bb\u200b\u7684\u200b\u6267\u884c\u200b\u90fd\u200b\u4f1a\u200b\u5728\u200b\u5386\u53f2\u200b\u4e2d\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u5206\u652f\u200b\u3002</p>"},{"location":"llmapps/langgraph/time%20travel/#_3","title":"\u4f7f\u7528\u200b\u6b65\u9aa4","text":""},{"location":"llmapps/langgraph/time%20travel/#1","title":"1. \u200b\u8fd0\u884c\u56fe","text":"<p>\u200b\u9996\u5148\u200b\u4f7f\u7528\u200b\u521d\u59cb\u200b\u8f93\u5165\u200b\u8fd0\u884c\u56fe\u200b\uff1a</p> <pre><code>config = {\n    \"configurable\": {\n        \"thread_id\": uuid.uuid4(),\n    }\n}\nstate = graph.invoke({}, config)\n</code></pre>"},{"location":"llmapps/langgraph/time%20travel/#2","title":"2. \u200b\u8bc6\u522b\u200b\u68c0\u67e5\u70b9","text":"<p>\u200b\u83b7\u53d6\u200b\u6267\u884c\u200b\u5386\u53f2\u200b\u5e76\u200b\u5b9a\u4f4d\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u68c0\u67e5\u70b9\u200b\uff1a</p> <pre><code># \u200b\u72b6\u6001\u200b\u6309\u200b\u65f6\u95f4\u200b\u5012\u5e8f\u200b\u8fd4\u56de\u200b\nstates = list(graph.get_state_history(config))\n\nfor state in states:\n    print(f\"\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u8282\u70b9\u200b: {state.next}\")\n    print(f\"\u200b\u68c0\u67e5\u70b9\u200bID: {state.config['configurable']['checkpoint_id']}\")\n    print()\n</code></pre> <p>\u200b\u6216\u8005\u200b\uff0c\u200b\u5728\u200b\u76ee\u6807\u200b\u8282\u70b9\u200b\u524d\u200b\u8bbe\u7f6e\u200b[\u200b\u4e2d\u65ad\u200b]\uff0c\u200b\u7136\u540e\u200b\u5728\u200b\u4e2d\u65ad\u200b\u5904\u200b\u627e\u5230\u200b\u6700\u8fd1\u200b\u7684\u200b\u68c0\u67e5\u70b9\u200b\u3002</p>"},{"location":"llmapps/langgraph/time%20travel/#3","title":"3. \u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\uff08\u200b\u53ef\u200b\u9009\u200b\uff09","text":"<p>\u200b\u5728\u200b\u68c0\u67e5\u70b9\u200b\u4fee\u6539\u200b\u56fe\u200b\u72b6\u6001\u200b\uff1a</p> <pre><code>new_config = graph.update_state(\n    selected_state.config, \n    values={\"topic\": \"\u200b\u65b0\u200b\u7684\u200b\u4e3b\u9898\u200b\"}\n)\n</code></pre> <p><code>update_state</code>\u200b\u4f1a\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u4e0e\u200b\u540c\u4e00\u200b\u7ebf\u7a0b\u200b\u5173\u8054\u200b\u4f46\u200b\u5177\u6709\u200b\u65b0\u200b\u68c0\u67e5\u70b9\u200bID\u200b\u7684\u200b\u65b0\u200b\u68c0\u67e5\u70b9\u200b\u3002</p>"},{"location":"llmapps/langgraph/time%20travel/#4","title":"4. \u200b\u4ece\u200b\u68c0\u67e5\u70b9\u200b\u6062\u590d\u200b\u6267\u884c","text":"<p>\u200b\u4f7f\u7528\u200b\u9002\u5f53\u200b\u7684\u200b<code>thread_id</code>\u200b\u548c\u200b<code>checkpoint_id</code>\u200b\u6062\u590d\u200b\u6267\u884c\u200b\uff1a</p> <pre><code>graph.invoke(None, new_config)\n</code></pre>"},{"location":"llmapps/langgraph/time%20travel/#_4","title":"\u5b8c\u6574\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u793a\u4f8b","text":""},{"location":"llmapps/langgraph/time%20travel/#_5","title":"\u73af\u5883\u200b\u8bbe\u7f6e","text":"<pre><code>%%capture --no-stderr\npip install --quiet -U langgraph langchain_anthropic\n\nimport getpass\nimport os\n\ndef _set_env(var: str):\n    if not os.environ.get(var):\n        os.environ[var] = getpass.getpass(f\"{var}: \")\n\n_set_env(\"ANTHROPIC_API_KEY\")\n</code></pre>"},{"location":"llmapps/langgraph/time%20travel/#_6","title":"\u6784\u5efa\u200b\u5de5\u4f5c\u200b\u6d41","text":"<pre><code>import uuid\nfrom typing_extensions import TypedDict, NotRequired\nfrom langgraph.graph import StateGraph, START, END\nfrom langchain.chat_models import init_chat_model\nfrom langgraph.checkpoint.memory import InMemorySaver\n\n# \u200b\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u7ed3\u6784\u200b\nclass State(TypedDict):\n    topic: NotRequired[str]\n    joke: NotRequired[str]\n\n# \u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b\nmodel = init_chat_model(\"anthropic:claude-sonnet-4-5\", temperature=0)\n\ndef generate_topic(state: State):\n    \"\"\"\u200b\u751f\u6210\u200b\u7b11\u8bdd\u200b\u4e3b\u9898\u200b\u7684\u200bLLM\u200b\u8c03\u7528\u200b\"\"\"\n    msg = model.invoke(\"\u200b\u7ed9\u200b\u6211\u200b\u4e00\u4e2a\u200b\u6709\u8da3\u200b\u7684\u200b\u7b11\u8bdd\u200b\u4e3b\u9898\u200b\")\n    return {\"topic\": msg.content}\n\ndef write_joke(state: State):\n    \"\"\"\u200b\u57fa\u4e8e\u200b\u4e3b\u9898\u200b\u5199\u200b\u7b11\u8bdd\u200b\u7684\u200bLLM\u200b\u8c03\u7528\u200b\"\"\"\n    msg = model.invoke(f\"\u200b\u5199\u200b\u4e00\u4e2a\u200b\u5173\u4e8e\u200b{state['topic']}\u200b\u7684\u200b\u77ed\u200b\u7b11\u8bdd\u200b\")\n    return {\"joke\": msg.content}\n\n# \u200b\u6784\u5efa\u200b\u5de5\u4f5c\u200b\u6d41\u200b\nworkflow = StateGraph(State)\nworkflow.add_node(\"generate_topic\", generate_topic)\nworkflow.add_node(\"write_joke\", write_joke)\nworkflow.add_edge(START, \"generate_topic\")\nworkflow.add_edge(\"generate_topic\", \"write_joke\")\nworkflow.add_edge(\"write_joke\", END)\n\n# \u200b\u7f16\u8bd1\u200b\u56fe\u200b\ncheckpointer = InMemorySaver()\ngraph = workflow.compile(checkpointer=checkpointer)\n</code></pre>"},{"location":"llmapps/langgraph/time%20travel/#_7","title":"\u6267\u884c\u200b\u65f6\u95f4\u200b\u65c5\u884c","text":"<pre><code># 1. \u200b\u9996\u6b21\u200b\u8fd0\u884c\u200b\nconfig = {\"configurable\": {\"thread_id\": uuid.uuid4()}}\nstate = graph.invoke({}, config)\nprint(\"\u200b\u539f\u59cb\u200b\u7ed3\u679c\u200b:\", state[\"joke\"])\n\n# 2. \u200b\u8bc6\u522b\u200b\u68c0\u67e5\u70b9\u200b\nstates = list(graph.get_state_history(config))\nselected_state = states[1]  # \u200b\u9009\u62e9\u200bwrite_joke\u200b\u4e4b\u524d\u200b\u7684\u200b\u68c0\u67e5\u70b9\u200b\n\n# 3. \u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\nnew_config = graph.update_state(\n    selected_state.config, \n    values={\"topic\": \"\u200b\u7a0b\u5e8f\u5458\u200b\u7684\u200b\u751f\u6d3b\u200b\"}\n)\n\n# 4. \u200b\u6062\u590d\u200b\u6267\u884c\u200b\nnew_state = graph.invoke(None, new_config)\nprint(\"\u200b\u4fee\u6539\u200b\u540e\u200b\u7684\u200b\u7ed3\u679c\u200b:\", new_state[\"joke\"])\n</code></pre>"},{"location":"llmapps/langgraph/time%20travel/#_8","title":"\u4f7f\u7528\u200b\u573a\u666f","text":""},{"location":"llmapps/langgraph/time%20travel/#_9","title":"\u8c03\u8bd5\u200b\u5206\u6790","text":"<p>\u200b\u5f53\u200b\u667a\u80fd\u200b\u4f53\u200b\u4ea7\u751f\u200b\u610f\u5916\u200b\u7ed3\u679c\u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u65f6\u95f4\u200b\u65c5\u884c\u200b\u56de\u6eaf\u5230\u200b\u5173\u952e\u200b\u51b3\u7b56\u200b\u70b9\u200b\uff0c\u200b\u5206\u6790\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b\u3002</p>"},{"location":"llmapps/langgraph/time%20travel/#_10","title":"\u65b9\u6848\u200b\u5bf9\u6bd4","text":"<p>\u200b\u4ece\u200b\u540c\u4e00\u200b\u68c0\u67e5\u70b9\u200b\u51fa\u53d1\u200b\uff0c\u200b\u5c1d\u8bd5\u200b\u4e0d\u540c\u200b\u7684\u200b\u72b6\u6001\u200b\u4fee\u6539\u200b\uff0c\u200b\u6bd4\u8f83\u200b\u591a\u79cd\u200b\u89e3\u51b3\u65b9\u6848\u200b\u7684\u200b\u6548\u679c\u200b\u3002</p>"},{"location":"llmapps/langgraph/time%20travel/#_11","title":"\u6027\u80fd\u200b\u4f18\u5316","text":"<p>\u200b\u8bc6\u522b\u200b\u6267\u884c\u200b\u74f6\u9888\u200b\uff0c\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\u6d4b\u8bd5\u200b\u66f4\u200b\u9ad8\u6548\u200b\u7684\u200b\u6267\u884c\u200b\u8def\u5f84\u200b\u3002</p>"},{"location":"llmapps/langgraph/time%20travel/#_12","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u65f6\u95f4\u200b\u65c5\u884c\u200b\u4f1a\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u6267\u884c\u200b\u5206\u652f\u200b\uff0c\u200b\u4e0d\u200b\u5f71\u54cd\u200b\u539f\u59cb\u200b\u6267\u884c\u200b\u5386\u53f2\u200b</li> <li>\u200b\u786e\u4fdd\u200b\u68c0\u67e5\u70b9\u200bID\u200b\u6b63\u786e\u200b\uff0c\u200b\u907f\u514d\u200b\u4ece\u200b\u9519\u8bef\u200b\u7684\u200b\u72b6\u6001\u200b\u6062\u590d\u200b</li> <li>\u200b\u72b6\u6001\u200b\u4fee\u6539\u200b\u5e94\u200b\u7b26\u5408\u200b\u56fe\u200b\u7684\u200b\u9884\u671f\u200b\u8f93\u5165\u200b\u683c\u5f0f\u200b</li> <li>\u200b\u5185\u5b58\u200b\u68c0\u67e5\u70b9\u200b\u9002\u7528\u200b\u4e8e\u200b\u5f00\u53d1\u200b\u73af\u5883\u200b\uff0c\u200b\u751f\u4ea7\u200b\u73af\u5883\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u6301\u4e45\u200b\u5316\u200b\u5b58\u50a8\u200b</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u65f6\u95f4\u200b\u65c5\u884c\u200b\u529f\u80fd\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u66f4\u200b\u6df1\u5165\u200b\u5730\u200b\u7406\u89e3\u200b\u548c\u200b\u4f18\u5316\u200b\u57fa\u4e8e\u200bLLM\u200b\u7684\u200b\u667a\u80fd\u200b\u4f53\u200b\u884c\u4e3a\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u7cfb\u7edf\u200b\u7684\u200b\u53ef\u9760\u6027\u200b\u548c\u200b\u6027\u80fd\u200b\u3002</p>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/","title":"LangGraph Graph API \u200b\u6559\u7a0b","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u5c06\u200b\u6f14\u793a\u200b LangGraph Graph API \u200b\u7684\u200b\u57fa\u7840\u77e5\u8bc6\u200b\uff0c\u200b\u5305\u62ec\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u3001\u200b\u5e38\u89c1\u200b\u56fe\u200b\u7ed3\u6784\u200b\uff08\u200b\u5e8f\u5217\u200b\u3001\u200b\u5206\u652f\u200b\u3001\u200b\u5faa\u73af\u200b\uff09\u200b\u7684\u200b\u6784\u5efa\u200b\uff0c\u200b\u4ee5\u53ca\u200b LangGraph \u200b\u7684\u200b\u63a7\u5236\u200b\u7279\u6027\u200b\u3002</p>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_1","title":"\u5b89\u88c5\u200b\u4e0e\u200b\u8bbe\u7f6e","text":"<p>\u200b\u9996\u5148\u200b\u5b89\u88c5\u200b <code>langgraph</code>\uff1a</p> <pre><code>pip install -U langgraph\n</code></pre> <p>\u200b\u6216\u200b\u4f7f\u7528\u200b uv\uff1a</p> <pre><code>uv add langgraph\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a\u200b\u8bbe\u7f6e\u200b LangSmith \u200b\u4ee5\u200b\u83b7\u5f97\u200b\u66f4\u597d\u200b\u7684\u200b\u8c03\u8bd5\u200b\u4f53\u9a8c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5feb\u901f\u200b\u53d1\u73b0\u200b\u5e76\u200b\u6539\u8fdb\u200b LangGraph \u200b\u9879\u76ee\u200b\u7684\u200b\u6027\u80fd\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_2","title":"\u5b9a\u4e49\u200b\u548c\u200b\u66f4\u65b0\u200b\u72b6\u6001","text":""},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_3","title":"\u5b9a\u4e49\u200b\u72b6\u6001","text":"<p>\u200b\u5728\u200b LangGraph \u200b\u4e2d\u200b\uff0c\u200b\u72b6\u6001\u200b\u53ef\u4ee5\u200b\u662f\u200b <code>TypedDict</code>\u3001<code>Pydantic</code> \u200b\u6a21\u578b\u200b\u6216\u200b\u6570\u636e\u200b\u7c7b\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u4f7f\u7528\u200b <code>TypedDict</code>\uff1a</p> <pre><code>from langchain.messages import AnyMessage\nfrom typing_extensions import TypedDict\n\nclass State(TypedDict):\n    messages: list[AnyMessage]\n    extra_field: int\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_4","title":"\u66f4\u65b0\u200b\u72b6\u6001","text":"<p>\u200b\u8282\u70b9\u200b\u662f\u200b\u8bfb\u53d6\u200b\u548c\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u7684\u200b Python \u200b\u51fd\u6570\u200b\uff1a</p> <pre><code>from langchain.messages import AIMessage\n\ndef node(state: State):\n    messages = state[\"messages\"]\n    new_message = AIMessage(\"Hello!\")\n    return {\"messages\": messages + [new_message], \"extra_field\": 10}\n</code></pre> <p>\u200b\u8b66\u544a\u200b\uff1a\u200b\u8282\u70b9\u200b\u5e94\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u6539\u53d8\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u6784\u5efa\u200b\u56fe\u200b\uff1a</p> <pre><code>from langgraph.graph import StateGraph\n\nbuilder = StateGraph(State)\nbuilder.add_node(node)\nbuilder.set_entry_point(\"node\")\ngraph = builder.compile()\n</code></pre> <p>\u200b\u53ef\u89c6\u5316\u200b\u56fe\u200b\uff1a</p> <pre><code>from IPython.display import Image, display\n\ndisplay(Image(graph.get_graph().draw_mermaid_png()))\n</code></pre> <p>\u200b\u8c03\u7528\u200b\u56fe\u200b\uff1a</p> <pre><code>from langchain.messages import HumanMessage\n\nresult = graph.invoke({\"messages\": [HumanMessage(\"Hi\")]})\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#reducers","title":"\u4f7f\u7528\u200b Reducers \u200b\u5904\u7406\u200b\u72b6\u6001\u200b\u66f4\u65b0","text":"<p>\u200b\u6bcf\u4e2a\u200b\u72b6\u6001\u200b\u952e\u200b\u53ef\u4ee5\u200b\u6709\u200b\u72ec\u7acb\u200b\u7684\u200b reducer \u200b\u51fd\u6570\u200b\u6765\u200b\u63a7\u5236\u200b\u66f4\u65b0\u200b\u5904\u7406\u200b\u65b9\u5f0f\u200b\uff1a</p> <pre><code>from typing_extensions import Annotated\n\ndef add(left, right):\n    return left + right\n\nclass State(TypedDict):\n    messages: Annotated[list[AnyMessage], add]\n    extra_field: int\n</code></pre> <p>\u200b\u73b0\u5728\u200b\u8282\u70b9\u200b\u53ef\u4ee5\u200b\u7b80\u5316\u200b\uff1a</p> <pre><code>def node(state: State):\n    new_message = AIMessage(\"Hello!\")\n    return {\"messages\": [new_message], \"extra_field\": 10}\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#messagesstate","title":"MessagesState","text":"<p>LangGraph \u200b\u5305\u542b\u200b\u5185\u7f6e\u200b\u7684\u200b <code>add_messages</code> reducer\uff1a</p> <pre><code>from langgraph.graph.message import add_messages\n\nclass State(TypedDict):\n    messages: Annotated[list[AnyMessage], add_messages]\n    extra_field: int\n</code></pre> <p>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u9884\u200b\u6784\u5efa\u200b\u7684\u200b <code>MessagesState</code>\uff1a</p> <pre><code>from langgraph.graph import MessagesState\n\nclass State(MessagesState):\n    extra_field: int\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_5","title":"\u8fd0\u884c\u200b\u65f6\u200b\u914d\u7f6e","text":"<p>\u200b\u6dfb\u52a0\u200b\u8fd0\u884c\u200b\u65f6\u200b\u914d\u7f6e\u200b\uff1a</p> <ol> <li>\u200b\u6307\u5b9a\u200b\u914d\u7f6e\u200b\u6a21\u5f0f\u200b</li> <li>\u200b\u5728\u200b\u8282\u70b9\u200b\u6216\u200b\u6761\u4ef6\u200b\u8fb9\u200b\u51fd\u6570\u200b\u7b7e\u540d\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u914d\u7f6e\u200b</li> <li>\u200b\u5c06\u200b\u914d\u7f6e\u200b\u4f20\u9012\u200b\u5230\u200b\u56fe\u200b\u4e2d\u200b</li> </ol> <pre><code>from langgraph.graph import END, StateGraph, START\nfrom langgraph.runtime import Runtime\nfrom typing_extensions import TypedDict\n\n# 1. \u200b\u6307\u5b9a\u200b\u914d\u7f6e\u200b\u6a21\u5f0f\u200b\nclass ContextSchema(TypedDict):\n    my_runtime_value: str\n\n# 2. \u200b\u5b9a\u4e49\u200b\u8bbf\u95ee\u200b\u914d\u7f6e\u200b\u7684\u200b\u56fe\u200b\nclass State(TypedDict):\n    my_state_value: str\n\ndef node(state: State, runtime: Runtime[ContextSchema]):\n    if runtime.context[\"my_runtime_value\"] == \"a\":\n        return {\"my_state_value\": 1}\n    elif runtime.context[\"my_runtime_value\"] == \"b\":\n        return {\"my_state_value\": 2}\n    else:\n        raise ValueError(\"Unknown values.\")\n\nbuilder = StateGraph(State, context_schema=ContextSchema)\nbuilder.add_node(node)\nbuilder.add_edge(START, \"node\")\nbuilder.add_edge(\"node\", END)\n\ngraph = builder.compile()\n\n# 3. \u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\u4f20\u5165\u200b\u914d\u7f6e\u200b\nprint(graph.invoke({}, context={\"my_runtime_value\": \"a\"}))\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_6","title":"\u91cd\u8bd5\u200b\u7b56\u7565","text":"<p>\u200b\u4e3a\u200b\u8282\u70b9\u200b\u6dfb\u52a0\u200b\u91cd\u8bd5\u200b\u7b56\u7565\u200b\uff1a</p> <pre><code>from langgraph.types import RetryPolicy\n\nbuilder.add_node(\n    \"node_name\",\n    node_function,\n    retry_policy=RetryPolicy(),\n)\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_7","title":"\u8282\u70b9\u200b\u7f13\u5b58","text":"<p>\u200b\u914d\u7f6e\u200b\u8282\u70b9\u200b\u7f13\u5b58\u200b\u7b56\u7565\u200b\uff1a</p> <pre><code>from langgraph.types import CachePolicy\nfrom langgraph.cache.memory import InMemoryCache\n\nbuilder.add_node(\n    \"node_name\",\n    node_function,\n    cache_policy=CachePolicy(ttl=120),\n)\n\ngraph = builder.compile(cache=InMemoryCache())\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_8","title":"\u521b\u5efa\u200b\u6b65\u9aa4\u200b\u5e8f\u5217","text":""},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_9","title":"\u57fa\u672c\u200b\u5e8f\u5217","text":"<pre><code>from langgraph.graph import START, StateGraph\n\nbuilder = StateGraph(State)\n\n# \u200b\u6dfb\u52a0\u200b\u8282\u70b9\u200b\nbuilder.add_node(step_1)\nbuilder.add_node(step_2)\nbuilder.add_node(step_3)\n\n# \u200b\u6dfb\u52a0\u200b\u8fb9\u200b\nbuilder.add_edge(START, \"step_1\")\nbuilder.add_edge(\"step_1\", \"step_2\")\nbuilder.add_edge(\"step_2\", \"step_3\")\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_10","title":"\u4f7f\u7528\u200b\u5185\u7f6e\u200b\u7b80\u5199","text":"<pre><code>builder = StateGraph(State).add_sequence([step_1, step_2, step_3])\nbuilder.add_edge(START, \"step_1\")\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_11","title":"\u521b\u5efa\u200b\u5206\u652f","text":""},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_12","title":"\u5e76\u884c\u6267\u884c\u200b\u8282\u70b9","text":"<pre><code>import operator\nfrom typing import Annotated\nfrom typing_extensions import TypedDict\nfrom langgraph.graph import StateGraph, START, END\n\nclass State(TypedDict):\n    aggregate: Annotated[list, operator.add]\n\ndef a(state: State):\n    print(f'Adding \"A\" to {state[\"aggregate\"]}')\n    return {\"aggregate\": [\"A\"]}\n\ndef b(state: State):\n    print(f'Adding \"B\" to {state[\"aggregate\"]}')\n    return {\"aggregate\": [\"B\"]}\n\ndef c(state: State):\n    print(f'Adding \"C\" to {state[\"aggregate\"]}')\n    return {\"aggregate\": [\"C\"]}\n\ndef d(state: State):\n    print(f'Adding \"D\" to {state[\"aggregate\"]}')\n    return {\"aggregate\": [\"D\"]}\n\nbuilder = StateGraph(State)\nbuilder.add_node(a)\nbuilder.add_node(b)\nbuilder.add_node(c)\nbuilder.add_node(d)\nbuilder.add_edge(START, \"a\")\nbuilder.add_edge(\"a\", \"b\")\nbuilder.add_edge(\"a\", \"c\")\nbuilder.add_edge(\"b\", \"d\")\nbuilder.add_edge(\"c\", \"d\")\nbuilder.add_edge(\"d\", END)\ngraph = builder.compile()\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_13","title":"\u6761\u4ef6\u200b\u5206\u652f","text":"<pre><code>from typing import Literal\n\ndef conditional_edge(state: State) -&gt; Literal[\"b\", \"c\"]:\n    return state[\"which\"]\n\nbuilder.add_conditional_edges(\"a\", conditional_edge)\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#map-reduce-send-api","title":"Map-Reduce \u200b\u548c\u200b Send API","text":"<p>\u200b\u4f7f\u7528\u200b Send API \u200b\u5b9e\u73b0\u200b map-reduce \u200b\u6a21\u5f0f\u200b\uff1a</p> <pre><code>from langgraph.graph import StateGraph, START, END\nfrom langgraph.types import Send\nfrom typing_extensions import TypedDict, Annotated\nimport operator\n\nclass OverallState(TypedDict):\n    topic: str\n    subjects: list[str]\n    jokes: Annotated[list[str], operator.add]\n    best_selected_joke: str\n\ndef generate_topics(state: OverallState):\n    return {\"subjects\": [\"lions\", \"elephants\", \"penguins\"]}\n\ndef generate_joke(state: OverallState):\n    joke_map = {\n        \"lions\": \"Why don't lions like fast food? Because they can't catch it!\",\n        \"elephants\": \"Why don't elephants use computers? They're afraid of the mouse!\",\n        \"penguins\": \"Why don't penguins like talking to strangers at parties? Because they find it hard to break the ice.\"\n    }\n    return {\"jokes\": [joke_map[state[\"subject\"]]]}\n\ndef continue_to_jokes(state: OverallState):\n    return [Send(\"generate_joke\", {\"subject\": s}) for s in state[\"subjects\"]]\n\nbuilder = StateGraph(OverallState)\nbuilder.add_node(\"generate_topics\", generate_topics)\nbuilder.add_node(\"generate_joke\", generate_joke)\nbuilder.add_edge(START, \"generate_topics\")\nbuilder.add_conditional_edges(\"generate_topics\", continue_to_jokes, [\"generate_joke\"])\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_14","title":"\u521b\u5efa\u200b\u548c\u200b\u63a7\u5236\u200b\u5faa\u73af","text":""},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_15","title":"\u57fa\u672c\u200b\u5faa\u73af","text":"<pre><code>import operator\nfrom typing import Annotated, Literal\nfrom typing_extensions import TypedDict\nfrom langgraph.graph import StateGraph, START, END\n\nclass State(TypedDict):\n    aggregate: Annotated[list, operator.add]\n\ndef a(state: State):\n    print(f'Node A sees {state[\"aggregate\"]}')\n    return {\"aggregate\": [\"A\"]}\n\ndef b(state: State):\n    print(f'Node B sees {state[\"aggregate\"]}')\n    return {\"aggregate\": [\"B\"]}\n\n# \u200b\u5b9a\u4e49\u200b\u8282\u70b9\u200b\nbuilder = StateGraph(State)\nbuilder.add_node(a)\nbuilder.add_node(b)\n\n# \u200b\u5b9a\u4e49\u200b\u8fb9\u200b\ndef route(state: State) -&gt; Literal[\"b\", END]:\n    if len(state[\"aggregate\"]) &lt; 7:\n        return \"b\"\n    else:\n        return END\n\nbuilder.add_edge(START, \"a\")\nbuilder.add_conditional_edges(\"a\", route)\nbuilder.add_edge(\"b\", \"a\")\ngraph = builder.compile()\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_16","title":"\u8bbe\u7f6e\u200b\u9012\u5f52\u200b\u9650\u5236","text":"<pre><code>from langgraph.errors import GraphRecursionError\n\ntry:\n    graph.invoke({\"aggregate\": []}, {\"recursion_limit\": 4})\nexcept GraphRecursionError:\n    print(\"Recursion Error\")\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_17","title":"\u5f02\u6b65\u200b\u652f\u6301","text":"<p>\u200b\u5c06\u200b\u540c\u6b65\u200b\u5b9e\u73b0\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5f02\u6b65\u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>from langchain.chat_models import init_chat_model\nfrom langgraph.graph import MessagesState, StateGraph\n\nasync def node(state: MessagesState):\n    new_message = await llm.ainvoke(state[\"messages\"])\n    return {\"messages\": [new_message]}\n\nbuilder = StateGraph(MessagesState).add_node(node).set_entry_point(\"node\")\ngraph = builder.compile()\n\ninput_message = {\"role\": \"user\", \"content\": \"Hello\"}\nresult = await graph.ainvoke({\"messages\": [input_message]})\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#command","title":"\u4f7f\u7528\u200b Command \u200b\u7ed3\u5408\u200b\u63a7\u5236\u6d41\u200b\u548c\u200b\u72b6\u6001\u200b\u66f4\u65b0","text":"<p>\u200b\u4f7f\u7528\u200b <code>Command</code> \u200b\u5bf9\u8c61\u200b\u5728\u200b\u540c\u4e00\u200b\u8282\u70b9\u200b\u4e2d\u200b\u6267\u884c\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u548c\u200b\u51b3\u5b9a\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\uff1a</p> <pre><code>import random\nfrom typing_extensions import TypedDict, Literal\nfrom langgraph.graph import StateGraph, START\nfrom langgraph.types import Command\n\nclass State(TypedDict):\n    foo: str\n\ndef node_a(state: State) -&gt; Command[Literal[\"node_b\", \"node_c\"]]:\n    print(\"Called A\")\n    value = random.choice([\"b\", \"c\"])\n    if value == \"b\":\n        goto = \"node_b\"\n    else:\n        goto = \"node_c\"\n\n    return Command(\n        update={\"foo\": value},\n        goto=goto,\n    )\n\ndef node_b(state: State):\n    print(\"Called B\")\n    return {\"foo\": state[\"foo\"] + \"b\"}\n\ndef node_c(state: State):\n    print(\"Called C\")\n    return {\"foo\": state[\"foo\"] + \"c\"}\n\nbuilder = StateGraph(State)\nbuilder.add_edge(START, \"node_a\")\nbuilder.add_node(node_a)\nbuilder.add_node(node_b)\nbuilder.add_node(node_c)\n\ngraph = builder.compile()\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#_18","title":"\u53ef\u89c6\u5316\u200b\u56fe","text":""},{"location":"llmapps/langgraph/use%20the%20graph%20api/#mermaid","title":"Mermaid \u200b\u8bed\u6cd5","text":"<pre><code>print(app.get_graph().draw_mermaid())\n</code></pre>"},{"location":"llmapps/langgraph/use%20the%20graph%20api/#png","title":"PNG \u200b\u56fe\u50cf","text":"<pre><code>from IPython.display import Image, display\n\ndisplay(Image(app.get_graph().draw_mermaid_png()))\n</code></pre> <p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u6db5\u76d6\u200b\u4e86\u200b LangGraph Graph API \u200b\u7684\u200b\u6838\u5fc3\u200b\u6982\u5ff5\u200b\uff0c\u200b\u5305\u62ec\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u3001\u200b\u5e8f\u5217\u200b\u3001\u200b\u5206\u652f\u200b\u3001\u200b\u5faa\u73af\u200b\u3001\u200b\u5f02\u6b65\u200b\u652f\u6301\u200b\u548c\u200b\u53ef\u89c6\u5316\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u57fa\u7840\u200b\u5c06\u200b\u5e2e\u52a9\u200b\u60a8\u200b\u6784\u5efa\u200b\u590d\u6742\u200b\u7684\u200b AI \u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u3002</p>"},{"location":"llmapps/langgraph/workflows%2Bagents/","title":"LangGraph \u200b\u5de5\u4f5c\u200b\u6d41\u200b\u4e0e\u200b\u667a\u80fd\u200b\u4f53\u200b\u6559\u7a0b","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u5c06\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b LangGraph \u200b\u6784\u5efa\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u548c\u200b\u667a\u80fd\u200b\u4ee3\u7406\u200b\u7cfb\u7edf\u200b\u3002</p>"},{"location":"llmapps/langgraph/workflows%2Bagents/#_1","title":"\u6982\u8ff0","text":""},{"location":"llmapps/langgraph/workflows%2Bagents/#vs","title":"\u5de5\u4f5c\u200b\u6d41\u200b vs \u200b\u667a\u80fd\u200b\u4f53","text":"<ul> <li>\u200b\u5de5\u4f5c\u200b\u6d41\u200b\uff1a\u200b\u5177\u6709\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7684\u200b\u4ee3\u7801\u200b\u8def\u5f84\u200b\uff0c\u200b\u6309\u200b\u7279\u5b9a\u200b\u987a\u5e8f\u200b\u6267\u884c\u200b</li> <li>\u200b\u667a\u80fd\u200b\u4f53\u200b\uff1a\u200b\u52a8\u6001\u200b\u7684\u200b\uff0c\u200b\u80fd\u591f\u200b\u5b9a\u4e49\u200b\u81ea\u5df1\u200b\u7684\u200b\u6d41\u7a0b\u200b\u548c\u200b\u5de5\u5177\u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b</li> </ul> <p>LangGraph \u200b\u5728\u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4f53\u200b\u548c\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u65f6\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u591a\u79cd\u200b\u4f18\u52bf\u200b\uff0c\u200b\u5305\u62ec\u200b\u6301\u4e45\u200b\u5316\u200b\u3001\u200b\u6d41\u5f0f\u200b\u5904\u7406\u200b\u548c\u200b\u8c03\u8bd5\u200b\u652f\u6301\u200b\u3002</p> <p></p>"},{"location":"llmapps/langgraph/workflows%2Bagents/#_2","title":"\u73af\u5883\u200b\u8bbe\u7f6e","text":""},{"location":"llmapps/langgraph/workflows%2Bagents/#1","title":"1. \u200b\u5b89\u88c5\u200b\u4f9d\u8d56","text":"<pre><code>pip install langchain_core langchain-anthropic langgraph\n</code></pre>"},{"location":"llmapps/langgraph/workflows%2Bagents/#2-llm","title":"2. \u200b\u521d\u59cb\u5316\u200b LLM","text":"<pre><code>import os\nimport getpass\nfrom langchain_anthropic import ChatAnthropic\n\ndef _set_env(var: str):\n    if not os.environ.get(var):\n        os.environ[var] = getpass.getpass(f\"{var}: \")\n\n_set_env(\"ANTHROPIC_API_KEY\")\n\nllm = ChatAnthropic(model=\"claude-sonnet-4-5\")\n</code></pre>"},{"location":"llmapps/langgraph/workflows%2Bagents/#llm","title":"LLM \u200b\u589e\u5f3a\u200b\u529f\u80fd","text":"<p>\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u548c\u200b\u667a\u80fd\u200b\u4f53\u200b\u7cfb\u7edf\u200b\u57fa\u4e8e\u200b LLM \u200b\u53ca\u5176\u200b\u5404\u79cd\u200b\u589e\u5f3a\u200b\u529f\u80fd\u200b\uff1a</p> <ul> <li>\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\uff1a\u200b\u8ba9\u200b LLM \u200b\u80fd\u591f\u200b\u4f7f\u7528\u200b\u5916\u90e8\u200b\u5de5\u5177\u200b</li> <li>\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\uff1a\u200b\u786e\u4fdd\u200b\u8f93\u51fa\u200b\u7b26\u5408\u200b\u9884\u5b9a\u200b\u4e49\u200b\u683c\u5f0f\u200b</li> <li>\u200b\u77ed\u671f\u200b\u8bb0\u5fc6\u200b\uff1a\u200b\u4e3a\u200b LLM \u200b\u63d0\u4f9b\u200b\u4e0a\u4e0b\u6587\u200b\u8bb0\u5fc6\u200b</li> </ul> <p></p>"},{"location":"llmapps/langgraph/workflows%2Bagents/#_3","title":"\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\u793a\u4f8b","text":"<pre><code>from pydantic import BaseModel, Field\n\nclass SearchQuery(BaseModel):\n    search_query: str = Field(None, description=\"\u200b\u4f18\u5316\u200b\u7684\u200b\u7f51\u7edc\u200b\u641c\u7d22\u200b\u67e5\u8be2\u200b\")\n    justification: str = Field(None, description=\"\u200b\u4e3a\u4ec0\u4e48\u200b\u6b64\u200b\u67e5\u8be2\u200b\u4e0e\u200b\u7528\u6237\u200b\u8bf7\u6c42\u200b\u76f8\u5173\u200b\")\n\n# \u200b\u589e\u5f3a\u200b LLM \u200b\u4ee5\u200b\u652f\u6301\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\nstructured_llm = llm.with_structured_output(SearchQuery)\n\n# \u200b\u8c03\u7528\u200b\u589e\u5f3a\u200b\u540e\u200b\u7684\u200b LLM\noutput = structured_llm.invoke(\"\u200b\u9499\u200b CT \u200b\u8bc4\u5206\u200b\u4e0e\u200b\u9ad8\u200b\u80c6\u56fa\u9187\u200b\u6709\u200b\u4ec0\u4e48\u200b\u5173\u7cfb\u200b\uff1f\")\n</code></pre>"},{"location":"llmapps/langgraph/workflows%2Bagents/#_4","title":"\u5de5\u5177\u200b\u8c03\u7528\u200b\u793a\u4f8b","text":"<pre><code># \u200b\u5b9a\u4e49\u200b\u5de5\u5177\u200b\ndef multiply(a: int, b: int) -&gt; int:\n    return a * b\n\n# \u200b\u4e3a\u200b LLM \u200b\u7ed1\u5b9a\u200b\u5de5\u5177\u200b\nllm_with_tools = llm.bind_tools([multiply])\n\n# \u200b\u8c03\u7528\u200b LLM\nmsg = llm_with_tools.invoke(\"2 \u200b\u4e58\u4ee5\u200b 3 \u200b\u7b49\u4e8e\u200b\u591a\u5c11\u200b\uff1f\")\n\n# \u200b\u83b7\u53d6\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\nprint(msg.tool_calls)\n</code></pre>"},{"location":"llmapps/langgraph/workflows%2Bagents/#_5","title":"\u5de5\u4f5c\u200b\u6d41\u200b\u6a21\u5f0f","text":""},{"location":"llmapps/langgraph/workflows%2Bagents/#1-prompt-chaining","title":"1. \u200b\u63d0\u793a\u200b\u94fe\u200b (Prompt Chaining)","text":"<p>\u200b\u63d0\u793a\u200b\u94fe\u200b\u662f\u200b\u6307\u200b\u6bcf\u4e2a\u200b LLM \u200b\u8c03\u7528\u200b\u5904\u7406\u200b\u524d\u200b\u4e00\u4e2a\u200b\u8c03\u7528\u200b\u7684\u200b\u8f93\u51fa\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u53ef\u4ee5\u200b\u5206\u89e3\u200b\u4e3a\u200b\u8f83\u200b\u5c0f\u200b\u3001\u200b\u53ef\u9a8c\u8bc1\u200b\u6b65\u9aa4\u200b\u7684\u200b\u4efb\u52a1\u200b\u3002</p> <p>\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\uff1a - \u200b\u5c06\u200b\u6587\u6863\u200b\u7ffb\u8bd1\u6210\u200b\u4e0d\u540c\u200b\u8bed\u8a00\u200b - \u200b\u9a8c\u8bc1\u200b\u751f\u6210\u200b\u5185\u5bb9\u200b\u7684\u200b\u4e00\u81f4\u6027\u200b</p> <p></p>"},{"location":"llmapps/langgraph/workflows%2Bagents/#graph-api","title":"Graph API \u200b\u5b9e\u73b0","text":"<pre><code>from typing_extensions import TypedDict\nfrom langgraph.graph import StateGraph, START, END\n\n# \u200b\u56fe\u200b\u72b6\u6001\u200b\u5b9a\u4e49\u200b\nclass State(TypedDict):\n    topic: str\n    joke: str\n    improved_joke: str\n    final_joke: str\n\n# \u200b\u8282\u70b9\u200b\u51fd\u6570\u200b\ndef generate_joke(state: State):\n    \"\"\"\u200b\u751f\u6210\u200b\u521d\u59cb\u200b\u7b11\u8bdd\u200b\"\"\"\n    msg = llm.invoke(f\"\u200b\u5199\u200b\u4e00\u4e2a\u200b\u5173\u4e8e\u200b {state['topic']} \u200b\u7684\u200b\u77ed\u200b\u7b11\u8bdd\u200b\")\n    return {\"joke\": msg.content}\n\ndef check_punchline(state: State):\n    \"\"\"\u200b\u68c0\u67e5\u200b\u7b11\u8bdd\u200b\u662f\u5426\u200b\u6709\u200b\u7b11\u200b\u70b9\u200b\"\"\"\n    if \"?\" in state[\"joke\"] or \"!\" in state[\"joke\"]:\n        return \"Pass\"\n    return \"Fail\"\n\ndef improve_joke(state: State):\n    \"\"\"\u200b\u6539\u8fdb\u200b\u7b11\u8bdd\u200b\"\"\"\n    msg = llm.invoke(f\"\u200b\u901a\u8fc7\u200b\u6dfb\u52a0\u200b\u6587\u5b57\u6e38\u620f\u200b\u8ba9\u200b\u8fd9\u4e2a\u200b\u7b11\u8bdd\u200b\u66f4\u200b\u6709\u8da3\u200b\uff1a{state['joke']}\")\n    return {\"improved_joke\": msg.content}\n\ndef polish_joke(state: State):\n    \"\"\"\u200b\u6700\u7ec8\u200b\u6da6\u8272\u200b\"\"\"\n    msg = llm.invoke(f\"\u200b\u4e3a\u200b\u8fd9\u4e2a\u200b\u7b11\u8bdd\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u610f\u60f3\u4e0d\u5230\u200b\u7684\u200b\u8f6c\u6298\u200b\uff1a{state['improved_joke']}\")\n    return {\"final_joke\": msg.content}\n\n# \u200b\u6784\u5efa\u200b\u5de5\u4f5c\u200b\u6d41\u200b\nworkflow = StateGraph(State)\nworkflow.add_node(\"generate_joke\", generate_joke)\nworkflow.add_node(\"improve_joke\", improve_joke)\nworkflow.add_node(\"polish_joke\", polish_joke)\n\n# \u200b\u6dfb\u52a0\u200b\u8fb9\u200b\u8fde\u63a5\u200b\u8282\u70b9\u200b\nworkflow.add_edge(START, \"generate_joke\")\nworkflow.add_conditional_edges(\n    \"generate_joke\", check_punchline, {\"Fail\": \"improve_joke\", \"Pass\": END}\n)\nworkflow.add_edge(\"improve_joke\", \"polish_joke\")\nworkflow.add_edge(\"polish_joke\", END)\n\n# \u200b\u7f16\u8bd1\u200b\u5e76\u200b\u6267\u884c\u200b\nchain = workflow.compile()\nstate = chain.invoke({\"topic\": \"\u200b\u732b\u200b\"})\n</code></pre>"},{"location":"llmapps/langgraph/workflows%2Bagents/#2-parallelization","title":"2. \u200b\u5e76\u884c\u200b\u5316\u200b (Parallelization)","text":"<p>\u200b\u5e76\u884c\u200b\u5316\u8ba9\u200b LLM \u200b\u540c\u65f6\u200b\u5904\u7406\u200b\u4efb\u52a1\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u63d0\u9ad8\u200b\u901f\u5ea6\u200b\u6216\u200b\u589e\u52a0\u200b\u8f93\u51fa\u200b\u7f6e\u4fe1\u5ea6\u200b\u3002</p> <p>\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\uff1a - \u200b\u540c\u65f6\u200b\u5904\u7406\u200b\u591a\u4e2a\u200b\u72ec\u7acb\u200b\u5b50\u200b\u4efb\u52a1\u200b - \u200b\u591a\u6b21\u200b\u8fd0\u884c\u200b\u540c\u4e00\u200b\u4efb\u52a1\u200b\u4ee5\u200b\u68c0\u67e5\u200b\u4e0d\u540c\u200b\u8f93\u51fa\u200b</p> <p></p>"},{"location":"llmapps/langgraph/workflows%2Bagents/#graph-api_1","title":"Graph API \u200b\u5b9e\u73b0","text":"<pre><code>class State(TypedDict):\n    topic: str\n    joke: str\n    story: str\n    poem: str\n    combined_output: str\n\ndef call_llm_1(state: State):\n    msg = llm.invoke(f\"\u200b\u5199\u200b\u4e00\u4e2a\u200b\u5173\u4e8e\u200b {state['topic']} \u200b\u7684\u200b\u7b11\u8bdd\u200b\")\n    return {\"joke\": msg.content}\n\ndef call_llm_2(state: State):\n    msg = llm.invoke(f\"\u200b\u5199\u200b\u4e00\u4e2a\u200b\u5173\u4e8e\u200b {state['topic']} \u200b\u7684\u200b\u6545\u4e8b\u200b\")\n    return {\"story\": msg.content}\n\ndef call_llm_3(state: State):\n    msg = llm.invoke(f\"\u200b\u5199\u200b\u4e00\u9996\u200b\u5173\u4e8e\u200b {state['topic']} \u200b\u7684\u200b\u8bd7\u200b\")\n    return {\"poem\": msg.content}\n\ndef aggregator(state: State):\n    combined = f\"\u200b\u8fd9\u662f\u200b\u5173\u4e8e\u200b {state['topic']} \u200b\u7684\u200b\u6545\u4e8b\u200b\u3001\u200b\u7b11\u8bdd\u200b\u548c\u200b\u8bd7\u6b4c\u200b\uff01\\n\\n\"\n    combined += f\"\u200b\u6545\u4e8b\u200b\uff1a\\n{state['story']}\\n\\n\"\n    combined += f\"\u200b\u7b11\u8bdd\u200b\uff1a\\n{state['joke']}\\n\\n\"\n    combined += f\"\u200b\u8bd7\u6b4c\u200b\uff1a\\n{state['poem']}\"\n    return {\"combined_output\": combined}\n\n# \u200b\u6784\u5efa\u200b\u5e76\u884c\u200b\u5de5\u4f5c\u200b\u6d41\u200b\nparallel_builder = StateGraph(State)\nparallel_builder.add_node(\"call_llm_1\", call_llm_1)\nparallel_builder.add_node(\"call_llm_2\", call_llm_2)\nparallel_builder.add_node(\"call_llm_3\", call_llm_3)\nparallel_builder.add_node(\"aggregator\", aggregator)\n\n# \u200b\u8bbe\u7f6e\u200b\u5e76\u884c\u6267\u884c\u200b\u8def\u5f84\u200b\nparallel_builder.add_edge(START, \"call_llm_1\")\nparallel_builder.add_edge(START, \"call_llm_2\")\nparallel_builder.add_edge(START, \"call_llm_3\")\nparallel_builder.add_edge(\"call_llm_1\", \"aggregator\")\nparallel_builder.add_edge(\"call_llm_2\", \"aggregator\")\nparallel_builder.add_edge(\"call_llm_3\", \"aggregator\")\nparallel_builder.add_edge(\"aggregator\", END)\n\nparallel_workflow = parallel_builder.compile()\n</code></pre>"},{"location":"llmapps/langgraph/workflows%2Bagents/#3-routing","title":"3. \u200b\u8def\u7531\u200b (Routing)","text":"<p>\u200b\u8def\u7531\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u5904\u7406\u200b\u8f93\u5165\u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u5b9a\u5411\u200b\u5230\u200b\u7279\u5b9a\u200b\u4efb\u52a1\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u590d\u6742\u200b\u4efb\u52a1\u200b\u7684\u200b\u4e13\u95e8\u200b\u6d41\u7a0b\u200b\u3002</p> <p></p>"},{"location":"llmapps/langgraph/workflows%2Bagents/#graph-api_2","title":"Graph API \u200b\u5b9e\u73b0","text":"<pre><code>from typing_extensions import Literal\nfrom pydantic import BaseModel, Field\nfrom langchain.messages import HumanMessage, SystemMessage\n\nclass Route(BaseModel):\n    step: Literal[\"poem\", \"story\", \"joke\"] = Field(\n        None, description=\"\u200b\u8def\u7531\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u4e0b\u200b\u4e00\u6b65\u200b\"\n    )\n\n# \u200b\u589e\u5f3a\u200b LLM \u200b\u4ee5\u200b\u652f\u6301\u200b\u8def\u7531\u200b\u51b3\u7b56\u200b\nrouter = llm.with_structured_output(Route)\n\nclass State(TypedDict):\n    input: str\n    decision: str\n    output: str\n\ndef llm_call_router(state: State):\n    \"\"\"\u200b\u8def\u7531\u200b\u8f93\u5165\u200b\u5230\u200b\u9002\u5f53\u200b\u7684\u200b\u8282\u70b9\u200b\"\"\"\n    decision = router.invoke([\n        SystemMessage(content=\"\u200b\u6839\u636e\u200b\u7528\u6237\u200b\u8bf7\u6c42\u200b\u5c06\u200b\u8f93\u5165\u200b\u8def\u7531\u200b\u5230\u200b\u6545\u4e8b\u200b\u3001\u200b\u7b11\u8bdd\u200b\u6216\u200b\u8bd7\u6b4c\u200b\u3002\"),\n        HumanMessage(content=state[\"input\"])\n    ])\n    return {\"decision\": decision.step}\n\ndef route_decision(state: State):\n    if state[\"decision\"] == \"story\":\n        return \"llm_call_1\"\n    elif state[\"decision\"] == \"joke\":\n        return \"llm_call_2\"\n    elif state[\"decision\"] == \"poem\":\n        return \"llm_call_3\"\n</code></pre>"},{"location":"llmapps/langgraph/workflows%2Bagents/#4-orchestrator-worker","title":"4. \u200b\u7f16\u6392\u200b\u5668\u200b-\u200b\u5de5\u4f5c\u8005\u200b (Orchestrator-Worker)","text":"<p>\u200b\u5728\u200b\u8fd9\u79cd\u200b\u914d\u7f6e\u200b\u4e2d\u200b\uff0c\u200b\u7f16\u6392\u200b\u5668\u200b\u5206\u89e3\u200b\u4efb\u52a1\u200b\u3001\u200b\u59d4\u6d3e\u200b\u5b50\u200b\u4efb\u52a1\u200b\u7ed9\u200b\u5de5\u4f5c\u8005\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5de5\u4f5c\u8005\u200b\u8f93\u51fa\u200b\u5408\u6210\u200b\u4e3a\u200b\u6700\u7ec8\u200b\u7ed3\u679c\u200b\u3002</p> <p></p>"},{"location":"llmapps/langgraph/workflows%2Bagents/#send-api","title":"\u4f7f\u7528\u200b Send API \u200b\u5b9e\u73b0","text":"<pre><code>from langgraph.types import Send\nfrom typing import Annotated, List\nimport operator\n\nclass Section(BaseModel):\n    name: str = Field(description=\"\u200b\u62a5\u544a\u200b\u90e8\u5206\u200b\u7684\u200b\u540d\u79f0\u200b\")\n    description: str = Field(description=\"\u200b\u672c\u8282\u200b\u8981\u200b\u6db5\u76d6\u200b\u7684\u200b\u4e3b\u8981\u200b\u4e3b\u9898\u200b\u548c\u200b\u6982\u5ff5\u200b\u7684\u200b\u7b80\u8981\u200b\u6982\u8ff0\u200b\")\n\nclass Sections(BaseModel):\n    sections: List[Section] = Field(description=\"\u200b\u62a5\u544a\u200b\u7684\u200b\u5404\u200b\u90e8\u5206\u200b\")\n\nplanner = llm.with_structured_output(Sections)\n\nclass State(TypedDict):\n    topic: str\n    sections: list[Section]\n    completed_sections: Annotated[list, operator.add]\n    final_report: str\n\nclass WorkerState(TypedDict):\n    section: Section\n    completed_sections: Annotated[list, operator.add]\n\ndef orchestrator(state: State):\n    \"\"\"\u200b\u7f16\u6392\u200b\u5668\u200b\u751f\u6210\u200b\u62a5\u544a\u200b\u8ba1\u5212\u200b\"\"\"\n    report_sections = planner.invoke([\n        SystemMessage(content=\"\u200b\u751f\u6210\u200b\u62a5\u544a\u200b\u8ba1\u5212\u200b\u3002\"),\n        HumanMessage(content=f\"\u200b\u8fd9\u662f\u200b\u62a5\u544a\u200b\u4e3b\u9898\u200b\uff1a{state['topic']}\")\n    ])\n    return {\"sections\": report_sections.sections}\n\ndef llm_call(state: WorkerState):\n    \"\"\"\u200b\u5de5\u4f5c\u8005\u200b\u7f16\u5199\u200b\u62a5\u544a\u200b\u90e8\u5206\u200b\"\"\"\n    section = llm.invoke([\n        SystemMessage(content=\"\u200b\u6309\u7167\u200b\u63d0\u4f9b\u200b\u7684\u200b\u540d\u79f0\u200b\u548c\u200b\u63cf\u8ff0\u200b\u7f16\u5199\u200b\u62a5\u544a\u200b\u90e8\u5206\u200b\u3002\"),\n        HumanMessage(content=f\"\u200b\u8fd9\u662f\u200b\u90e8\u5206\u200b\u540d\u79f0\u200b\uff1a{state['section'].name} \u200b\u548c\u200b\u63cf\u8ff0\u200b\uff1a{state['section'].description}\")\n    ])\n    return {\"completed_sections\": [section.content]}\n\ndef assign_workers(state: State):\n    \"\"\"\u200b\u4e3a\u200b\u8ba1\u5212\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u90e8\u5206\u200b\u5206\u914d\u200b\u5de5\u4f5c\u8005\u200b\"\"\"\n    return [Send(\"llm_call\", {\"section\": s}) for s in state[\"sections\"]]\n</code></pre>"},{"location":"llmapps/langgraph/workflows%2Bagents/#5-evaluator-optimizer","title":"5. \u200b\u8bc4\u4f30\u5668\u200b-\u200b\u4f18\u5316\u200b\u5668\u200b (Evaluator-Optimizer)","text":"<p>\u200b\u5728\u200b\u8fd9\u79cd\u200b\u5de5\u4f5c\u200b\u6d41\u4e2d\u200b\uff0c\u200b\u4e00\u4e2a\u200b LLM \u200b\u8c03\u7528\u200b\u521b\u5efa\u200b\u54cd\u5e94\u200b\uff0c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u8bc4\u4f30\u200b\u8be5\u200b\u54cd\u5e94\u200b\u3002\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u6539\u8fdb\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u53cd\u9988\u200b\u5e76\u200b\u91cd\u65b0\u200b\u521b\u5efa\u200b\u54cd\u5e94\u200b\u3002</p> <p></p>"},{"location":"llmapps/langgraph/workflows%2Bagents/#graph-api_3","title":"Graph API \u200b\u5b9e\u73b0","text":"<pre><code>class Feedback(BaseModel):\n    grade: Literal[\"funny\", \"not funny\"] = Field(description=\"\u200b\u51b3\u5b9a\u200b\u7b11\u8bdd\u200b\u662f\u5426\u200b\u6709\u8da3\u200b\")\n    feedback: str = Field(description=\"\u200b\u5982\u679c\u200b\u7b11\u8bdd\u200b\u4e0d\u597d\u200b\u7b11\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u6539\u8fdb\u200b\u53cd\u9988\u200b\")\n\nevaluator = llm.with_structured_output(Feedback)\n\nclass State(TypedDict):\n    joke: str\n    topic: str\n    feedback: str\n    funny_or_not: str\n\ndef llm_call_generator(state: State):\n    \"\"\"LLM \u200b\u751f\u6210\u200b\u7b11\u8bdd\u200b\"\"\"\n    if state.get(\"feedback\"):\n        msg = llm.invoke(f\"\u200b\u5199\u200b\u4e00\u4e2a\u200b\u5173\u4e8e\u200b {state['topic']} \u200b\u7684\u200b\u7b11\u8bdd\u200b\uff0c\u200b\u4f46\u200b\u8981\u200b\u8003\u8651\u200b\u53cd\u9988\u200b\uff1a{state['feedback']}\")\n    else:\n        msg = llm.invoke(f\"\u200b\u5199\u200b\u4e00\u4e2a\u200b\u5173\u4e8e\u200b {state['topic']} \u200b\u7684\u200b\u7b11\u8bdd\u200b\")\n    return {\"joke\": msg.content}\n\ndef llm_call_evaluator(state: State):\n    \"\"\"LLM \u200b\u8bc4\u4f30\u200b\u7b11\u8bdd\u200b\"\"\"\n    grade = evaluator.invoke(f\"\u200b\u8bc4\u4ef7\u200b\u8fd9\u4e2a\u200b\u7b11\u8bdd\u200b\uff1a{state['joke']}\")\n    return {\"funny_or_not\": grade.grade, \"feedback\": grade.feedback}\n\ndef route_joke(state: State):\n    \"\"\"\u200b\u6839\u636e\u200b\u8bc4\u4f30\u5668\u200b\u53cd\u9988\u200b\u8def\u7531\u200b\u56de\u200b\u7b11\u8bdd\u200b\u751f\u6210\u5668\u200b\u6216\u200b\u7ed3\u675f\u200b\"\"\"\n    if state[\"funny_or_not\"] == \"funny\":\n        return \"Accepted\"\n    elif state[\"funny_or_not\"] == \"not funny\":\n        return \"Rejected + Feedback\"\n</code></pre>"},{"location":"llmapps/langgraph/workflows%2Bagents/#agents","title":"\u667a\u80fd\u200b\u4f53\u200b (Agents)","text":"<p>\u200b\u667a\u80fd\u200b\u4f53\u200b\u901a\u5e38\u200b\u662f\u200b\u4f7f\u7528\u200b\u5de5\u5177\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\u7684\u200b LLM\uff0c\u200b\u5728\u200b\u8fde\u7eed\u200b\u53cd\u9988\u200b\u5faa\u73af\u200b\u4e2d\u200b\u8fd0\u884c\u200b\uff0c\u200b\u7528\u4e8e\u200b\u95ee\u9898\u200b\u548c\u200b\u89e3\u51b3\u65b9\u6848\u200b\u4e0d\u53ef\u200b\u9884\u6d4b\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p> <p></p>"},{"location":"llmapps/langgraph/workflows%2Bagents/#_6","title":"\u5de5\u5177\u200b\u5b9a\u4e49","text":"<pre><code>from langchain.tools import tool\n\n@tool\ndef multiply(a: int, b: int) -&gt; int:\n    \"\"\"\u200b\u5c06\u200b `a` \u200b\u548c\u200b `b` \u200b\u76f8\u4e58\u200b\"\"\"\n    return a * b\n\n@tool\ndef add(a: int, b: int) -&gt; int:\n    \"\"\"\u200b\u5c06\u200b `a` \u200b\u548c\u200b `b` \u200b\u76f8\u52a0\u200b\"\"\"\n    return a + b\n\n@tool\ndef divide(a: int, b: int) -&gt; float:\n    \"\"\"\u200b\u5c06\u200b `a` \u200b\u9664\u4ee5\u200b `b`\"\"\"\n    return a / b\n\n# \u200b\u4e3a\u200b LLM \u200b\u7ed1\u5b9a\u200b\u5de5\u5177\u200b\ntools = [add, multiply, divide]\ntools_by_name = {tool.name: tool for tool in tools}\nllm_with_tools = llm.bind_tools(tools)\n</code></pre>"},{"location":"llmapps/langgraph/workflows%2Bagents/#graph-api_4","title":"Graph API \u200b\u5b9e\u73b0\u200b\u667a\u80fd\u200b\u4f53","text":"<pre><code>from langgraph.graph import MessagesState\nfrom langchain.messages import SystemMessage, HumanMessage, ToolMessage\n\ndef llm_call(state: MessagesState):\n    \"\"\"LLM \u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\"\"\"\n    return {\n        \"messages\": [\n            llm_with_tools.invoke([\n                SystemMessage(content=\"\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6709\u200b\u5e2e\u52a9\u200b\u7684\u200b\u52a9\u624b\u200b\uff0c\u200b\u8d1f\u8d23\u200b\u5bf9\u200b\u4e00\u7ec4\u200b\u8f93\u5165\u200b\u6267\u884c\u200b\u7b97\u672f\u200b\u8fd0\u7b97\u200b\u3002\")\n            ] + state[\"messages\"])\n        ]\n    }\n\ndef tool_node(state: dict):\n    \"\"\"\u200b\u6267\u884c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\"\"\"\n    result = []\n    for tool_call in state[\"messages\"][-1].tool_calls:\n        tool = tools_by_name[tool_call[\"name\"]]\n        observation = tool.invoke(tool_call[\"args\"])\n        result.append(ToolMessage(content=observation, tool_call_id=tool_call[\"id\"]))\n    return {\"messages\": result}\n\ndef should_continue(state: MessagesState) -&gt; Literal[\"tool_node\", END]:\n    \"\"\"\u200b\u6839\u636e\u200b LLM \u200b\u662f\u5426\u200b\u8fdb\u884c\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u6765\u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u7ee7\u7eed\u200b\u5faa\u73af\u200b\"\"\"\n    messages = state[\"messages\"]\n    last_message = messages[-1]\n\n    if last_message.tool_calls:\n        return \"tool_node\"\n    return END\n\n# \u200b\u6784\u5efa\u200b\u667a\u80fd\u200b\u4f53\u200b\nagent_builder = StateGraph(MessagesState)\nagent_builder.add_node(\"llm_call\", llm_call)\nagent_builder.add_node(\"tool_node\", tool_node)\n\nagent_builder.add_edge(START, \"llm_call\")\nagent_builder.add_conditional_edges(\"llm_call\", should_continue, [\"tool_node\", END])\nagent_builder.add_edge(\"tool_node\", \"llm_call\")\n\nagent = agent_builder.compile()\n</code></pre>"},{"location":"llmapps/langgraph/workflows%2Bagents/#_7","title":"\u603b\u7ed3","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u4ecb\u7ecd\u200b\u4e86\u200b LangGraph \u200b\u4e2d\u200b\u7684\u200b\u4e3b\u8981\u200b\u5de5\u4f5c\u200b\u6d41\u200b\u548c\u200b\u667a\u80fd\u200b\u4f53\u200b\u6a21\u5f0f\u200b\uff1a</p> <ol> <li>\u200b\u63d0\u793a\u200b\u94fe\u200b\uff1a\u200b\u987a\u5e8f\u200b\u6267\u884c\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u53ef\u5206\u89e3\u200b\u4efb\u52a1\u200b</li> <li>\u200b\u5e76\u884c\u200b\u5316\u200b\uff1a\u200b\u540c\u65f6\u200b\u6267\u884c\u200b\uff0c\u200b\u63d0\u9ad8\u6548\u7387\u200b</li> <li>\u200b\u8def\u7531\u200b\uff1a\u200b\u6839\u636e\u200b\u8f93\u5165\u200b\u5b9a\u5411\u200b\u5230\u200b\u7279\u5b9a\u200b\u4efb\u52a1\u200b</li> <li>\u200b\u7f16\u6392\u200b\u5668\u200b-\u200b\u5de5\u4f5c\u8005\u200b\uff1a\u200b\u52a8\u6001\u200b\u4efb\u52a1\u200b\u5206\u89e3\u200b\u548c\u200b\u5206\u914d\u200b</li> <li>\u200b\u8bc4\u4f30\u5668\u200b-\u200b\u4f18\u5316\u200b\u5668\u200b\uff1a\u200b\u8fed\u4ee3\u200b\u6539\u8fdb\u200b\u8f93\u51fa\u200b\u8d28\u91cf\u200b</li> <li>\u200b\u667a\u80fd\u200b\u4f53\u200b\uff1a\u200b\u81ea\u4e3b\u200b\u51b3\u7b56\u200b\u548c\u200b\u5de5\u5177\u200b\u4f7f\u7528\u200b</li> </ol> <p>\u200b\u6bcf\u79cd\u200b\u6a21\u5f0f\u200b\u90fd\u200b\u6709\u200b\u5176\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff0c\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u6a21\u5f0f\u200b\u53d6\u51b3\u4e8e\u200b\u5177\u4f53\u4efb\u52a1\u200b\u7684\u200b\u9700\u6c42\u200b\u548c\u200b\u590d\u6742\u6027\u200b\u3002LangGraph \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u7075\u6d3b\u200b\u7684\u200b API \u200b\u6765\u200b\u6784\u5efa\u200b\u8fd9\u4e9b\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u65e0\u8bba\u662f\u200b\u4f7f\u7528\u200b Graph API \u200b\u8fd8\u662f\u200b Functional API\u3002</p>"},{"location":"machine/interview/","title":"\u673a\u5668\u200b\u5b66\u4e60\u200b\u9762\u8bd5\u9898","text":""},{"location":"machine/interview/#_2","title":"\u4e00\u200b\u3001\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u6a21\u578b","text":""},{"location":"machine/interview/#11","title":"1.1 \u200b\u6709\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\u6a21\u578b","text":"<p>\u200b\u6709\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u662f\u200b\u4e00\u79cd\u200b\u5229\u7528\u200b\u5df2\u77e5\u200b\u6807\u7b7e\u200b\u7684\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u6765\u200b\u5b66\u4e60\u200b\u8f93\u5165\u200b\u4e0e\u200b\u8f93\u51fa\u200b\u4e4b\u95f4\u200b\u6620\u5c04\u200b\u5173\u7cfb\u200b\u7684\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5176\u200b\u6838\u5fc3\u200b\u5728\u4e8e\u200b\u901a\u8fc7\u200b\u8bad\u7ec3\u200b\u96c6\u4e2d\u200b\u7684\u200b\u8f93\u5165\u200b\u7279\u5f81\u200b\u548c\u200b\u5bf9\u5e94\u200b\u6807\u7b7e\u200b\u6765\u200b\u8c03\u6574\u200b\u6a21\u578b\u200b\u53c2\u6570\u200b\uff0c\u200b\u4ece\u800c\u200b\u5b9e\u73b0\u200b\u5bf9\u200b\u65b0\u200b\u6570\u636e\u200b\u7684\u200b\u51c6\u786e\u200b\u9884\u6d4b\u200b\u3002\u200b\u8be5\u200b\u6a21\u578b\u200b\u4e3b\u8981\u200b\u5e94\u7528\u200b\u4e8e\u200b\u5206\u7c7b\u200b\u548c\u200b\u56de\u5f52\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5176\u4e2d\u200b\u5206\u7c7b\u200b\u7528\u4e8e\u200b\u5c06\u200b\u6570\u636e\u200b\u5206\u914d\u200b\u5230\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7c7b\u522b\u200b\uff0c\u200b\u56de\u5f52\u200b\u5219\u200b\u7528\u4e8e\u200b\u9884\u6d4b\u200b\u8fde\u7eed\u200b\u6570\u503c\u200b\u3002</p> <p>\u200b\u4e3b\u8981\u200b\u7b97\u6cd5\u200b\u53ca\u200b\u7279\u70b9\u200b</p> \u200b\u7b97\u6cd5\u200b \u200b\u6838\u5fc3\u200b\u539f\u7406\u200b \u200b\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u652f\u6301\u200b\u5411\u91cf\u200b\u673a\u200b(SVM) \u200b\u5bfb\u627e\u200b\u6700\u4f18\u200b\u51b3\u7b56\u200b\u8fb9\u754c\u200b\u4ee5\u200b\u6700\u5927\u5316\u200b\u7c7b\u522b\u200b\u95f4\u9694\u200b \u200b\u5728\u200b\u9ad8\u200b\u7ef4\u7a7a\u95f4\u200b\u8868\u73b0\u200b\u826f\u597d\u200b\uff0c\u200b\u9002\u5408\u200b\u5c0f\u200b\u6837\u672c\u200b\u6570\u636e\u200b \u200b\u5bf9\u200b\u5927\u89c4\u6a21\u200b\u6570\u636e\u200b\u8bad\u7ec3\u200b\u65f6\u95f4\u200b\u957f\u200b\uff0c\u200b\u5bf9\u200b\u7f3a\u5931\u200b\u6570\u636e\u200b\u654f\u611f\u200b \u200b\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u200b(ANN) \u200b\u6a21\u62df\u200b\u4eba\u8111\u200b\u795e\u7ecf\u5143\u200b\u5de5\u4f5c\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u901a\u8fc7\u200b\u591a\u5c42\u200b\u7ed3\u6784\u200b\u5904\u7406\u200b\u975e\u7ebf\u6027\u200b\u5173\u7cfb\u200b \u200b\u5f3a\u5927\u200b\u7684\u200b\u975e\u7ebf\u6027\u200b\u5efa\u6a21\u200b\u80fd\u529b\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u590d\u6742\u200b\u95ee\u9898\u200b \u200b\u8bad\u7ec3\u200b\u65f6\u95f4\u200b\u957f\u200b\uff0c\u200b\u6613\u8fc7\u200b\u62df\u5408\u200b\uff0c\u200b\u5bf9\u200b\u53c2\u6570\u200b\u654f\u611f\u200b \u200b\u51b3\u7b56\u6811\u200b(DT) \u200b\u901a\u8fc7\u200b\u6811\u5f62\u200b\u7ed3\u6784\u200b\u8fdb\u884c\u200b\u7279\u5f81\u200b\u5212\u5206\u200b \u200b\u6613\u4e8e\u200b\u7406\u89e3\u200b\u548c\u200b\u89e3\u91ca\u200b\uff0c\u200b\u53ef\u200b\u5904\u7406\u200b\u6570\u503c\u200b\u548c\u200b\u7c7b\u522b\u200b\u6570\u636e\u200b \u200b\u6613\u8fc7\u200b\u62df\u5408\u200b\uff0c\u200b\u5bf9\u200b\u6570\u636e\u200b\u53d8\u5316\u200b\u654f\u611f\u200b \u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b(NB) \u200b\u57fa\u4e8e\u200b\u8d1d\u53f6\u65af\u200b\u5b9a\u7406\u200b\u7684\u200b\u7c7b\u200b\u6761\u4ef6\u200b\u72ec\u7acb\u6027\u200b\u5047\u8bbe\u200b \u200b\u8ba1\u7b97\u200b\u6548\u7387\u9ad8\u200b\uff0c\u200b\u9002\u5408\u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b \u200b\u7279\u5f81\u200b\u72ec\u7acb\u6027\u200b\u5047\u8bbe\u200b\u5728\u200b\u73b0\u5b9e\u200b\u4e2d\u200b\u5f80\u5f80\u200b\u4e0d\u200b\u6210\u7acb\u200b K\u200b\u8fd1\u90bb\u200b(KNN) \u200b\u57fa\u4e8e\u200b\u8ddd\u79bb\u200b\u5ea6\u91cf\u200b\u627e\u5230\u200b\u6700\u8fd1\u200b\u7684\u200bK\u200b\u4e2a\u200b\u8bad\u7ec3\u6837\u672c\u200b\u8fdb\u884c\u200b\u5206\u7c7b\u200b \u200b\u7b80\u5355\u200b\u6613\u61c2\u200b\uff0c\u200b\u65e0\u9700\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b \u200b\u5bf9\u200bK\u200b\u503c\u200b\u9009\u62e9\u200b\u654f\u611f\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u91cf\u200b\u5927\u200b <p></p>"},{"location":"machine/interview/#12","title":"1.2 \u200b\u65e0\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\u6a21\u578b","text":"<p>\u200b\u65e0\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u662f\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u7684\u200b\u91cd\u8981\u200b\u5206\u652f\u200b\uff0c\u200b\u5176\u200b\u6838\u5fc3\u200b\u5728\u4e8e\u200b\u76f4\u63a5\u200b\u4ece\u672a\u200b\u6807\u8bb0\u200b\u7684\u200b\u6570\u636e\u200b\u4e2d\u200b\u6316\u6398\u200b\u6f5c\u5728\u200b\u7ed3\u6784\u200b\u4e0e\u200b\u5185\u5728\u200b\u89c4\u5f8b\u200b\uff0c\u200b\u65e0\u9700\u200b\u4eba\u5de5\u200b\u6807\u6ce8\u200b\u6807\u7b7e\u200b\u3002 \u200b\u8be5\u200b\u6a21\u578b\u200b\u4e3b\u8981\u200b\u4efb\u52a1\u200b\u5305\u62ec\u200b\u805a\u7c7b\u5206\u6790\u200b\u3001\u200b\u964d\u7ef4\u200b\u5904\u7406\u200b\u3001\u200b\u5f02\u5e38\u200b\u68c0\u6d4b\u200b\u548c\u200b\u5173\u8054\u200b\u89c4\u5219\u5b66\u4e60\u200b\u7b49\u200b\uff0c\u200b\u5e7f\u6cdb\u5e94\u7528\u200b\u4e8e\u200b\u5ba2\u6237\u200b\u7ec6\u5206\u200b\u3001\u200b\u5546\u54c1\u200b\u63a8\u8350\u200b\u3001\u200b\u5f02\u5e38\u200b\u68c0\u6d4b\u200b\u7b49\u200b\u9886\u57df\u200b\u3002</p> <p></p>"},{"location":"machine/interview/#13","title":"1.3 \u200b\u6982\u7387\u6a21\u578b","text":"<p>\u200b\u6982\u7387\u6a21\u578b\u200b\u662f\u200b\u4e00\u7c7b\u200b\u5229\u7528\u200b\u6982\u7387\u8bba\u200b\u4e0e\u200b\u7edf\u8ba1\u5b66\u200b\u63cf\u8ff0\u200b\u6570\u636e\u200b\u751f\u6210\u200b\u673a\u5236\u200b\u4e0e\u200b\u53d8\u91cf\u200b\u5173\u7cfb\u200b\u7684\u200b\u6570\u5b66\u6a21\u578b\u200b\u3002\u200b\u5b83\u200b\u901a\u8fc7\u200b\u8054\u5408\u200b\u6982\u7387\u5206\u5e03\u200b \\(P(X, Y)\\) \u200b\u5efa\u6a21\u200b\u8f93\u5165\u200b \\(X\\) \u200b\u4e0e\u200b\u8f93\u51fa\u200b \\(Y\\) \u200b\u7684\u200b\u4e0d\u786e\u5b9a\u6027\u200b\uff0c\u200b\u652f\u6301\u200b\u63a8\u7406\u200b\u3001\u200b\u9884\u6d4b\u200b\u4e0e\u200b\u51b3\u7b56\u200b\u3002</p> <p>\u2705 \u200b\u6838\u5fc3\u601d\u60f3\u200b\uff1a\u200b\u5c06\u200b\u590d\u6742\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u7684\u200b\u4e0d\u786e\u5b9a\u6027\u200b\u663e\u5f0f\u200b\u5efa\u6a21\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u201c\u200b\u5728\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u4e2d\u6c42\u200b\u786e\u5b9a\u200b\u201d\u3002</p> <p></p>"},{"location":"machine/interview/#_3","title":"\u6838\u5fc3\u200b\u6982\u7387\u6a21\u578b\u200b\u7c7b\u578b","text":"<p>1. \u200b\u8d1d\u53f6\u65af\u200b\u7f51\u7edc\u200b\uff08Bayesian Network\uff09</p> <ul> <li>\u200b\u7c7b\u578b\u200b\uff1a\u200b\u6709\u5411\u56fe\u200b\u6a21\u578b\u200b\uff08DAG\uff09</li> <li>\u200b\u7ed3\u6784\u200b\uff1a\u200b\u8282\u70b9\u200b = \u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u8fb9\u200b = \u200b\u56e0\u679c\u200b\u4f9d\u8d56\u200b</li> <li>\u200b\u5e94\u7528\u200b\uff1a\u200b\u533b\u7597\u200b\u8bca\u65ad\u200b\u3001\u200b\u63a8\u8350\u200b\u7cfb\u7edf\u200b\u3001\u200b\u8bed\u97f3\u200b\u8bc6\u522b\u200b</li> </ul> <p>\ud83c\udf30 \u200b\u793a\u4f8b\u200b\uff1a \u200b\u8282\u70b9\u200b\uff1a<code>Rain</code>\uff08\u200b\u662f\u5426\u200b\u4e0b\u96e8\u200b\uff09\u3001<code>Sprinkler</code>\uff08\u200b\u6d12\u6c34\u200b\u5668\u200b\u662f\u5426\u200b\u5f00\u542f\u200b\uff09\u3001<code>Wet Grass</code>\uff08\u200b\u8349\u5730\u200b\u662f\u5426\u200b\u6e7f\u200b\uff09 \u200b\u8fb9\u200b\uff1a<code>Rain \u2192 Wet Grass</code>\uff0c<code>Sprinkler \u2192 Wet Grass</code> \u200b\u53ef\u200b\u8ba1\u7b97\u200b\u201c\u200b\u5df2\u77e5\u200b\u8349\u5730\u200b\u6e7f\u200b\uff0c\u200b\u4e0b\u96e8\u200b\u7684\u200b\u6982\u7387\u200b\u201d\u2014\u2014\u200b\u5373\u200b\u540e\u9a8c\u200b\u6982\u7387\u200b\u63a8\u7406\u200b\u3002</p> <p>2. \u200b\u9690\u200b\u9a6c\u5c14\u53ef\u592b\u200b\u6a21\u578b\u200b\uff08HMM\uff09</p> <ul> <li>\u200b\u672c\u8d28\u200b\uff1a\u200b\u7ed3\u6784\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u52a8\u6001\u200b\u8d1d\u53f6\u65af\u200b\u7f51\u7edc\u200b</li> <li>\u200b\u9002\u7528\u200b\uff1a\u200b\u65f6\u5e8f\u200b\u6570\u636e\u200b\u5efa\u6a21\u200b\uff08\u200b\u5982\u200b\u8bed\u97f3\u200b\u3001\u200b\u6587\u672c\u200b\uff09</li> <li>\u200b\u4e24\u5927\u200b\u53d8\u91cf\u200b\uff1a<ul> <li>\u200b\u9690\u200b\u72b6\u6001\u200b\u5e8f\u5217\u200b \\(y_1, y_2, ..., y_n\\)\uff08\u200b\u4e0d\u53ef\u200b\u89c2\u6d4b\u200b\uff09</li> <li>\u200b\u89c2\u6d4b\u200b\u5e8f\u5217\u200b \\(x_1, x_2, ..., x_n\\)\uff08\u200b\u53ef\u200b\u89c2\u6d4b\u200b\uff09</li> </ul> </li> </ul> <p>\ud83d\udccc \u200b\u8054\u5408\u200b\u6982\u7387\u200b\u5206\u89e3\u200b\u4e3a\u200b\uff1a $$ P(x_1,y_1,...,x_n,y_n) = P(y_1)P(x_1|y_1)\\prod_{i=2}^n P(y_i|y_{i-1})P(x_i|y_i) $$</p> <p>3. \u200b\u9a6c\u5c14\u53ef\u592b\u200b\u968f\u200b\u673a\u573a\u200b\uff08MRF\uff09\u200b\u4e0e\u200b\u6761\u4ef6\u200b\u968f\u200b\u673a\u573a\u200b\uff08CRF\uff09</p> \u200b\u6a21\u578b\u200b \u200b\u7c7b\u578b\u200b \u200b\u7279\u70b9\u200b \u200b\u5e94\u7528\u200b MRF \u200b\u65e0\u5411\u200b\u56fe\u200b\u6a21\u578b\u200b \u200b\u5efa\u6a21\u200b\u53d8\u91cf\u200b\u95f4\u200b\u5bf9\u79f0\u200b\u4f9d\u8d56\u200b\uff08\u200b\u5982\u200b\u56fe\u50cf\u200b\u50cf\u7d20\u200b\uff09 \u200b\u56fe\u50cf\u5904\u7406\u200b\u3001\u200b\u57fa\u56e0\u200b\u5206\u6790\u200b CRF \u200b\u5224\u522b\u5f0f\u200b\u65e0\u5411\u200b\u6a21\u578b\u200b \u200b\u76f4\u63a5\u200b\u5efa\u6a21\u200b $P(Y X)$\uff0c\u200b\u5e38\u7528\u200b\u4e8e\u200b\u5e8f\u5217\u200b\u6807\u6ce8"},{"location":"machine/interview/#_4","title":"\u6982\u7387\u6a21\u578b\u200b\u7684\u200b\u6838\u5fc3\u200b\u5b66\u4e60\u200b\u65b9\u6cd5","text":"<p>1. \u200b\u6781\u5927\u200b\u4f3c\u7136\u200b\u4f30\u8ba1\u200b\uff08MLE\uff09</p> <ul> <li>\u200b\u76ee\u6807\u200b\uff1a\u200b\u627e\u5230\u200b\u4f7f\u200b\u89c2\u6d4b\u200b\u6570\u636e\u200b\u51fa\u73b0\u200b\u6982\u7387\u200b\u6700\u5927\u200b\u7684\u200b\u53c2\u6570\u200b \\(\\theta\\)</li> <li>\u200b\u516c\u5f0f\u200b\uff1a  </li> <li> \\[   \\hat{\\theta}_{MLE} = \\arg\\max_\\theta P(D|\\theta) \\] </li> <li> <p>\u200b\u5b9e\u4f8b\u200b\uff1a\u200b\u629b\u200b\u786c\u5e01\u200b10\u200b\u6b21\u5f97\u200b7\u200b\u6b21\u200b\u6b63\u9762\u200b \u2192 \u200b\u4f30\u8ba1\u200b\u6b63\u9762\u200b\u6982\u7387\u200b\u4e3a\u200b0.7</p> <p>\ud83d\udd0d \u200b\u5b9e\u8df5\u200b\u6280\u5de7\u200b\uff1a\u200b\u5e38\u5bf9\u200b\u4f3c\u7136\u53d6\u200b\u5bf9\u6570\u200b\uff08\u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b\uff09\uff0c\u200b\u4fbf\u4e8e\u200b\u4f18\u5316\u200b\u3002</p> </li> </ul> <p>2. \u200b\u8d1d\u53f6\u65af\u200b\u5b66\u4e60\u200b\uff08Bayesian Learning\uff09</p> <ul> <li>\u200b\u6838\u5fc3\u7406\u5ff5\u200b\uff1a\u200b\u53c2\u6570\u200b \\(\\theta\\) \u200b\u662f\u200b\u4e00\u4e2a\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u5177\u6709\u200b\u5148\u9a8c\u200b\u5206\u5e03\u200b \\(P(\\theta)\\)</li> <li>\u200b\u66f4\u65b0\u8fc7\u7a0b\u200b\uff1a\u200b\u5229\u7528\u200b\u8d1d\u53f6\u65af\u200b\u516c\u5f0f\u200b\u5f97\u5230\u200b\u540e\u9a8c\u200b \\(P(\\theta|D)\\)   $$   P(\\theta|D) = \\frac{P(D|\\theta)P(\\theta)}{P(D)}   $$</li> <li>\u200b\u4f18\u52bf\u200b\uff1a\u200b\u53ef\u200b\u878d\u5408\u200b\u5148\u9a8c\u200b\u77e5\u8bc6\u200b\uff0c\u200b\u9002\u5408\u200b\u5c0f\u200b\u6837\u672c\u200b\u573a\u666f\u200b</li> </ul> <p>\ud83e\udde0 \u200b\u5173\u952e\u200b\u6982\u5ff5\u200b\uff1a</p> <ul> <li>\u200b\u5148\u9a8c\u6982\u7387\u200b\uff1a\u200b\u5efa\u6a21\u200b\u524d\u200b\u7684\u200b\u77e5\u8bc6\u200b\uff08\u200b\u5982\u200b\u201c\u200b\u67d0\u75c5\u200b\u53d1\u75c5\u7387\u200b\u4f4e\u200b\u201d\uff09</li> <li>\u200b\u540e\u9a8c\u200b\u6982\u7387\u200b\uff1a\u200b\u89c2\u6d4b\u200b\u6570\u636e\u200b\u540e\u200b\u7684\u200b\u66f4\u65b0\u200b\u4fe1\u5ff5\u200b</li> <li>\u200b\u5965\u5361\u59c6\u200b\u5243\u5200\u200b\u539f\u7406\u200b\uff1a\u200b\u7b80\u5355\u200b\u6a21\u578b\u200b\u4f18\u5148\u200b\uff0c\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b</li> </ul>"},{"location":"machine/interview/#14-vs","title":"1.4 \u200b\u751f\u6210\u200b\u6a21\u578b\u200b VS \u200b\u5224\u522b\u200b\u6a21\u578b","text":""},{"location":"machine/interview/#1-discriminative-model","title":"1\ufe0f\u20e3 \u200b\u5224\u522b\u200b\u6a21\u578b\u200b\uff08Discriminative Model\uff09","text":"<p>\u200b\u6838\u5fc3\u601d\u60f3\u200b\uff1a\u200b\u76f4\u63a5\u200b\u5b66\u4e60\u200b \u200b\u6761\u4ef6\u200b\u6982\u7387\u200b ( P(y|x) )\uff0c\u200b\u5373\u200b\u7ed9\u5b9a\u200b\u8f93\u5165\u200b (x)\uff0c\u200b\u9884\u6d4b\u200b\u8f93\u51fa\u200b (y) \u200b\u7684\u200b\u6982\u7387\u200b\u3002</p> <ul> <li>\u200b\u76ee\u6807\u200b\uff1a\u200b\u533a\u5206\u200b\u4e0d\u540c\u200b\u7c7b\u522b\u200b</li> <li>\u200b\u91cd\u70b9\u200b\uff1a\u200b\u8fb9\u754c\u200b/\u200b\u5206\u7c7b\u200b</li> <li>\u200b\u5e38\u89c1\u200b\u65b9\u6cd5\u200b\uff1a<ul> <li>\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\uff08Logistic Regression\uff09</li> <li>\u200b\u652f\u6301\u200b\u5411\u91cf\u200b\u673a\u200b\uff08SVM\uff09</li> <li>\u200b\u6761\u4ef6\u200b\u968f\u200b\u673a\u573a\u200b\uff08CRF\uff09</li> <li>\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u5206\u7c7b\u5668\u200b</li> </ul> </li> </ul> <p>\u200b\u6570\u5b66\u200b\u8868\u8fbe\u200b\uff1a</p> \\[ \\hat{y} = \\arg\\max_y P(y|x) \\] <p>\u200b\u8bad\u7ec3\u200b\u65f6\u200b\u76f4\u63a5\u200b\u4f18\u5316\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff08\u200b\u6bd4\u5982\u200b\u4ea4\u53c9\u200b\u71b5\u200b\uff09\uff1a</p> \\[ \\mathcal{L} = - \\sum_i y_i \\log P(y_i|x_i) \\] <p>\u200b\u76f4\u89c2\u200b\u7406\u89e3\u200b\uff1a</p> <p>\u200b\u5224\u522b\u200b\u6a21\u578b\u200b\u50cf\u200b\u4e00\u4e2a\u200b\u6cd5\u5b98\u200b\uff0c\u200b\u4e13\u6ce8\u200b\u4e8e\u200b \u200b\u5224\u65ad\u200b A \u200b\u548c\u200b B \u200b\u54ea\u4e2a\u200b\u53ef\u80fd\u6027\u200b\u66f4\u5927\u200b\uff0c\u200b\u4e0d\u200b\u5173\u5fc3\u200b\u8f93\u5165\u200b\u662f\u200b\u600e\u4e48\u200b\u751f\u6210\u200b\u7684\u200b\u3002</p>"},{"location":"machine/interview/#2-generative-model","title":"2\ufe0f\u20e3 \u200b\u751f\u6210\u200b\u6a21\u578b\u200b\uff08Generative Model\uff09","text":"<p>\u200b\u6838\u5fc3\u601d\u60f3\u200b\uff1a\u200b\u5b66\u4e60\u200b \u200b\u8054\u5408\u200b\u6982\u7387\u200b ( P(x, y) ) \u200b\u6216\u8005\u200b\u6570\u636e\u5206\u5e03\u200b ( P(x) )\uff0c\u200b\u4ece\u800c\u200b\u80fd\u200b\u751f\u6210\u200b\u6570\u636e\u200b\u3002</p> <ul> <li>\u200b\u76ee\u6807\u200b\uff1a\u200b\u5efa\u6a21\u200b\u6570\u636e\u5206\u5e03\u200b\uff0c\u200b\u751f\u6210\u200b\u65b0\u200b\u6837\u672c\u200b</li> <li>\u200b\u91cd\u70b9\u200b\uff1a\u200b\u6570\u636e\u200b\u672c\u8eab\u200b</li> <li> <p>\u200b\u5e38\u89c1\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li>\u200b\u9ad8\u65af\u200b\u6df7\u5408\u200b\u6a21\u578b\u200b\uff08GMM\uff09</li> <li>\u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b\uff08Naive Bayes\uff09</li> <li>\u200b\u9690\u200b\u9a6c\u5c14\u53ef\u592b\u200b\u6a21\u578b\u200b\uff08HMM\uff09</li> <li>\u200b\u53d8\u5206\u200b\u81ea\u200b\u7f16\u7801\u5668\u200b\uff08VAE\uff09</li> <li>\u200b\u751f\u6210\u200b\u5bf9\u6297\u200b\u7f51\u7edc\u200b\uff08GAN\uff09</li> <li>\u200b\u5927\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\uff08LLM\uff0c\u200b\u5982\u200b GPT \u200b\u7cfb\u5217\u200b\uff09</li> </ul> </li> </ul> <p>\u200b\u6570\u5b66\u200b\u8868\u8fbe\u200b\uff1a</p> <ol> <li> <p>\u200b\u5bf9\u4e8e\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff1a $$    P(y|x) = \\frac{P(x|y)P(y)}{P(x)} $$</p> </li> <li> <p>\u200b\u5bf9\u4e8e\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b\uff08\u200b\u65e0\u200b\u6807\u7b7e\u200b\uff09\uff1a $$    P(x) \\quad \\text{\u200b\u6216\u8005\u200b} \\quad P(x|z) \\text{\uff0c\u200b\u5176\u4e2d\u200b z \u200b\u662f\u200b\u6f5c\u200b\u53d8\u91cf\u200b} $$</p> </li> </ol> <p>\u200b\u76f4\u89c2\u200b\u7406\u89e3\u200b\uff1a</p> <p>\u200b\u751f\u6210\u200b\u6a21\u578b\u200b\u50cf\u200b\u4e00\u4e2a\u200b\u753b\u5bb6\u200b\uff0c\u200b\u4e0d\u4ec5\u200b\u80fd\u200b\u8bf4\u200b\u201c\u200b\u8fd9\u200b\u662f\u200b\u732b\u200b\u8fd8\u662f\u200b\u72d7\u200b\u201d\uff0c\u200b\u8fd8\u200b\u80fd\u200b \u200b\u753b\u51fa\u200b\u4e00\u53ea\u200b\u65b0\u200b\u7684\u200b\u732b\u200b\u6216\u200b\u72d7\u200b\u3002</p> \u200b\u7279\u6027\u200b \u200b\u5224\u522b\u200b\u6a21\u578b\u200b \u200b\u751f\u6210\u200b\u6a21\u578b\u200b \u200b\u5b66\u4e60\u200b\u76ee\u6807\u200b \u200b\u6761\u4ef6\u200b\u6982\u7387\u200b (P(y x)) \u200b\u8054\u5408\u200b\u6982\u7387\u200b (P(x, y)) \u200b\u6216\u200b (P(x)) \u200b\u9884\u6d4b\u200b\u80fd\u529b\u200b \u200b\u5206\u7c7b\u200b\u3001\u200b\u56de\u5f52\u200b \u200b\u751f\u6210\u200b\u3001\u200b\u5206\u7c7b\u200b \u200b\u6570\u636e\u200b\u5efa\u6a21\u200b \u200b\u4e0d\u200b\u5173\u5fc3\u200b\u6570\u636e\u5206\u5e03\u200b \u200b\u5b66\u4e60\u200b\u6570\u636e\u5206\u5e03\u200b \u200b\u4f18\u52bf\u200b \u200b\u8fb9\u754c\u200b\u6e05\u6670\u200b\uff0c\u200b\u5206\u7c7b\u200b\u7cbe\u5ea6\u9ad8\u200b \u200b\u53ef\u4ee5\u200b\u751f\u6210\u200b\u65b0\u200b\u6837\u672c\u200b\uff0c\u200b\u9002\u5e94\u200b\u534a\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b \u200b\u52a3\u52bf\u200b \u200b\u4e0d\u80fd\u200b\u751f\u6210\u200b\u6837\u672c\u200b \u200b\u5206\u7c7b\u200b\u7cbe\u5ea6\u200b\u53ef\u80fd\u200b\u4f4e\u4e8e\u200b\u5224\u522b\u200b\u6a21\u578b\u200b \u200b\u793a\u4f8b\u200b Logistic Regression, SVM, DNN \u200b\u5206\u7c7b\u5668\u200b Naive Bayes, GMM, HMM, VAE, GAN, GPT"},{"location":"machine/interview/#15","title":"1.5 \u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\u6d41\u7a0b","text":"<p>\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\u53ef\u4ee5\u200b\u62bd\u8c61\u200b\u4e3a\u200b \u200b\u4e00\u4e2a\u200b\u8fed\u4ee3\u200b\u4f18\u5316\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u5927\u81f4\u200b\u6d41\u7a0b\u200b\u5982\u4e0b\u200b\uff1a</p> <ol> <li>\u200b\u660e\u786e\u200b\u95ee\u9898\u200b\u4e0e\u200b\u76ee\u6807\u200b</li> <li>\u200b\u6536\u96c6\u200b\u6570\u636e\u200b</li> <li>\u200b\u6570\u636e\u200b\u9884\u5904\u7406\u200b\u4e0e\u200b\u7279\u5f81\u200b\u5de5\u7a0b\u200b</li> <li>\u200b\u9009\u62e9\u200b\u6a21\u578b\u200b</li> <li>\u200b\u5b9a\u4e49\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u548c\u200b\u4f18\u5316\u200b\u5668\u200b</li> <li>\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff08\u200b\u6a21\u578b\u200b\u62df\u5408\u200b\uff09</li> <li>\u200b\u6a21\u578b\u200b\u8bc4\u4f30\u200b\u4e0e\u200b\u8c03\u53c2\u200b</li> <li>\u200b\u6a21\u578b\u200b\u90e8\u7f72\u200b\u4e0e\u200b\u76d1\u63a7\u200b</li> </ol>"},{"location":"machine/interview/#1","title":"1\ufe0f\u20e3 \u200b\u660e\u786e\u200b\u95ee\u9898\u200b\u4e0e\u200b\u76ee\u6807","text":"<ul> <li> <p>\u200b\u4efb\u52a1\u200b\u7c7b\u578b\u200b\uff1a</p> <ul> <li>\u200b\u5206\u7c7b\u200b\uff08Classification\uff09\uff1a\u200b\u9884\u6d4b\u200b\u7c7b\u522b\u200b \\((y \\in {0,1,...,K})\\)</li> <li>\u200b\u56de\u5f52\u200b\uff08Regression\uff09\uff1a\u200b\u9884\u6d4b\u200b\u8fde\u7eed\u200b\u503c\u200b \\((y \\in \\mathbb{R})\\)</li> <li>\u200b\u6392\u5e8f\u200b/\u200b\u63a8\u8350\u200b\u3001\u200b\u805a\u7c7b\u200b\u3001\u200b\u751f\u6210\u200b\u7b49\u200b</li> </ul> </li> <li> <p>\u200b\u76ee\u6807\u200b\u6307\u6807\u200b\uff1a</p> <ul> <li>\u200b\u5206\u7c7b\u200b\uff1a\u200b\u51c6\u786e\u7387\u200b\uff08Accuracy\uff09\u3001F1\u3001ROC-AUC</li> <li>\u200b\u56de\u5f52\u200b\uff1aMSE\u3001MAE\u3001R\u00b2</li> </ul> </li> <li> <p>\u200b\u7ea6\u675f\u6761\u4ef6\u200b\uff1a</p> <ul> <li>\u200b\u8bad\u7ec3\u200b\u65f6\u95f4\u200b\u3001\u200b\u6a21\u578b\u200b\u5927\u5c0f\u200b\u3001\u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\u7b49\u200b</li> </ul> </li> </ul> <p>\ud83d\udd39 \u200b\u5c0f\u8d34\u58eb\u200b\uff1a\u200b\u95ee\u9898\u200b\u5b9a\u4e49\u200b\u76f4\u63a5\u200b\u51b3\u5b9a\u200b\u540e\u7eed\u200b\u6570\u636e\u200b\u6536\u96c6\u200b\u3001\u200b\u6a21\u578b\u200b\u9009\u62e9\u200b\u548c\u200b\u8bc4\u4f30\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"machine/interview/#2","title":"2\ufe0f\u20e3 \u200b\u6570\u636e\u200b\u6536\u96c6","text":"<ul> <li>\u200b\u6570\u636e\u200b\u662f\u200b ML \u200b\u7684\u200b\u6838\u5fc3\u200b\uff0c\u200b\u8d28\u91cf\u200b\u51b3\u5b9a\u200b\u6a21\u578b\u200b\u4e0a\u9650\u200b</li> <li> <p>\u200b\u6765\u6e90\u200b\uff1a</p> <ul> <li>\u200b\u516c\u5f00\u200b\u6570\u636e\u200b\u96c6\u200b\uff08Kaggle\u3001UCI\uff09</li> <li>\u200b\u4f01\u4e1a\u200b\u4e1a\u52a1\u200b\u6570\u636e\u200b\uff08\u200b\u6570\u636e\u5e93\u200b\u3001\u200b\u65e5\u5fd7\u200b\uff09</li> <li>\u200b\u4f20\u611f\u5668\u200b\u6216\u200b\u722c\u866b\u200b\u91c7\u96c6\u200b</li> </ul> </li> <li> <p>\u200b\u6ce8\u610f\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u91cf\u200b\u662f\u5426\u200b\u8db3\u591f\u200b</li> <li>\u200b\u6807\u7b7e\u200b\u662f\u5426\u200b\u51c6\u786e\u200b\uff08\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\uff09</li> </ul> </li> </ul>"},{"location":"machine/interview/#3","title":"3\ufe0f\u20e3 \u200b\u6570\u636e\u200b\u9884\u5904\u7406\u200b\u4e0e\u200b\u7279\u5f81\u200b\u5de5\u7a0b","text":""},{"location":"machine/interview/#_5","title":"\u6570\u636e\u200b\u6e05\u6d17\u200b\uff1a","text":"<ul> <li>\u200b\u7f3a\u5931\u200b\u503c\u200b\u5904\u7406\u200b\uff1a\u200b\u586b\u5145\u200b\u3001\u200b\u5220\u9664\u200b\u6216\u200b\u6807\u8bb0\u200b</li> <li>\u200b\u5f02\u5e38\u200b\u503c\u200b\u5904\u7406\u200b\uff1a\u200b\u53bb\u9664\u200b\u6216\u200b\u4fee\u6b63\u200b</li> <li>\u200b\u6570\u636e\u200b\u7c7b\u578b\u8f6c\u6362\u200b</li> </ul>"},{"location":"machine/interview/#_6","title":"\u7279\u5f81\u200b\u5904\u7406\u200b\uff1a","text":"<ul> <li>\u200b\u6570\u503c\u200b\u5f52\u4e00\u5316\u200b/\u200b\u6807\u51c6\u5316\u200b</li> <li>\u200b\u7c7b\u522b\u200b\u53d8\u91cf\u200b\u7f16\u7801\u200b\uff08One-hot\u3001Label Encoding\uff09</li> <li>\u200b\u7279\u5f81\u200b\u7ec4\u5408\u200b\u6216\u200b\u964d\u7ef4\u200b\uff08PCA\u3001SVD\uff09</li> </ul>"},{"location":"machine/interview/#_7","title":"\u7279\u5f81\u9009\u62e9\u200b\uff1a","text":"<ul> <li>\u200b\u76f8\u5173\u6027\u200b\u5206\u6790\u200b\u3001\u200b\u65b9\u5dee\u200b\u9009\u62e9\u200b\u3001\u200b\u6811\u200b\u6a21\u578b\u200b\u7279\u5f81\u200b\u91cd\u8981\u6027\u200b</li> <li>\u200b\u907f\u514d\u200b\u9ad8\u7ef4\u200b\u7a00\u758f\u200b\u6216\u200b\u566a\u58f0\u200b\u7279\u5f81\u200b</li> </ul> <p>\ud83d\udd39 \u200b\u5c0f\u8d34\u58eb\u200b\uff1a\u200b\u597d\u200b\u7684\u200b\u7279\u5f81\u200b\u6bd4\u200b\u590d\u6742\u200b\u6a21\u578b\u200b\u66f4\u200b\u91cd\u8981\u200b\u3002</p>"},{"location":"machine/interview/#4","title":"4\ufe0f\u20e3 \u200b\u9009\u62e9\u200b\u6a21\u578b","text":"<p>\u200b\u6839\u636e\u200b\u95ee\u9898\u200b\u7c7b\u578b\u200b\u548c\u200b\u6570\u636e\u200b\u7279\u6027\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u7b97\u6cd5\u200b\uff1a</p> \u200b\u95ee\u9898\u200b\u7c7b\u578b\u200b \u200b\u7ecf\u5178\u200b\u7b97\u6cd5\u200b \u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u7b97\u6cd5\u200b \u200b\u5206\u7c7b\u200b \u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\u3001SVM\u3001\u200b\u51b3\u7b56\u6811\u200b\u3001\u200b\u968f\u673a\u200b\u68ee\u6797\u200b MLP\u3001CNN\u3001Transformer \u200b\u56de\u5f52\u200b \u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u3001\u200b\u5cad\u200b\u56de\u5f52\u200b\u3001\u200b\u6811\u200b\u56de\u5f52\u200b MLP\u3001LSTM \u200b\u805a\u7c7b\u200b K-Means\u3001GMM \u200b\u81ea\u200b\u7f16\u7801\u5668\u200b + \u200b\u805a\u7c7b\u200b \u200b\u751f\u6210\u200b Naive Bayes\u3001GMM GAN\u3001VAE\u3001Diffusion Model"},{"location":"machine/interview/#5","title":"5\ufe0f\u20e3 \u200b\u5b9a\u4e49\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4e0e\u200b\u4f18\u5316\u200b\u5668","text":""},{"location":"machine/interview/#loss-function","title":"\u635f\u5931\u200b\u51fd\u6570\u200b\uff08Loss Function\uff09\uff1a","text":"<ul> <li>\u200b\u5206\u7c7b\u200b\uff1a\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b $$   \\mathcal{L} = - \\sum_i y_i \\log \\hat{y}_i $$</li> <li>\u200b\u56de\u5f52\u200b\uff1a\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE\uff09 $$   \\mathcal{L} = \\frac{1}{n}\\sum_i (\\hat{y}_i - y_i)^2 $$</li> </ul>"},{"location":"machine/interview/#optimizer","title":"\u4f18\u5316\u200b\u5668\u200b\uff08Optimizer\uff09\uff1a","text":"<ul> <li>\u200b\u901a\u8fc7\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u4f18\u5316\u200b\u6a21\u578b\u200b\u53c2\u6570\u200b (\\theta)</li> <li> <p>\u200b\u5e38\u7528\u200b\uff1a</p> <ul> <li>SGD\u3001Momentum\u3001Adam\u3001RMSProp</li> </ul> </li> </ul>"},{"location":"machine/interview/#_8","title":"\u6570\u5b66\u200b\u672c\u8d28\u200b\uff1a","text":"<ul> <li>\u200b\u627e\u5230\u200b\u6700\u4f18\u200b\u53c2\u6570\u200b (\\theta^*)\uff1a</li> </ul> \\[   \\theta^* = \\arg\\min_\\theta \\mathcal{L}(\\theta) \\]"},{"location":"machine/interview/#6","title":"6\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\uff08\u200b\u62df\u5408\u200b\uff09","text":"<ul> <li>\u200b\u5c06\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u8f93\u5165\u200b\u6a21\u578b\u200b</li> <li>\u200b\u8ba1\u7b97\u200b\u9884\u6d4b\u503c\u200b (\\hat{y})</li> <li>\u200b\u6839\u636e\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u8ba1\u7b97\u200b\u68af\u5ea6\u200b</li> <li>\u200b\u66f4\u65b0\u200b\u53c2\u6570\u200b\uff08\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\uff09</li> <li>\u200b\u8fed\u4ee3\u200b\u591a\u6b21\u200b\uff08epoch\uff09\uff0c\u200b\u76f4\u5230\u200b\u6536\u655b\u200b\u6216\u200b\u8fbe\u5230\u200b\u6307\u5b9a\u200b\u8f6e\u6570\u200b</li> </ul> <p>\ud83d\udca1 \u200b\u6ce8\u610f\u200b\uff1a</p> <ul> <li>\u200b\u6279\u91cf\u200b\u8bad\u7ec3\u200b\uff08Batch\uff09 vs \u200b\u968f\u673a\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\uff08SGD\uff09</li> <li> <p>\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b\uff1a</p> <ul> <li>\u200b\u6b63\u5219\u200b\u5316\u200b\uff08L1\u3001L2\uff09</li> <li>Dropout\uff08\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\uff09</li> <li>\u200b\u63d0\u524d\u200b\u505c\u6b62\u200b\uff08Early Stopping\uff09</li> </ul> </li> </ul>"},{"location":"machine/interview/#7","title":"7\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u8bc4\u4f30\u200b\u4e0e\u200b\u8c03\u53c2","text":""},{"location":"machine/interview/#_9","title":"\u8bc4\u4f30\u200b\u65b9\u6cd5\u200b\uff1a","text":"<ul> <li> <p>\u200b\u62c6\u5206\u200b\u6570\u636e\u200b\u96c6\u200b\uff1a</p> <ul> <li>\u200b\u8bad\u7ec3\u200b\u96c6\u200b / \u200b\u9a8c\u8bc1\u200b\u96c6\u200b / \u200b\u6d4b\u8bd5\u200b\u96c6\u200b</li> </ul> </li> <li> <p>\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff08K-Fold CV\uff09</p> </li> <li> <p>\u200b\u6307\u6807\u200b\u9009\u62e9\u200b\uff1a</p> <ul> <li>\u200b\u5206\u7c7b\u200b\uff1aAccuracy\u3001Precision\u3001Recall\u3001F1</li> <li>\u200b\u56de\u5f52\u200b\uff1aMSE\u3001MAE\u3001R\u00b2</li> </ul> </li> </ul>"},{"location":"machine/interview/#_10","title":"\u8d85\u200b\u53c2\u6570\u200b\u8c03\u4f18\u200b\uff1a","text":"<ul> <li>\u200b\u7f51\u683c\u200b\u641c\u7d22\u200b\uff08Grid Search\uff09</li> <li>\u200b\u968f\u673a\u200b\u641c\u7d22\u200b\uff08Random Search\uff09</li> <li>\u200b\u8d1d\u53f6\u65af\u200b\u4f18\u5316\u200b</li> <li>AutoML \u200b\u5de5\u5177\u200b</li> </ul> <p>\ud83d\udd39 \u200b\u5c0f\u8d34\u58eb\u200b\uff1a\u200b\u4e0d\u8981\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\u4e0a\u8c03\u200b\u53c2\u200b\uff0c\u200b\u53ea\u200b\u5728\u200b\u9a8c\u8bc1\u200b\u96c6\u4e0a\u200b\u4f18\u5316\u200b\u6a21\u578b\u200b\u3002</p>"},{"location":"machine/interview/#8","title":"8\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u90e8\u7f72\u200b\u4e0e\u200b\u76d1\u63a7","text":"<ul> <li> <p>\u200b\u90e8\u7f72\u200b\u65b9\u5f0f\u200b\uff1a</p> <ul> <li>\u200b\u672c\u5730\u200b\u670d\u52a1\u200b\uff08Flask/FastAPI\uff09</li> <li>\u200b\u4e91\u200b\u670d\u52a1\u200b\uff08AWS Sagemaker, Azure ML\uff09</li> </ul> </li> <li> <p>\u200b\u6a21\u578b\u200b\u76d1\u63a7\u200b\uff1a</p> <ul> <li>\u200b\u7cbe\u5ea6\u200b\u968f\u200b\u65f6\u95f4\u200b\u4e0b\u964d\u200b\uff08\u200b\u6982\u5ff5\u200b\u6f02\u79fb\u200b\uff09</li> <li>\u200b\u8f93\u5165\u200b\u5206\u5e03\u200b\u53d8\u5316\u200b</li> </ul> </li> <li> <p>\u200b\u5b9a\u671f\u200b\u66f4\u65b0\u200b\u6a21\u578b\u200b\uff0c\u200b\u4fdd\u6301\u200b\u6027\u80fd\u200b</p> </li> </ul> <pre><code>\u200b\u95ee\u9898\u200b\u5b9a\u4e49\u200b \u2192 \u200b\u6570\u636e\u200b\u6536\u96c6\u200b \u2192 \u200b\u6570\u636e\u200b\u6e05\u6d17\u200b/\u200b\u7279\u5f81\u200b\u5de5\u7a0b\u200b \u2192 \u200b\u6a21\u578b\u200b\u9009\u62e9\u200b \u2192 \u200b\u635f\u5931\u200b\u51fd\u6570\u200b+\u200b\u4f18\u5316\u200b\u5668\u200b\n\u2192 \u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b \u2192 \u200b\u6a21\u578b\u200b\u8bc4\u4f30\u200b\u4e0e\u200b\u8c03\u53c2\u200b \u2192 \u200b\u90e8\u7f72\u200b\u4e0e\u200b\u76d1\u63a7\u200b\n</code></pre>"},{"location":"machine/interview/#_11","title":"\u4e8c\u200b\u3001\u200b\u6570\u636e\u200b\u9884\u5904\u7406","text":""},{"location":"machine/interview/#21","title":"2.1 \u200b\u6570\u636e\u200b\u6e05\u6d17","text":""},{"location":"machine/interview/#_12","title":"\u7f3a\u5931\u200b\u503c\u200b\u5904\u7406\u200b\uff1a\u200b\u5220\u9664\u200b\u3001\u200b\u586b\u5145\u200b\uff08\u200b\u5747\u503c\u200b\u3001\u200b\u4e2d\u4f4d\u6570\u200b\u3001\u200b\u4f17\u6570\u200b\uff09\u3001\u200b\u63d2\u503c\u6cd5\u200b\u7b49","text":"<p>\u200b\u5728\u200b\u5b9e\u9645\u200b\u6570\u636e\u200b\u4e2d\u200b\uff0c\u200b\u7ecf\u5e38\u200b\u4f1a\u200b\u9047\u5230\u200b \u200b\u90e8\u5206\u200b\u6570\u636e\u200b\u7f3a\u5931\u200b \u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> \u200b\u59d3\u540d\u200b \u200b\u5e74\u9f84\u200b \u200b\u5de5\u8d44\u200b \u200b\u5f20\u4e09\u200b 25 5000 \u200b\u674e\u56db\u200b NaN 6000 \u200b\u738b\u4e94\u200b 30 NaN <p>\u200b\u8fd9\u91cc\u200b\u7684\u200b <code>NaN</code> \u200b\u5c31\u200b\u8868\u793a\u200b\u7f3a\u5931\u200b\u503c\u200b\uff08Not a Number\uff09\u3002</p> <p>\u200b\u7f3a\u5931\u200b\u503c\u4f1a\u200b\u5bfc\u81f4\u200b\uff1a</p> <ul> <li>\u200b\u7edf\u8ba1\u200b\u6307\u6807\u200b\u504f\u5dee\u200b\uff08\u200b\u5747\u503c\u200b\u3001\u200b\u65b9\u5dee\u200b\u4e0d\u200b\u51c6\u786e\u200b\uff09</li> <li>\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u62a5\u9519\u200b\u6216\u200b\u6027\u80fd\u200b\u4e0b\u964d\u200b</li> </ul> <p>\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b \u200b\u5408\u7406\u200b\u5904\u7406\u200b\u7f3a\u5931\u200b\u503c\u200b\u3002</p> <p>\u200b\u5148\u200b\u5206\u6790\u200b\u7f3a\u5931\u200b\u60c5\u51b5\u200b\uff1a</p> <pre><code>df.isna().sum()\ndf.isna().mean()  # \u200b\u7f3a\u5931\u200b\u6bd4\u4f8b\u200b\n</code></pre>"},{"location":"machine/interview/#1-deletion","title":"1\ufe0f\u20e3 \u200b\u5220\u9664\u200b\u6cd5\u200b\uff08Deletion\uff09","text":"<p>\u200b\u601d\u8def\u200b\uff1a\u200b\u76f4\u63a5\u200b\u5220\u9664\u200b\u7f3a\u5931\u200b\u503c\u200b\u6240\u5728\u200b\u7684\u200b\u884c\u200b\u6216\u200b\u5217\u200b\u3002</p> <ul> <li> <p>\u200b\u5220\u9664\u200b\u884c\u200b\uff08Row-wise deletion\uff09</p> <ul> <li>\u200b\u65b9\u6cd5\u200b\uff1a<code>dropna(axis=0)</code></li> <li>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a\u200b\u7f3a\u5931\u200b\u503c\u8f83\u200b\u5c11\u200b\uff0c\u200b\u5220\u9664\u200b\u4e0d\u4f1a\u200b\u4e22\u5931\u200b\u592a\u200b\u591a\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u4e22\u5931\u200b\u4fe1\u606f\u200b\uff0c\u200b\u5982\u679c\u200b\u7f3a\u5931\u200b\u503c\u200b\u5f88\u591a\u200b\uff0c\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6570\u636e\u91cf\u200b\u4e25\u91cd\u4e0d\u8db3\u200b</li> </ul> </li> <li> <p>\u200b\u5220\u9664\u200b\u5217\u200b\uff08Column-wise deletion\uff09</p> <ul> <li>\u200b\u65b9\u6cd5\u200b\uff1a<code>dropna(axis=1)</code></li> <li>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a\u200b\u67d0\u5217\u200b\u7f3a\u5931\u200b\u503c\u8fc7\u200b\u591a\u4e14\u200b\u4e0d\u200b\u91cd\u8981\u200b</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u53ef\u80fd\u200b\u4e22\u5931\u200b\u6709\u200b\u4ef7\u503c\u200b\u7279\u5f81\u200b</li> </ul> </li> </ul> <p>\u200b\u793a\u4f8b\u200b\uff08Pandas\uff09\uff1a</p> <pre><code>import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame({\n    '\u200b\u59d3\u540d\u200b': ['\u200b\u5f20\u4e09\u200b','\u200b\u674e\u56db\u200b','\u200b\u738b\u4e94\u200b'],\n    '\u200b\u5e74\u9f84\u200b': [25, np.nan, 30],\n    '\u200b\u5de5\u8d44\u200b': [5000, 6000, np.nan]\n})\n\n# \u200b\u5220\u9664\u200b\u542b\u6709\u200b\u7f3a\u5931\u200b\u503c\u200b\u7684\u200b\u884c\u200b\ndf.dropna(axis=0, inplace=True)\n\n# \u200b\u5220\u9664\u200b\u542b\u6709\u200b\u7f3a\u5931\u200b\u503c\u200b\u7684\u200b\u5217\u200b\ndf.dropna(axis=1, inplace=True)\n</code></pre>"},{"location":"machine/interview/#2-imputation","title":"2\ufe0f\u20e3 \u200b\u586b\u5145\u200b\u6cd5\u200b\uff08Imputation\uff09","text":"<p>\u200b\u601d\u8def\u200b\uff1a\u200b\u7528\u200b\u67d0\u4e2a\u200b\u5408\u7406\u200b\u7684\u200b\u503c\u200b\u4ee3\u66ff\u200b\u7f3a\u5931\u200b\u503c\u200b\u3002</p>"},{"location":"machine/interview/#21-mean-imputation","title":"2.1 \u200b\u5747\u503c\u200b\u586b\u5145\u200b\uff08Mean Imputation\uff09","text":"<ul> <li>\u200b\u5c06\u200b\u7f3a\u5931\u200b\u503c\u7528\u200b\u8be5\u5217\u200b\u7684\u200b\u5e73\u5747\u503c\u200b\u586b\u5145\u200b</li> <li>\u200b\u9002\u5408\u200b\u8fde\u7eed\u578b\u200b\u6570\u636e\u200b</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u7b80\u5355\u200b\uff0c\u200b\u6613\u200b\u5b9e\u73b0\u200b</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u4f1a\u200b\u964d\u4f4e\u200b\u6570\u636e\u200b\u65b9\u5dee\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5f71\u54cd\u200b\u6a21\u578b\u200b</li> </ul> <pre><code>df['\u200b\u5e74\u9f84\u200b'].fillna(df['\u200b\u5e74\u9f84\u200b'].mean(), inplace=True)\n</code></pre>"},{"location":"machine/interview/#22-median-imputation","title":"2.2 \u200b\u4e2d\u4f4d\u6570\u200b\u586b\u5145\u200b\uff08Median Imputation\uff09","text":"<ul> <li>\u200b\u5c06\u200b\u7f3a\u5931\u200b\u503c\u7528\u200b\u8be5\u5217\u200b\u7684\u200b\u4e2d\u4f4d\u6570\u200b\u586b\u5145\u200b</li> <li>\u200b\u9002\u5408\u200b\u6709\u200b\u5f02\u5e38\u200b\u503c\u200b\u7684\u200b\u8fde\u7eed\u578b\u200b\u6570\u636e\u200b</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u4e0d\u200b\u53d7\u200b\u6781\u7aef\u200b\u503c\u200b\u5f71\u54cd\u200b</li> </ul> <pre><code>df['\u200b\u5e74\u9f84\u200b'].fillna(df['\u200b\u5e74\u9f84\u200b'].median(), inplace=True)\n</code></pre>"},{"location":"machine/interview/#23-mode-imputation","title":"2.3 \u200b\u4f17\u6570\u200b\u586b\u5145\u200b\uff08Mode Imputation\uff09","text":"<ul> <li>\u200b\u5c06\u200b\u7f3a\u5931\u200b\u503c\u7528\u200b\u8be5\u5217\u200b\u6700\u5e38\u200b\u51fa\u73b0\u200b\u7684\u200b\u503c\u200b\u586b\u5145\u200b</li> <li>\u200b\u9002\u5408\u200b\u7c7b\u522b\u200b\u578b\u200b\u6570\u636e\u200b</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u4fdd\u7559\u200b\u7c7b\u522b\u200b\u7279\u5f81\u200b\u5206\u5e03\u200b</li> </ul> <pre><code>df['\u200b\u6027\u522b\u200b'].fillna(df['\u200b\u6027\u522b\u200b'].mode()[0], inplace=True)\n</code></pre>"},{"location":"machine/interview/#24-constant-imputation","title":"2.4 \u200b\u56fa\u5b9a\u503c\u200b\u586b\u5145\u200b\uff08Constant Imputation\uff09","text":"<ul> <li>\u200b\u7528\u200b\u56fa\u5b9a\u503c\u200b\u586b\u5145\u200b\uff0c\u200b\u4f8b\u5982\u200b 0\u3001-1\u3001\"\u200b\u672a\u77e5\u200b\"</li> <li>\u200b\u9002\u5408\u200b\u7f3a\u5931\u200b\u672c\u8eab\u200b\u6709\u200b\u542b\u4e49\u200b\u7684\u200b\u60c5\u51b5\u200b</li> </ul> <pre><code>df['\u200b\u5de5\u8d44\u200b'].fillna(0, inplace=True)\n</code></pre>"},{"location":"machine/interview/#3-interpolation","title":"3\ufe0f\u20e3 \u200b\u63d2\u503c\u6cd5\u200b\uff08Interpolation\uff09","text":"<p>\u200b\u601d\u8def\u200b\uff1a\u200b\u5229\u7528\u200b\u5df2\u6709\u200b\u6570\u636e\u200b\u7684\u200b\u8d8b\u52bf\u200b\u6216\u200b\u6a21\u5f0f\u200b\u6765\u200b\u9884\u6d4b\u200b\u7f3a\u5931\u200b\u503c\u200b</p> <ul> <li>\u200b\u9002\u5408\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u6570\u636e\u200b\u6216\u200b\u8fde\u7eed\u200b\u6570\u636e\u200b</li> <li> <p>\u200b\u5e38\u89c1\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li>\u200b\u7ebf\u6027\u63d2\u503c\u200b\uff08Linear\uff09</li> <li>\u200b\u591a\u9879\u5f0f\u200b\u63d2\u503c\u200b\uff08Polynomial\uff09</li> <li>\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u63d2\u503c\u200b\uff08Time\uff09</li> </ul> </li> </ul> <pre><code>df['\u200b\u5de5\u8d44\u200b'] = df['\u200b\u5de5\u8d44\u200b'].interpolate(method='linear')\n</code></pre> <ul> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u4fdd\u7559\u200b\u6570\u636e\u200b\u8d8b\u52bf\u200b\uff0c\u200b\u9002\u5408\u200b\u8fde\u7eed\u578b\u200b\u548c\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u4e0d\u200b\u9002\u5408\u200b\u7c7b\u522b\u200b\u578b\u200b\u6570\u636e\u200b\uff1b\u200b\u53ef\u80fd\u200b\u5f15\u5165\u200b\u504f\u5dee\u200b</li> </ul>"},{"location":"machine/interview/#4_1","title":"4\ufe0f\u20e3 \u200b\u9ad8\u7ea7\u200b\u586b\u5145\u200b\u65b9\u6cd5","text":"<ul> <li>KNN \u200b\u586b\u5145\u200b\uff1a\u200b\u7528\u200b\u76f8\u4f3c\u200b\u6837\u672c\u200b\u7684\u200b\u5e73\u5747\u503c\u200b\u586b\u5145\u200b</li> <li>\u200b\u56de\u5f52\u200b\u586b\u5145\u200b\uff1a\u200b\u7528\u200b\u5176\u4ed6\u200b\u7279\u5f81\u200b\u9884\u6d4b\u200b\u7f3a\u5931\u200b\u503c\u200b</li> <li>\u200b\u591a\u91cd\u200b\u63d2\u8865\u200b\uff08MICE\uff09\uff1a\u200b\u7528\u200b\u591a\u6b21\u200b\u9884\u6d4b\u200b\u586b\u5145\u200b\uff0c\u200b\u4fdd\u7559\u200b\u6570\u636e\u5206\u5e03\u200b</li> </ul> <p>\u200b\u8fd9\u4e9b\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u63d0\u9ad8\u200b\u9884\u6d4b\u200b\u7cbe\u5ea6\u200b\uff0c\u200b\u4f46\u200b\u8ba1\u7b97\u200b\u590d\u6742\u5ea6\u200b\u66f4\u9ad8\u200b\u3002</p> <p>\u200b\u7f3a\u5931\u200b\u503c\u200b\u5904\u7406\u200b\u9009\u62e9\u200b\u6307\u5357\u200b</p> \u200b\u65b9\u6cd5\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b \u200b\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u5220\u9664\u200b \u200b\u7f3a\u5931\u200b\u503c\u5c11\u200b\u3001\u200b\u6570\u636e\u91cf\u200b\u5927\u200b \u200b\u7b80\u5355\u200b \u200b\u4e22\u5931\u200b\u4fe1\u606f\u200b\u3001\u200b\u53ef\u80fd\u200b\u5f15\u5165\u200b\u504f\u5dee\u200b \u200b\u5747\u503c\u200b/\u200b\u4e2d\u4f4d\u6570\u200b \u200b\u8fde\u7eed\u578b\u200b\u7279\u5f81\u200b \u200b\u7b80\u5355\u200b\u3001\u200b\u6613\u200b\u5b9e\u73b0\u200b \u200b\u65b9\u5dee\u200b\u964d\u4f4e\u200b\u3001\u200b\u53ef\u80fd\u200b\u5f15\u5165\u200b\u504f\u5dee\u200b \u200b\u4f17\u6570\u200b \u200b\u7c7b\u522b\u200b\u578b\u200b\u7279\u5f81\u200b \u200b\u4fdd\u7559\u200b\u7c7b\u522b\u200b\u5206\u5e03\u200b \u200b\u65e0\u6cd5\u200b\u5904\u7406\u200b\u8fde\u7eed\u578b\u200b \u200b\u63d2\u503c\u200b \u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u3001\u200b\u8fde\u7eed\u578b\u200b\u6570\u636e\u200b \u200b\u4fdd\u7559\u200b\u8d8b\u52bf\u200b \u200b\u4e0d\u200b\u9002\u5408\u200b\u7c7b\u522b\u200b\u578b\u200b\u6570\u636e\u200b \u200b\u9ad8\u7ea7\u200b\u65b9\u6cd5\u200b \u200b\u5bf9\u200b\u7cbe\u5ea6\u200b\u8981\u6c42\u200b\u9ad8\u200b\u3001\u200b\u7f3a\u5931\u200b\u6a21\u5f0f\u200b\u590d\u6742\u200b \u200b\u66f4\u200b\u5408\u7406\u200b\u3001\u200b\u4fdd\u7559\u200b\u6570\u636e\u5206\u5e03\u200b \u200b\u8ba1\u7b97\u200b\u590d\u6742\u200b\u3001\u200b\u5b9e\u73b0\u200b\u590d\u6742"},{"location":"machine/interview/#_13","title":"\u5f02\u5e38\u200b\u503c\u200b\u5904\u7406\u200b\uff1a\u200b\u5220\u9664\u200b\u3001\u200b\u89c6\u4e3a\u200b\u7f3a\u5931\u200b\u503c\u200b\u3001\u200b\u4fee\u6b63\u200b\u6216\u200b\u4fdd\u7559\u200b\uff08\u200b\u6839\u636e\u200b\u4e1a\u52a1\u200b\u903b\u8f91\u200b\uff09","text":"<p>\u200b\u5f02\u5e38\u200b\u503c\u200b\uff08Outlier\uff09 \u200b\u662f\u200b\u6307\u200b\u5728\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b \u200b\u663e\u8457\u200b\u504f\u79bb\u200b\u5176\u4ed6\u200b\u89c2\u6d4b\u200b\u503c\u200b\u7684\u200b\u6570\u636e\u200b\u70b9\u200b\u3002</p> <ul> <li>\u200b\u4f8b\u5b50\u200b\uff1a\u200b\u5de5\u8d44\u200b\u4e3a\u200b 10 \u200b\u4e07\u5143\u200b\uff0c\u200b\u800c\u200b\u5927\u591a\u6570\u200b\u5458\u5de5\u5de5\u8d44\u200b\u5728\u200b 3-5 \u200b\u5343\u5143\u200b\u4e4b\u95f4\u200b\u3002</li> <li> <p>\u200b\u5f02\u5e38\u200b\u503c\u200b\u53ef\u80fd\u200b\u6765\u6e90\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u5f55\u5165\u200b\u9519\u8bef\u200b</li> <li>\u200b\u4eea\u5668\u200b\u6d4b\u91cf\u200b\u9519\u8bef\u200b</li> <li>\u200b\u771f\u5b9e\u200b\u7684\u200b\u6781\u7aef\u200b\u503c\u200b\uff08\u200b\u7f55\u89c1\u200b\u4e8b\u4ef6\u200b\uff09</li> </ul> </li> </ul> <p>\u200b\u5f02\u5e38\u200b\u503c\u200b\u5982\u679c\u200b\u4e0d\u200b\u5904\u7406\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u7edf\u8ba1\u200b\u6307\u6807\u200b\u5931\u771f\u200b\u6216\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\u4e0b\u964d\u200b\u3002</p> <p>\u200b\u5148\u200b\u68c0\u6d4b\u200b\uff0c\u200b\u518d\u200b\u5904\u7406\u200b\uff1a</p> <pre><code>df.describe()\ndf.boxplot()\n</code></pre>"},{"location":"machine/interview/#_14","title":"\u68c0\u6d4b\u200b\u5f02\u5e38\u200b\u503c\u200b\u7684\u200b\u65b9\u6cd5","text":""},{"location":"machine/interview/#1_1","title":"1\ufe0f\u20e3 \u200b\u57fa\u4e8e\u200b\u7edf\u8ba1\u200b\u91cf","text":"<ul> <li>\u200b\u6807\u51c6\u5dee\u200b\u6cd5\u200b\uff1a $$   x \\text{ \u200b\u662f\u200b\u5f02\u5e38\u200b\u503c\u200b if } |x-\\bar{x}| &gt; k\\sigma $$   \u200b\u5e38\u7528\u200b (k=3)</li> <li>IQR\u200b\u6cd5\u200b\uff08\u200b\u56db\u5206\u200b\u4f4d\u8ddd\u200b\uff09\uff1a $$   \\text{IQR} = Q_3 - Q_1 $$ $$   x \\text{ \u200b\u662f\u200b\u5f02\u5e38\u200b\u503c\u200b if } x &lt; Q_1 - 1.5 \\cdot IQR \\text{ \u200b\u6216\u200b } x &gt; Q_3 + 1.5 \\cdot IQR $$</li> </ul>"},{"location":"machine/interview/#2_1","title":"2\ufe0f\u20e3 \u200b\u57fa\u4e8e\u200b\u6a21\u578b","text":"<ul> <li>Z-score</li> <li>Isolation Forest</li> <li>Local Outlier Factor (LOF)</li> </ul>"},{"location":"machine/interview/#_15","title":"\u5f02\u5e38\u200b\u503c\u200b\u5904\u7406\u200b\u65b9\u6cd5","text":""},{"location":"machine/interview/#1_2","title":"1\ufe0f\u20e3 \u200b\u5220\u9664\u200b\u6cd5","text":"<p>\u200b\u601d\u8def\u200b\uff1a\u200b\u76f4\u63a5\u200b\u5220\u9664\u5f02\u5e38\u200b\u503c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u884c\u200b\u3002</p> <ul> <li> <p>\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u7b80\u5355\u200b\u3001\u200b\u5feb\u901f\u200b</li> <li>\u200b\u9002\u5408\u200b\u5f02\u5e38\u200b\u503c\u200b\u5f88\u5c11\u200b\u7684\u200b\u60c5\u51b5\u200b</li> </ul> </li> <li> <p>\u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u4e22\u5931\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u4e0d\u200b\u9002\u5408\u200b\u5f02\u5e38\u200b\u503c\u200b\u53ef\u80fd\u200b\u6709\u200b\u5b9e\u9645\u610f\u4e49\u200b\u7684\u200b\u60c5\u51b5\u200b</li> </ul> </li> </ul> <p>Pandas \u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame({'\u200b\u5de5\u8d44\u200b':[5000,6000,7000,100000]})\nQ1 = df['\u200b\u5de5\u8d44\u200b'].quantile(0.25)\nQ3 = df['\u200b\u5de5\u8d44\u200b'].quantile(0.75)\nIQR = Q3 - Q1\ndf_clean = df[(df['\u200b\u5de5\u8d44\u200b'] &gt;= Q1 - 1.5*IQR) &amp; (df['\u200b\u5de5\u8d44\u200b'] &lt;= Q3 + 1.5*IQR)]\n</code></pre>"},{"location":"machine/interview/#2-nan","title":"2\ufe0f\u20e3 \u200b\u89c6\u4e3a\u200b\u7f3a\u5931\u200b\u503c\u200b\uff08NaN\uff09","text":"<p>\u200b\u601d\u8def\u200b\uff1a\u200b\u628a\u200b\u5f02\u5e38\u200b\u503c\u200b\u6807\u8bb0\u200b\u4e3a\u200b\u7f3a\u5931\u200b\u503c\u200b\uff0c\u200b\u518d\u7528\u200b\u7f3a\u5931\u200b\u503c\u200b\u5904\u7406\u200b\u65b9\u6cd5\u200b\u586b\u5145\u200b\u3002</p> <ul> <li> <p>\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u53ef\u4ee5\u200b\u7ed3\u5408\u200b\u5747\u503c\u200b/\u200b\u4e2d\u4f4d\u6570\u200b/\u200b\u63d2\u503c\u200b\u7b49\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u4fdd\u7559\u200b\u6570\u636e\u91cf\u200b</li> </ul> </li> <li> <p>\u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u586b\u5145\u200b\u503c\u200b\u53ef\u80fd\u200b\u4e0d\u200b\u51c6\u786e\u200b</li> <li>\u200b\u9700\u8981\u200b\u5408\u7406\u200b\u9009\u62e9\u200b\u586b\u5145\u200b\u503c\u200b</li> </ul> </li> </ul> <p>Pandas \u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>df.loc[(df['\u200b\u5de5\u8d44\u200b'] &gt; Q3 + 1.5*IQR), '\u200b\u5de5\u8d44\u200b'] = np.nan\ndf['\u200b\u5de5\u8d44\u200b'].fillna(df['\u200b\u5de5\u8d44\u200b'].median(), inplace=True)\n</code></pre>"},{"location":"machine/interview/#3-capping-winsorization","title":"3\ufe0f\u20e3 \u200b\u4fee\u6b63\u200b\u6cd5\u200b\uff08Capping \u200b\u6216\u200b Winsorization\uff09","text":"<p>\u200b\u601d\u8def\u200b\uff1a\u200b\u628a\u200b\u5f02\u5e38\u200b\u503c\u200b\u66ff\u6362\u200b\u4e3a\u200b\u4e0a\u9650\u200b\u6216\u200b\u4e0b\u200b\u9650\u503c\u200b\u3002</p> <ul> <li> <p>\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u4fdd\u7559\u200b\u6570\u636e\u91cf\u200b</li> <li>\u200b\u51cf\u5c11\u200b\u5f02\u5e38\u200b\u503c\u200b\u5bf9\u6a21\u578b\u200b\u7684\u200b\u5f71\u54cd\u200b</li> </ul> </li> <li> <p>\u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u53ef\u80fd\u200b\u626d\u66f2\u200b\u6570\u636e\u5206\u5e03\u200b</li> </ul> </li> </ul> <p>Pandas \u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>lower_bound = Q1 - 1.5*IQR\nupper_bound = Q3 + 1.5*IQR\ndf['\u200b\u5de5\u8d44\u200b'] = df['\u200b\u5de5\u8d44\u200b'].clip(lower_bound, upper_bound)\n</code></pre>"},{"location":"machine/interview/#4_2","title":"4\ufe0f\u20e3 \u200b\u4fdd\u7559\u200b\u6cd5","text":"<p>\u200b\u601d\u8def\u200b\uff1a\u200b\u5bf9\u200b\u5f02\u5e38\u200b\u503c\u200b\u4e0d\u200b\u505a\u200b\u5904\u7406\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4fdd\u7559\u200b</p> <ul> <li> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a</p> <ul> <li>\u200b\u5f02\u5e38\u200b\u503c\u200b\u662f\u200b \u200b\u771f\u5b9e\u200b\u7684\u200b\u6781\u7aef\u200b\u4e8b\u4ef6\u200b\uff0c\u200b\u5bf9\u200b\u4e1a\u52a1\u200b\u6709\u200b\u610f\u4e49\u200b</li> <li>\u200b\u5982\u200b\u91d1\u878d\u200b\u98ce\u63a7\u200b\u4e2d\u200b\u7684\u200b\u6b3a\u8bc8\u200b\u4ea4\u6613\u200b</li> </ul> </li> <li> <p>\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u4fdd\u7559\u200b\u5b8c\u6574\u200b\u4fe1\u606f\u200b</li> </ul> </li> <li> <p>\u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u53ef\u80fd\u200b\u5f71\u54cd\u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\u548c\u200b\u7edf\u8ba1\u200b\u6307\u6807\u200b</li> </ul> </li> </ul> \u200b\u65b9\u6cd5\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b \u200b\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u5220\u9664\u200b \u200b\u5f02\u5e38\u200b\u503c\u5c11\u200b\uff0c\u200b\u53ef\u80fd\u200b\u662f\u200b\u9519\u8bef\u200b\u6570\u636e\u200b \u200b\u7b80\u5355\u200b\u5feb\u901f\u200b \u200b\u4e22\u5931\u200b\u4fe1\u606f\u200b \u200b\u89c6\u4e3a\u200b\u7f3a\u5931\u200b\u503c\u200b \u200b\u5f02\u5e38\u200b\u503c\u200b\u53ef\u7528\u200b\u586b\u5145\u200b\u66ff\u4ee3\u200b \u200b\u53ef\u200b\u7ed3\u5408\u200b\u7f3a\u5931\u200b\u503c\u200b\u5904\u7406\u200b\u65b9\u6cd5\u200b \u200b\u586b\u5145\u200b\u503c\u200b\u53ef\u80fd\u200b\u4e0d\u200b\u51c6\u786e\u200b \u200b\u4fee\u6b63\u200b\uff08Capping\uff09 \u200b\u5f02\u5e38\u200b\u503c\u200b\u5bf9\u6a21\u578b\u200b\u5f71\u54cd\u200b\u5927\u200b\uff0c\u200b\u4f46\u200b\u6570\u636e\u91cf\u200b\u4e0d\u80fd\u200b\u4e22\u200b \u200b\u4fdd\u7559\u200b\u6570\u636e\u91cf\u200b\uff0c\u200b\u51cf\u5c11\u200b\u5f71\u54cd\u200b \u200b\u53ef\u80fd\u200b\u6539\u53d8\u200b\u5206\u5e03\u200b \u200b\u4fdd\u7559\u200b \u200b\u5f02\u5e38\u200b\u503c\u200b\u662f\u200b\u771f\u5b9e\u6709\u6548\u200b\u4e8b\u4ef6\u200b \u200b\u4fdd\u7559\u200b\u4fe1\u606f\u200b \u200b\u53ef\u80fd\u200b\u5f71\u54cd\u200b\u6a21\u578b"},{"location":"machine/interview/#_16","title":"\u91cd\u590d\u200b\u6570\u636e\u5904\u7406\u200b\uff1a\u200b\u8bc6\u522b\u200b\u5e76\u200b\u5220\u9664\u200b\u5b8c\u5168\u200b\u91cd\u590d\u200b\u7684\u200b\u6837\u672c","text":"<p>\u200b\u91cd\u590d\u200b\u6570\u636e\u200b \u200b\u662f\u200b\u6307\u200b\u5728\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b \u200b\u5b8c\u5168\u76f8\u540c\u200b\u6216\u200b\u90e8\u5206\u200b\u5b57\u200b\u6bb5\u200b\u76f8\u540c\u200b\u7684\u200b\u6837\u672c\u200b\u884c\u200b\u3002 \u200b\u4f8b\u5982\u200b\uff1a</p> \u200b\u59d3\u540d\u200b \u200b\u5e74\u9f84\u200b \u200b\u57ce\u5e02\u200b \u200b\u5f20\u4e09\u200b 25 \u200b\u5317\u4eac\u200b \u200b\u5f20\u4e09\u200b 25 \u200b\u5317\u4eac\u200b \u2190 \u200b\u91cd\u590d\u200b\u884c\u200b \u200b\u674e\u56db\u200b 30 \u200b\u4e0a\u6d77\u200b <p>\u200b\u91cd\u590d\u200b\u6570\u636e\u200b\u53ef\u80fd\u200b\u6765\u6e90\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u200b\u591a\u6b21\u200b\u5bfc\u5165\u200b</li> <li>\u200b\u91c7\u96c6\u200b\u7cfb\u7edf\u200b\u9519\u8bef\u200b</li> <li>\u200b\u6570\u636e\u200b\u5408\u5e76\u200b\uff08merge/concat\uff09\u200b\u65f6\u672a\u200b\u53bb\u200b\u91cd\u200b</li> </ul>"},{"location":"machine/interview/#_17","title":"\u91cd\u590d\u200b\u6570\u636e\u200b\u7684\u200b\u8bc6\u522b","text":"<p>\u200b\u5728\u200b Pandas \u200b\u4e2d\u200b\u5e38\u7528\u200b\u65b9\u6cd5\u200b\u662f\u200b <code>duplicated()</code>\uff1a</p> <pre><code>import pandas as pd\n\ndf = pd.DataFrame({\n    '\u200b\u59d3\u540d\u200b': ['\u200b\u5f20\u4e09\u200b', '\u200b\u5f20\u4e09\u200b', '\u200b\u674e\u56db\u200b', '\u200b\u738b\u4e94\u200b', '\u200b\u674e\u56db\u200b'],\n    '\u200b\u5e74\u9f84\u200b': [25, 25, 30, 22, 30],\n    '\u200b\u57ce\u5e02\u200b': ['\u200b\u5317\u4eac\u200b', '\u200b\u5317\u4eac\u200b', '\u200b\u4e0a\u6d77\u200b', '\u200b\u5e7f\u5dde\u200b', '\u200b\u4e0a\u6d77\u200b']\n})\n\n# \u200b\u5224\u65ad\u200b\u662f\u5426\u200b\u91cd\u590d\u200b\uff08\u200b\u8fd4\u56de\u200b\u5e03\u5c14\u503c\u200b\uff09\nprint(df.duplicated())\n\n# \u200b\u67e5\u770b\u200b\u91cd\u590d\u200b\u7684\u200b\u6837\u672c\u200b\nprint(df[df.duplicated()])\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>0    False\n1     True\n2    False\n3    False\n4     True\ndtype: bool\n</code></pre>"},{"location":"machine/interview/#1_3","title":"1\ufe0f\u20e3 \u200b\u5220\u9664\u200b\u5b8c\u5168\u200b\u91cd\u590d\u200b\u7684\u200b\u884c","text":"<pre><code>df_clean = df.drop_duplicates()\n</code></pre> <p>\u200b\u9ed8\u8ba4\u200b\u6839\u636e\u200b\u6240\u6709\u200b\u5217\u53bb\u200b\u91cd\u200b\uff0c\u200b\u4ec5\u200b\u4fdd\u7559\u200b\u7b2c\u4e00\u6b21\u200b\u51fa\u73b0\u200b\u7684\u200b\u8bb0\u5f55\u200b\u3002</p>"},{"location":"machine/interview/#2_2","title":"2\ufe0f\u20e3 \u200b\u6307\u5b9a\u200b\u5217\u200b\u8fdb\u884c\u200b\u53bb\u200b\u91cd","text":"<p>\u200b\u6709\u65f6\u200b\u53ea\u60f3\u200b\u6839\u636e\u200b\u67d0\u200b\u51e0\u5217\u200b\u5224\u65ad\u200b\u662f\u5426\u200b\u91cd\u590d\u200b\uff0c\u200b\u6bd4\u5982\u200b \u201c\u200b\u59d3\u540d\u200b + \u200b\u57ce\u5e02\u200b\u201d\uff1a</p> <pre><code>df_clean = df.drop_duplicates(subset=['\u200b\u59d3\u540d\u200b', '\u200b\u57ce\u5e02\u200b'])\n</code></pre>"},{"location":"machine/interview/#3_1","title":"3\ufe0f\u20e3 \u200b\u4fdd\u7559\u200b\u6700\u540e\u200b\u4e00\u6b21\u200b\u51fa\u73b0\u200b\u7684\u200b\u8bb0\u5f55","text":"<pre><code>df_clean = df.drop_duplicates(keep='last')\n</code></pre> <ul> <li><code>keep='first'</code>\uff08\u200b\u9ed8\u8ba4\u200b\uff09\uff1a\u200b\u4fdd\u7559\u200b\u7b2c\u4e00\u6b21\u200b\u51fa\u73b0\u200b\u7684\u200b\u8bb0\u5f55\u200b</li> <li><code>keep='last'</code>\uff1a\u200b\u4fdd\u7559\u200b\u6700\u540e\u200b\u4e00\u6b21\u200b\u51fa\u73b0\u200b\u7684\u200b\u8bb0\u5f55\u200b</li> <li><code>keep=False</code>\uff1a\u200b\u5220\u9664\u200b\u6240\u6709\u200b\u91cd\u590d\u200b\u9879\u200b</li> </ul>"},{"location":"machine/interview/#4_3","title":"4\ufe0f\u20e3 \u200b\u67e5\u770b\u200b\u91cd\u590d\u200b\u7684\u200b\u6570\u91cf","text":"<pre><code>duplicate_count = df.duplicated().sum()\nprint(f\"\u200b\u5171\u6709\u200b {duplicate_count} \u200b\u6761\u200b\u91cd\u590d\u200b\u6837\u672c\u200b\")\n</code></pre> \u200b\u65b9\u6cd5\u200b \u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b \u200b\u529f\u80fd\u200b \u200b\u68c0\u67e5\u200b\u91cd\u590d\u200b <code>df.duplicated()</code> \u200b\u8fd4\u56de\u200b\u5e03\u5c14\u200bSeries \u200b\u67e5\u770b\u200b\u91cd\u590d\u200b\u884c\u200b <code>df[df.duplicated()]</code> \u200b\u663e\u793a\u200b\u6240\u6709\u200b\u91cd\u590d\u8bb0\u5f55\u200b \u200b\u5220\u9664\u200b\u91cd\u590d\u200b <code>df.drop_duplicates()</code> \u200b\u5220\u9664\u200b\u91cd\u590d\u8bb0\u5f55\u200b \u200b\u6307\u5b9a\u200b\u5217\u53bb\u200b\u91cd\u200b <code>df.drop_duplicates(subset=['\u200b\u5217\u540d\u200b'])</code> \u200b\u6309\u200b\u6307\u5b9a\u200b\u5217\u200b\u5224\u65ad\u200b\u91cd\u590d\u200b \u200b\u4fdd\u7559\u200b\u6700\u540e\u200b <code>keep='last'</code> \u200b\u4fdd\u7559\u200b\u6700\u540e\u200b\u4e00\u6761\u200b\u91cd\u590d\u8bb0\u5f55\u200b \u200b\u5220\u9664\u200b\u6240\u6709\u200b\u91cd\u590d\u200b <code>keep=False</code> \u200b\u6240\u6709\u200b\u91cd\u590d\u200b\u7684\u200b\u90fd\u200b\u5220\u9664"},{"location":"machine/interview/#22","title":"2.2 \u200b\u6570\u636e\u200b\u8f6c\u6362","text":""},{"location":"machine/interview/#z-scoremin-max-scaling","title":"\u7279\u5f81\u200b\u7f29\u653e\u200b\uff1a\u200b\u6807\u51c6\u5316\u200b\uff08Z-score\uff09\u3001\u200b\u5f52\u4e00\u5316\u200b\uff08Min-Max Scaling\uff09\u200b\u7b49\u200b\uff0c\u200b\u6d88\u9664\u200b\u91cf\u7eb2\u200b\u5f71\u54cd","text":"<p>\u200b\u4e0d\u540c\u200b\u7279\u5f81\u200b\u5f80\u5f80\u200b\u5177\u6709\u200b \u200b\u4e0d\u540c\u200b\u7684\u200b\u91cf\u7eb2\u200b\uff08\u200b\u5355\u4f4d\u200b\uff09\u200b\u548c\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\uff1a</p> \u200b\u7279\u5f81\u200b \u200b\u542b\u4e49\u200b \u200b\u53d6\u503c\u200b\u8303\u56f4\u200b \u200b\u8eab\u9ad8\u200b \u200b\u5355\u4f4d\u200b\uff1acm 150 ~ 190 \u200b\u4f53\u91cd\u200b \u200b\u5355\u4f4d\u200b\uff1akg 40 ~ 90 \u200b\u6536\u5165\u200b \u200b\u5355\u4f4d\u200b\uff1a\u200b\u5143\u200b 3,000 ~ 30,000 <p>\ud83d\udc49 \u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u8ddd\u79bb\u200b\u5ea6\u91cf\u200b\u7c7b\u200b\u7b97\u6cd5\u200b\uff08\u200b\u5982\u200b KNN\u3001K-Means\uff09\u200b\u4f1a\u200b\u88ab\u200b\u6570\u503c\u200b\u5927\u200b\u7684\u200b\u7279\u5f81\u200b\u4e3b\u5bfc\u200b\u3002</li> <li>\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u7b97\u6cd5\u200b\uff08\u200b\u5982\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u3001\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff09\u200b\u4f1a\u56e0\u200b\u4e0d\u540c\u200b\u7279\u5f81\u200b\u5c3a\u5ea6\u200b\u4e0d\u540c\u200b\u5bfc\u81f4\u200b\u6536\u655b\u200b\u7f13\u6162\u200b\u6216\u200b\u9707\u8361\u200b\u3002</li> </ul> <p>\u2705 \u200b\u901a\u8fc7\u200b\u7279\u5f81\u200b\u7f29\u653e\u200b\uff0c\u200b\u4f7f\u200b\u6240\u6709\u200b\u7279\u5f81\u200b\u5904\u4e8e\u200b\u76f8\u4f3c\u200b\u7684\u200b\u6570\u503c\u200b\u8303\u56f4\u200b\uff0c\u200b\u4ece\u800c\u200b\uff1a</p> <ul> <li>\u200b\u63d0\u9ad8\u200b\u6a21\u578b\u200b\u6536\u655b\u200b\u901f\u5ea6\u200b</li> <li>\u200b\u907f\u514d\u200b\u7279\u5f81\u200b\u201c\u200b\u4e3b\u5bfc\u200b\u6548\u5e94\u200b\u201d</li> <li>\u200b\u63d0\u9ad8\u200b\u8bad\u7ec3\u200b\u7a33\u5b9a\u6027\u200b</li> </ul>"},{"location":"machine/interview/#_18","title":"\ud83e\uddee \u200b\u5e38\u89c1\u200b\u7279\u5f81\u200b\u7f29\u653e\u200b\u65b9\u6cd5","text":""},{"location":"machine/interview/#1-standardization-z-score-normalization","title":"1\ufe0f\u20e3 \u200b\u6807\u51c6\u5316\u200b\uff08Standardization / Z-score Normalization\uff09","text":"<p>\u200b\u516c\u5f0f\u200b\uff1a $$ x' = \\frac{x - \\mu}{\\sigma} $$</p> <ul> <li>\\(\\mu\\)\uff1a\u200b\u5747\u503c\u200b\uff08mean\uff09</li> <li>\\(\\sigma\\)\uff1a\u200b\u6807\u51c6\u5dee\u200b\uff08standard deviation\uff09</li> </ul> <p>\ud83d\udc49 \u200b\u7f29\u653e\u200b\u540e\u200b\u6570\u636e\u200b\u670d\u4ece\u200b \u200b\u5747\u503c\u200b\u4e3a\u200b0\u3001\u200b\u6807\u51c6\u5dee\u200b\u4e3a\u200b1 \u200b\u7684\u200b\u5206\u5e03\u200b\u3002</p> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u200b\u8fd1\u4f3c\u200b\u7b26\u5408\u200b\u6b63\u6001\u5206\u5e03\u200b</li> <li>\u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b\uff08Logistic Regression, SVM, PCA\uff09</li> <li>\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u8f93\u5165\u200b\u5c42\u200b</li> </ul> <p>Python \u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>from sklearn.preprocessing import StandardScaler\nimport pandas as pd\n\ndata = pd.DataFrame({\n    '\u200b\u8eab\u9ad8\u200b': [160, 170, 180],\n    '\u200b\u4f53\u91cd\u200b': [50, 65, 80]\n})\n\nscaler = StandardScaler()\nscaled = scaler.fit_transform(data)\n\nprint(pd.DataFrame(scaled, columns=data.columns))\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> \u200b\u8eab\u9ad8\u200b \u200b\u4f53\u91cd\u200b -1.22 -1.22 0.00 0.00 1.22 1.22"},{"location":"machine/interview/#2-min-max-scaling","title":"2\ufe0f\u20e3 \u200b\u5f52\u4e00\u5316\u200b\uff08Min-Max Scaling\uff09","text":"<p>\u200b\u516c\u5f0f\u200b\uff1a $$ x' = \\frac{x - x_{\\min}}{x_{\\max} - x_{\\min}} $$</p> <ul> <li>\u200b\u5c06\u200b\u6570\u636e\u200b\u7f29\u653e\u200b\u81f3\u200b <code>[0, 1]</code> \u200b\u6216\u200b\u81ea\u5b9a\u4e49\u200b\u533a\u95f4\u200b <code>[a, b]</code>\u3002</li> </ul> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u200b\u6ca1\u6709\u200b\u660e\u663e\u200b\u7684\u200b\u6b63\u6001\u5206\u5e03\u200b</li> <li>\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u8f93\u5165\u200b\u5c42\u200b\uff08\u200b\u5c24\u5176\u200b\u662f\u200b Sigmoid / Tanh\uff09</li> <li>\u200b\u9700\u8981\u200b\u56fa\u5b9a\u200b\u533a\u95f4\u200b\u7684\u200b\u7b97\u6cd5\u200b</li> </ul> <p>Python \u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler(feature_range=(0, 1))\nscaled = scaler.fit_transform(data)\n\nprint(pd.DataFrame(scaled, columns=data.columns))\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> \u200b\u8eab\u9ad8\u200b \u200b\u4f53\u91cd\u200b 0.0 0.0 0.5 0.5 1.0 1.0"},{"location":"machine/interview/#3-robust-scaling","title":"3\ufe0f\u20e3 \u200b\u7a33\u5065\u200b\u7f29\u653e\u200b\uff08Robust Scaling\uff09","text":"<p>\u200b\u516c\u5f0f\u200b\uff1a $$ x' = \\frac{x - \\text{Median}(x)}{IQR} $$ \u200b\u5176\u4e2d\u200b (IQR = Q3 - Q1)\uff08\u200b\u56db\u5206\u200b\u4f4d\u8ddd\u200b\uff09\u3002</p> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u200b\u4e2d\u200b\u5b58\u5728\u200b\u5f02\u5e38\u200b\u503c\u200b\uff08outliers\uff09</li> <li>\u200b\u5bf9\u200b\u5f02\u5e38\u200b\u503c\u200b\u4e0d\u200b\u654f\u611f\u200b\u7684\u200b\u6a21\u578b\u200b</li> </ul> <p>Python \u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>from sklearn.preprocessing import RobustScaler\n\nscaler = RobustScaler()\nscaled = scaler.fit_transform(data)\nprint(pd.DataFrame(scaled, columns=data.columns))\n</code></pre>"},{"location":"machine/interview/#4-l2-normalization","title":"4\ufe0f\u20e3 \u200b\u5355\u4f4d\u5411\u91cf\u200b\u5316\u200b\uff08L2 Normalization\uff09","text":"<p>\u200b\u516c\u5f0f\u200b\uff1a $$ x' = \\frac{x}{|x|} $$ \u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u6837\u672c\u200b\u7f29\u653e\u200b\u4e3a\u200b\u5355\u4f4d\u200b\u957f\u5ea6\u200b\uff08\u200b\u5373\u200b\u5411\u91cf\u200b\u957f\u5ea6\u200b\u4e3a\u200b1\uff09\u3002</p> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a</p> <ul> <li>\u200b\u6587\u672c\u200b\u5411\u91cf\u200b\uff08TF-IDF\u3001\u200b\u8bcd\u200b\u5d4c\u5165\u200b\uff09</li> <li>\u200b\u4f59\u5f26\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u5ea6\u91cf\u200b\u4efb\u52a1\u200b</li> </ul> <p>Python \u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>from sklearn.preprocessing import Normalizer\n\nscaler = Normalizer(norm='l2')\nscaled = scaler.fit_transform(data)\nprint(pd.DataFrame(scaled, columns=data.columns))\n</code></pre> \u200b\u65b9\u6cd5\u200b \u200b\u516c\u5f0f\u200b \u200b\u7ed3\u679c\u200b\u8303\u56f4\u200b \u200b\u662f\u5426\u200b\u6297\u200b\u5f02\u5e38\u200b\u503c\u200b \u200b\u5178\u578b\u200b\u5e94\u7528\u200b \u200b\u6807\u51c6\u5316\u200b ((x - \u03bc)/\u03c3) \u200b\u65e0\u200b\u754c\u200b\uff08\u200b\u5747\u503c\u200b0\uff0c\u200b\u65b9\u5dee\u200b1\uff09 \u274c SVM, PCA, LR \u200b\u5f52\u4e00\u5316\u200b ((x - min)/(max - min)) [0, 1] \u274c \u200b\u795e\u7ecf\u7f51\u7edc\u200b \u200b\u7a33\u5065\u200b\u7f29\u653e\u200b ((x - Median)/IQR) \u200b\u65e0\u200b\u754c\u200b \u2705 \u200b\u542b\u200b\u5f02\u5e38\u200b\u503c\u200b\u6570\u636e\u200b \u200b\u5355\u4f4d\u5411\u91cf\u200b\u5316\u200b (x/\u2016x\u2016) \u200b\u5411\u91cf\u200b\u957f\u5ea6\u200b=1 \u2705 \u200b\u6587\u672c\u200b\u76f8\u4f3c\u200b\u5ea6"},{"location":"machine/interview/#one-hot-encoding","title":"\u7f16\u7801\u200b\u5206\u7c7b\u200b\u53d8\u91cf\u200b\uff1a\u200b\u72ec\u70ed\u200b\u7f16\u7801\u200b\uff08One-Hot Encoding\uff09\u3001\u200b\u6807\u7b7e\u200b\u7f16\u7801\u200b\u7b49\u200b\uff0c\u200b\u5c06\u200b\u7c7b\u522b\u200b\u6570\u636e\u200b\u8f6c\u4e3a\u200b\u6570\u503c\u6570\u636e","text":"<p>\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u7b97\u6cd5\u200b\uff08\u200b\u5c24\u5176\u200b\u662f\u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b\u3001\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff09\u200b\u53ea\u80fd\u200b\u5904\u7406\u200b\u6570\u503c\u200b\u578b\u200b\u7279\u5f81\u200b\uff0c \u200b\u800c\u200b\u73b0\u5b9e\u200b\u6570\u636e\u200b\u5e38\u200b\u5305\u542b\u200b\u5927\u91cf\u200b\u7c7b\u522b\u200b\u7279\u5f81\u200b\uff08categorical features\uff09\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> \u200b\u6027\u522b\u200b \u200b\u57ce\u5e02\u200b \u200b\u6559\u80b2\u200b\u6c34\u5e73\u200b \u200b\u7537\u200b \u200b\u5317\u4eac\u200b \u200b\u672c\u79d1\u200b \u200b\u5973\u200b \u200b\u4e0a\u6d77\u200b \u200b\u7855\u58eb\u200b \u200b\u5973\u200b \u200b\u5e7f\u5dde\u200b \u200b\u535a\u58eb\u200b <p>\ud83d\udc49 \u200b\u6a21\u578b\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u7406\u89e3\u200b\u201c\u200b\u5317\u4eac\u200b\u201d\u201c\u200b\u7855\u58eb\u200b\u201d\uff0c \u200b\u5fc5\u987b\u200b\u628a\u200b\u8fd9\u4e9b\u200b\u6587\u5b57\u200b\u8f6c\u4e3a\u200b\u6570\u503c\u200b\uff0c\u200b\u4e14\u200b\u8981\u200b\u907f\u514d\u200b\u5f15\u5165\u200b\u4eba\u4e3a\u200b\u7684\u200b\u5927\u5c0f\u200b\u5173\u7cfb\u200b\u3002</p>"},{"location":"machine/interview/#_19","title":"\ud83e\uddee \u200b\u5e38\u89c1\u200b\u7f16\u7801\u65b9\u6cd5","text":""},{"location":"machine/interview/#1-label-encoding","title":"1\ufe0f\u20e3 \u200b\u6807\u7b7e\u200b\u7f16\u7801\u200b\uff08Label Encoding\uff09","text":"<p>\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u7c7b\u522b\u200b\u6620\u5c04\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6807\u7b7e\u200b\u3002</p> \u200b\u57ce\u5e02\u200b \u200b\u7f16\u7801\u200b \u200b\u5317\u4eac\u200b 0 \u200b\u4e0a\u6d77\u200b 1 \u200b\u5e7f\u5dde\u200b 2 <p>\u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>from sklearn.preprocessing import LabelEncoder\nimport pandas as pd\n\ndf = pd.DataFrame({'\u200b\u57ce\u5e02\u200b': ['\u200b\u5317\u4eac\u200b', '\u200b\u4e0a\u6d77\u200b', '\u200b\u5e7f\u5dde\u200b', '\u200b\u5317\u4eac\u200b']})\n\nencoder = LabelEncoder()\ndf['\u200b\u57ce\u5e02\u200b_\u200b\u7f16\u7801\u200b'] = encoder.fit_transform(df['\u200b\u57ce\u5e02\u200b'])\n\nprint(df)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> \u200b\u57ce\u5e02\u200b \u200b\u57ce\u5e02\u200b_\u200b\u7f16\u7801\u200b \u200b\u5317\u4eac\u200b 0 \u200b\u4e0a\u6d77\u200b 2 \u200b\u5e7f\u5dde\u200b 1 \u200b\u5317\u4eac\u200b 0 <p>\u2705 \u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u7b80\u5355\u200b\u9ad8\u6548\u200b</li> <li>\u200b\u4e0d\u200b\u589e\u52a0\u200b\u7ef4\u5ea6\u200b</li> </ul> <p>\u26a0\ufe0f \u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u5f15\u5165\u200b\u4e86\u200b\u201c\u200b\u5927\u5c0f\u200b\u201d\u200b\u5173\u7cfb\u200b\uff080 &lt; 1 &lt; 2\uff09\uff0c   \u200b\u5bf9\u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b\u6216\u200b\u8ddd\u79bb\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b KNN\u3001SVM\uff09\u200b\u4f1a\u200b\u9020\u6210\u200b\u8bef\u5bfc\u200b\u3002</li> </ul> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a</p> <ul> <li>\u200b\u6811\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b\u51b3\u7b56\u6811\u200b\u3001\u200b\u968f\u673a\u200b\u68ee\u6797\u200b\u3001XGBoost\uff09   \u200b\u6811\u200b\u6a21\u578b\u200b\u53ea\u200b\u5173\u6ce8\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\uff0c\u200b\u4e0d\u200b\u53d7\u200b\u6570\u503c\u200b\u5927\u5c0f\u200b\u5f71\u54cd\u200b\u3002</li> </ul>"},{"location":"machine/interview/#2-one-hot-encoding","title":"2\ufe0f\u20e3 \u200b\u72ec\u70ed\u200b\u7f16\u7801\u200b\uff08One-Hot Encoding\uff09","text":"<p>\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u7c7b\u522b\u8f6c\u6362\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u201c0/1 \u200b\u5411\u91cf\u200b\u201d\uff0c \u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u4ee3\u8868\u200b\u4e00\u4e2a\u200b\u7c7b\u522b\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u3002</p> \u200b\u57ce\u5e02\u200b \u200b\u5317\u4eac\u200b \u200b\u4e0a\u6d77\u200b \u200b\u5e7f\u5dde\u200b \u200b\u5317\u4eac\u200b 1 0 0 \u200b\u4e0a\u6d77\u200b 0 1 0 \u200b\u5e7f\u5dde\u200b 0 0 1 <p>\u200b\u5b9e\u73b0\u200b\uff1a</p>"},{"location":"machine/interview/#1pandas-get_dummies","title":"\u2705 \u200b\u65b9\u6cd5\u200b 1\uff1aPandas \u200b\u81ea\u5e26\u200b <code>get_dummies()</code>","text":"<pre><code>df = pd.DataFrame({'\u200b\u57ce\u5e02\u200b': ['\u200b\u5317\u4eac\u200b', '\u200b\u4e0a\u6d77\u200b', '\u200b\u5e7f\u5dde\u200b', '\u200b\u5317\u4eac\u200b']})\ndf_encoded = pd.get_dummies(df, columns=['\u200b\u57ce\u5e02\u200b'])\nprint(df_encoded)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> \u200b\u57ce\u5e02\u200b_\u200b\u5317\u4eac\u200b \u200b\u57ce\u5e02\u200b_\u200b\u4e0a\u6d77\u200b \u200b\u57ce\u5e02\u200b_\u200b\u5e7f\u5dde\u200b 1 0 0 0 1 0 0 0 1 1 0 0"},{"location":"machine/interview/#2scikit-learn-onehotencoder","title":"\u2705 \u200b\u65b9\u6cd5\u200b 2\uff1aScikit-Learn <code>OneHotEncoder</code>","text":"<pre><code>from sklearn.preprocessing import OneHotEncoder\n\nencoder = OneHotEncoder(sparse_output=False)\nencoded = encoder.fit_transform(df[['\u200b\u57ce\u5e02\u200b']])\n\nprint(pd.DataFrame(encoded, columns=encoder.get_feature_names_out(['\u200b\u57ce\u5e02\u200b'])))\n</code></pre> <p>\u2705 \u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u4e0d\u200b\u5f15\u5165\u200b\u7c7b\u522b\u200b\u987a\u5e8f\u200b</li> <li>\u200b\u9002\u7528\u200b\u4e8e\u200b\u51e0\u4e4e\u200b\u6240\u6709\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u7b97\u6cd5\u200b</li> </ul> <p>\u26a0\ufe0f \u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u7ef4\u5ea6\u200b\u7206\u70b8\u200b\uff08\u200b\u7c7b\u522b\u200b\u591a\u200b\u65f6\u4f1a\u200b\u4ea7\u751f\u200b\u5927\u91cf\u200b\u7279\u5f81\u200b\uff09</li> <li>\u200b\u7a00\u758f\u200b\u77e9\u9635\u200b\u5360\u7528\u200b\u5185\u5b58\u200b</li> </ul> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a</p> <ul> <li>\u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b Logistic Regression\uff09</li> <li>\u200b\u795e\u7ecf\u7f51\u7edc\u200b</li> <li>KNN\u3001SVM\u3001KMeans</li> </ul>"},{"location":"machine/interview/#3-binary-encoding","title":"3\ufe0f\u20e3 \u200b\u4e8c\u503c\u200b\u7f16\u7801\u200b\uff08Binary Encoding\uff09","text":"<p>\u200b\u6bcf\u4e2a\u200b\u7c7b\u522b\u200b\u5148\u200b\u6620\u5c04\u200b\u4e3a\u200b\u6574\u6570\u200b\uff0c\u200b\u518d\u200b\u8f6c\u4e3a\u200b\u4e8c\u8fdb\u5236\u4f4d\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\u6709\u200b 6 \u200b\u4e2a\u200b\u7c7b\u522b\u200b\uff1a</p> \u200b\u7c7b\u522b\u200b \u200b\u6574\u6570\u200b \u200b\u4e8c\u8fdb\u5236\u200b \u200b\u5206\u5217\u200b A 1 001 0,0,1 B 2 010 0,1,0 C 3 011 0,1,1 <p>\u2705 \u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u538b\u7f29\u200b\u7ef4\u5ea6\u200b\uff08\u200b\u6bd4\u72ec\u70ed\u200b\u7f16\u7801\u200b\u5c0f\u200b\uff09</li> <li>\u200b\u4e0d\u200b\u5f15\u5165\u200b\u5e8f\u200b\u5173\u7cfb\u200b   \u26a0\ufe0f \u200b\u7f3a\u70b9\u200b\uff1a</li> <li>\u200b\u4e0d\u200b\u76f4\u89c2\u200b</li> </ul> <p>\u200b\u5b9e\u73b0\u200b\u4f9d\u8d56\u200b\u5e93\u200b\uff1a<code>category_encoders</code></p> <pre><code>!pip install category_encoders\nimport category_encoders as ce\n\nencoder = ce.BinaryEncoder(cols=['\u200b\u57ce\u5e02\u200b'])\ndf_encoded = encoder.fit_transform(df)\nprint(df_encoded)\n</code></pre>"},{"location":"machine/interview/#4-frequency-encoding","title":"4\ufe0f\u20e3 \u200b\u9891\u6570\u200b\u7f16\u7801\u200b\uff08Frequency Encoding\uff09","text":"<p>\u200b\u7528\u200b\u6bcf\u4e2a\u200b\u7c7b\u522b\u200b\u51fa\u73b0\u200b\u7684\u200b\u9891\u7387\u200b\u6216\u200b\u6b21\u6570\u200b\u66ff\u6362\u200b\u7c7b\u522b\u200b\u503c\u200b\u3002</p> \u200b\u57ce\u5e02\u200b \u200b\u9891\u6570\u200b\u7f16\u7801\u200b \u200b\u5317\u4eac\u200b 2 \u200b\u4e0a\u6d77\u200b 1 \u200b\u5e7f\u5dde\u200b 1 <p>\u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>freq = df['\u200b\u57ce\u5e02\u200b'].value_counts()\ndf['\u200b\u57ce\u5e02\u200b_\u200b\u9891\u6570\u200b\u7f16\u7801\u200b'] = df['\u200b\u57ce\u5e02\u200b'].map(freq)\n</code></pre> <p>\u2705 \u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u7b80\u5355\u200b\uff0c\u200b\u4e0d\u200b\u589e\u52a0\u200b\u7ef4\u5ea6\u200b</li> <li>\u200b\u53ef\u200b\u6355\u6349\u200b\u7c7b\u522b\u200b\u5206\u5e03\u200b\u4fe1\u606f\u200b</li> </ul> <p>\u26a0\ufe0f \u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u4ecd\u200b\u53ef\u80fd\u200b\u9690\u542b\u200b\u201c\u200b\u5927\u5c0f\u200b\u201d\u200b\u5173\u7cfb\u200b</li> <li>\u200b\u4e0d\u200b\u9002\u5408\u200b\u8ddd\u79bb\u200b\u5ea6\u91cf\u200b\u6a21\u578b\u200b</li> </ul>"},{"location":"machine/interview/#5-target-encoding","title":"5\ufe0f\u20e3 \u200b\u76ee\u6807\u200b\u7f16\u7801\u200b\uff08Target Encoding\uff09","text":"<p>\u200b\u7528\u200b\u6bcf\u4e2a\u200b\u7c7b\u522b\u200b\u5bf9\u5e94\u200b\u76ee\u6807\u200b\u53d8\u91cf\u200b ( y ) \u200b\u7684\u200b\u5e73\u5747\u503c\u200b\u7f16\u7801\u200b\u3002 \u200b\u5e38\u7528\u200b\u4e8e\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\uff08\u200b\u5c24\u5176\u200b\u662f\u200b\u9ad8\u200b\u57fa\u6570\u200b\u7c7b\u522b\u200b\uff09\u3002</p> \u200b\u57ce\u5e02\u200b \u200b\u5e73\u5747\u200b\u8d2d\u4e70\u7387\u200b \u200b\u5317\u4eac\u200b 0.8 \u200b\u4e0a\u6d77\u200b 0.3 \u200b\u5e7f\u5dde\u200b 0.6 <p>\u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>target_mean = df.groupby('\u200b\u57ce\u5e02\u200b')['\u200b\u662f\u5426\u200b\u8d2d\u4e70\u200b'].mean()\ndf['\u200b\u57ce\u5e02\u200b_\u200b\u76ee\u6807\u200b\u7f16\u7801\u200b'] = df['\u200b\u57ce\u5e02\u200b'].map(target_mean)\n</code></pre> <p>\u2705 \u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u200b\u9ad8\u200b\u57fa\u6570\u200b\u7c7b\u522b\u200b\u6709\u200b\u5f88\u200b\u5f3a\u200b\u8868\u73b0\u529b\u200b   \u26a0\ufe0f \u200b\u7f3a\u70b9\u200b\uff1a</li> <li>\u200b\u5bb9\u6613\u200b\u8fc7\u200b\u62df\u5408\u200b\uff08\u200b\u5c24\u5176\u200b\u5728\u200b\u6837\u672c\u200b\u5c11\u65f6\u200b\uff09   \u2192 \u200b\u5e94\u200b\u5728\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\u4e2d\u200b\u8c28\u614e\u200b\u4f7f\u7528\u200b\u3002</li> </ul> \u200b\u7f16\u7801\u65b9\u5f0f\u200b \u200b\u662f\u5426\u200b\u4fdd\u5e8f\u200b \u200b\u662f\u5426\u200b\u6269\u7ef4\u200b \u200b\u662f\u5426\u200b\u6297\u9ad8\u200b\u57fa\u6570\u200b \u200b\u5178\u578b\u200b\u6a21\u578b\u200b \u200b\u5907\u6ce8\u200b \u200b\u6807\u7b7e\u200b\u7f16\u7801\u200b \u2705 \u274c \u2705 \u200b\u6811\u200b\u6a21\u578b\u200b \u200b\u7b80\u5355\u200b\u5feb\u901f\u200b \u200b\u72ec\u70ed\u200b\u7f16\u7801\u200b \u274c \u2705 \u274c \u200b\u7ebf\u6027\u200b\u3001NN \u200b\u65e0\u5e8f\u200b\u7c7b\u522b\u200b\u63a8\u8350\u200b \u200b\u4e8c\u503c\u200b\u7f16\u7801\u200b \u274c \u2705\uff08\u200b\u5c11\u200b\uff09 \u2705 \u200b\u901a\u7528\u200b \u200b\u5e73\u8861\u200b\u7ef4\u5ea6\u200b\u4e0e\u200b\u65e0\u5e8f\u200b\u6027\u200b \u200b\u9891\u6570\u200b\u7f16\u7801\u200b \u274c \u274c \u2705 \u200b\u6811\u200b\u6a21\u578b\u200b \u200b\u6355\u6349\u200b\u5168\u5c40\u200b\u7edf\u8ba1\u200b \u200b\u76ee\u6807\u200b\u7f16\u7801\u200b \u274c \u274c \u2705 \u200b\u9ad8\u200b\u57fa\u6570\u200b\u5206\u7c7b\u200b \u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b\u9700\u200b\u6b63\u5219"},{"location":"machine/interview/#_20","title":"\u6570\u636e\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff1a\u200b\u5982\u200b\u5c06\u200b\u6587\u672c\u200b\u3001\u200b\u65f6\u95f4\u200b\u7b49\u200b\u8f6c\u4e3a\u200b\u6570\u503c\u200b\u578b","text":"<p>\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u7b97\u6cd5\u200b\u5927\u591a\u6570\u200b\u53ea\u80fd\u200b\u5904\u7406\u200b\u6570\u503c\u200b\uff08float\u3001int\uff09\u200b\u7c7b\u578b\u200b\u6570\u636e\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> <ul> <li>\u200b\u56de\u5f52\u200b\u6a21\u578b\u200b\u3001SVM\u3001KNN\u3001\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7b49\u200b\uff1b</li> <li>\u200b\u51b3\u7b56\u6811\u200b\u7c7b\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b RandomForest\uff09\u200b\u867d\u53ef\u200b\u5904\u7406\u200b\u90e8\u5206\u200b\u7c7b\u522b\u200b\u6570\u636e\u200b\uff0c\u200b\u4f46\u200b\u901a\u5e38\u200b\u4ecd\u200b\u5efa\u8bae\u200b\u6570\u503c\u200b\u5316\u200b\u3002</li> </ul> <p>\ud83d\udc49 \u200b\u76ee\u6807\u200b\uff1a \u200b\u5c06\u200b\u6587\u672c\u200b\u3001\u200b\u65e5\u671f\u200b\u3001\u200b\u5e03\u5c14\u200b\u3001\u200b\u7c7b\u522b\u200b\u7b49\u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u6a21\u578b\u200b\u53ef\u200b\u7406\u89e3\u200b\u7684\u200b\u6570\u503c\u200b\u7279\u5f81\u200b\u3002</p>"},{"location":"machine/interview/#_21","title":"\ud83d\udcda \u200b\u5e38\u89c1\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\u53ca\u200b\u8f6c\u6362\u200b\u65b9\u5f0f","text":"\u6570\u636e\u7c7b\u578b\u200b \u200b\u8f6c\u6362\u200b\u65b9\u5f0f\u200b \u200b\u4e3e\u4f8b\u8bf4\u660e\u200b \u200b\u6587\u672c\u200b\u578b\u200b\uff08string/object\uff09 \u200b\u7f16\u7801\u200b\uff08\u200b\u5982\u200bLabelEncoder\u3001OneHotEncoder\uff09 \u201c\u200b\u57ce\u5e02\u200b\u201d\u200b\u5217\u200b\uff1a<code>[\"\u200b\u5317\u4eac\u200b\",\"\u200b\u4e0a\u6d77\u200b\",\"\u200b\u5e7f\u5dde\u200b\"] \u2192 [0,1,2]</code>\uff08LabelEncoder\uff09\u200b\u6216\u200b <code>[1,0,0],[0,1,0],[0,0,1]</code>\uff08OneHot\uff09 \u200b\u7c7b\u522b\u200b\u578b\u200b\uff08categorical\uff09 \u200b\u7f16\u7801\u200b\uff08\u200b\u4e0e\u200b\u6587\u672c\u200b\u578b\u200b\u76f8\u540c\u200b\uff09 \u201c\u200b\u6027\u522b\u200b\u201d\u200b\u5217\u200b\uff1a<code>[\"\u200b\u7537\u200b\",\"\u200b\u5973\u200b\"] \u2192 [0,1]</code> \u200b\u65f6\u95f4\u200b\u578b\u200b\uff08datetime\uff09 \u200b\u63d0\u53d6\u200b\u65f6\u95f4\u200b\u7279\u5f81\u200b\u6216\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u65f6\u95f4\u200b\u6233\u200b \u201c2024-05-10\u201d \u2192 \u200b\u63d0\u53d6\u200b\u51fa\u200b<code>\u200b\u5e74\u200b=2024, \u200b\u6708\u200b=5, \u200b\u65e5\u200b=10, \u200b\u661f\u671f\u200b=5</code>\uff0c\u200b\u6216\u200b\u8f6c\u6362\u200b\u4e3a\u200b <code>timestamp=1715299200</code> \u200b\u5e03\u5c14\u200b\u578b\u200b\uff08bool\uff09 \u200b\u8f6c\u6362\u200b\u4e3a\u200b0\u200b\u548c\u200b1 <code>True \u2192 1, False \u2192 0</code> \u200b\u6df7\u5408\u578b\u200b\uff08\u200b\u6570\u503c\u200b+\u200b\u6587\u672c\u200b\uff09 \u200b\u5148\u200b\u6e05\u6d17\u200b\u518d\u200b\u8f6c\u6362\u200b <code>\"12kg\" \u2192 12</code> \u200b\u6216\u200b <code>\"\u200b\u5426\u200b\"\u21920</code>\u3001<code>\"\u200b\u662f\u200b\"\u21921</code> \u200b\u6587\u672c\u200b\u63cf\u8ff0\u200b\u578b\u200b\uff08\u200b\u81ea\u7136\u8bed\u8a00\u200b\uff09 \u200b\u6587\u672c\u200b\u5411\u200b\u91cf\u5316\u200b\uff08TF-IDF\u3001Word2Vec\u3001BERT Embedding\uff09 <code>\"\u200b\u6211\u200b\u559c\u6b22\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\"</code> \u2192 \u200b\u5411\u91cf\u200b <code>[0.25, 0.11, 0.83, ...]</code>"},{"location":"machine/interview/#_22","title":"\ud83e\udde0 \u200b\u65f6\u95f4\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u8be6\u89e3","text":"<p>\u200b\u65f6\u95f4\u200b\u6570\u636e\u200b\u662f\u200b\u6700\u200b\u5e38\u89c1\u200b\u7684\u200b\u201c\u200b\u975e\u200b\u6570\u503c\u200b\u578b\u200b\u201d\u200b\u6570\u636e\u200b\u4e4b\u4e00\u200b\u3002 \u200b\u901a\u5e38\u200b\u6709\u200b\u4e09\u79cd\u200b\u5904\u7406\u200b\u65b9\u5f0f\u200b\uff1a</p>"},{"location":"machine/interview/#1_4","title":"\u2705 \u200b\u65b9\u6cd5\u200b1\uff1a\u200b\u63d0\u53d6\u200b\u65f6\u95f4\u200b\u7279\u5f81","text":"<p>\u200b\u9002\u5408\u200b\u6709\u200b\u5468\u671f\u200b\u89c4\u5f8b\u200b\u7684\u200b\u6570\u636e\u200b\uff08\u200b\u5982\u200b\u9500\u91cf\u200b\u3001\u200b\u6e29\u5ea6\u200b\u3001\u200b\u4ea4\u901a\u6d41\u91cf\u200b\u7b49\u200b\uff09</p> <pre><code>import pandas as pd\n\ndf = pd.DataFrame({\n    \"date\": pd.to_datetime([\"2023-05-01\", \"2023-06-15\", \"2023-07-20\"])\n})\ndf[\"year\"] = df[\"date\"].dt.year\ndf[\"month\"] = df[\"date\"].dt.month\ndf[\"day\"] = df[\"date\"].dt.day\ndf[\"weekday\"] = df[\"date\"].dt.weekday\nprint(df)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>        date  year  month  day  weekday\n0 2023-05-01  2023      5    1        0\n1 2023-06-15  2023      6   15        3\n2 2023-07-20  2023      7   20        3\n</code></pre>"},{"location":"machine/interview/#2_3","title":"\u2705 \u200b\u65b9\u6cd5\u200b2\uff1a\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u65f6\u95f4\u200b\u6233\u200b\uff08\u200b\u6570\u503c\u200b\u578b\u200b\uff09","text":"<pre><code>df[\"timestamp\"] = df[\"date\"].astype(\"int64\") // 1e9  # \u200b\u79d2\u7ea7\u200b\u65f6\u95f4\u200b\u6233\u200b\n</code></pre> <p>\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>2023-05-01 \u2192 1682899200\n</code></pre>"},{"location":"machine/interview/#3sincos","title":"\u2705 \u200b\u65b9\u6cd5\u200b3\uff1a\u200b\u5468\u671f\u6027\u200b\u7279\u5f81\u200b\u7f16\u7801\u200b\uff08sin\u3001cos\uff09","text":"<p>\u200b\u5468\u671f\u6027\u200b\u65f6\u95f4\u200b\u7279\u5f81\u200b\uff08\u200b\u5982\u200b\u201c\u200b\u6708\u4efd\u200b\u201d\u3001\u201c\u200b\u5c0f\u65f6\u200b\u201d\uff09\u200b\u53ef\u7528\u200b\u6b63\u200b\u4f59\u5f26\u200b\u51fd\u6570\u200b\u7f16\u7801\u200b\uff0c\u200b\u4ee5\u200b\u4fdd\u7559\u200b\u8fde\u7eed\u6027\u200b\u3002</p> <pre><code>import numpy as np\n\ndf[\"month_sin\"] = np.sin(2 * np.pi * df[\"month\"] / 12)\ndf[\"month_cos\"] = np.cos(2 * np.pi * df[\"month\"] / 12)\n</code></pre> <p>\ud83d\udc49 \u200b\u4f18\u70b9\u200b\uff1a\u200b\u6a21\u578b\u200b\u53ef\u4ee5\u200b\u5b66\u4e60\u200b\u5230\u200b\u201c12\u200b\u6708\u200b\u548c\u200b1\u200b\u6708\u200b\u201d\u200b\u76f8\u90bb\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u8ddd\u79bb\u200b\u4e3a\u200b11\u3002</p>"},{"location":"machine/interview/#_23","title":"\ud83e\uddee \u200b\u6587\u672c\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u8be6\u89e3","text":""},{"location":"machine/interview/#1label-encoding","title":"\u2705 \u200b\u65b9\u6cd5\u200b1\uff1aLabel Encoding\uff08\u200b\u6807\u7b7e\u200b\u7f16\u7801\u200b\uff09","text":"<p>\u200b\u9002\u5408\u200b\u6709\u200b\u5927\u5c0f\u200b\u6216\u200b\u987a\u5e8f\u200b\u5173\u7cfb\u200b\u7684\u200b\u7c7b\u522b\u200b\uff08\u200b\u5982\u200b\uff1a\u200b\u4f4e\u200b\u3001\u200b\u4e2d\u200b\u3001\u200b\u9ad8\u200b\uff09</p> <pre><code>from sklearn.preprocessing import LabelEncoder\n\nencoder = LabelEncoder()\ndf[\"label_encoded\"] = encoder.fit_transform([\"\u200b\u5317\u4eac\u200b\",\"\u200b\u4e0a\u6d77\u200b\",\"\u200b\u5e7f\u5dde\u200b\"])\nprint(df)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>\u200b\u539f\u59cb\u200b\u503c\u200b\uff1a[\"\u200b\u5317\u4eac\u200b\",\"\u200b\u4e0a\u6d77\u200b\",\"\u200b\u5e7f\u5dde\u200b\"]\n\u200b\u7f16\u7801\u200b\u540e\u200b\uff1a[0, 2, 1]\n</code></pre>"},{"location":"machine/interview/#2one-hot-encoding","title":"\u2705 \u200b\u65b9\u6cd5\u200b2\uff1aOne-Hot Encoding\uff08\u200b\u72ec\u70ed\u200b\u7f16\u7801\u200b\uff09","text":"<p>\u200b\u9002\u5408\u200b\u65e0\u5e8f\u200b\u7c7b\u522b\u200b</p> <pre><code>import pandas as pd\n\ndf = pd.DataFrame({\"city\": [\"\u200b\u5317\u4eac\u200b\", \"\u200b\u4e0a\u6d77\u200b\", \"\u200b\u5e7f\u5dde\u200b\"]})\ndf = pd.get_dummies(df, columns=[\"city\"])\nprint(df)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>   city_\u200b\u5317\u4eac\u200b  city_\u200b\u4e0a\u6d77\u200b  city_\u200b\u5e7f\u5dde\u200b\n0        1        0        0\n1        0        1        0\n2        0        0        1\n</code></pre>"},{"location":"machine/interview/#3tf-idf-word2vec-bert","title":"\u2705 \u200b\u65b9\u6cd5\u200b3\uff1a\u200b\u6587\u672c\u200b\u5411\u200b\u91cf\u5316\u200b\uff08TF-IDF / Word2Vec / BERT\uff09","text":"<p>\u200b\u7528\u4e8e\u200b\u5904\u7406\u200b\u81ea\u7136\u8bed\u8a00\u200b\u6587\u672c\u200b\u3002</p> <pre><code>from sklearn.feature_extraction.text import TfidfVectorizer\n\ntexts = [\"\u200b\u6211\u200b\u559c\u6b22\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\", \"\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u5f88\u200b\u597d\u73a9\u200b\"]\ntfidf = TfidfVectorizer()\nfeatures = tfidf.fit_transform(texts)\nprint(features.toarray())\n</code></pre> \u200b\u6b65\u9aa4\u200b \u200b\u8f6c\u6362\u200b\u5bf9\u8c61\u200b \u200b\u5de5\u5177\u200b/\u200b\u65b9\u6cd5\u200b \u200b\u8f6c\u6362\u200b\u540e\u200b\u7c7b\u578b\u200b 1 \u200b\u5e03\u5c14\u200b\u578b\u200b <code>.astype(int)</code> int 2 \u200b\u6587\u672c\u200b/\u200b\u7c7b\u522b\u200b\u578b\u200b <code>LabelEncoder</code> / <code>OneHotEncoder</code> / <code>get_dummies()</code> \u200b\u6570\u503c\u200b 3 \u200b\u65f6\u95f4\u200b\u578b\u200b <code>pd.to_datetime()</code> + <code>.dt</code>\u200b\u63d0\u53d6\u200b \u200b\u6570\u503c\u200b 4 \u200b\u6df7\u5408\u200b\u5b57\u7b26\u4e32\u200b <code>str.replace()</code> + <code>.astype()</code> \u200b\u6570\u503c\u200b 5 \u200b\u81ea\u7136\u8bed\u8a00\u200b\u6587\u672c\u200b TF-IDF / Word2Vec / Embedding \u200b\u5411\u91cf"},{"location":"machine/interview/#23","title":"2.3 \u200b\u6570\u636e\u200b\u5206\u5272","text":""},{"location":"machine/interview/#_24","title":"\u5212\u5206\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u3001\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\uff0c\u200b\u5408\u7406\u200b\u5206\u914d\u200b\u6570\u636e\u200b\uff0c\u200b\u907f\u514d\u200b\u8fc7\u200b\u62df\u5408","text":"<p>\u200b\u5728\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u6a21\u578b\u200b\u4e0d\u4ec5\u200b\u5728\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u4e0a\u200b\u8868\u73b0\u200b\u597d\u200b\uff0c\u200b\u8fd8\u8981\u200b\u5728\u200b\u672a\u77e5\u200b\u6570\u636e\u200b\u4e0a\u200b\u8868\u73b0\u200b\u4f18\u5f02\u200b\u3002 \u200b\u5982\u679c\u200b\u53ea\u7528\u200b\u540c\u200b\u4e00\u4efd\u200b\u6570\u636e\u200b\u6765\u200b\u8bad\u7ec3\u200b\u548c\u200b\u8bc4\u4f30\u200b\u6a21\u578b\u200b\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6a21\u578b\u200b\u201c\u200b\u80cc\u9898\u200b\u201d\u2014\u2014\u200b\u5373\u200b \u200b\u8fc7\u200b\u62df\u5408\u200b\uff08Overfitting\uff09\u3002</p> <p>\ud83d\udc49 \u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\uff1a \u200b\u5c06\u200b\u539f\u59cb\u6570\u636e\u200b\u5212\u5206\u200b\u4e3a\u200b\u4e0d\u540c\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u4e0d\u540c\u200b\u76ee\u7684\u200b\uff1a</p> \u200b\u6570\u636e\u200b\u96c6\u200b \u200b\u7528\u9014\u200b \u200b\u4f5c\u7528\u200b \u200b\u8bad\u7ec3\u200b\u96c6\u200b\uff08Training Set\uff09 \u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b \u200b\u5b66\u4e60\u200b\u6570\u636e\u200b\u7279\u5f81\u200b\u548c\u200b\u89c4\u5f8b\u200b \u200b\u9a8c\u8bc1\u200b\u96c6\u200b\uff08Validation Set\uff09 \u200b\u8c03\u53c2\u200b\u548c\u200b\u6a21\u578b\u200b\u9009\u62e9\u200b \u200b\u5224\u65ad\u200b\u6a21\u578b\u200b\u5728\u200b\u672a\u200b\u89c1\u200b\u6570\u636e\u200b\u4e0a\u200b\u7684\u200b\u8868\u73b0\u200b\uff0c\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b \u200b\u6d4b\u8bd5\u200b\u96c6\u200b\uff08Test Set\uff09 \u200b\u6700\u7ec8\u200b\u8bc4\u4f30\u200b \u200b\u6a21\u62df\u200b\u771f\u5b9e\u200b\u73af\u5883\u200b\u4e0b\u200b\u7684\u200b\u6a21\u578b\u200b\u8868\u73b0"},{"location":"machine/interview/#_25","title":"\ud83d\udcda \u200b\u5e38\u89c1\u200b\u5212\u5206\u200b\u6bd4\u4f8b","text":"\u6570\u636e\u200b\u96c6\u200b \u200b\u5e38\u89c1\u200b\u6bd4\u4f8b\u200b \u200b\u8bad\u7ec3\u200b\u96c6\u200b 60%\uff5e80% \u200b\u9a8c\u8bc1\u200b\u96c6\u200b 10%\uff5e20% \u200b\u6d4b\u8bd5\u200b\u96c6\u200b 10%\uff5e20% <p>\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>80% \u200b\u8bad\u7ec3\u200b\u96c6\u200b + 10% \u200b\u9a8c\u8bc1\u200b\u96c6\u200b + 10% \u200b\u6d4b\u8bd5\u200b\u96c6\u200b\n</code></pre> <p>\u2705 \u200b\u7ecf\u9a8c\u200b\u6cd5\u5219\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u91cf\u200b\u8f83\u5927\u200b \u2192 \u200b\u53ef\u4ee5\u200b 70% / 15% / 15%</li> <li>\u200b\u6570\u636e\u91cf\u200b\u8f83\u200b\u5c0f\u200b \u2192 \u200b\u91c7\u7528\u200b \u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff08K-Fold Cross Validation\uff09 \u200b\u6765\u200b\u66ff\u4ee3\u200b\u9a8c\u8bc1\u200b\u96c6\u200b</li> </ul>"},{"location":"machine/interview/#python","title":"\ud83e\udde0 \u200b\u6570\u636e\u200b\u5212\u5206\u200b\u7684\u200b\u57fa\u672c\u200b\u65b9\u6cd5\u200b\uff08Python \u200b\u5b9e\u4f8b\u200b\uff09","text":""},{"location":"machine/interview/#1-sklearn-train_test_split","title":"\u2705 \u200b\u65b9\u6cd5\u200b1\uff1a\u200b\u4f7f\u7528\u200b sklearn \u200b\u7684\u200b <code>train_test_split</code>","text":"<pre><code>from sklearn.model_selection import train_test_split\nimport pandas as pd\n\n# \u200b\u6784\u9020\u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\ndata = pd.DataFrame({\n    \"feature1\": range(1, 11),\n    \"feature2\": range(11, 21),\n    \"label\": [0, 1, 0, 1, 0, 1, 0, 1, 0, 1]\n})\n\n# \u200b\u5148\u200b\u5212\u5206\u200b\u8bad\u7ec3\u200b\u96c6\u200b + \u200b\u4e34\u65f6\u200b\u96c6\u200b\ntrain_set, temp_set = train_test_split(data, test_size=0.3, random_state=42)\n\n# \u200b\u518d\u200b\u5212\u5206\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\nval_set, test_set = train_test_split(temp_set, test_size=0.5, random_state=42)\n\nprint(f\"\u200b\u8bad\u7ec3\u200b\u96c6\u200b: {train_set.shape}\")\nprint(f\"\u200b\u9a8c\u8bc1\u200b\u96c6\u200b: {val_set.shape}\")\nprint(f\"\u200b\u6d4b\u8bd5\u200b\u96c6\u200b: {test_set.shape}\")\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>\u200b\u8bad\u7ec3\u200b\u96c6\u200b: (7, 3)\n\u200b\u9a8c\u8bc1\u200b\u96c6\u200b: (1, 3)\n\u200b\u6d4b\u8bd5\u200b\u96c6\u200b: (2, 3)\n</code></pre>"},{"location":"machine/interview/#2stratified-split","title":"\u2705 \u200b\u65b9\u6cd5\u200b2\uff1a\u200b\u5206\u5c42\u62bd\u6837\u200b\uff08Stratified Split\uff09","text":"<p>\u200b\u7528\u4e8e\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff0c\u200b\u4fdd\u8bc1\u200b\u6bcf\u4e2a\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u7c7b\u522b\u200b\u6bd4\u4f8b\u200b\u4e00\u81f4\u200b\u3002</p> <pre><code>from sklearn.model_selection import train_test_split\n\nX = data[[\"feature1\", \"feature2\"]]\ny = data[\"label\"]\n\nX_train, X_temp, y_train, y_temp = train_test_split(\n    X, y, test_size=0.3, stratify=y, random_state=42\n)\nX_val, X_test, y_val, y_test = train_test_split(\n    X_temp, y_temp, test_size=0.5, stratify=y_temp, random_state=42\n)\n</code></pre> <p>\ud83d\udc49 \u200b\u4f18\u70b9\u200b\uff1a \u200b\u907f\u514d\u200b\u5212\u5206\u200b\u540e\u200b\u67d0\u200b\u4e00\u7c7b\u200b\u6837\u672c\u200b\u8fc7\u5c11\u200b\u6216\u200b\u7f3a\u5931\u200b\u3002</p>"},{"location":"machine/interview/#cross-validation","title":"\ud83e\uddea \u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff08Cross Validation\uff09","text":"<p>\u200b\u5f53\u200b\u6570\u636e\u91cf\u200b\u8f83\u200b\u5c0f\u65f6\u200b\uff0c\u200b\u5355\u6b21\u200b\u5212\u5206\u200b\u4e0d\u591f\u200b\u7a33\u5b9a\u200b\uff0c\u200b\u8fd9\u65f6\u200b\u7528\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\u3002 \u200b\u5e38\u7528\u200b\u65b9\u5f0f\u200b\u662f\u200b K \u200b\u6298\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff08K-Fold CV\uff09\uff1a</p>"},{"location":"machine/interview/#_26","title":"\ud83d\udcd8 \u200b\u539f\u7406\u200b\uff1a","text":"<ul> <li>\u200b\u5c06\u200b\u6570\u636e\u200b\u5206\u6210\u200b K \u200b\u4efd\u200b\uff1b</li> <li>\u200b\u6bcf\u6b21\u200b\u53d6\u200b 1 \u200b\u4efd\u200b\u4f5c\u4e3a\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\uff0c\u200b\u5176\u4f59\u200b K\u22121 \u200b\u4efd\u200b\u4f5c\u4e3a\u200b\u8bad\u7ec3\u200b\u96c6\u200b\uff1b</li> <li>\u200b\u91cd\u590d\u200b K \u200b\u6b21\u200b\uff1b</li> <li>\u200b\u6700\u540e\u200b\u5bf9\u200b K \u200b\u6b21\u200b\u9a8c\u8bc1\u200b\u7ed3\u679c\u200b\u53d6\u200b\u5e73\u5747\u200b\u3002</li> </ul> <pre><code>from sklearn.model_selection import KFold, cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.datasets import load_iris\n\nX, y = load_iris(return_X_y=True)\nmodel = LogisticRegression(max_iter=1000)\n\nkf = KFold(n_splits=5, shuffle=True, random_state=42)\nscores = cross_val_score(model, X, y, cv=kf)\n\nprint(\"\u200b\u6bcf\u6298\u200b\u5f97\u5206\u200b:\", scores)\nprint(\"\u200b\u5e73\u5747\u200b\u51c6\u786e\u7387\u200b:\", scores.mean())\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>\u200b\u6bcf\u6298\u200b\u5f97\u5206\u200b: [0.96 0.93 0.96 0.90 0.96]\n\u200b\u5e73\u5747\u200b\u51c6\u786e\u7387\u200b: 0.942\n</code></pre> <p>\u2705 \u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u66f4\u200b\u7a33\u5b9a\u200b\u7684\u200b\u6a21\u578b\u200b\u8bc4\u4f30\u200b\uff1b</li> <li>\u200b\u6570\u636e\u200b\u5145\u5206\u5229\u7528\u200b\uff1b</li> <li>\u200b\u7279\u522b\u200b\u9002\u5408\u200b\u6837\u672c\u200b\u8f83\u5c11\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</li> </ul> \u200b\u95ee\u9898\u200b \u200b\u539f\u56e0\u200b \u200b\u89e3\u51b3\u529e\u6cd5\u200b \u200b\u6570\u636e\u200b\u6cc4\u6f0f\u200b\uff08Data Leakage\uff09 \u200b\u6d4b\u8bd5\u6570\u636e\u200b\u5728\u200b\u8bad\u7ec3\u200b\u9636\u6bb5\u200b\u88ab\u200b\u201c\u200b\u5077\u770b\u200b\u201d \u200b\u5212\u5206\u200b\u524d\u8981\u200b\u5148\u200b\u5206\u5272\u200b\u6570\u636e\u200b\uff0c\u200b\u518d\u200b\u505a\u200b\u6807\u51c6\u5316\u200b\u3001\u200b\u7279\u5f81\u200b\u5de5\u7a0b\u200b \u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u6570\u636e\u200b\u4e0d\u80fd\u200b\u968f\u673a\u200b\u5212\u5206\u200b \u200b\u65f6\u95f4\u200b\u6709\u200b\u987a\u5e8f\u200b \u200b\u5e94\u200b\u4f7f\u7528\u200b\u65f6\u95f4\u200b\u987a\u5e8f\u200b\u5212\u5206\u200b\uff0c\u200b\u5982\u200b\u524d\u200b 80% \u200b\u8bad\u7ec3\u200b\uff0c\u200b\u540e\u200b 20% \u200b\u6d4b\u8bd5\u200b \u200b\u7c7b\u522b\u200b\u5206\u5e03\u200b\u4e0d\u200b\u5747\u8861\u200b \u200b\u67d0\u7c7b\u200b\u6837\u672c\u200b\u6bd4\u4f8b\u200b\u592a\u4f4e\u200b \u200b\u4f7f\u7528\u200b\u5206\u5c42\u62bd\u6837\u200b\uff08stratify\uff09\u200b\u4fdd\u6301\u200b\u6bd4\u4f8b\u200b \u200b\u968f\u673a\u6027\u200b\u95ee\u9898\u200b \u200b\u6bcf\u6b21\u200b\u5212\u5206\u200b\u7ed3\u679c\u200b\u4e0d\u540c\u200b \u200b\u8bbe\u7f6e\u200b <code>random_state</code> \u200b\u4fdd\u8bc1\u200b\u7ed3\u679c\u200b\u53ef\u200b\u590d\u73b0"},{"location":"machine/interview/#_27","title":"\u5b8c\u6574\u200b\u793a\u4f8b","text":"<pre><code>from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nimport pandas as pd\n\n# 1\ufe0f\u20e3 \u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\ndf = pd.read_csv(\"data.csv\")\n\n# 2\ufe0f\u20e3 \u200b\u5212\u5206\u200b\u7279\u5f81\u200b\u4e0e\u200b\u6807\u7b7e\u200b\nX = df.drop(\"label\", axis=1)\ny = df[\"label\"]\n\n# 3\ufe0f\u20e3 \u200b\u5212\u5206\u200b\u8bad\u7ec3\u200b\u3001\u200b\u9a8c\u8bc1\u200b\u3001\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\nX_train, X_temp, y_train, y_temp = train_test_split(X, y, test_size=0.3, stratify=y, random_state=42)\nX_val, X_test, y_val, y_test = train_test_split(X_temp, y_temp, test_size=0.5, stratify=y_temp, random_state=42)\n\n# 4\ufe0f\u20e3 \u200b\u4ec5\u7528\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u62df\u5408\u200b\u6807\u51c6\u5316\u200b\u5668\u200b\uff0c\u200b\u9632\u6b62\u200b\u6570\u636e\u200b\u6cc4\u6f0f\u200b\nscaler = StandardScaler().fit(X_train)\n\n# 5\ufe0f\u20e3 \u200b\u5bf9\u200b\u5168\u90e8\u200b\u96c6\u505a\u200b\u53d8\u6362\u200b\nX_train = scaler.transform(X_train)\nX_val = scaler.transform(X_val)\nX_test = scaler.transform(X_test)\n</code></pre>"},{"location":"machine/interview/#24","title":"2.4 \u200b\u5176\u4ed6\u200b\u5904\u7406","text":""},{"location":"machine/interview/#smote","title":"\u5904\u7406\u200b\u4e0d\u200b\u5e73\u8861\u200b\u6570\u636e\u200b\uff1a\u200b\u8fc7\u200b\u91c7\u6837\u200b\u3001\u200b\u6b20\u200b\u91c7\u6837\u200b\u3001SMOTE\u200b\u7b49","text":"<p>\u200b\u5728\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u4e2d\u200b\uff0c\u200b\u5982\u679c\u200b\u5404\u7c7b\u200b\u522b\u200b\u6837\u672c\u200b\u6570\u91cf\u200b\u5dee\u5f02\u200b\u5f88\u5927\u200b\uff0c\u200b\u5c31\u200b\u53eb\u505a\u200b\u7c7b\u522b\u200b\u4e0d\u200b\u5e73\u8861\u200b\u3002 \u200b\u4f8b\u5982\u200b\uff1a</p> \u200b\u7c7b\u522b\u200b \u200b\u6837\u672c\u200b\u6570\u91cf\u200b \u200b\u6b63\u200b\u6837\u672c\u200b\uff081\uff09 100 \u200b\u8d1f\u200b\u6837\u672c\u200b\uff080\uff09 5000 <p>\u200b\u6b64\u65f6\u200b\uff1a</p> <ul> <li>\u200b\u6a21\u578b\u200b\u82e5\u200b\u53ea\u200b\u9884\u6d4b\u200b\u201c0\u201d\uff0c\u200b\u51c6\u786e\u7387\u200b\u4e5f\u200b\u80fd\u200b\u8fbe\u200b 98%\uff1b</li> <li>\u200b\u4f46\u200b\u6a21\u578b\u200b\u51e0\u4e4e\u200b\u6ca1\u200b\u5b66\u5230\u200b\u5c11\u6570\u7c7b\u200b\uff081\uff09\u200b\u7684\u200b\u7279\u5f81\u200b\u3002</li> </ul> <p>\ud83d\udc49 \u200b\u7ed3\u679c\u200b\uff1a\u200b\u9ad8\u200b\u51c6\u786e\u7387\u200b\u4f46\u200b\u4f4e\u200b\u53ec\u56de\u200b\u7387\u200b\uff0c\u200b\u6a21\u578b\u200b\u201c\u200b\u770b\u4f3c\u200b\u806a\u660e\u200b\uff0c\u200b\u5b9e\u5219\u200b\u65e0\u7528\u200b\u201d\u3002</p>"},{"location":"machine/interview/#_28","title":"\ud83e\udde0 \u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u5904\u7406\u200b\u4e0d\u200b\u5e73\u8861\u200b\u6570\u636e\u200b\uff1f","text":"<p>\u200b\u82e5\u200b\u4e0d\u200b\u5904\u7406\u200b\uff0c\u200b\u6a21\u578b\u200b\u4f1a\u200b\uff1a</p> <ul> <li>\u200b\u503e\u5411\u200b\u4e8e\u200b\u9884\u6d4b\u200b\u591a\u6570\u200b\u7c7b\u200b\uff1b</li> <li>\u200b\u5ffd\u7565\u200b\u7a00\u6709\u200b\u4e8b\u4ef6\u200b\uff08\u200b\u5982\u200b\u6b3a\u8bc8\u200b\u68c0\u6d4b\u200b\u3001\u200b\u75be\u75c5\u8bca\u65ad\u200b\u3001\u200b\u5f02\u5e38\u200b\u68c0\u6d4b\u200b\uff09\uff1b</li> <li>\u200b\u6027\u80fd\u6307\u6807\u200b\uff08\u200b\u51c6\u786e\u7387\u200b\uff09\u200b\u5931\u771f\u200b\u3002</li> </ul> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b \u200b\u91cd\u65b0\u200b\u5e73\u8861\u200b\u6570\u636e\u5206\u5e03\u200b\uff0c\u200b\u8ba9\u200b\u6a21\u578b\u200b\u516c\u5e73\u200b\u5b66\u4e60\u200b\u6bcf\u200b\u4e00\u7c7b\u200b\u3002</p>"},{"location":"machine/interview/#_29","title":"\u2699\ufe0f \u200b\u5e38\u89c1\u200b\u7684\u200b\u5904\u7406\u200b\u65b9\u6cd5","text":"\u65b9\u6cd5\u200b\u7c7b\u522b\u200b \u200b\u4ee3\u8868\u200b\u65b9\u6cd5\u200b \u200b\u601d\u60f3\u200b \u200b\u6570\u636e\u200b\u5c42\u9762\u200b \u200b\u6b20\u200b\u91c7\u6837\u200b\u3001\u200b\u8fc7\u200b\u91c7\u6837\u200b\u3001SMOTE \u200b\u6539\u53d8\u200b\u6570\u636e\u5206\u5e03\u200b \u200b\u7b97\u6cd5\u200b\u5c42\u9762\u200b \u200b\u52a0\u6743\u200b\u6a21\u578b\u200b\u3001\u200b\u4ee3\u4ef7\u200b\u654f\u611f\u200b\u5b66\u4e60\u200b \u200b\u4fee\u6539\u200b\u8bad\u7ec3\u200b\u6743\u91cd\u200b \u200b\u8bc4\u4f30\u200b\u5c42\u9762\u200b \u200b\u4f7f\u7528\u200b F1-score\u3001AUC \u200b\u7b49\u200b\u6307\u6807\u200b \u200b\u6539\u53d8\u200b\u8bc4\u4f30\u200b\u65b9\u5f0f"},{"location":"machine/interview/#_30","title":"\ud83e\udde9 \u200b\u6570\u636e\u200b\u5c42\u9762\u200b\u65b9\u6cd5\u200b\u8be6\u89e3","text":""},{"location":"machine/interview/#1-under-sampling","title":"1\ufe0f\u20e3 \u200b\u6b20\u200b\u91c7\u6837\u200b\uff08Under-Sampling\uff09","text":"<p>\ud83d\udc49 \u200b\u601d\u60f3\u200b\uff1a \u200b\u4ece\u200b\u591a\u6570\u200b\u7c7b\u4e2d\u200b\u968f\u673a\u200b\u5220\u9664\u200b\u90e8\u5206\u200b\u6837\u672c\u200b\uff0c\u200b\u4f7f\u200b\u5404\u7c7b\u200b\u6837\u672c\u200b\u6570\u91cf\u200b\u63a5\u8fd1\u200b\u3002</p> <p>\u2705 \u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u7b80\u5355\u200b\u76f4\u89c2\u200b</li> <li>\u200b\u964d\u4f4e\u200b\u8ba1\u7b97\u200b\u91cf\u200b</li> </ul> <p>\u26a0\ufe0f \u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u4e22\u5931\u200b\u591a\u6570\u200b\u7c7b\u200b\u4fe1\u606f\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5f71\u54cd\u200b\u6a21\u578b\u200b\u8868\u73b0\u200b</li> </ul> <p>\ud83d\udcd8 \u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>from imblearn.under_sampling import RandomUnderSampler\nimport pandas as pd\n\nX = pd.DataFrame({'x1': [1,2,3,4,5,6,7,8], 'x2':[2,3,4,5,6,7,8,9]})\ny = [0,0,0,0,1,1,1,1]\n\nrus = RandomUnderSampler(random_state=42)\nX_res, y_res = rus.fit_resample(X, y)\n\nprint(\"\u200b\u91c7\u6837\u200b\u524d\u200b:\", pd.Series(y).value_counts())\nprint(\"\u200b\u91c7\u6837\u200b\u540e\u200b:\", pd.Series(y_res).value_counts())\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>\u200b\u91c7\u6837\u200b\u524d\u200b:\n0    4\n1    4\n\u200b\u91c7\u6837\u200b\u540e\u200b:\n0    4\n1    4\n</code></pre>"},{"location":"machine/interview/#2-over-sampling","title":"2\ufe0f\u20e3 \u200b\u8fc7\u200b\u91c7\u6837\u200b\uff08Over-Sampling\uff09","text":"<p>\ud83d\udc49 \u200b\u601d\u60f3\u200b\uff1a \u200b\u901a\u8fc7\u200b\u590d\u5236\u200b\u6216\u200b\u5408\u6210\u200b\u65b0\u200b\u7684\u200b\u5c11\u6570\u7c7b\u200b\u6837\u672c\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u6570\u91cf\u200b\u4e0e\u200b\u591a\u6570\u200b\u7c7b\u200b\u63a5\u8fd1\u200b\u3002</p> <p>\u2705 \u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u4e0d\u200b\u4e22\u5931\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u6709\u52a9\u4e8e\u200b\u6a21\u578b\u200b\u5b66\u4e60\u200b\u5c11\u6570\u7c7b\u200b\u7279\u5f81\u200b</li> </ul> <p>\u26a0\ufe0f \u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u5bb9\u6613\u200b\u8fc7\u200b\u62df\u5408\u200b\uff08\u200b\u5c24\u5176\u200b\u662f\u200b\u7b80\u5355\u200b\u590d\u5236\u200b\u6837\u672c\u200b\uff09</li> </ul> <p>\ud83d\udcd8 \u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>from imblearn.over_sampling import RandomOverSampler\n\nros = RandomOverSampler(random_state=42)\nX_res, y_res = ros.fit_resample(X, y)\n\nprint(\"\u200b\u91c7\u6837\u200b\u540e\u200b:\", pd.Series(y_res).value_counts())\n</code></pre>"},{"location":"machine/interview/#3-smotesynthetic-minority-over-sampling-technique","title":"3\ufe0f\u20e3 SMOTE\uff08Synthetic Minority Over-sampling Technique\uff09","text":"<p>\ud83d\udc49 \u200b\u601d\u60f3\u200b\uff1a \u200b\u901a\u8fc7\u200b\u63d2\u503c\u200b\u7b97\u6cd5\u200b\u751f\u6210\u200b\u65b0\u200b\u7684\u200b\u5c11\u6570\u7c7b\u200b\u6837\u672c\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u7b80\u5355\u200b\u590d\u5236\u200b\u3002</p> <ul> <li>\u200b\u5bf9\u4e8e\u200b\u5c11\u6570\u7c7b\u200b\u6837\u672c\u200b \\(x_i\\)\uff0c\u200b\u5728\u200b\u5176\u200b K \u200b\u4e2a\u200b\u8fd1\u90bb\u200b\u4e2d\u200b\u968f\u673a\u200b\u9009\u53d6\u200b\u4e00\u4e2a\u200b\u6837\u672c\u200b \\(x_j\\)</li> <li>\u200b\u6309\u200b\u6bd4\u4f8b\u200b\u751f\u6210\u200b\u65b0\u200b\u6837\u672c\u200b\uff1a $$   x_{new} = x_i + \\lambda (x_j - x_i), \\quad \\lambda \\in [0,1] $$</li> </ul> <p>\u2705 \u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u6bd4\u200b\u968f\u673a\u200b\u8fc7\u200b\u91c7\u6837\u200b\u66f4\u200b\u5408\u7406\u200b</li> <li>\u200b\u51cf\u5c11\u200b\u8fc7\u200b\u62df\u5408\u200b</li> </ul> <p>\u26a0\ufe0f \u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u53ef\u80fd\u200b\u751f\u6210\u200b\u566a\u58f0\u200b\u70b9\u200b\uff08\u200b\u8fb9\u754c\u200b\u6a21\u7cca\u200b\uff09</li> </ul> <p>\ud83d\udcd8 \u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>from imblearn.over_sampling import SMOTE\n\nsm = SMOTE(random_state=42)\nX_res, y_res = sm.fit_resample(X, y)\n\nprint(\"\u200b\u91c7\u6837\u200b\u540e\u200b:\", pd.Series(y_res).value_counts())\n</code></pre>"},{"location":"machine/interview/#_31","title":"\ud83e\uddee \u200b\u7b97\u6cd5\u200b\u5c42\u9762\u200b\u65b9\u6cd5","text":"<p>\u200b\u6709\u65f6\u200b\u4e0d\u6539\u200b\u6570\u636e\u200b\uff0c\u200b\u800c\u662f\u200b\u5728\u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\u65f6\u200b\u8c03\u6574\u200b\u6743\u91cd\u200b\u3002</p>"},{"location":"machine/interview/#1-class-weight","title":"\u2705 1. \u200b\u7c7b\u522b\u200b\u6743\u91cd\u200b\uff08Class Weight\uff09","text":"<p>\u200b\u4f8b\u5982\u200b\u5728\u200b Logistic Regression\u3001SVM\u3001RandomForest \u200b\u4e2d\u200b\uff1a</p> <pre><code>from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression(class_weight='balanced')\nmodel.fit(X_res, y_res)\n</code></pre> <p>\u200b\u4f5c\u7528\u200b\uff1a</p> <ul> <li>\u200b\u81ea\u52a8\u200b\u6839\u636e\u200b\u7c7b\u522b\u200b\u6570\u91cf\u200b\u5206\u914d\u200b\u6743\u91cd\u200b\uff1a</li> </ul> \\[   w_i = \\frac{N}{2 \\times N_i} \\] <p>\u200b\u5373\u200b\u7c7b\u522b\u200b\u6837\u672c\u200b\u8d8a\u200b\u5c11\u200b\uff0c\u200b\u6743\u91cd\u200b\u8d8a\u5927\u200b\u3002</p>"},{"location":"machine/interview/#2-cost-sensitive-learning","title":"\u2705 2. \u200b\u4ee3\u4ef7\u200b\u654f\u611f\u200b\u5b66\u4e60\u200b\uff08Cost-sensitive Learning\uff09","text":"<p>\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b \u200b\u8bef\u200b\u5206\u7c7b\u200b\u4ee3\u4ef7\u200b\u77e9\u9635\u200b\uff0c\u200b\u8ba9\u200b\u6a21\u578b\u200b\u201c\u200b\u66f4\u200b\u6015\u200b\u201d\u200b\u5c11\u6570\u7c7b\u200b\u9884\u6d4b\u200b\u9519\u8bef\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\u5728\u200b\u51b3\u7b56\u6811\u200b\u4e2d\u200b\uff1a</p> <pre><code>from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier(class_weight={0:1, 1:5})\n</code></pre>"},{"location":"machine/interview/#_32","title":"\ud83d\udcca \u200b\u8bc4\u4f30\u200b\u5c42\u9762\u200b\u65b9\u6cd5","text":"<p>\u200b\u5f53\u200b\u7c7b\u522b\u200b\u4e0d\u200b\u5e73\u8861\u200b\u65f6\u200b\uff0c\u200b\u51c6\u786e\u7387\u200b\uff08Accuracy\uff09 \u200b\u4e0d\u80fd\u200b\u771f\u5b9e\u200b\u53cd\u6620\u200b\u6027\u80fd\u200b\u3002 \u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u6307\u6807\u200b\uff1a</p> \u200b\u6307\u6807\u200b \u200b\u542b\u4e49\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b \u200b\u7cbe\u786e\u200b\u7387\u200b\uff08Precision\uff09 \u200b\u9884\u6d4b\u200b\u4e3a\u200b\u6b63\u200b\u7684\u200b\u6837\u672c\u200b\u4e2d\u200b\uff0c\u200b\u5b9e\u9645\u200b\u4e3a\u200b\u6b63\u200b\u7684\u200b\u6bd4\u4f8b\u200b \u200b\u5c11\u6570\u7c7b\u200b\u9519\u8bef\u200b\u4ee3\u4ef7\u200b\u9ad8\u65f6\u200b\uff08\u200b\u5982\u200b\u8bc8\u9a97\u200b\u68c0\u6d4b\u200b\uff09 \u200b\u53ec\u56de\u200b\u7387\u200b\uff08Recall\uff09 \u200b\u5b9e\u9645\u200b\u4e3a\u200b\u6b63\u200b\u7684\u200b\u6837\u672c\u200b\u4e2d\u200b\uff0c\u200b\u88ab\u200b\u6a21\u578b\u200b\u627e\u51fa\u200b\u7684\u200b\u6bd4\u4f8b\u200b \u200b\u5c11\u6570\u7c7b\u200b\u6f0f\u68c0\u200b\u4ee3\u4ef7\u200b\u9ad8\u65f6\u200b\uff08\u200b\u5982\u200b\u764c\u75c7\u200b\u68c0\u6d4b\u200b\uff09 F1-score \u200b\u7cbe\u786e\u200b\u7387\u200b\u4e0e\u200b\u53ec\u56de\u200b\u7387\u200b\u7684\u200b\u8c03\u548c\u200b\u5e73\u5747\u200b \u200b\u7efc\u5408\u200b\u8bc4\u4f30\u200b ROC-AUC \u200b\u6a21\u578b\u200b\u533a\u5206\u200b\u7c7b\u522b\u200b\u80fd\u529b\u200b \u200b\u7efc\u5408\u200b\u6027\u80fd\u6307\u6807"},{"location":"machine/interview/#_33","title":"\u6570\u636e\u200b\u589e\u5f3a\u200b\uff1a\u200b\u5728\u200b\u56fe\u50cf\u200b\u3001\u200b\u6587\u672c\u200b\u7b49\u200b\u9886\u57df\u200b\u6269\u5145\u200b\u8bad\u7ec3\u6837\u672c","text":"<p>\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\uff08Data Augmentation\uff09 \u200b\u662f\u200b\u6307\u200b\u901a\u8fc7\u200b\u5bf9\u200b\u5df2\u6709\u200b\u6570\u636e\u200b\u8fdb\u884c\u200b\u53d8\u6362\u200b\u3001\u200b\u6270\u52a8\u200b\u6216\u200b\u751f\u6210\u200b\u65b0\u200b\u6837\u672c\u200b\uff0c\u200b\u6765\u200b\u6269\u5145\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c \u200b\u4ee5\u200b\u63d0\u5347\u200b\u6a21\u578b\u200b\u7684\u200b\u6cdb\u5316\u200b\u80fd\u529b\u200b\uff08Generalization\uff09\u3001\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b\uff08Overfitting\uff09\u3002</p>"},{"location":"machine/interview/#_34","title":"\ud83e\udde0 \u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u505a\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\uff1f","text":"<p>\u200b\u5728\u200b\u5b9e\u9645\u200b\u4e2d\u200b\uff0c\u200b\u6570\u636e\u200b\u5f80\u5f80\u200b\uff1a</p> <ul> <li>\u200b\u6837\u672c\u91cf\u200b\u5c11\u200b\uff1b</li> <li>\u200b\u5206\u5e03\u200b\u4e0d\u5747\u200b\uff1b</li> <li>\u200b\u566a\u58f0\u200b\u5927\u200b\uff1b</li> <li>\u200b\u96be\u4ee5\u200b\u91c7\u96c6\u200b\u3002</li> </ul> <p>\ud83d\udc49 \u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u53ef\u4ee5\u200b\uff1a</p> <ul> <li>\u200b\u589e\u52a0\u200b\u6837\u672c\u200b\u591a\u6837\u6027\u200b\uff1b</li> <li>\u200b\u8ba9\u200b\u6a21\u578b\u200b\u5b66\u4e60\u200b\u201c\u200b\u672c\u8d28\u7279\u5f81\u200b\u201d\uff1b</li> <li>\u200b\u51cf\u5c11\u200b\u8fc7\u200b\u62df\u5408\u200b\u3001\u200b\u63d0\u5347\u200b\u9c81\u68d2\u6027\u200b\uff1b</li> <li>\u200b\u8282\u7ea6\u200b\u6807\u6ce8\u200b\u6210\u672c\u200b\u3002</li> </ul>"},{"location":"machine/interview/#_35","title":"\ud83d\udcca \u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u7684\u200b\u7c7b\u578b\u200b\u603b\u89c8","text":"\u7c7b\u578b\u200b \u200b\u9002\u7528\u200b\u9886\u57df\u200b \u200b\u4e3e\u4f8b\u200b \u200b\u56fe\u50cf\u589e\u5f3a\u200b CV\uff08\u200b\u8ba1\u7b97\u673a\u200b\u89c6\u89c9\u200b\uff09 \u200b\u7ffb\u8f6c\u200b\u3001\u200b\u65cb\u8f6c\u200b\u3001\u200b\u88c1\u526a\u200b\u3001\u200b\u4eae\u5ea6\u200b\u8c03\u6574\u200b\u3001\u200b\u566a\u58f0\u200b\u6dfb\u52a0\u200b \u200b\u6587\u672c\u200b\u589e\u5f3a\u200b NLP\uff08\u200b\u81ea\u7136\u8bed\u8a00\u200b\u5904\u7406\u200b\uff09 \u200b\u540c\u4e49\u8bcd\u200b\u66ff\u6362\u200b\u3001\u200b\u968f\u673a\u200b\u63d2\u5165\u200b\u3001\u200b\u56de\u8bd1\u200b\u3001\u200b\u6df7\u5408\u200b\u751f\u6210\u200b \u200b\u97f3\u9891\u200b\u589e\u5f3a\u200b \u200b\u8bed\u97f3\u200b\u8bc6\u522b\u200b\u3001\u200b\u97f3\u9891\u200b\u5206\u7c7b\u200b \u200b\u52a0\u566a\u200b\u3001\u200b\u53d8\u901f\u200b\u3001\u200b\u53d8\u8c03\u200b\u3001\u200b\u65f6\u95f4\u200b\u88c1\u526a\u200b \u200b\u6570\u503c\u200b\u7279\u5f81\u200b\u589e\u5f3a\u200b \u200b\u7ed3\u6784\u5316\u200b\u6570\u636e\u200b \u200b\u968f\u673a\u200b\u6270\u52a8\u200b\u3001SMOTE\u3001\u200b\u566a\u58f0\u200b\u6ce8\u5165"},{"location":"machine/interview/#_36","title":"\ud83d\uddbc\ufe0f \u200b\u56fe\u50cf\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u8be6\u89e3","text":"<p>\u200b\u56fe\u50cf\u589e\u5f3a\u200b\uff08Image Augmentation\uff09\u200b\u662f\u200b\u6700\u200b\u5e38\u7528\u200b\u7684\u200b\u65b9\u5f0f\u200b\u4e4b\u4e00\u200b\u3002</p>"},{"location":"machine/interview/#1_5","title":"\u2705 1\ufe0f\u20e3 \u200b\u57fa\u672c\u200b\u53d8\u6362","text":"\u65b9\u6cd5\u200b \u200b\u8bf4\u660e\u200b \u200b\u7ffb\u8f6c\u200b\uff08Flip\uff09 \u200b\u6c34\u5e73\u200b\u6216\u200b\u5782\u76f4\u200b\u7ffb\u8f6c\u200b \u200b\u65cb\u8f6c\u200b\uff08Rotation\uff09 \u200b\u968f\u673a\u200b\u89d2\u5ea6\u200b\u65cb\u8f6c\u200b \u200b\u5e73\u79fb\u200b\uff08Shift\uff09 \u200b\u56fe\u50cf\u200b\u5728\u200b\u5e73\u9762\u200b\u5185\u200b\u79fb\u52a8\u200b \u200b\u7f29\u653e\u200b\uff08Zoom\uff09 \u200b\u6539\u53d8\u200b\u5927\u5c0f\u200b \u200b\u88c1\u526a\u200b\uff08Crop\uff09 \u200b\u968f\u673a\u200b\u6216\u200b\u4e2d\u5fc3\u200b\u88c1\u526a\u200b \u200b\u989c\u8272\u200b\u6270\u52a8\u200b \u200b\u6539\u53d8\u200b\u4eae\u5ea6\u200b\u3001\u200b\u5bf9\u6bd4\u5ea6\u200b\u3001\u200b\u9971\u548c\u5ea6\u200b \u200b\u52a0\u200b\u566a\u58f0\u200b \u200b\u6a21\u62df\u200b\u566a\u58f0\u200b\u73af\u5883\u200b <p>\ud83d\udcd8 \u200b\u793a\u4f8b\u200b\uff08\u200b\u4f7f\u7528\u200b PyTorch\uff09</p> <pre><code>from torchvision import transforms\nfrom PIL import Image\n\n# \u200b\u5b9a\u4e49\u6570\u636e\u200b\u589e\u5f3a\u200b\u7ba1\u9053\u200b\ntransform = transforms.Compose([\n    transforms.RandomHorizontalFlip(p=0.5),\n    transforms.RandomRotation(15),\n    transforms.ColorJitter(brightness=0.2, contrast=0.2),\n    transforms.RandomResizedCrop(224, scale=(0.8, 1.0)),\n    transforms.ToTensor()\n])\n\nimg = Image.open(\"cat.jpg\")\naug_img = transform(img)\n</code></pre> <p>\u2705 \u200b\u8fd9\u4e9b\u200b\u64cd\u4f5c\u200b\u80fd\u200b\u5728\u200b\u8bad\u7ec3\u200b\u65f6\u200b\u52a8\u6001\u200b\u5e94\u7528\u200b\uff0c\u200b\u6bcf\u4e2a\u200b epoch \u200b\u751f\u6210\u200b\u4e0d\u540c\u200b\u7248\u672c\u200b\u7684\u200b\u56fe\u7247\u200b\u3002</p>"},{"location":"machine/interview/#2_4","title":"\u2705 2\ufe0f\u20e3 \u200b\u9ad8\u7ea7\u200b\u56fe\u50cf\u589e\u5f3a","text":"\u6280\u672f\u200b \u200b\u539f\u7406\u200b \u200b\u5e94\u7528\u200b Cutout \u200b\u5728\u200b\u56fe\u7247\u200b\u4e0a\u200b\u968f\u673a\u200b\u906e\u76d6\u200b\u4e00\u90e8\u5206\u200b\u533a\u57df\u200b \u200b\u589e\u5f3a\u200b\u6a21\u578b\u200b\u6297\u200b\u906e\u6321\u200b\u6027\u200b Mixup \u200b\u5c06\u200b\u4e24\u5f20\u200b\u56fe\u200b\u7ebf\u6027\u200b\u6df7\u5408\u200b \u200b\u6539\u5584\u200b\u8fb9\u754c\u200b\u6cdb\u5316\u200b\u80fd\u529b\u200b CutMix \u200b\u5c06\u200b\u4e00\u5f20\u200b\u56fe\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u8d34\u5230\u200b\u53e6\u200b\u4e00\u5f20\u200b\u56fe\u200b \u200b\u63d0\u5347\u200b\u9c81\u68d2\u6027\u200b AutoAugment / RandAugment \u200b\u81ea\u52a8\u200b\u641c\u7d22\u200b\u6700\u4f73\u200b\u589e\u5f3a\u200b\u7b56\u7565\u200b \u200b\u63d0\u5347\u200b\u6a21\u578b\u200b\u6027\u80fd"},{"location":"machine/interview/#nlp","title":"\u270d\ufe0f \u200b\u6587\u672c\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\u8be6\u89e3\u200b\uff08NLP\uff09","text":"<p>\u200b\u6587\u672c\u200b\u589e\u5f3a\u200b\u76f8\u5bf9\u200b\u66f4\u200b\u590d\u6742\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8bed\u8a00\u200b\u7ed3\u6784\u200b\u8981\u200b\u4fdd\u6301\u200b\u8bed\u4e49\u200b\u5408\u7406\u200b\u3002</p>"},{"location":"machine/interview/#1_6","title":"\u2705 1\ufe0f\u20e3 \u200b\u57fa\u672c\u200b\u7b56\u7565","text":"\u65b9\u6cd5\u200b \u200b\u793a\u4f8b\u200b \u200b\u8bf4\u660e\u200b \u200b\u540c\u4e49\u8bcd\u200b\u66ff\u6362\u200b \u201c\u200b\u6211\u200b\u5f88\u200b\u9ad8\u5174\u200b\u201d \u2192 \u201c\u200b\u6211\u200b\u975e\u5e38\u200b\u5f00\u5fc3\u200b\u201d \u200b\u66ff\u6362\u200b\u90e8\u5206\u200b\u8bcd\u6c47\u200b \u200b\u968f\u673a\u200b\u63d2\u5165\u200b \u201c\u200b\u6211\u200b\u53bb\u200b\u5403\u996d\u200b\u201d \u2192 \u201c\u200b\u6211\u200b\u9a6c\u4e0a\u200b\u53bb\u200b\u5403\u996d\u200b\u201d \u200b\u968f\u673a\u200b\u63d2\u5165\u200b\u76f8\u8fd1\u200b\u8bcd\u200b \u200b\u968f\u673a\u200b\u5220\u9664\u200b \u201c\u200b\u6211\u200b\u4eca\u5929\u200b\u53bb\u200b\u4e0a\u5b66\u200b\u201d \u2192 \u201c\u200b\u6211\u200b\u53bb\u200b\u4e0a\u5b66\u200b\u201d \u200b\u5220\u9664\u200b\u4e0d\u200b\u5f71\u54cd\u200b\u8bed\u4e49\u200b\u7684\u200b\u8bcd\u200b \u200b\u968f\u673a\u200b\u4ea4\u6362\u200b \u201c\u200b\u4ed6\u200b\u53bb\u200b\u4e86\u200b\u5317\u4eac\u200b\u201d \u2192 \u201c\u200b\u5317\u4eac\u200b\u4ed6\u200b\u53bb\u200b\u4e86\u200b\u201d \u200b\u6253\u4e71\u200b\u5c40\u90e8\u200b\u987a\u5e8f\u200b \u200b\u56de\u8bd1\u200b\uff08Back Translation\uff09 \u200b\u4e2d\u6587\u200b \u2192 \u200b\u82f1\u6587\u200b \u2192 \u200b\u4e2d\u6587\u200b \u200b\u5229\u7528\u200b\u7ffb\u8bd1\u200b\u6a21\u578b\u200b\u751f\u6210\u200b\u65b0\u200b\u53e5\u5f0f\u200b EDA\uff08Easy Data Augmentation\uff09 \u200b\u7efc\u5408\u200b\u4ee5\u4e0a\u200b\u64cd\u4f5c\u200b \u200b\u7b80\u5355\u200b\u5b9e\u7528\u200b\u7684\u200b\u589e\u5f3a\u200b\u65b9\u6cd5\u200b <p>\ud83d\udcd8 \u200b\u793a\u4f8b\u200b\uff08\u200b\u4f7f\u7528\u200b nlpaug\uff09</p> <pre><code>import nlpaug.augmenter.word as naw\n\ntext = \"\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u8ba1\u7b97\u673a\u200b\u81ea\u5df1\u200b\u5b66\u4e60\u200b\u89c4\u5f8b\u200b\u3002\"\n\n# \u200b\u540c\u4e49\u8bcd\u200b\u66ff\u6362\u200b\u589e\u5f3a\u200b\naug = naw.SynonymAug(aug_src='wordnet')\naug_text = aug.augment(text)\n\nprint(\"\u200b\u539f\u53e5\u200b\uff1a\", text)\nprint(\"\u200b\u589e\u5f3a\u200b\u540e\u200b\uff1a\", aug_text)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>\u200b\u539f\u53e5\u200b\uff1a \u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u8ba1\u7b97\u673a\u200b\u81ea\u5df1\u200b\u5b66\u4e60\u200b\u89c4\u5f8b\u200b\u3002\n\u200b\u589e\u5f3a\u200b\u540e\u200b\uff1a \u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u80fd\u200b\u4f7f\u200b\u8ba1\u7b97\u673a\u200b\u81ea\u5df1\u200b\u5b66\u4e60\u200b\u89c4\u5f8b\u200b\u3002\n</code></pre>"},{"location":"machine/interview/#_37","title":"\u4e09\u200b\u3001\u200b\u7ebf\u6027\u200b\u6a21\u578b","text":""},{"location":"machine/interview/#31","title":"3.1 \u200b\u7ebf\u6027\u200b\u56de\u5f52","text":"<p>\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\uff08Linear Regression\uff09 \u200b\u662f\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u4e2d\u200b\u6700\u200b\u57fa\u7840\u200b\u7684\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u4e4b\u4e00\u200b\uff0c\u200b\u7528\u4e8e\u200b \u200b\u9884\u6d4b\u200b\u4e00\u4e2a\u200b\u8fde\u7eed\u200b\u6570\u503c\u200b\u3002</p> <p>\u200b\u5176\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\uff1a</p> <p>\u200b\u5bfb\u627e\u200b\u4e00\u4e2a\u200b\u6700\u4f18\u200b\u7684\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f7f\u200b\u9884\u6d4b\u503c\u200b \\(\\hat{y}\\) \u200b\u4e0e\u200b\u771f\u5b9e\u200b\u503c\u200b \\(y\\) \u200b\u4e4b\u95f4\u200b\u7684\u200b\u8bef\u5dee\u200b\u6700\u5c0f\u200b\u3002</p>"},{"location":"machine/interview/#1_7","title":"1\ufe0f\u20e3 \u200b\u539f\u7406","text":""},{"location":"machine/interview/#_38","title":"\u4e00\u5143\u200b\u7ebf\u6027\u200b\u56de\u5f52","text":"<p>\u200b\u5047\u8bbe\u200b\u8f93\u5165\u200b\u7279\u5f81\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b ( x )\uff0c\u200b\u8f93\u51fa\u200b\u4e3a\u200b ( y )\uff1a</p> \\[ \\hat{y} = w x + b \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>$ \\hat{y} $\uff1a\u200b\u9884\u6d4b\u503c\u200b</li> <li>$ w $\uff1a\u200b\u6743\u91cd\u200b\uff08\u200b\u659c\u7387\u200b\uff09</li> <li>$b $\uff1a\u200b\u504f\u7f6e\u200b\uff08\u200b\u622a\u8ddd\u200b\uff09</li> </ul> <p>\u200b\u76ee\u6807\u200b\u662f\u200b\uff1a\u200b\u627e\u5230\u200b\u6700\u4f73\u200b\u7684\u200b \\(w\\)\u3001\\(b\\)\uff0c\u200b\u4f7f\u5f97\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u6700\u200b\u63a5\u8fd1\u200b\u771f\u5b9e\u200b\u503c\u200b\u3002</p>"},{"location":"machine/interview/#_39","title":"\u591a\u5143\u200b\u7ebf\u6027\u200b\u56de\u5f52","text":"<p>\u200b\u5f53\u200b\u7279\u5f81\u200b\u6709\u200b\u591a\u4e2a\u200b $x_1, x_2, ..., x_n $ \u200b\u65f6\u200b\uff1a</p> \\[ \\hat{y} = w_1 x_1 + w_2 x_2 + \\dots + w_n x_n + b \\] <p>\u200b\u6216\u8005\u200b\u7528\u200b\u5411\u91cf\u200b\u5f62\u5f0f\u200b\u8868\u793a\u200b\u4e3a\u200b\uff1a</p> \\[ \\hat{y} = \\mathbf{w}^\\top \\mathbf{x} + b \\]"},{"location":"machine/interview/#_40","title":"\u5cad\u200b\u56de\u5f52","text":"<p>\u200b\u5cad\u200b\u56de\u5f52\u200b\u662f\u200b \u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u7684\u200b\u4e00\u79cd\u200b\u6539\u8fdb\u200b\uff0c\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u89e3\u51b3\u200b \u200b\u591a\u91cd\u200b\u5171\u7ebf\u6027\u200b\uff08\u200b\u7279\u5f81\u200b\u9ad8\u5ea6\u200b\u76f8\u5173\u200b\uff09 \u200b\u6216\u200b \u200b\u8fc7\u200b\u62df\u5408\u200b \u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u6838\u5fc3\u601d\u60f3\u200b\uff1a</p> <p>\u200b\u5728\u200b\u6700\u5c0f\u5316\u200b\u9884\u6d4b\u200b\u8bef\u5dee\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\uff0c\u200b\u589e\u52a0\u200b\u5bf9\u200b\u6743\u91cd\u200b\u7684\u200b L2 \u200b\u6b63\u5219\u200b\u5316\u200b\u7ea6\u675f\u200b\uff0c\u200b\u4f7f\u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\u4e0d\u81f3\u4e8e\u200b\u8fc7\u5927\u200b\u3002</p> <p>\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff08\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff09\u200b\u4e3a\u200b\uff1a</p> \\[ J(\\mathbf{w}) = \\frac{1}{2m} \\sum_{i=1}^{m} (\\hat{y}^{(i)} - y^{(i)})^2 \\] <p>\u200b\u5cad\u200b\u56de\u5f52\u200b\u5728\u200b\u6b64\u57fa\u7840\u200b\u4e0a\u200b\u589e\u52a0\u200b L2 \u200b\u6b63\u5219\u200b\u5316\u9879\u200b\uff1a</p> \\[ J_{\\text{ridge}}(\\mathbf{w}) = \\frac{1}{2m} \\sum_{i=1}^{m} (\\hat{y}^{(i)} - y^{(i)})^2 + \\frac{\\lambda}{2} \\sum_{j=1}^{n} w_j^2 \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(\\lambda \\ge 0\\) \u200b\u662f\u200b \u200b\u6b63\u5219\u200b\u5316\u200b\u7cfb\u6570\u200b</li> <li>\\(w_j\\) \u200b\u662f\u200b\u6a21\u578b\u200b\u7684\u200b\u6743\u91cd\u200b</li> <li>\u200b\u5f53\u200b \\(\\lambda = 0\\) \u200b\u65f6\u200b\uff0c\u200b\u9000\u5316\u200b\u4e3a\u200b\u666e\u901a\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b</li> <li>\u200b\u5f53\u200b \\(\\lambda\\) \u200b\u589e\u5927\u200b\u65f6\u200b\uff0c\u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\u88ab\u200b\u538b\u7f29\u200b\uff0c\u200b\u51cf\u5c11\u200b\u8fc7\u200b\u62df\u5408\u200b</li> </ul>"},{"location":"machine/interview/#_41","title":"\u89e3\u6790\u200b\u89e3\u200b\uff08\u200b\u6b63\u89c4\u200b\u65b9\u7a0b\u200b\uff09","text":"<p>\u200b\u52a0\u5165\u200b L2 \u200b\u6b63\u5219\u200b\u5316\u540e\u200b\u7684\u200b\u89e3\u6790\u200b\u89e3\u4e3a\u200b\uff1a</p> \\[ \\mathbf{w} = (\\mathbf{X}^\\top \\mathbf{X} + \\lambda \\mathbf{I})^{-1} \\mathbf{X}^\\top \\mathbf{y} \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(\\mathbf{I}\\) \u200b\u662f\u200b \\(n \\times n\\) \u200b\u5355\u4f4d\u77e9\u9635\u200b</li> <li>\u200b\u6b63\u5219\u200b\u5316\u9879\u200b\u4fdd\u8bc1\u200b\u77e9\u9635\u200b \u200b\u53ef\u9006\u200b\uff0c\u200b\u89e3\u51b3\u200b\u591a\u91cd\u200b\u5171\u7ebf\u6027\u200b\u95ee\u9898\u200b</li> </ul> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u504f\u7f6e\u200b \\(b\\) \u200b\u901a\u5e38\u200b\u4e0d\u200b\u6b63\u5219\u200b\u5316\u200b\u3002</p>"},{"location":"machine/interview/#_42","title":"\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6cd5","text":"<p>\u200b\u5cad\u200b\u56de\u5f52\u200b\u68af\u5ea6\u200b\u66f4\u65b0\u200b\u516c\u5f0f\u200b\uff1a</p> \\[ \\frac{\\partial J_{\\text{ridge}}}{\\partial w_j} = \\frac{1}{m} \\sum_{i=1}^{m} (\\hat{y}^{(i)} - y^{(i)}) x_j^{(i)} + \\lambda w_j \\] <p>\u200b\u66f4\u65b0\u200b\u89c4\u5219\u200b\uff1a</p> \\[ w_j := w_j - \\alpha \\left( \\frac{1}{m} \\sum_{i=1}^{m} (\\hat{y}^{(i)} - y^{(i)}) x_j^{(i)} + \\lambda w_j \\right) \\] <p>\u200b\u5176\u4e2d\u200b \\(\\alpha\\) \u200b\u4e3a\u200b\u5b66\u4e60\u200b\u7387\u200b\u3002</p> <pre><code>import numpy as np\nfrom sklearn.linear_model import Ridge\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score\n\n# \u200b\u6784\u9020\u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\nnp.random.seed(42)\nX = np.random.rand(100, 5)\ny = X @ np.array([1.5, -2.0, 0.5, 3.0, -1.0]) + np.random.randn(100) * 0.5\n\n# \u200b\u5212\u5206\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# \u200b\u8bad\u7ec3\u200b\u5cad\u200b\u56de\u5f52\u200b\u6a21\u578b\u200b\nridge = Ridge(alpha=1.0)  # alpha = \u03bb\nridge.fit(X_train, y_train)\n\n# \u200b\u9884\u6d4b\u200b\ny_pred = ridge.predict(X_test)\n\n# \u200b\u6a21\u578b\u200b\u8bc4\u4f30\u200b\nprint(\"\u200b\u7cfb\u6570\u200b w:\", ridge.coef_)\nprint(\"\u200b\u622a\u8ddd\u200b b:\", ridge.intercept_)\nprint(\"MSE:\", mean_squared_error(y_test, y_pred))\nprint(\"R\u00b2:\", r2_score(y_test, y_pred))\n</code></pre>"},{"location":"machine/interview/#lasso","title":"Lasso\u200b\u56de\u5f52","text":"<p>Lasso \u200b\u56de\u5f52\u200b\uff08Least Absolute Shrinkage and Selection Operator\uff09 \u200b\u662f\u200b\u5728\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u52a0\u5165\u200b L1 \u200b\u6b63\u5219\u200b\u5316\u9879\u200b \u200b\u7684\u200b\u6a21\u578b\u200b\u3002 \u200b\u5b83\u200b\u4e0d\u4ec5\u200b\u80fd\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b\uff0c\u200b\u8fd8\u200b\u80fd\u200b\u5b9e\u73b0\u200b \u200b\u7279\u5f81\u9009\u62e9\u200b\uff08Feature Selection\uff09\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u4f1a\u200b\u4f7f\u200b\u90e8\u5206\u200b\u7279\u5f81\u200b\u7cfb\u6570\u200b\u53d8\u4e3a\u200b 0\u3002</p>"},{"location":"machine/interview/#_43","title":"\u2699\ufe0f \u200b\u6a21\u578b\u200b\u539f\u7406","text":"<p>\u200b\u5728\u200b\u666e\u901a\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u6700\u5c0f\u5316\u200b\u6b8b\u5dee\u200b\u5e73\u65b9\u548c\u200b\uff1a</p> \\[ J(\\mathbf{w}) = \\frac{1}{2m} \\sum_{i=1}^{m} (y_i - \\hat{y}*i)^2 = \\frac{1}{2m} \\sum*{i=1}^{m} (y_i - \\mathbf{w}^T \\mathbf{x}_i)^2 \\] <p>\u200b\u800c\u200b\u5728\u200b Lasso \u200b\u56de\u5f52\u200b \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4e2d\u200b\u52a0\u5165\u200b\u4e00\u4e2a\u200b L1 \u200b\u6b63\u5219\u200b\u5316\u9879\u200b\uff1a</p> \\[ J(\\mathbf{w}) = \\frac{1}{2m} \\sum_{i=1}^{m} (y_i - \\mathbf{w}^T \\mathbf{x}*i)^2 + \\lambda \\sum*{j=1}^{n} |w_j| \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(\\lambda\\) \u200b\u4e3a\u200b\u6b63\u5219\u200b\u5316\u200b\u5f3a\u5ea6\u200b\uff08\u200b\u8d85\u200b\u53c2\u6570\u200b\uff09\uff0c\u200b\u63a7\u5236\u200b\u6a21\u578b\u200b\u590d\u6742\u5ea6\u200b\uff1b</li> <li>\\(|w_j|\\) \u200b\u662f\u200b\u6743\u91cd\u200b\u7684\u200b\u7edd\u5bf9\u503c\u200b\uff1b</li> <li>L1 \u200b\u6b63\u5219\u200b\u5316\u200b\u9f13\u52b1\u200b\u6743\u91cd\u200b\u7a00\u758f\u200b\uff08\u200b\u90e8\u5206\u200b\u6743\u91cd\u200b\u4e3a\u200b 0\uff09\u3002</li> </ul>"},{"location":"machine/interview/#_44","title":"\ud83e\uddee \u200b\u6570\u5b66\u200b\u63a8\u5bfc","text":"<p>1. \u200b\u635f\u5931\u200b\u51fd\u6570\u200b</p> <p>\u200b\u6211\u4eec\u200b\u6700\u5c0f\u5316\u200b\u5982\u4e0b\u200b\u76ee\u6807\u200b\uff1a $$ \\min_{\\mathbf{w}} \\frac{1}{2m} |\\mathbf{y} - X\\mathbf{w}|_2^2 + \\lambda |\\mathbf{w}|_1 $$</p> <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(|\\mathbf{w}|_1 = \\sum_j |w_j|\\)</li> <li>\\(|\\cdot|_2^2\\) \u200b\u8868\u793a\u200b\u5e73\u65b9\u548c\u200b\u3002</li> </ul> <p>2. L1 \u200b\u7684\u200b\u4e0d\u53ef\u200b\u5bfc\u6027\u200b</p> <p>\u200b\u7531\u4e8e\u200b \\(|w_j|\\) \u200b\u5728\u200b \\(w_j=0\\) \u200b\u5904\u200b\u4e0d\u53ef\u200b\u5bfc\u200b\uff0c\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u3002 \u200b\u56e0\u6b64\u200b\uff0cLasso \u200b\u56de\u5f52\u200b\u7684\u200b\u6c42\u89e3\u200b\u901a\u5e38\u200b\u91c7\u7528\u200b \u200b\u5750\u6807\u200b\u4e0b\u964d\u200b\u6cd5\u200b\uff08Coordinate Descent\uff09 \u200b\u6216\u200b \u200b\u6b21\u68af\u5ea6\u200b\u6cd5\u200b\uff08Subgradient Method\uff09\u3002</p> <p>3. \u200b\u5750\u6807\u200b\u4e0b\u964d\u200b\u6cd5\u200b\uff08Coordinate Descent\uff09</p> <p>\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u7279\u5f81\u200b\u7ef4\u5ea6\u200b\u4e0a\u200b\u5355\u72ec\u200b\u4f18\u5316\u200b\uff1a</p> \\[ w_j \\leftarrow S\\left( \\frac{1}{m} \\sum_{i=1}^{m} x_{ij}(y_i - \\hat{y}_{i, -j}), \\frac{\\lambda}{m} \\right) \\] <p>\u200b\u5176\u4e2d\u200b \\(S\\) \u200b\u662f\u200b \u200b\u8f6f\u200b\u9608\u503c\u200b\u51fd\u6570\u200b\uff08Soft Thresholding Function\uff09\uff1a</p> \\[ S(z, \\gamma) = \\begin{cases} z - \\gamma, &amp; \\text{if } z &gt; \\gamma \\ 0, &amp; \\text{if } |z| \\le \\gamma \\ z + \\gamma, &amp; \\text{if } z &lt; -\\gamma \\end{cases} \\] <p>\u200b\u8be5\u200b\u51fd\u6570\u200b\u80fd\u200b\u81ea\u52a8\u200b\u628a\u200b\u5c0f\u4e8e\u200b\u9608\u503c\u200b\u7684\u200b\u6743\u91cd\u200b\u538b\u7f29\u200b\u4e3a\u200b 0\uff0c\u200b\u4ece\u800c\u200b\u5b9e\u73b0\u200b \u200b\u7279\u5f81\u9009\u62e9\u200b\u3002</p> <pre><code>from sklearn.linear_model import Lasso\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.datasets import load_boston\nimport numpy as np\n\n# \u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\nX, y = load_boston(return_X_y=True)\n\n# \u200b\u5212\u5206\u200b\u6570\u636e\u200b\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# \u200b\u521b\u5efa\u200b\u5e76\u200b\u8bad\u7ec3\u200b Lasso \u200b\u56de\u5f52\u200b\u6a21\u578b\u200b\nlasso = Lasso(alpha=0.1)\nlasso.fit(X_train, y_train)\n\n# \u200b\u9884\u6d4b\u200b\ny_pred = lasso.predict(X_test)\n\n# \u200b\u8bc4\u4f30\u200b\nprint(\"MSE:\", mean_squared_error(y_test, y_pred))\nprint(\"R\u00b2:\", r2_score(y_test, y_pred))\nprint(\"\u200b\u7cfb\u6570\u200b:\", lasso.coef_)\n</code></pre>"},{"location":"machine/interview/#_45","title":"\u26a0\ufe0f \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li> <p>\u200b\u7279\u5f81\u200b\u6807\u51c6\u5316\u200b</p> <ul> <li>\u200b\u5728\u200b\u4f7f\u7528\u200b Lasso \u200b\u524d\u200b\u5fc5\u987b\u200b\u5bf9\u200b\u7279\u5f81\u200b\u8fdb\u884c\u200b \u200b\u6807\u51c6\u5316\u200b\uff08StandardScaler\uff09\uff0c\u200b\u5426\u5219\u200b\u4e0d\u540c\u200b\u91cf\u7eb2\u200b\u7684\u200b\u7279\u5f81\u200b\u4f1a\u200b\u53d7\u5230\u200b\u4e0d\u540c\u200b\u60e9\u7f5a\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u8d85\u200b\u53c2\u6570\u200b \u03bb \u200b\u7684\u200b\u9009\u62e9\u200b</p> <ul> <li>\\(\\lambda\\) \u200b\u8fc7\u5927\u200b \u2192 \u200b\u7cfb\u6570\u200b\u5168\u90e8\u200b\u8d8b\u8fd1\u200b\u4e8e\u200b 0\uff1b</li> <li>\\(\\lambda\\) \u200b\u8fc7\u200b\u5c0f\u200b \u2192 \u200b\u9000\u5316\u200b\u4e3a\u200b\u666e\u901a\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\uff1b</li> <li>\u200b\u53ef\u200b\u901a\u8fc7\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff08\u200b\u5982\u200b <code>LassoCV</code>\uff09\u200b\u81ea\u52a8\u200b\u9009\u62e9\u200b\u6700\u4f73\u200b\u53c2\u6570\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u591a\u91cd\u200b\u5171\u7ebf\u6027\u200b\u95ee\u9898\u200b</p> <ul> <li>Lasso \u200b\u80fd\u200b\u81ea\u52a8\u200b\u201c\u200b\u5254\u9664\u200b\u201d\u200b\u5197\u4f59\u200b\u7279\u5f81\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u591a\u91cd\u200b\u5171\u7ebf\u6027\u200b\u95ee\u9898\u200b\u4e2d\u200b\u8868\u73b0\u200b\u8f83\u200b\u597d\u200b\u3002</li> </ul> </li> </ol>"},{"location":"machine/interview/#_46","title":"\u5f39\u6027\u200b\u7f51\u7edc\u200b\u56de\u5f52","text":"<p>\u200b\u5f39\u6027\u200b\u7f51\u7edc\u200b\uff08Elastic Net\uff09 \u200b\u662f\u200b\u4e00\u79cd\u200b\u5728\u200b Lasso \u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u52a0\u5165\u200b L2 \u200b\u6b63\u5219\u200b\u5316\u200b \u200b\u7684\u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b\u3002 \u200b\u5b83\u200b\u5728\u200b\u4fdd\u8bc1\u200b\u7279\u5f81\u9009\u62e9\u200b\u80fd\u529b\u200b\u7684\u200b\u540c\u65f6\u200b\uff0c\u200b\u7f13\u89e3\u200b\u4e86\u200b Lasso \u200b\u5728\u200b\u7279\u5f81\u200b\u9ad8\u5ea6\u200b\u76f8\u5173\u200b\u65f6\u200b\u7684\u200b\u4e0d\u7a33\u5b9a\u6027\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"machine/interview/#_47","title":"\u2699\ufe0f \u200b\u6a21\u578b\u200b\u539f\u7406","text":"<p>\u200b\u666e\u901a\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u4e3a\u200b\uff1a</p> \\[ J(\\mathbf{w}) = \\frac{1}{2m} \\sum_{i=1}^{m} (y_i - \\mathbf{w}^T \\mathbf{x}_i)^2 \\] <p>\u200b\u800c\u200b\u5f39\u6027\u200b\u7f51\u7edc\u200b\u5728\u200b\u6b64\u57fa\u7840\u200b\u4e0a\u200b\u52a0\u5165\u200b\u4e86\u200b L1 + L2 \u200b\u6b63\u5219\u200b\u9879\u200b\uff1a</p> \\[ J(\\mathbf{w}) = \\frac{1}{2m} \\sum_{i=1}^{m} (y_i - \\mathbf{w}^T \\mathbf{x}*i)^2 + \\lambda_1 \\sum*{j=1}^{n} |w_j| + \\frac{\\lambda_2}{2} \\sum_{j=1}^{n} w_j^2 \\] <p>\u200b\u4e3a\u4e86\u200b\u66f4\u200b\u65b9\u4fbf\u200b\u8c03\u8282\u200b\uff0c\u200b\u901a\u5e38\u200b\u5c06\u200b\u5b83\u200b\u6539\u5199\u200b\u4e3a\u200b\u5e26\u6709\u200b\u6df7\u5408\u200b\u7cfb\u6570\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff1a</p> \\[ J(\\mathbf{w}) = \\frac{1}{2m} |\\mathbf{y} - X\\mathbf{w}|_2^2 + \\lambda \\left( \\alpha |\\mathbf{w}|_1 + \\frac{1 - \\alpha}{2} |\\mathbf{w}|_2^2 \\right) \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(\\lambda\\) \u200b\u63a7\u5236\u200b\u6574\u4f53\u200b\u6b63\u5219\u200b\u5316\u200b\u5f3a\u5ea6\u200b\uff1b</li> <li> <p>\\(\\alpha \\in [0,1]\\) \u200b\u63a7\u5236\u200b L1 \u200b\u548c\u200b L2 \u200b\u7684\u200b\u6bd4\u4f8b\u200b\uff1a</p> </li> <li> <p>\\(\\alpha = 1\\) \u2192 Lasso \u200b\u56de\u5f52\u200b\uff1b</p> </li> <li>\\(\\alpha = 0\\) \u2192 \u200b\u5cad\u200b\u56de\u5f52\u200b\uff1b</li> <li>\\(0 &lt; \\alpha &lt; 1\\) \u2192 \u200b\u5f39\u6027\u200b\u7f51\u7edc\u200b\u3002</li> </ul>"},{"location":"machine/interview/#_48","title":"\ud83e\uddee \u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u601d\u8def","text":"<p>\u200b\u5f39\u6027\u200b\u7f51\u7edc\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u540c\u65f6\u200b\u6700\u5c0f\u5316\u200b\uff1a</p> <ul> <li>\u200b\u6b8b\u5dee\u200b\u5e73\u65b9\u548c\u200b\uff1b</li> <li>\u200b\u6743\u91cd\u200b\u7684\u200b \u200b\u7edd\u5bf9\u503c\u200b\u4e4b\u200b\u548c\u200b\uff08\u200b\u7a00\u758f\u200b\u6027\u200b\uff09\uff1b</li> <li>\u200b\u6743\u91cd\u200b\u7684\u200b \u200b\u5e73\u65b9\u548c\u200b\uff08\u200b\u7a33\u5b9a\u6027\u200b\uff09\u3002</li> </ul> <p>\u200b\u7531\u4e8e\u200b L1 \u200b\u9879\u200b\u4e0d\u53ef\u200b\u5bfc\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4f7f\u7528\u200b \u200b\u5750\u6807\u200b\u4e0b\u964d\u200b\u6cd5\u200b\uff08Coordinate Descent\uff09 \u200b\u6c42\u89e3\u200b\u3002</p> <p>\u200b\u5176\u200b\u66f4\u65b0\u200b\u516c\u5f0f\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b Lasso \u200b\u7684\u200b\u8f6f\u200b\u9608\u503c\u200b\u51fd\u6570\u200b\uff1a</p> \\[ w_j \\leftarrow \\frac{S\\left(\\frac{1}{m}\\sum_{i=1}^{m} x_{ij}(y_i - \\hat{y}_{i,-j}), \\lambda \\alpha\\right)}{1 + \\lambda (1-\\alpha)} \\] <p>\u200b\u5176\u4e2d\u200b \\(S(z, \\gamma)\\) \u200b\u4e3a\u200b\u8f6f\u200b\u9608\u503c\u200b\u51fd\u6570\u200b\uff1a</p> \\[ S(z, \\gamma) = \\begin{cases} z - \\gamma, &amp; z &gt; \\gamma \\ 0, &amp; |z| \\le \\gamma \\ z + \\gamma, &amp; z &lt; -\\gamma \\end{cases} \\] <p>L2 \u200b\u9879\u200b\u7684\u200b\u5b58\u5728\u200b\u4f7f\u5f97\u200b\u5206\u6bcd\u200b\u4e2d\u591a\u200b\u4e86\u200b \\(1 + \\lambda(1-\\alpha)\\)\uff0c\u200b\u8fd9\u4f1a\u200b\u9632\u6b62\u200b\u6743\u91cd\u200b\u8fc7\u5ea6\u200b\u538b\u7f29\u200b\uff0c\u200b\u7f13\u89e3\u200b Lasso \u200b\u7684\u200b\u4e0d\u7a33\u5b9a\u6027\u200b\u3002</p> \u200b\u6a21\u578b\u200b \u200b\u6b63\u5219\u200b\u5316\u200b\u51e0\u4f55\u200b\u5f62\u72b6\u200b \u200b\u7279\u5f81\u9009\u62e9\u200b\u80fd\u529b\u200b \u200b\u7a33\u5b9a\u6027\u200b Ridge \u200b\u5706\u5f62\u200b\uff08L2\uff09 \u200b\u65e0\u200b \u200b\u5f3a\u200b Lasso \u200b\u83f1\u5f62\u200b\uff08L1\uff09 \u200b\u5f3a\u200b \u200b\u5f31\u200b\uff08\u200b\u76f8\u5173\u200b\u7279\u5f81\u200b\u4e0d\u200b\u7a33\u5b9a\u200b\uff09 ElasticNet \u200b\u5706\u89d2\u200b\u83f1\u5f62\u200b\uff08L1+L2\uff09 \u200b\u4e2d\u7b49\u200b \u200b\u4e2d\u7b49\u200b\u504f\u5f3a\u200b \u200b\u6a21\u578b\u200b \u200b\u6b63\u5219\u200b\u9879\u200b \u200b\u7a00\u758f\u200b\u6027\u200b \u200b\u591a\u91cd\u200b\u5171\u7ebf\u6027\u200b\u5904\u7406\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b \u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b \u200b\u65e0\u200b \u200b\u65e0\u200b \u200b\u5dee\u200b \u200b\u65e0\u7ea6\u675f\u200b\u6570\u636e\u200b \u200b\u5cad\u200b\u56de\u5f52\u200b L2 \u200b\u65e0\u200b \u200b\u597d\u200b \u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b Lasso \u200b\u56de\u5f52\u200b L1 \u200b\u5f3a\u200b \u200b\u5dee\u200b \u200b\u7279\u5f81\u9009\u62e9\u200b \u200b\u5f39\u6027\u200b\u7f51\u7edc\u200b L1 + L2 \u200b\u4e2d\u7b49\u200b \u200b\u597d\u200b \u200b\u9ad8\u7ef4\u200b\u7a00\u758f\u200b\u6570\u636e\u200b <pre><code>from sklearn.linear_model import ElasticNet\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.datasets import load_diabetes\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.preprocessing import StandardScaler\n\n# \u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\nX, y = load_diabetes(return_X_y=True)\n\n# \u200b\u6807\u51c6\u5316\u200b\nscaler = StandardScaler()\nX = scaler.fit_transform(X)\n\n# \u200b\u5212\u5206\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u4e0e\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# \u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\nelastic = ElasticNet(alpha=0.1, l1_ratio=0.5)  # \u03b1\u200b\u63a7\u5236\u200bL1\u200b\u4e0e\u200bL2\u200b\u6bd4\u4f8b\u200b\nelastic.fit(X_train, y_train)\n\n# \u200b\u9884\u6d4b\u200b\ny_pred = elastic.predict(X_test)\n\n# \u200b\u8bc4\u4f30\u200b\nprint(\"MSE:\", mean_squared_error(y_test, y_pred))\nprint(\"R\u00b2:\", r2_score(y_test, y_pred))\nprint(\"\u200b\u7cfb\u6570\u200b:\", elastic.coef_)\n</code></pre>"},{"location":"machine/interview/#2_5","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570","text":"<p>\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u5e38\u7528\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u662f\u200b \u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE\uff09\uff1a</p> \\[ \\text{MSE} = \\frac{1}{m}\\sum_{i=1}^{m} (\\hat{y}^{(i)} - y^{(i)})^2 \\] <p>\u200b\u5176\u4ed6\u200b\u5e38\u89c1\u200b\u7684\u200b\u6709\u200b\uff1a</p> <ul> <li>MAE\uff08\u200b\u5e73\u5747\u200b\u7edd\u5bf9\u8bef\u5dee\u200b\uff09\uff1a $$   \\text{MAE} = \\frac{1}{m}\\sum | \\hat{y} - y | $$</li> <li>RMSE\uff08\u200b\u5747\u200b\u65b9\u6839\u200b\u8bef\u5dee\u200b\uff09\uff1a $$   \\text{RMSE} = \\sqrt{\\text{MSE}} $$</li> </ul>"},{"location":"machine/interview/#3_2","title":"3\ufe0f\u20e3 \u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":"<p>\u200b\u6211\u4eec\u200b\u6765\u200b\u63a8\u5bfc\u200b\u51fa\u200b\u6700\u4f18\u200b\u53c2\u6570\u200b \\(\\mathbf{w}\\) \u200b\u7684\u200b\u89e3\u6790\u200b\u89e3\u200b\uff08\u200b\u6b63\u89c4\u200b\u65b9\u7a0b\u200b\u6cd5\u200b\uff09\u3002</p>"},{"location":"machine/interview/#1_8","title":"1\ufe0f\u20e3 \u200b\u5411\u200b\u91cf\u5316\u200b\u8868\u793a","text":"<p>\u200b\u8bbe\u200b\uff1a</p> <ul> <li>\\(\\mathbf{X}\\) \u200b\u4e3a\u200b\u7279\u5f81\u200b\u77e9\u9635\u200b\uff08\u200b\u7ef4\u5ea6\u200b\uff1a\\(m \\times n\\)\uff09</li> <li>\\(\\mathbf{y}\\) \u200b\u4e3a\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\uff08\u200b\u7ef4\u5ea6\u200b\uff1a\\(m \\times 1\\)\uff09</li> <li>\\(\\mathbf{w}\\) \u200b\u4e3a\u200b\u6743\u91cd\u200b\u5411\u91cf\u200b\uff08\u200b\u7ef4\u5ea6\u200b\uff1a\\(n \\times 1\\)\uff09</li> </ul> <p>\u200b\u6a21\u578b\u200b\u53ef\u5199\u200b\u4e3a\u200b\uff1a</p> \\[ \\hat{\\mathbf{y}} = \\mathbf{X} \\mathbf{w} \\] <p>\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4e3a\u200b\uff1a</p> \\[ J(\\mathbf{w}) = \\frac{1}{2m} (\\mathbf{Xw} - \\mathbf{y})^\\top (\\mathbf{Xw} - \\mathbf{y}) \\]"},{"location":"machine/interview/#2_6","title":"2\ufe0f\u20e3 \u200b\u5bf9\u200b\u53c2\u6570\u200b\u6c42\u5bfc","text":"<p>\u200b\u6211\u4eec\u200b\u5bf9\u200b \\(\\mathbf{w}\\) \u200b\u6c42\u200b\u504f\u5bfc\u200b\uff1a</p> \\[ \\frac{\\partial J}{\\partial \\mathbf{w}} = \\frac{1}{m} \\mathbf{X}^\\top (\\mathbf{Xw} - \\mathbf{y}) \\] <p>\u200b\u4ee4\u200b\u5bfc\u6570\u200b\u4e3a\u200b 0\uff0c\u200b\u5f97\u5230\u200b\u6700\u4f18\u200b\u89e3\u200b\uff1a</p> \\[ \\mathbf{X}^\\top \\mathbf{Xw} = \\mathbf{X}^\\top \\mathbf{y} \\]"},{"location":"machine/interview/#3_3","title":"3\ufe0f\u20e3 \u200b\u89e3\u200b\u51fa\u200b\u53c2\u6570\u200b\uff08\u200b\u6b63\u89c4\u200b\u65b9\u7a0b\u200b\uff09","text":"\\[ \\mathbf{w} = (\\mathbf{X}^\\top \\mathbf{X})^{-1} \\mathbf{X}^\\top \\mathbf{y} \\] <p>\u200b\u8fd9\u662f\u200b \u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u7684\u200b\u89e3\u6790\u200b\u89e3\u200b\uff0c\u200b\u524d\u63d0\u200b\u662f\u200b \\(\\mathbf{X}^\\top \\mathbf{X}\\) \u200b\u53ef\u9006\u200b\u3002</p>"},{"location":"machine/interview/#4_4","title":"4\ufe0f\u20e3 \u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6cd5\u200b\uff08\u200b\u6570\u503c\u200b\u89e3\u200b\uff09","text":"<p>\u200b\u82e5\u200b\u7279\u5f81\u200b\u8f83\u200b\u591a\u200b\u6216\u200b\u77e9\u9635\u200b\u4e0d\u200b\u53ef\u9006\u200b\uff0c\u200b\u53ef\u200b\u4f7f\u7528\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6cd5\u200b\u8fed\u4ee3\u200b\u6c42\u89e3\u200b\uff1a</p> <p>\u200b\u66f4\u65b0\u200b\u89c4\u5219\u200b\uff1a</p> \\[ \\begin{aligned} w_j &amp;:= w_j - \\alpha \\frac{\\partial J}{\\partial w_j} \\ b &amp;:= b - \\alpha \\frac{\\partial J}{\\partial b} \\end{aligned} \\] <p>\u200b\u5176\u4e2d\u200b\u5b66\u4e60\u200b\u7387\u200b \\(\\alpha\\) \u200b\u63a7\u5236\u200b\u6bcf\u6b21\u200b\u66f4\u65b0\u200b\u7684\u200b\u6b65\u957f\u200b\u3002</p> <p>\u200b\u5bfc\u6570\u200b\u5c55\u5f00\u200b\u4e3a\u200b\uff1a</p> \\[ \\frac{\\partial J}{\\partial w_j} = \\frac{1}{m} \\sum_{i=1}^{m} (\\hat{y}^{(i)} - y^{(i)}) x_j^{(i)} \\] \\[ \\frac{\\partial J}{\\partial b} = \\frac{1}{m} \\sum_{i=1}^{m} (\\hat{y}^{(i)} - y^{(i)}) \\]"},{"location":"machine/interview/#4_5","title":"4\ufe0f\u20e3 \u200b\u8bc4\u4f30\u200b\u6307\u6807","text":"<p>\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u5e38\u7528\u200b\u4ee5\u4e0b\u200b\u6307\u6807\u200b\u8bc4\u4f30\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\uff1a</p> \u200b\u6307\u6807\u200b \u200b\u516c\u5f0f\u200b \u200b\u542b\u4e49\u200b \u200b\u7406\u60f3\u200b\u503c\u200b MSE\uff08\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff09 \\(\\frac{1}{m}\\sum (\\hat{y} - y)^2\\) \u200b\u8861\u91cf\u200b\u8bef\u5dee\u200b\u5e73\u65b9\u200b\u7684\u200b\u5e73\u5747\u503c\u200b \u200b\u8d8a\u5c0f\u8d8a\u200b\u597d\u200b RMSE\uff08\u200b\u5747\u200b\u65b9\u6839\u200b\u8bef\u5dee\u200b\uff09 \\(\\sqrt{\\frac{1}{m}\\sum (\\hat{y} - y)^2}\\) \u200b\u4e0e\u200b\u539f\u200b\u91cf\u7eb2\u200b\u4e00\u81f4\u200b \u200b\u8d8a\u5c0f\u8d8a\u200b\u597d\u200b MAE\uff08\u200b\u5e73\u5747\u200b\u7edd\u5bf9\u8bef\u5dee\u200b\uff09 $ \\frac{1}{m}\\sum \\lvert  \\hat{y} - y \\rvert$ \u200b\u5bf9\u200b\u5f02\u5e38\u200b\u503c\u200b\u66f4\u9c81\u68d2\u200b \u200b\u8d8a\u5c0f\u8d8a\u200b\u597d\u200b R\u00b2\uff08\u200b\u51b3\u5b9a\u7cfb\u6570\u200b\uff09 \\(R^2 = 1 - \\frac{\\sum (y_i - \\hat{y}_i)^2}{\\sum (y_i - \\bar{y})^2}\\) \u200b\u53cd\u6620\u200b\u62df\u5408\u200b\u7a0b\u5ea6\u200b \u200b\u8d8a\u200b\u63a5\u8fd1\u200b 1 \u200b\u8d8a\u200b\u597d\u200b \\[ R^2 = 1 - \\frac{\\sum (y_i - \\hat{y}_i)^2}{\\sum (y_i - \\bar{y})^2} \\]"},{"location":"machine/interview/#5_1","title":"5\ufe0f\u20e3 \u200b\u5b9e\u73b0\u200b\u4ee3\u7801","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.datasets import make_regression\nfrom sklearn.preprocessing import StandardScaler\n\n# \u200b\u751f\u6210\u200b\u793a\u4f8b\u200b\u6570\u636e\u200b\nX, y = make_regression(n_samples=100, n_features=1, noise=10, random_state=42)\n\n# \u200b\u6570\u636e\u200b\u6807\u51c6\u5316\u200b\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)\n\n# \u200b\u5212\u5206\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\nX_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)\n\n# \u200b\u521b\u5efa\u200b\u5e76\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# \u200b\u9884\u6d4b\u200b\ny_pred = model.predict(X_test)\n\n# \u200b\u8bc4\u4f30\u200b\u6a21\u578b\u200b\nmse = mean_squared_error(y_test, y_pred)\nr2 = r2_score(y_test, y_pred)\n\nprint(f\"\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b(MSE): {mse:.2f}\")\nprint(f\"R\u00b2\u200b\u5206\u6570\u200b: {r2:.2f}\")\nprint(f\"\u200b\u7cfb\u6570\u200b: {model.coef_}\")\nprint(f\"\u200b\u622a\u8ddd\u200b: {model.intercept_:.2f}\")\n\n# \u200b\u53ef\u89c6\u5316\u200b\u7ed3\u679c\u200b\nplt.figure(figsize=(10, 6))\nplt.scatter(X_test, y_test, color='blue', label='\u200b\u5b9e\u9645\u200b\u503c\u200b')\nplt.plot(X_test, y_pred, color='red', linewidth=2, label='\u200b\u9884\u6d4b\u503c\u200b')\nplt.xlabel('\u200b\u7279\u5f81\u200b')\nplt.ylabel('\u200b\u76ee\u6807\u200b')\nplt.title('\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u7ed3\u679c\u200b')\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"machine/interview/#6_1","title":"6\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u4f18\u5316\u200b\uff08\u200b\u53c2\u6570\u200b\u8c03\u4f18\u200b\uff09","text":"<pre><code>from sklearn.model_selection import GridSearchCV\n\n# \u200b\u53c2\u6570\u200b\u7f51\u683c\u200b\nparam_grid = {\n    'alpha': [0.001, 0.01, 0.1, 1, 10, 100],\n    'l1_ratio': [0.1, 0.3, 0.5, 0.7, 0.9]\n}\n\n# \u200b\u7f51\u683c\u200b\u641c\u7d22\u200b\ngrid_search = GridSearchCV(ElasticNet(), param_grid, cv=5, scoring='r2')\ngrid_search.fit(X_train, y_train)\n\nprint(f\"\u200b\u6700\u4f73\u200b\u53c2\u6570\u200b: {grid_search.best_params_}\")\nprint(f\"\u200b\u6700\u4f73\u200b\u5206\u6570\u200b: {grid_search.best_score_:.3f}\")\n</code></pre>"},{"location":"machine/interview/#7_1","title":"7\ufe0f\u20e3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"\u95ee\u9898\u200b \u200b\u8bf4\u660e\u200b \u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b \u200b\u591a\u91cd\u200b\u5171\u7ebf\u6027\u200b \u200b\u7279\u5f81\u200b\u9ad8\u5ea6\u200b\u76f8\u5173\u200b\u5bfc\u81f4\u200b\u77e9\u9635\u200b\u4e0d\u200b\u53ef\u9006\u200b \u200b\u4f7f\u7528\u200b\u5cad\u200b\u56de\u5f52\u200b\uff08L2\u200b\u6b63\u5219\u200b\u5316\u200b\uff09 \u200b\u5f02\u5e38\u200b\u503c\u200b\u654f\u611f\u200b \u200b\u6781\u7aef\u200b\u6837\u672c\u200b\u4f1a\u200b\u4e25\u91cd\u200b\u5f71\u54cd\u200b\u6a21\u578b\u200b \u200b\u53bb\u9664\u200b\u6216\u9c81\u68d2\u200b\u56de\u5f52\u200b \u200b\u7ebf\u6027\u200b\u5047\u8bbe\u200b \u200b\u6a21\u578b\u200b\u5047\u8bbe\u200b\u8f93\u5165\u200b\u4e0e\u200b\u8f93\u51fa\u200b\u7ebf\u6027\u5173\u7cfb\u200b \u200b\u53ef\u200b\u52a0\u5165\u200b\u591a\u9879\u5f0f\u200b\u7279\u5f81\u200b \u200b\u5f02\u200b\u65b9\u5dee\u200b\u6027\u200b \u200b\u6b8b\u5dee\u200b\u65b9\u5dee\u200b\u4e0d\u200b\u4e00\u81f4\u200b \u200b\u5bf9\u6570\u53d8\u6362\u200b\u6216\u200b\u52a0\u6743\u200b\u56de\u5f52\u200b \u200b\u7279\u5f81\u200b\u7f29\u653e\u200b \u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6536\u655b\u200b\u901f\u5ea6\u6162\u200b \u200b\u6807\u51c6\u5316\u200b\u6216\u200b\u5f52\u4e00\u5316"},{"location":"machine/interview/#32","title":"3.2 \u200b\u903b\u8f91\u200b\u56de\u5f52","text":"<p>\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\u662f\u200b\u4e00\u79cd\u200b\u7528\u4e8e\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u7684\u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b\u3002 \u200b\u4e0e\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u4e0d\u540c\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u8f93\u51fa\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6982\u7387\u200b\u503c\u200b\uff08\u200b\u8303\u56f4\u200b \\([0,1]\\)\uff09\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u9608\u503c\u200b\uff08\u200b\u901a\u5e38\u200b\u4e3a\u200b 0.5\uff09\u200b\u5c06\u200b\u6837\u672c\u200b\u5206\u7c7b\u200b\u4e3a\u200b\u6b63\u7c7b\u200b\u6216\u200b\u8d1f\u7c7b\u200b\u3002</p>"},{"location":"machine/interview/#1_9","title":"1\ufe0f\u20e3 \u200b\u539f\u7406","text":"<p>\u200b\u5047\u8bbe\u200b\u8f93\u5165\u200b\u6837\u672c\u200b\u4e3a\u200b \\(x = (x_1, x_2, \\dots, x_n)\\)\uff0c\u200b\u6a21\u578b\u200b\u53c2\u6570\u200b\u4e3a\u200b \\(\\theta = (\\theta_0, \\theta_1, \\dots, \\theta_n)\\)\uff0c\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\u5047\u8bbe\u200b\uff1a</p> \\[ z = \\theta^T x = \\theta_0 + \\theta_1 x_1 + \\dots + \\theta_n x_n \\] <p>\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b Sigmoid \u200b\u51fd\u6570\u200b \u200b\u5c06\u200b \\(z\\) \u200b\u6620\u5c04\u200b\u5230\u200b \\([0,1]\\)\uff1a</p> \\[ h_\\theta(x) = \\sigma(z) = \\frac{1}{1 + e^{-z}} \\] <p>\u200b\u6b64\u65f6\u200b \\(h_\\theta(x)\\) \u200b\u8868\u793a\u200b\u6837\u672c\u200b\u5c5e\u4e8e\u200b\u6b63\u7c7b\u200b\uff08\\(y=1\\)\uff09\u200b\u7684\u200b\u6982\u7387\u200b\u3002</p>"},{"location":"machine/interview/#_49","title":"\u5206\u7c7b\u200b\u89c4\u5219","text":"\\[ \\hat{y} = \\begin{cases} 1, &amp; \\text{if } h_\\theta(x) \\ge 0.5 \\\\ 0, &amp; \\text{if } h_\\theta(x) &lt; 0.5 \\end{cases} \\]"},{"location":"machine/interview/#2_7","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570","text":"<p>\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\u4f7f\u7528\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u662f\u200b\u5bf9\u6570\u200b\u635f\u5931\u200b\uff08Log Loss\uff09 \u200b\u6216\u200b \u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b\uff08Cross Entropy Loss\uff09\u3002</p>"},{"location":"machine/interview/#21_1","title":"2.1 \u200b\u5355\u200b\u6837\u672c\u200b\u635f\u5931\u200b\u51fd\u6570","text":"<p>\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u6837\u672c\u200b \\((x^{(i)}, y^{(i)})\\)\uff1a</p> \\[ L(\\theta) = -\\left[y^{(i)} \\log h_\\theta(x^{(i)}) + (1 - y^{(i)}) \\log (1 - h_\\theta(x^{(i)}))\\right] \\]"},{"location":"machine/interview/#22_1","title":"2.2 \u200b\u603b\u200b\u635f\u5931\u200b\u51fd\u6570","text":"<p>\u200b\u5bf9\u200b\u6240\u6709\u200b\u6837\u672c\u200b\u53d6\u200b\u5e73\u5747\u200b\uff1a</p> \\[ J(\\theta) = -\\frac{1}{m} \\sum_{i=1}^m \\left[y^{(i)} \\log h_\\theta(x^{(i)}) + (1 - y^{(i)}) \\log (1 - h_\\theta(x^{(i)}))\\right] \\]"},{"location":"machine/interview/#3_4","title":"3\ufe0f\u20e3 \u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":"<p>\u200b\u76ee\u6807\u200b\uff1a\u200b\u901a\u8fc7\u200b\u6700\u5c0f\u5316\u200b \\(J(\\theta)\\) \u200b\u6c42\u89e3\u200b\u6700\u4f18\u200b\u53c2\u6570\u200b \\(\\theta\\)\u3002</p>"},{"location":"machine/interview/#31-gradient","title":"3.1 \u200b\u68af\u5ea6\u200b\uff08Gradient\uff09","text":"<p>\u200b\u5bf9\u200b\u53c2\u6570\u200b \\(\\theta_j\\) \u200b\u6c42\u200b\u504f\u5bfc\u200b\uff1a</p> \\[ \\frac{\\partial J(\\theta)}{\\partial \\theta_j} = \\frac{1}{m} \\sum_{i=1}^m (h_\\theta(x^{(i)}) - y^{(i)}) x_j^{(i)} \\]"},{"location":"machine/interview/#32_1","title":"3.2 \u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6cd5\u200b\u66f4\u65b0\u200b\u89c4\u5219","text":"\\[ \\theta_j := \\theta_j - \\alpha \\frac{\\partial J(\\theta)}{\\partial \\theta_j} \\] <p>\u200b\u5176\u4e2d\u200b \\(\\alpha\\) \u200b\u4e3a\u200b\u5b66\u4e60\u200b\u7387\u200b\uff08learning rate\uff09\u3002</p>"},{"location":"machine/interview/#4_6","title":"4\ufe0f\u20e3 \u200b\u8bc4\u4f30\u200b\u6307\u6807","text":"<p>\u200b\u5e38\u89c1\u200b\u7684\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u8bc4\u4f30\u200b\u6307\u6807\u200b\u6709\u200b\uff1a</p> \u200b\u6307\u6807\u200b \u200b\u542b\u4e49\u200b \u200b\u516c\u5f0f\u200b \u200b\u51c6\u786e\u7387\u200b\uff08Accuracy\uff09 \u200b\u5206\u7c7b\u200b\u6b63\u786e\u200b\u7684\u200b\u6bd4\u4f8b\u200b \\(\\displaystyle \\text{Acc} = \\frac{TP + TN}{TP + TN + FP + FN}\\) \u200b\u7cbe\u786e\u200b\u7387\u200b\uff08Precision\uff09 \u200b\u9884\u6d4b\u200b\u4e3a\u200b\u6b63\u4e2d\u200b\u5b9e\u9645\u200b\u4e3a\u200b\u6b63\u200b\u7684\u200b\u6bd4\u4f8b\u200b \\(\\displaystyle \\text{P} = \\frac{TP}{TP + FP}\\) \u200b\u53ec\u56de\u200b\u7387\u200b\uff08Recall\uff09 \u200b\u5b9e\u9645\u200b\u4e3a\u200b\u6b63\u4e2d\u200b\u88ab\u200b\u9884\u6d4b\u200b\u4e3a\u200b\u6b63\u200b\u7684\u200b\u6bd4\u4f8b\u200b \\(\\displaystyle \\text{R} = \\frac{TP}{TP + FN}\\) F1-score \u200b\u7cbe\u786e\u200b\u7387\u200b\u4e0e\u200b\u53ec\u56de\u200b\u7387\u200b\u7684\u200b\u8c03\u548c\u200b\u5e73\u5747\u200b \\(\\displaystyle F1 = \\frac{2PR}{P + R}\\) AUC\uff08ROC \u200b\u66f2\u7ebf\u200b\u4e0b\u200b\u7684\u200b\u9762\u79ef\u200b\uff09 \u200b\u8861\u91cf\u200b\u6574\u4f53\u200b\u5206\u7c7b\u200b\u80fd\u529b\u200b \u200b\u6570\u503c\u200b\u8d8a\u200b\u63a5\u8fd1\u200b 1 \u200b\u8d8a\u200b\u597d"},{"location":"machine/interview/#5_2","title":"5\ufe0f\u20e3 \u200b\u5b9e\u73b0\u200b\u4ee3\u7801","text":"<pre><code>from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score\nfrom sklearn.datasets import load_breast_cancer\n\n# 1. \u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\ndata = load_breast_cancer()\nX, y = data.data, data.target\n\n# 2. \u200b\u5212\u5206\u200b\u6570\u636e\u200b\u96c6\u200b\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# 3. \u200b\u8bad\u7ec3\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\u6a21\u578b\u200b\nmodel = LogisticRegression(max_iter=1000)\nmodel.fit(X_train, y_train)\n\n# 4. \u200b\u9884\u6d4b\u200b\ny_pred = model.predict(X_test)\ny_pred_prob = model.predict_proba(X_test)[:, 1]\n\n# 5. \u200b\u8bc4\u4f30\u200b\nprint(\"\u200b\u51c6\u786e\u7387\u200b:\", accuracy_score(y_test, y_pred))\nprint(\"\u200b\u7cbe\u786e\u200b\u7387\u200b:\", precision_score(y_test, y_pred))\nprint(\"\u200b\u53ec\u56de\u200b\u7387\u200b:\", recall_score(y_test, y_pred))\nprint(\"F1 \u200b\u503c\u200b:\", f1_score(y_test, y_pred))\nprint(\"AUC \u200b\u503c\u200b:\", roc_auc_score(y_test, y_pred_prob))\n</code></pre>"},{"location":"machine/interview/#6_2","title":"6\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u4f18\u5316","text":"\u4f18\u5316\u200b\u65b9\u5411\u200b \u200b\u65b9\u6cd5\u200b \u200b\u8bf4\u660e\u200b \u200b\u7279\u5f81\u200b\u7f29\u653e\u200b \u200b\u6807\u51c6\u5316\u200b <code>StandardScaler</code> \u200b\u6709\u52a9\u4e8e\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u66f4\u200b\u5feb\u200b\u6536\u655b\u200b \u200b\u6b63\u5219\u200b\u5316\u200b \\(L_1\\)\uff08Lasso\uff09\u200b\u6216\u200b \\(L_2\\)\uff08Ridge\uff09 \u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b\uff0csklearn \u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b \\(L_2\\) \u200b\u8c03\u6574\u200b\u8d85\u200b\u53c2\u6570\u200b <code>C</code>\uff08\u200b\u6b63\u5219\u200b\u5316\u200b\u5f3a\u5ea6\u200b\uff09 \u200b\u8d8a\u5c0f\u200b\u4ee3\u8868\u200b\u6b63\u5219\u200b\u5316\u8d8a\u200b\u5f3a\u200b \u200b\u7279\u5f81\u9009\u62e9\u200b \u200b\u53bb\u9664\u200b\u5171\u7ebf\u6027\u200b\u7279\u5f81\u200b \u200b\u63d0\u9ad8\u200b\u6a21\u578b\u200b\u7a33\u5b9a\u6027\u200b \u200b\u7c7b\u522b\u200b\u4e0d\u200b\u5e73\u8861\u200b\u5904\u7406\u200b <code>class_weight='balanced'</code> \u200b\u6216\u200b\u4e0a\u200b\u91c7\u6837\u200b \u200b\u89e3\u51b3\u200b\u7c7b\u522b\u200b\u6837\u672c\u5206\u5e03\u200b\u4e0d\u5747\u200b\u7684\u200b\u95ee\u9898"},{"location":"machine/interview/#7_2","title":"7\ufe0f\u20e3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u8f93\u5165\u200b\u7279\u5f81\u200b\u9700\u200b\u6570\u503c\u200b\u5316\u200b\uff08One-Hot \u200b\u7f16\u7801\u200b\u7b49\u200b\u65b9\u5f0f\u200b\u5904\u7406\u200b\u5206\u7c7b\u200b\u7279\u5f81\u200b\uff09</li> <li>\u200b\u7279\u5f81\u200b\u7f29\u653e\u200b\u5f88\u200b\u91cd\u8981\u200b\uff08\u200b\u5c24\u5176\u200b\u662f\u200b\u4f7f\u7528\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u8bad\u7ec3\u200b\u65f6\u200b\uff09</li> <li>\u200b\u4e0d\u8981\u200b\u5728\u200b\u5f3a\u200b\u975e\u7ebf\u6027\u200b\u95ee\u9898\u200b\u4e0a\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\uff08\u200b\u5b83\u200b\u672c\u8d28\u200b\u662f\u200b\u7ebf\u6027\u200b\u5206\u7c7b\u5668\u200b\uff09</li> <li>\u200b\u68c0\u67e5\u200b\u591a\u91cd\u200b\u5171\u7ebf\u6027\u200b\uff08\u200b\u53ef\u7528\u200b VIF \u200b\u68c0\u67e5\u200b\uff09</li> <li>\u200b\u5408\u7406\u200b\u9009\u62e9\u200b\u6b63\u5219\u200b\u5316\u9879\u200b\uff0c\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b\u6216\u200b\u6b20\u200b\u62df\u5408\u200b\u3002</li> </ol>"},{"location":"machine/interview/#8_1","title":"8\ufe0f\u20e3 \u200b\u4f18\u7f3a\u70b9","text":"<p>\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u7b80\u5355\u200b\u3001\u200b\u9ad8\u6548\u200b\uff0c\u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\u5f3a\u200b\uff1b</li> <li>\u200b\u8f93\u51fa\u200b\u6982\u7387\u200b\uff0c\u200b\u6709\u200b\u826f\u597d\u200b\u7684\u200b\u7406\u8bba\u200b\u57fa\u7840\u200b\uff1b</li> <li>\u200b\u53ef\u200b\u7528\u4e8e\u200b\u5728\u7ebf\u200b\u5b66\u4e60\u200b\uff08\u200b\u589e\u91cf\u200b\u66f4\u65b0\u200b\uff09\u3002</li> </ul> <p>\u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u4ec5\u80fd\u200b\u5904\u7406\u200b\u7ebf\u6027\u200b\u53ef\u200b\u5206\u200b\u95ee\u9898\u200b\uff1b</li> <li>\u200b\u5bf9\u200b\u5f02\u5e38\u200b\u503c\u200b\u654f\u611f\u200b\uff1b</li> <li>\u200b\u7279\u5f81\u200b\u5de5\u7a0b\u200b\u5f71\u54cd\u200b\u5927\u200b\u3002</li> </ul>"},{"location":"machine/interview/#32_2","title":"3.2 \u200b\u9762\u8bd5\u9898","text":""},{"location":"machine/interview/#_50","title":"\u4ec0\u4e48\u200b\u662f\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\uff1f","text":"<p>\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u662f\u200b\u4e00\u79cd\u200b\u4f18\u5316\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6700\u5c0f\u5316\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\uff08\u200b\u5982\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff09\u3002 \u200b\u5b83\u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\uff1a</p> <p>\u200b\u6cbf\u7740\u200b\u51fd\u6570\u200b\u68af\u5ea6\u200b\u7684\u200b\u53cd\u200b\u65b9\u5411\u200b\u4e0d\u65ad\u200b\u8c03\u6574\u200b\u53c2\u6570\u200b\uff0c\u200b\u76f4\u5230\u200b\u627e\u5230\u200b\u51fd\u6570\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u628a\u200b\u5b83\u200b\u60f3\u8c61\u200b\u6210\u200b\u4e00\u4e2a\u200b\u4eba\u7ad9\u200b\u5728\u200b\u5c71\u9876\u200b\uff08\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u7684\u200b\u9ad8\u70b9\u200b\uff09\uff0c \u200b\u6bcf\u6b21\u200b\u671d\u7740\u200b\u201c\u200b\u6700\u200b\u9661\u200b\u7684\u200b\u4e0b\u5761\u200b\u65b9\u5411\u200b\u201d\u200b\u8d70\u200b\u4e00\u6b65\u200b\uff0c\u200b\u76f4\u5230\u200b\u8d70\u200b\u5230\u200b\u5c71\u8c37\u200b\u5e95\u200b\uff08\u200b\u635f\u5931\u200b\u6700\u5c0f\u200b\u70b9\u200b\uff09\u3002</p> <p>\u200b\u6570\u5b66\u200b\u5b9a\u4e49\u200b</p> <p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u4e00\u4e2a\u200b\u9700\u8981\u200b\u6700\u5c0f\u5316\u200b\u7684\u200b\u51fd\u6570\u200b\uff1a</p> \\[ J(\\theta) \\] <p>\u200b\u5176\u4e2d\u200b \\(\\theta\\) \u200b\u8868\u793a\u200b\u53c2\u6570\u200b\u5411\u91cf\u200b\uff08\u200b\u4f8b\u5982\u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\uff09\u3002 \u200b\u76ee\u6807\u200b\u662f\u200b\u627e\u5230\u200b\uff1a</p> \\[ \\theta^* = \\arg\\min_\\theta J(\\theta) \\] <p>\u200b\u68af\u5ea6\u200b\uff08Gradient\uff09</p> <p>\u200b\u68af\u5ea6\u200b\u662f\u200b\u51fd\u6570\u200b\u5728\u200b\u67d0\u200b\u4e00\u70b9\u200b\u7684\u200b\u65b9\u5411\u200b\u5bfc\u6570\u200b\u5411\u91cf\u200b\uff0c\u200b\u8868\u793a\u200b\u51fd\u6570\u200b\u589e\u957f\u200b\u6700\u5feb\u200b\u7684\u200b\u65b9\u5411\u200b\u3002 \u200b\u68af\u5ea6\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a</p> \\[ \\nabla_\\theta J(\\theta) = \\begin{bmatrix} \\frac{\\partial J}{\\partial \\theta_1} \\ \\frac{\\partial J}{\\partial \\theta_2} \\ \\vdots \\ \\frac{\\partial J}{\\partial \\theta_n} \\end{bmatrix} \\] <p>\u200b\u82e5\u200b\u6211\u4eec\u200b\u60f3\u200b\u8ba9\u200b\u51fd\u6570\u200b \\(J(\\theta)\\) \u200b\u53d8\u5c0f\u200b\uff0c\u200b\u5c31\u200b\u5e94\u5f53\u200b\u6cbf\u7740\u200b\u68af\u5ea6\u200b\u7684\u200b\u53cd\u200b\u65b9\u5411\u200b\u79fb\u52a8\u200b\u3002</p> <p>\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u7684\u200b\u66f4\u65b0\u200b\u516c\u5f0f\u200b</p> <p>\u200b\u6bcf\u6b21\u200b\u8fed\u4ee3\u200b\u65f6\u200b\uff0c\u200b\u66f4\u65b0\u200b\u53c2\u6570\u200b\uff1a</p> \\[ \\theta := \\theta - \\alpha \\nabla_\\theta J(\\theta) \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(\\alpha\\)\uff1a\u200b\u5b66\u4e60\u200b\u7387\u200b\uff08learning rate\uff09\uff0c\u200b\u63a7\u5236\u200b\u6bcf\u6b21\u200b\u66f4\u65b0\u200b\u6b65\u957f\u200b\uff1b</li> <li>\\(\\nabla_\\theta J(\\theta)\\)\uff1a\u200b\u68af\u5ea6\u200b\uff1b</li> <li>\u200b\u8d1f\u53f7\u200b\u8868\u793a\u200b\u6cbf\u200b\u68af\u5ea6\u200b\u53cd\u200b\u65b9\u5411\u200b\u66f4\u65b0\u200b\u3002</li> </ul> <p>\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u7684\u200b\u51e0\u4f55\u200b\u76f4\u89c2\u200b</p> <ul> <li>\u200b\u68af\u5ea6\u65b9\u5411\u200b\uff1a\u200b\u51fd\u6570\u200b\u4e0a\u5347\u200b\u6700\u5feb\u200b\u7684\u200b\u65b9\u5411\u200b\uff1b</li> <li>\u200b\u8d1f\u200b\u68af\u5ea6\u65b9\u5411\u200b\uff1a\u200b\u51fd\u6570\u200b\u4e0b\u964d\u200b\u6700\u5feb\u200b\u7684\u200b\u65b9\u5411\u200b\uff1b</li> <li>\u200b\u5b66\u4e60\u200b\u7387\u200b \\(\\alpha\\) \u200b\u592a\u200b\u5927\u200b \u2192 \u200b\u53ef\u80fd\u200b\u8de8\u8fc7\u200b\u8c37\u5e95\u200b\u3001\u200b\u53d1\u6563\u200b\uff1b</li> <li>\u200b\u5b66\u4e60\u200b\u7387\u200b \\(\\alpha\\) \u200b\u592a\u5c0f\u200b \u2192 \u200b\u6536\u655b\u200b\u901f\u5ea6\u6162\u200b\uff1b</li> <li>\u200b\u6070\u5f53\u200b\u7684\u200b \\(\\alpha\\) \u2192 \u200b\u7a33\u5b9a\u200b\u800c\u200b\u5feb\u901f\u200b\u5730\u200b\u6536\u655b\u200b\u5230\u200b\u6700\u5c0f\u503c\u200b\u3002</li> </ul> <p>\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u7684\u200b\u4e09\u79cd\u200b\u4e3b\u8981\u200b\u5f62\u5f0f\u200b</p> \u200b\u7c7b\u578b\u200b \u200b\u8ba1\u7b97\u200b\u65b9\u5f0f\u200b \u200b\u7279\u70b9\u200b \u200b\u6279\u91cf\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\uff08BGD\uff09 \u200b\u4f7f\u7528\u200b\u5168\u90e8\u200b\u6837\u672c\u200b\u8ba1\u7b97\u200b\u68af\u5ea6\u200b\uff1a  \\(\\nabla_\\theta J(\\theta) = \\frac{1}{m} \\sum_{i=1}^m \\nabla_\\theta L^{(i)}(\\theta)\\) \u200b\u6536\u655b\u200b\u7a33\u5b9a\u200b\uff0c\u200b\u4f46\u200b\u8ba1\u7b97\u200b\u91cf\u200b\u5927\u200b \u200b\u968f\u673a\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\uff08SGD\uff09 \u200b\u6bcf\u6b21\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u6837\u672c\u200b\u66f4\u65b0\u200b\uff1a  \\(\\theta := \\theta - \\alpha \\nabla_\\theta L^{(i)}(\\theta)\\) \u200b\u66f4\u65b0\u5feb\u200b\uff0c\u200b\u4f46\u200b\u6ce2\u52a8\u200b\u5927\u200b \u200b\u5c0f\u6279\u91cf\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\uff08Mini-batch GD\uff09 \u200b\u6bcf\u6b21\u200b\u4f7f\u7528\u200b\u4e00\u5c0f\u90e8\u5206\u200b\u6837\u672c\u200b\uff08\u200b\u5982\u200b 32\u300164 \u200b\u4e2a\u200b\uff09\u200b\u8ba1\u7b97\u200b\u68af\u5ea6\u200b \u200b\u7efc\u5408\u200b\u4e24\u8005\u200b\u4f18\u70b9\u200b\uff0c\u200b\u662f\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u7684\u200b\u6807\u51c6\u200b\u505a\u6cd5\u200b <p>\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u7684\u200b\u6536\u655b\u200b\u8fc7\u7a0b\u200b</p> <p>\u200b\u5047\u8bbe\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u662f\u200b\uff1a</p> \\[ J(\\theta) = \\theta^2 \\] <p>\u200b\u5219\u200b\uff1a</p> \\[ \\frac{dJ}{d\\theta} = 2\\theta \\] <p>\u200b\u66f4\u65b0\u200b\u516c\u5f0f\u200b\u4e3a\u200b\uff1a</p> \\[ \\theta := \\theta - \\alpha \\cdot 2\\theta \\] <p>\u200b\u5982\u679c\u200b\u8bbe\u200b\u521d\u59cb\u200b \\(\\theta_0 = 5, \\alpha = 0.1\\)\uff1a</p> \u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b \\(\\theta\\) \\(J(\\theta)\\) 0 5.0 25.0 1 4.0 16.0 2 3.2 10.24 3 2.56 6.55 ... ... ... <p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\uff0c\\(\\theta\\) \u200b\u4e00\u6b65\u6b65\u200b\u63a5\u8fd1\u200b\u6700\u200b\u4f18\u70b9\u200b \\(0\\)\uff0c\\(J(\\theta)\\) \u200b\u9010\u6e10\u200b\u4e0b\u964d\u200b\u3002</p> <p>\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u7684\u200b\u4f18\u7f3a\u70b9\u200b</p> <p>\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u7b80\u5355\u200b\u6613\u200b\u5b9e\u73b0\u200b\uff1b</li> <li>\u200b\u901a\u7528\u6027\u200b\u5f3a\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u5404\u79cd\u200b\u53ef\u5fae\u200b\u51fd\u6570\u200b\uff1b</li> <li>\u200b\u53ef\u200b\u7528\u4e8e\u200b\u5927\u89c4\u6a21\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u4efb\u52a1\u200b\u3002</li> </ul> <p>\u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u200b\u5b66\u4e60\u200b\u7387\u200b \\(\\alpha\\) \u200b\u654f\u611f\u200b\uff1b</li> <li>\u200b\u53ef\u80fd\u200b\u9677\u5165\u200b\u5c40\u90e8\u200b\u6700\u5c0f\u503c\u200b\uff1b</li> <li>\u200b\u6536\u655b\u200b\u901f\u5ea6\u200b\u53d6\u51b3\u4e8e\u200b\u51fd\u6570\u200b\u5f62\u72b6\u200b\uff08\u200b\u978d\u70b9\u200b\u3001\u200b\u5e73\u7f13\u200b\u533a\u57df\u200b\u7b49\u200b\uff09\u3002</li> </ul> <p>\u200b\u6539\u8fdb\u200b\u7b97\u6cd5\u200b\uff08\u200b\u6269\u5c55\u200b\uff09</p> <p>\u200b\u5728\u200b\u73b0\u4ee3\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u4e2d\u200b\uff0c\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u884d\u751f\u200b\u51fa\u200b\u8bb8\u591a\u200b\u6539\u8fdb\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> \u200b\u4f18\u5316\u200b\u7b97\u6cd5\u200b \u200b\u5173\u952e\u200b\u601d\u60f3\u200b Momentum \u200b\u6a21\u62df\u200b\u60ef\u6027\u200b\uff0c\u200b\u52a0\u5feb\u200b\u6536\u655b\u200b AdaGrad \u200b\u81ea\u200b\u9002\u5e94\u200b\u5b66\u4e60\u200b\u7387\u200b RMSProp \u200b\u907f\u514d\u200b\u5b66\u4e60\u200b\u7387\u8fc7\u200b\u5c0f\u200b\u95ee\u9898\u200b Adam \u200b\u7ed3\u5408\u200b Momentum \u200b\u548c\u200b RMSProp\uff08\u200b\u6700\u200b\u5e38\u7528\u200b\uff09"},{"location":"machine/interview/#momentumadagradrmspropadam","title":"\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6539\u8fdb\u200b\u7b97\u6cd5\u200b\uff1aMomentum\u3001AdaGrad\u3001RMSProp\u3001Adam","text":""},{"location":"machine/interview/#momentum","title":"Momentum","text":"<p>\u200b\u52a0\u5165\u200b\u201c\u200b\u60ef\u6027\u200b\u201d\u200b\u7684\u200b\u6982\u5ff5\u200b\uff0c\u200b\u8ba9\u200b\u53c2\u6570\u200b\u66f4\u65b0\u200b\u4e0d\u4ec5\u200b\u4f9d\u8d56\u200b\u5f53\u524d\u200b\u68af\u5ea6\u200b\uff0c\u200b\u8fd8\u200b\u8003\u8651\u200b\u8fc7\u53bb\u200b\u68af\u5ea6\u200b\u7684\u200b\u7d2f\u79ef\u200b\u8d8b\u52bf\u200b\u3002 \u200b\u5c31\u200b\u50cf\u200b\u4e00\u4e2a\u200b\u5c0f\u7403\u200b\u5728\u200b\u5c71\u8c37\u200b\u4e2d\u200b\u6eda\u52a8\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u6709\u200b\u60ef\u6027\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u7acb\u5373\u200b\u505c\u4e0b\u200b\u3002</p> <p>\u200b\u6570\u5b66\u516c\u5f0f\u200b</p> <p>\u200b\u5b9a\u4e49\u200b\u901f\u5ea6\u200b\u9879\u200b \\(v_t\\)\uff1a</p> \\[ v_t = \\beta v_{t-1} + (1 - \\beta) \\nabla_\\theta J(\\theta_t) \\] <p>\u200b\u53c2\u6570\u200b\u66f4\u65b0\u200b\u4e3a\u200b\uff1a</p> \\[ \\theta_{t+1} = \\theta_t - \\alpha v_t \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(\\beta\\) \u200b\u662f\u200b\u52a8\u91cf\u200b\u7cfb\u6570\u200b\uff08\u200b\u901a\u5e38\u200b\u53d6\u200b \\(0.9\\)\uff09\uff1b</li> <li>\\(v_t\\) \u200b\u7c7b\u4f3c\u200b\u52a8\u91cf\u200b\u7684\u200b\u7d2f\u79ef\u200b\u68af\u5ea6\u200b\u3002</li> <li>\\(\\alpha\\) \u200b\u662f\u200b\u5b66\u4e60\u200b\u7387\u200b</li> </ul> <p>\u200b\u7279\u70b9\u200b</p> <p>\u2705 \u200b\u52a0\u901f\u200b\u6536\u655b\u200b\uff08\u200b\u5c24\u5176\u200b\u5728\u200b\u5ce1\u8c37\u200b\u5f62\u200b\u66f2\u9762\u200b\u4e2d\u200b\uff09 \u2705 \u200b\u6291\u5236\u200b\u9707\u8361\u200b\uff08\u200b\u65b9\u5411\u200b\u66f4\u200b\u7a33\u5b9a\u200b\uff09 \u26a0\ufe0f \u200b\u5982\u679c\u200b \\(\\beta\\) \u200b\u592a\u200b\u5927\u200b\uff0c\u200b\u53ef\u80fd\u200b\u201c\u200b\u51b2\u200b\u8fc7\u200b\u8c37\u5e95\u200b\u201d\u3002</p>"},{"location":"machine/interview/#adagrad","title":"AdaGrad\uff08\u200b\u81ea\u200b\u9002\u5e94\u200b\u5b66\u4e60\u200b\u7387\u200b\u7b97\u6cd5\u200b\uff09","text":"<p>\u200b\u4e0d\u540c\u200b\u53c2\u6570\u200b\u7684\u200b\u68af\u5ea6\u200b\u5927\u5c0f\u200b\u5dee\u5f02\u200b\u53ef\u80fd\u200b\u5f88\u5927\u200b\u3002 AdaGrad \u200b\u901a\u8fc7\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u53c2\u6570\u200b\u5355\u72ec\u200b\u8c03\u6574\u200b\u5b66\u4e60\u200b\u7387\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u66f4\u65b0\u200b\u66f4\u200b\u7a33\u5b9a\u200b\u3002</p> <p>\u200b\u6570\u5b66\u516c\u5f0f\u200b</p> <p>\u200b\u8bbe\u200b\u6bcf\u4e2a\u200b\u53c2\u6570\u200b\u90fd\u200b\u6709\u200b\u81ea\u5df1\u200b\u7684\u200b\u7d2f\u79ef\u200b\u5e73\u65b9\u200b\u68af\u5ea6\u200b \\(G_t\\)\uff1a</p> \\[ G_t = G_{t-1} + [\\nabla_\\theta J(\\theta_t)]^2 \\] <p>\u200b\u53c2\u6570\u200b\u66f4\u65b0\u200b\uff1a</p> \\[ \\theta_{t+1} = \\theta_t - \\frac{\\alpha}{\\sqrt{G_t + \\varepsilon}} \\nabla_\\theta J(\\theta_t) \\] <p>\u200b\u5176\u4e2d\u200b \\(\\varepsilon\\) \u200b\u662f\u200b\u9632\u6b62\u200b\u9664\u200b\u96f6\u200b\u7684\u200b\u5c0f\u200b\u5e38\u6570\u200b\uff08\u200b\u5982\u200b \\(10^{-8}\\)\uff09\u3002</p> <p>** \u200b\u7279\u70b9\u200b**</p> <p>\u2705 \u200b\u5bf9\u200b\u7a00\u758f\u200b\u6570\u636e\u200b\u6709\u6548\u200b\uff08\u200b\u5982\u200b NLP \u200b\u4e2d\u200b\u7684\u200b\u8bcd\u200b\u5d4c\u5165\u200b\uff09 \u26a0\ufe0f \u200b\u7f3a\u70b9\u200b\uff1a\u200b\u5b66\u4e60\u200b\u7387\u200b\u4e0d\u65ad\u200b\u8870\u51cf\u200b\uff0c\u200b\u53ef\u80fd\u200b\u8fc7\u65e9\u200b\u505c\u6ede\u200b\u3002</p>"},{"location":"machine/interview/#rmsprop","title":"RMSProp\uff08\u200b\u5747\u200b\u65b9\u6839\u200b\u4f20\u64ad\u200b\uff09","text":"<p>RMSProp \u200b\u662f\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b AdaGrad \u200b\u5b66\u4e60\u200b\u7387\u200b\u8870\u51cf\u200b\u8fc7\u5feb\u200b\u7684\u200b\u95ee\u9898\u200b\u3002 \u200b\u5b83\u200b\u4e0d\u662f\u200b\u7d2f\u79ef\u200b\u6240\u6709\u200b\u5386\u53f2\u200b\u68af\u5ea6\u200b\u5e73\u65b9\u200b\uff0c\u200b\u800c\u662f\u200b\u4f7f\u7528\u200b\u6307\u6570\u200b\u52a0\u6743\u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b\uff08EWMA\uff09\u3002</p> <p>\u200b\u6570\u5b66\u516c\u5f0f\u200b</p> \\[ E[g^2]*t = \\beta E[g^2]*{t-1} + (1 - \\beta)(\\nabla_\\theta J(\\theta_t))^2 \\] \\[ \\theta_{t+1} = \\theta_t - \\frac{\\alpha}{\\sqrt{E[g^2]*t + \\varepsilon}} \\nabla*\\theta J(\\theta_t) \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(\\beta\\) \u200b\u4e00\u822c\u200b\u53d6\u200b \\(0.9\\)\uff1b</li> <li>\\(E[g^2]_t\\) \u200b\u662f\u200b\u68af\u5ea6\u200b\u5e73\u65b9\u200b\u7684\u200b\u6307\u6570\u200b\u52a0\u6743\u200b\u5e73\u5747\u200b\u3002</li> </ul> <p>\u200b\u7279\u70b9\u200b</p> <p>\u2705 \u200b\u81ea\u200b\u9002\u5e94\u200b\u5b66\u4e60\u200b\u7387\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u8fc7\u65e9\u200b\u8870\u51cf\u200b \u2705 \u200b\u5728\u200b\u975e\u200b\u5e73\u7a33\u200b\u95ee\u9898\u200b\uff08\u200b\u5982\u200b RNN\uff09\u200b\u4e0a\u200b\u8868\u73b0\u200b\u826f\u597d\u200b \u26a0\ufe0f \u200b\u65e0\u200b\u52a8\u91cf\u200b\u9879\u200b\uff0c\u200b\u6536\u655b\u200b\u65b9\u5411\u200b\u53ef\u80fd\u200b\u6296\u52a8\u200b</p>"},{"location":"machine/interview/#adamadaptive-moment-estimation","title":"Adam\uff08Adaptive Moment Estimation\uff09","text":"<p>Adam = Momentum + RMSProp \u200b\u65e2\u200b\u8003\u8651\u200b\u68af\u5ea6\u200b\u7684\u200b\u52a8\u91cf\u200b\uff08\u200b\u65b9\u5411\u200b\uff09\uff0c\u200b\u53c8\u200b\u8003\u8651\u200b\u68af\u5ea6\u200b\u7684\u200b\u81ea\u200b\u9002\u5e94\u200b\u5b66\u4e60\u200b\u7387\u200b\uff08\u200b\u5c3a\u5ea6\u200b\uff09\u3002</p> <p>\u200b\u6570\u5b66\u516c\u5f0f\u200b</p> <p>\u200b\u5b9a\u4e49\u200b\u4e00\u9636\u200b\u52a8\u91cf\u200b\uff08\u200b\u5e73\u5747\u200b\u68af\u5ea6\u200b\uff09\u200b\u548c\u200b\u4e8c\u9636\u200b\u52a8\u91cf\u200b\uff08\u200b\u5e73\u5747\u200b\u5e73\u65b9\u200b\u68af\u5ea6\u200b\uff09\uff1a</p> \\[ \\begin{aligned} m_t &amp;= \\beta_1 m_{t-1} + (1 - \\beta_1)\\nabla_\\theta J(\\theta_t) \\ v_t &amp;= \\beta_2 v_{t-1} + (1 - \\beta_2)(\\nabla_\\theta J(\\theta_t))^2 \\end{aligned} \\] <p>\u200b\u4e3a\u200b\u4fee\u6b63\u200b\u504f\u5dee\u200b\uff0c\u200b\u8fdb\u884c\u200b\u504f\u5dee\u200b\u6821\u6b63\u200b\uff1a</p> \\[ \\begin{aligned} \\hat{m}_t &amp;= \\frac{m_t}{1 - \\beta_1^t} \\ \\hat{v}_t &amp;= \\frac{v_t}{1 - \\beta_2^t} \\end{aligned} \\] <p>\u200b\u6700\u7ec8\u200b\u53c2\u6570\u200b\u66f4\u65b0\u200b\uff1a</p> \\[ \\theta_{t+1} = \\theta_t - \\frac{\\alpha}{\\sqrt{\\hat{v}_t} + \\varepsilon} \\hat{m}_t \\] <p>\u200b\u53c2\u6570\u200b\u53d6\u503c\u200b\uff08\u200b\u9ed8\u8ba4\u200b\u63a8\u8350\u200b\uff09</p> <ul> <li>\\(\\beta_1 = 0.9\\)</li> <li>\\(\\beta_2 = 0.999\\)</li> <li>\\(\\varepsilon = 10^{-8}\\)</li> </ul> <p>\u200b\u7279\u70b9\u200b</p> <p>\u2705 \u200b\u6536\u655b\u200b\u5feb\u200b\u3001\u200b\u7a33\u5b9a\u200b\u3001\u200b\u9c81\u68d2\u200b \u2705 \u200b\u5bf9\u8d85\u200b\u53c2\u6570\u200b\u4e0d\u592a\u200b\u654f\u611f\u200b \u2705 \u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u4e2d\u200b\u6700\u200b\u5e38\u7528\u200b\u7684\u200b\u4f18\u5316\u200b\u7b97\u6cd5\u200b\uff08\u200b\u51e0\u4e4e\u200b\u9ed8\u8ba4\u200b\u9009\u62e9\u200b\uff09 \u26a0\ufe0f \u200b\u6709\u65f6\u200b\u4f1a\u200b\u9677\u5165\u200b\u5c40\u90e8\u200b\u6781\u5c0f\u503c\u200b\u6216\u200b\u978d\u70b9\u200b</p> \u200b\u7b97\u6cd5\u200b \u200b\u5b66\u4e60\u200b\u7387\u200b\u7c7b\u578b\u200b \u200b\u662f\u5426\u200b\u4f7f\u7528\u200b\u52a8\u91cf\u200b \u200b\u662f\u5426\u200b\u9700\u8981\u200b\u504f\u5dee\u200b\u4fee\u6b63\u200b \u200b\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b SGD \u200b\u56fa\u5b9a\u200b \u274c \u274c \u200b\u7b80\u5355\u200b\u7a33\u5b9a\u200b \u200b\u6536\u655b\u200b\u6162\u200b\uff0c\u200b\u9707\u8361\u200b Momentum \u200b\u56fa\u5b9a\u200b \u2705 \u274c \u200b\u52a0\u901f\u200b\u6536\u655b\u200b \u200b\u53ef\u80fd\u200b\u8d85\u8c03\u200b AdaGrad \u200b\u81ea\u200b\u9002\u5e94\u200b \u274c \u274c \u200b\u7a00\u758f\u200b\u6570\u636e\u200b\u597d\u200b \u200b\u5b66\u4e60\u200b\u7387\u8fc7\u200b\u5feb\u200b\u8870\u51cf\u200b RMSProp \u200b\u81ea\u200b\u9002\u5e94\u200b \u274c \u274c \u200b\u7a33\u5b9a\u200b\u5feb\u901f\u200b \u200b\u65e0\u200b\u52a8\u91cf\u200b Adam \u200b\u81ea\u200b\u9002\u5e94\u200b \u2705 \u2705 \u200b\u5feb\u901f\u200b\u7a33\u5b9a\u200b\u3001\u200b\u901a\u7528\u200b \u200b\u53ef\u80fd\u200b\u6b20\u200b\u6536\u655b"},{"location":"machine/interview/#_51","title":"\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6cd5\u200b\u627e\u5230\u200b\u7684\u200b\u4e00\u5b9a\u200b\u662f\u200b\u4e0b\u964d\u200b\u6700\u5feb\u200b\u7684\u200b\u65b9\u5411\u200b\u5417\u200b\uff1f","text":"<p>\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6cd5\u200b\u627e\u5230\u200b\u7684\u200b\u662f\u200b\u5f53\u524d\u200b\u70b9\u5904\u200b\u51fd\u6570\u200b\u503c\u200b\u4e0b\u964d\u200b\u6700\u5feb\u200b\u7684\u200b\u65b9\u5411\u200b\uff0c\u200b\u4f46\u200b\u4ec5\u9650\u4e8e\u200b\u57fa\u4e8e\u200b\u4e00\u9636\u200b\u5bfc\u6570\u200b\u4fe1\u606f\u200b\u7684\u200b\u201c\u200b\u5c40\u90e8\u200b\u201d\u200b\u6700\u5feb\u200b\u4e0b\u964d\u200b\u65b9\u5411\u200b\u3002\u200b\u6362\u53e5\u8bdd\u8bf4\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u5728\u200b\u5f53\u524d\u200b\u70b9\u200b\u9644\u8fd1\u200b\u7528\u200b\u7ebf\u6027\u200b\u8fd1\u4f3c\u200b\u6a21\u578b\u200b\u6240\u200b\u51b3\u5b9a\u200b\u7684\u200b\u4e0b\u964d\u200b\u6700\u5feb\u200b\u65b9\u5411\u200b9\u3002 <p>\u200b\u7406\u8bba\u200b\u8bf4\u660e\u200b</p> <ul> <li>\u200b\u68af\u5ea6\u65b9\u5411\u200b\u662f\u200b\u591a\u5143\u200b\u51fd\u6570\u200b\u5728\u200b\u67d0\u200b\u4e00\u70b9\u200b\u5904\u200b\u51fd\u6570\u200b\u503c\u200b\u589e\u957f\u200b\u6700\u5feb\u200b\u7684\u200b\u65b9\u5411\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8d1f\u200b\u68af\u5ea6\u65b9\u5411\u200b\u5c31\u662f\u200b\u4e0b\u964d\u200b\u6700\u5feb\u200b\u7684\u200b\u65b9\u5411\u200b\u3002\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6cd5\u200b\u6b63\u662f\u200b\u6cbf\u7740\u200b\u8d1f\u200b\u68af\u5ea6\u65b9\u5411\u200b\u66f4\u65b0\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f7f\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u5feb\u901f\u200b\u51cf\u5c0f\u200b\u3002</li> <li>\u200b\u4f46\u662f\u200b\uff0c\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6cd5\u53ea\u200b\u5229\u7528\u200b\u4e86\u200b\u4e00\u9636\u200b\u5bfc\u6570\u200b\u4fe1\u606f\u200b\uff0c\u200b\u6ca1\u6709\u200b\u8003\u8651\u200b\u66f4\u200b\u9ad8\u9636\u200b\u7684\u200b\u4fe1\u606f\u200b\uff08\u200b\u5982\u200bHessian\u200b\u77e9\u9635\u200b\uff0c\u200b\u5373\u200b\u4e8c\u9636\u200b\u5bfc\u6570\u200b\uff09\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5b83\u200b\u5bf9\u200b\u201c\u200b\u5c40\u90e8\u200b\u201d\u200b\u4e0b\u964d\u200b\u65b9\u5411\u200b\u7684\u200b\u5224\u65ad\u200b\u4ec5\u9650\u4e8e\u200b\u5f53\u524d\u200b\u70b9\u200b\u7684\u200b\u5207\u200b\u5e73\u9762\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u4fdd\u8bc1\u200b\u5168\u5c40\u200b\u6700\u4f18\u200b\u6216\u8005\u200b\u5728\u200b\u590d\u6742\u200b\u5730\u5f62\u200b\u4e2d\u200b\u627e\u5230\u200b\u6700\u5feb\u200b\u7684\u200b\u4e0b\u964d\u200b\u8def\u5f84\u200b\u3002</li> </ul> <p>\u200b\u4e0e\u200b\u725b\u987f\u200b\u6cd5\u200b\u7684\u200b\u5bf9\u6bd4\u200b</p> <ul> <li>\u200b\u725b\u987f\u200b\u6cd5\u5728\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u90fd\u200b\u8003\u8651\u200b\u4e86\u200b\u4e8c\u9636\u200b\u5bfc\u6570\u200b\u4fe1\u606f\u200b\uff0c\u200b\u80fd\u200b\u66f4\u597d\u200b\u5730\u200b\u62df\u5408\u200b\u5f53\u524d\u200b\u70b9\u200b\u9644\u8fd1\u200b\u7684\u200b\u66f2\u9762\u200b\uff0c\u200b\u7406\u8bba\u200b\u4e0a\u200b\u6536\u655b\u200b\u901f\u5ea6\u200b\u66f4\u200b\u5feb\u200b\uff08\u200b\u4e8c\u9636\u200b\u6536\u655b\u200b\uff09\uff0c\u200b\u5c24\u5176\u200b\u5728\u200b\u63a5\u8fd1\u200b\u6700\u4f18\u200b\u89e3\u65f6\u200b\u8868\u73b0\u200b\u4f18\u4e8e\u200b\u4ec5\u200b\u6709\u200b\u4e00\u9636\u200b\u6536\u655b\u200b\u901f\u5ea6\u200b\u7684\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6cd5\u200b\u3002</li> <li>\u200b\u4f46\u200b\u7531\u4e8e\u200b\u725b\u987f\u200b\u6cd5\u200b\u8ba1\u7b97\u200b\u548c\u200b\u5b58\u50a8\u200b\u5f00\u9500\u200b\u5927\u200b\uff0c\u200b\u5b9e\u9645\u200b\u5927\u89c4\u6a21\u200b\u95ee\u9898\u200b\u4e2d\u200b\u5f80\u5f80\u200b\u8fd8\u662f\u200b\u9009\u7528\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u53ca\u5176\u200b\u53d8\u79cd\u200b\u3002</li> </ul> <p>\u200b\u7ed3\u8bba\u200b</p> <p>\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u6cd5\u5728\u200b\u5f53\u524d\u200b\u70b9\u200b\u7684\u200b\u8d1f\u200b\u68af\u5ea6\u65b9\u5411\u200b\u662f\u200b\u51fd\u6570\u200b\u4e0b\u964d\u200b\u6700\u5feb\u200b\u7684\u200b\u65b9\u5411\u200b\uff0c\u200b\u4f46\u4ec5\u200b\u57fa\u4e8e\u200b\u4e00\u9636\u200b\u4fe1\u606f\u200b\uff0c\u200b\u5bf9\u200b\u6574\u4f53\u200b\u4f18\u5316\u200b\u8def\u5f84\u200b\u800c\u8a00\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u80fd\u200b\u628a\u63e1\u200b\u201c\u200b\u5168\u5c40\u200b\u6700\u5feb\u200b\u201d\u200b\u7684\u200b\u4e0b\u964d\u200b\u65b9\u5411\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u6709\u200b\u9ad8\u9636\u200b\u4fe1\u606f\u200b\u53ef\u200b\u5229\u7528\u200b\u65f6\u200b\u3002</p>"},{"location":"machine/interview/#mbgd","title":"MBGD\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u4ec0\u4e48\u200b\uff1f","text":""},{"location":"machine/interview/#1-mini-batch-batch-size","title":"1. Mini-batch \u200b\u5927\u5c0f\u200b\uff08batch size\uff09\u200b\u9009\u62e9","text":"<ul> <li> <p>\u200b\u8fc7\u5927\u200b\uff1a</p> <ul> <li>\u200b\u68af\u5ea6\u200b\u4f30\u8ba1\u200b\u975e\u5e38\u200b\u51c6\u786e\u200b\uff0c\u200b\u4f46\u200b\u66f4\u65b0\u200b\u6b21\u6570\u200b\u5c11\u200b \u2192 \u200b\u6536\u655b\u200b\u6162\u200b\u3002</li> <li>\u200b\u9700\u8981\u200b\u66f4\u200b\u591a\u200b\u663e\u5b58\u200b\u3002</li> <li>\u200b\u566a\u58f0\u200b\u592a\u5c0f\u200b\uff0c\u200b\u53ef\u80fd\u200b\u9677\u5165\u200b\u5c40\u90e8\u200b\u6700\u5c0f\u503c\u200b\u3002</li> <li> <p>\u200b\u8fc7\u200b\u5c0f\u200b\uff1a</p> </li> <li> <p>\u200b\u566a\u58f0\u200b\u5927\u200b\uff0c\u200b\u6536\u655b\u200b\u4e0d\u200b\u7a33\u5b9a\u200b\u3002</p> </li> <li>\u200b\u5e76\u884c\u200b\u6548\u7387\u200b\u4f4e\u200b\u3002</li> </ul> </li> </ul> <p>\ud83d\udccf \u200b\u4e00\u822c\u200b\u7ecf\u9a8c\u200b\uff1a</p> <ul> <li>\u200b\u5c0f\u200b\u6a21\u578b\u200b\uff1a<code>batch_size = 32 ~ 128</code></li> <li>\u200b\u5927\u200b\u6a21\u578b\u200b\uff08CNN/RNN\uff09\uff1a<code>batch_size = 256 ~ 1024</code></li> <li>\u200b\u6781\u5927\u200b\u6a21\u578b\u200b\uff08Transformer\uff09\uff1a\u200b\u53ef\u80fd\u200b\u4f7f\u7528\u200b <code>4096</code> \u200b\u6216\u200b\u66f4\u200b\u591a\u200b\uff08\u200b\u914d\u5408\u200b\u5b66\u4e60\u200b\u7387\u200b\u8c03\u6574\u200b\uff09</li> </ul>"},{"location":"machine/interview/#2-learning-rate","title":"2. \u200b\u5b66\u4e60\u200b\u7387\u200b\uff08Learning Rate, \u03b1\uff09\u200b\u8981\u200b\u914d\u5408\u200b\u8c03\u6574","text":"<p>\u200b\u5b66\u4e60\u200b\u7387\u200b\u548c\u200b batch size \u200b\u9ad8\u5ea6\u200b\u76f8\u5173\u200b\u3002 \u200b\u5e38\u89c1\u200b\u7ecf\u9a8c\u200b\u516c\u5f0f\u200b\uff1a</p> \\[ \\alpha_{\\text{new}} = \\alpha_{\\text{base}} \\times \\frac{b_{\\text{new}}}{b_{\\text{base}}} \\] <p>\u200b\u5373\u200b batch size \u200b\u7ffb\u500d\u200b\uff0c\u200b\u5b66\u4e60\u200b\u7387\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u8fd1\u4f3c\u200b\u7ffb\u500d\u200b\u3002 \u200b\u4f46\u200b\u8981\u200b\u901a\u8fc7\u200bwarmup\uff08\u200b\u70ed\u8eab\u200b\uff09\u200b\u7b49\u200b\u7b56\u7565\u200b\u5e73\u6ed1\u200b\u8fc7\u6e21\u200b\u3002</p>"},{"location":"machine/interview/#3-shuffling","title":"3. \u200b\u6570\u636e\u200b\u6253\u4e71\u200b\uff08Shuffling\uff09","text":"<p>\u200b\u6bcf\u4e2a\u200b epoch \u200b\u524d\u200b\u5fc5\u987b\u200b \u200b\u968f\u673a\u200b\u6253\u4e71\u200b\u6570\u636e\u200b\uff0c\u200b\u5426\u5219\u200b\u6bcf\u4e2a\u200b batch \u200b\u7684\u200b\u6570\u636e\u200b\u53ef\u80fd\u200b\u5206\u5e03\u200b\u6709\u200b\u504f\u5dee\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u6a21\u578b\u200b\u5b66\u4e60\u200b\u65b9\u5411\u200b\u9519\u8bef\u200b\u3002 \u200b\u5c24\u5176\u200b\u5728\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u4e2d\u200b\uff0c\u200b\u5982\u679c\u200b\u6837\u672c\u200b\u6309\u200b\u7c7b\u522b\u200b\u987a\u5e8f\u6392\u5217\u200b\u800c\u200b\u672a\u200b\u6253\u4e71\u200b\uff0c\u200b\u4f1a\u200b\u4e25\u91cd\u200b\u5f71\u54cd\u200b\u8bad\u7ec3\u200b\u6548\u679c\u200b\u3002</p>"},{"location":"machine/interview/#4_7","title":"4. \u200b\u6b63\u5219\u200b\u5316\u200b\u4e0e\u200b\u6279\u200b\u5f52\u4e00\u5316\u200b\u7684\u200b\u5173\u7cfb","text":"<ul> <li>\u200b\u5f53\u200b batch \u200b\u8f83\u200b\u5c0f\u65f6\u200b\uff0cBatchNorm \u200b\u7684\u200b\u5747\u503c\u200b\u4e0e\u200b\u65b9\u5dee\u200b\u4f30\u8ba1\u200b\u4e0d\u200b\u7a33\u5b9a\u200b\u3002   \u2192 \u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b LayerNorm \u200b\u6216\u200b GroupNorm \u200b\u4ee3\u66ff\u200b\u3002</li> <li>\u200b\u5f53\u200b batch \u200b\u8f83\u5927\u200b\u65f6\u200b\uff0cBatchNorm \u200b\u901a\u5e38\u200b\u80fd\u200b\u63d0\u5347\u200b\u6536\u655b\u200b\u901f\u5ea6\u200b\u3002</li> </ul>"},{"location":"machine/interview/#5_3","title":"5. \u200b\u68af\u5ea6\u200b\u566a\u58f0\u200b\u4e0e\u200b\u6536\u655b\u200b\u7a33\u5b9a\u6027","text":"<ul> <li>MBGD \u200b\u7684\u200b\u68af\u5ea6\u200b\u5e26\u6709\u200b\u4e00\u5b9a\u200b\u968f\u673a\u6027\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u201c\u200b\u566a\u58f0\u200b\u201d\u200b\u5176\u5b9e\u200b\u6709\u200b\u76ca\u5904\u200b\uff08\u200b\u9632\u6b62\u200b\u9677\u5165\u200b\u5c40\u90e8\u200b\u6781\u5c0f\u200b\u70b9\u200b\uff09\u3002</li> <li>\u200b\u4f46\u200b\u566a\u58f0\u200b\u8fc7\u5927\u200b\uff08batch \u200b\u592a\u5c0f\u200b\uff09\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u9707\u8361\u200b\u3002</li> <li>\u200b\u53ef\u200b\u7ed3\u5408\u200b Momentum \u200b\u6216\u200b Adam \u200b\u6765\u200b\u5e73\u6ed1\u200b\u66f4\u65b0\u200b\u3002</li> </ul>"},{"location":"machine/interview/#6_3","title":"6. \u200b\u663e\u5b58\u200b\u4e0e\u200b\u8ba1\u7b97\u200b\u6548\u7387\u200b\u7684\u200b\u6743\u8861","text":"<ul> <li>batch \u200b\u8d8a\u5927\u200b\uff0c\u200b\u5360\u7528\u200b\u663e\u5b58\u200b\u8d8a\u200b\u591a\u200b\u3002</li> <li> <p>\u200b\u82e5\u200b\u663e\u5b58\u200b\u4e0d\u8db3\u200b\uff0c\u200b\u53ef\u200b\u91c7\u7528\u200b\uff1a</p> <ul> <li>Gradient Accumulation\uff08\u200b\u68af\u5ea6\u200b\u7d2f\u79ef\u200b\uff09\uff1b</li> <li>Mixed Precision Training\uff08\u200b\u6df7\u5408\u200b\u7cbe\u5ea6\u200b\u8bad\u7ec3\u200b\uff09\uff1b</li> <li>Gradient Checkpointing\uff08\u200b\u68af\u5ea6\u200b\u68c0\u67e5\u70b9\u200b\uff09\u3002</li> </ul> </li> </ul>"},{"location":"machine/interview/#7-mini-batch","title":"7. Mini-batch \u200b\u7684\u200b\u6784\u5efa\u200b\u8981\u200b\u6709\u200b\u4ee3\u8868\u6027","text":"<ul> <li>\u200b\u5c3d\u91cf\u200b\u4fdd\u8bc1\u200b\u6bcf\u4e2a\u200b batch \u200b\u7684\u200b\u6570\u636e\u5206\u5e03\u200b\u4e0e\u200b\u6574\u4f53\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u76f8\u4f3c\u200b\uff1b</li> <li>\u200b\u5bf9\u4e8e\u200b\u7c7b\u522b\u200b\u4e0d\u200b\u5e73\u8861\u200b\u95ee\u9898\u200b\uff0c\u200b\u5efa\u8bae\u200b\u91c7\u7528\u200b \u200b\u5206\u5c42\u200b\u91c7\u6837\u200b\uff08stratified sampling\uff09\uff1b</li> <li>\u200b\u5bf9\u200b\u5e8f\u5217\u200b\u4efb\u52a1\u200b\uff0c\u200b\u8981\u200b\u6ce8\u610f\u200b\u6837\u672c\u200b\u957f\u5ea6\u200b\u7684\u200b\u5206\u5e03\u200b\u3002</li> </ul>"},{"location":"machine/interview/#_52","title":"\u4ec0\u4e48\u200b\u662f\u200b\u6b63\u6001\u5206\u5e03\u200b\uff1f\u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u91cd\u89c6\u200b\u5b83\u200b\uff1f","text":"<p>\u200b\u6b63\u6001\u5206\u5e03\u200b\uff08\u200b\u4e5f\u200b\u53eb\u200b\u9ad8\u65af\u5206\u5e03\u200b\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u8fde\u7eed\u200b\u6982\u7387\u5206\u5e03\u200b\uff0c\u200b\u5176\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\uff08PDF\uff09\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a</p> \\[ f(x \\mid \\mu, \\sigma^2) = \\frac{1}{\\sqrt{2 \\pi \\sigma^2}} \\exp\\left(- \\frac{(x - \\mu)^2}{2\\sigma^2}\\right) \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(x\\)\uff1a\u200b\u968f\u673a\u53d8\u91cf\u200b\uff1b</li> <li>\\(\\mu\\)\uff1a\u200b\u5747\u503c\u200b\uff08mean\uff09\uff0c\u200b\u5206\u5e03\u200b\u4e2d\u5fc3\u200b\uff1b</li> <li>\\(\\sigma^2\\)\uff1a\u200b\u65b9\u5dee\u200b\uff08variance\uff09\uff0c\u200b\u63a7\u5236\u200b\u5206\u5e03\u200b\u5bbd\u5ea6\u200b\uff1b</li> <li>\\(\\sigma\\)\uff1a\u200b\u6807\u51c6\u5dee\u200b\uff08standard deviation\uff09\u3002</li> </ul> <p>\u200b\u8bb0\u53f7\u200b\uff1a\\(X \\sim \\mathcal{N}(\\mu, \\sigma^2)\\) \u200b\u8868\u793a\u200b\u968f\u673a\u53d8\u91cf\u200b \\(X\\) \u200b\u670d\u4ece\u200b\u5747\u503c\u200b\u4e3a\u200b \\(\\mu\\)\u3001\u200b\u65b9\u5dee\u200b\u4e3a\u200b \\(\\sigma^2\\) \u200b\u7684\u200b\u6b63\u6001\u5206\u5e03\u200b\u3002</p> <p>\u200b\u6b63\u6001\u5206\u5e03\u200b\u7684\u200b\u7279\u5f81\u200b</p> <ol> <li> <p>\u200b\u5bf9\u79f0\u6027\u200b</p> <ul> <li>\u200b\u5173\u4e8e\u200b\u5747\u503c\u200b \\(\\mu\\) \u200b\u5bf9\u79f0\u200b\uff0c\\(\\mu\\) \u200b\u662f\u200b\u5206\u5e03\u200b\u7684\u200b\u5cf0\u503c\u200b\u70b9\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u5355\u5cf0\u200b\u6027\u200b</p> <ul> <li>\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u5cf0\u200b\uff0c\u200b\u5448\u200b\u949f\u5f62\u200b\u66f2\u7ebf\u200b\u3002</li> </ul> </li> <li> <p>68-95-99.7 \u200b\u89c4\u5219\u200b\uff08\u200b\u7ecf\u9a8c\u200b\u6cd5\u5219\u200b\uff09</p> <ul> <li>\u200b\u7ea6\u200b 68% \u200b\u7684\u200b\u6570\u636e\u200b\u843d\u200b\u5728\u200b \\([\\mu - \\sigma, \\mu + \\sigma]\\)</li> <li>\u200b\u7ea6\u200b 95% \u200b\u7684\u200b\u6570\u636e\u200b\u843d\u200b\u5728\u200b \\([\\mu - 2\\sigma, \\mu + 2\\sigma]\\)</li> <li>\u200b\u7ea6\u200b 99.7% \u200b\u7684\u200b\u6570\u636e\u200b\u843d\u200b\u5728\u200b \\([\\mu - 3\\sigma, \\mu + 3\\sigma]\\)</li> </ul> </li> <li> <p>\u200b\u6e10\u8fd1\u200b\u6027\u200b</p> <ul> <li>\u200b\u66f2\u7ebf\u200b\u4e24\u7aef\u200b\u65e0\u9650\u200b\u63a5\u8fd1\u200b x \u200b\u8f74\u200b\uff0c\u200b\u4f46\u200b\u6c38\u4e0d\u200b\u89e6\u53ca\u200b\u3002</li> </ul> </li> </ol> <p>\u200b\u6b63\u6001\u5206\u5e03\u200b\u7684\u200b\u6570\u5b66\u200b\u6027\u8d28\u200b</p> <ol> <li>\u200b\u671f\u671b\u200b\u4e0e\u200b\u65b9\u5dee\u200b</li> </ol> \\[ \\mathbb{E}[X] = \\mu, \\quad \\mathrm{Var}(X) = \\sigma^2 \\] <ol> <li>\u200b\u6807\u51c6\u5316\u200b</li> </ol> <p>\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u4efb\u610f\u200b\u6b63\u6001\u5206\u5e03\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u6807\u51c6\u200b\u6b63\u6001\u5206\u5e03\u200b \\(Z \\sim \\mathcal{N}(0, 1)\\)\uff1a</p> \\[ Z = \\frac{X - \\mu}{\\sigma} \\] <ol> <li>\u200b\u7ebf\u6027\u7ec4\u5408\u200b\u4ecd\u4e3a\u200b\u6b63\u6001\u5206\u5e03\u200b</li> </ol> <p>\u200b\u5982\u679c\u200b \\(X \\sim \\mathcal{N}(\\mu_X, \\sigma_X^2)\\)\uff0c\\(Y \\sim \\mathcal{N}(\\mu_Y, \\sigma_Y^2)\\) \u200b\u72ec\u7acb\u200b\uff0c\u200b\u5219\u200b\uff1a</p> \\[ aX + bY \\sim \\mathcal{N}(a\\mu_X + b\\mu_Y, a^2\\sigma_X^2 + b^2\\sigma_Y^2) \\]"},{"location":"machine/interview/#_53","title":"\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u91cd\u89c6\u200b\u6b63\u6001\u5206\u5e03\u200b\uff1f","text":"<ol> <li> <p>\u200b\u4e2d\u5fc3\u200b\u6781\u9650\u200b\u5b9a\u7406\u200b\uff08Central Limit Theorem, CLT\uff09</p> <ul> <li>\u200b\u65e0\u8bba\u200b\u539f\u59cb\u6570\u636e\u200b\u5206\u5e03\u200b\u5982\u4f55\u200b\uff0c\u200b\u5927\u91cf\u200b\u72ec\u7acb\u200b\u540c\u200b\u5206\u5e03\u200b\u7684\u200b\u968f\u673a\u53d8\u91cf\u200b\u5e73\u5747\u503c\u200b\u8d8b\u5411\u4e8e\u200b\u6b63\u6001\u5206\u5e03\u200b\u3002</li> <li>\u200b\u8fd9\u200b\u4f7f\u5f97\u200b\u6b63\u6001\u5206\u5e03\u200b\u5728\u200b\u7edf\u8ba1\u200b\u63a8\u65ad\u200b\u4e2d\u200b\u975e\u5e38\u200b\u91cd\u8981\u200b\uff0c\u200b\u4f8b\u5982\u200b\u7f6e\u4fe1\u533a\u95f4\u200b\u3001\u200b\u5047\u8bbe\u68c0\u9a8c\u200b\u7b49\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u6570\u5b66\u5206\u6790\u200b\u65b9\u4fbf\u200b</p> <ul> <li>\u200b\u6b63\u6001\u5206\u5e03\u200b\u51fd\u6570\u200b\u5149\u6ed1\u200b\u3001\u200b\u53ef\u5fae\u200b\u3001\u200b\u95ed\u5408\u200b\u5f62\u5f0f\u200b\u660e\u786e\u200b\u3002</li> <li>\u200b\u8bb8\u591a\u200b\u7edf\u8ba1\u200b\u91cf\u200b\uff08\u200b\u5982\u200b\u5747\u503c\u200b\u3001\u200b\u65b9\u5dee\u200b\u3001\u200b\u7ebf\u6027\u200b\u56de\u5f52\u4f30\u8ba1\u200b\u91cf\u200b\uff09\u200b\u5728\u200b\u5927\u200b\u6837\u672c\u200b\u4e0b\u200b\u670d\u4ece\u200b\u6b63\u6001\u5206\u5e03\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u4e2d\u200b\u7684\u200b\u5e94\u7528\u200b</p> <ul> <li>\u200b\u5047\u8bbe\u200b\u8bef\u5dee\u200b\u670d\u4ece\u200b\u6b63\u6001\u5206\u5e03\u200b\u662f\u200b \u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u3001\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\u3001\u200b\u9ad8\u65af\u200b\u6df7\u5408\u200b\u6a21\u578b\u200b\uff08GMM\uff09\u200b\u7b49\u200b\u6a21\u578b\u200b\u7684\u200b\u6838\u5fc3\u200b\u5047\u8bbe\u200b\u3002</li> <li>\u200b\u566a\u58f0\u200b\u5efa\u6a21\u200b\u3001\u200b\u8d1d\u53f6\u65af\u200b\u63a8\u65ad\u200b\u3001\u200b\u6982\u7387\u200b\u751f\u6210\u200b\u6a21\u578b\u200b\u90fd\u200b\u4f9d\u8d56\u4e8e\u200b\u6b63\u6001\u5206\u5e03\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u5f02\u5e38\u200b\u68c0\u6d4b\u200b\u4e0e\u200b\u6807\u51c6\u5316\u200b</p> <ul> <li>\u200b\u6570\u636e\u200b\u6807\u51c6\u5316\u200b\uff08z-score\uff09\uff1a</li> </ul> </li> </ol> \\[ z = \\frac{x - \\mu}{\\sigma} \\] <ul> <li>\u200b\u901a\u8fc7\u200b\u6b63\u6001\u5206\u5e03\u200b\u7684\u200b\u6027\u8d28\u200b\u53ef\u4ee5\u200b\u68c0\u6d4b\u200b\u5f02\u5e38\u200b\u503c\u200b\uff08\u200b\u8fdc\u79bb\u200b \\(\\mu\\) \u200b\u591a\u500d\u200b\u6807\u51c6\u5dee\u200b\uff09\u3002</li> </ul>"},{"location":"machine/interview/#_54","title":"\u5982\u4f55\u200b\u68c0\u67e5\u200b\u53d8\u91cf\u200b\u662f\u5426\u200b\u9075\u5faa\u200b\u6b63\u6001\u5206\u5e03\u200b\uff1f","text":""},{"location":"machine/interview/#1_10","title":"1. \u200b\u56fe\u793a\u200b\u6cd5\u200b\uff08\u200b\u53ef\u89c6\u5316\u200b\u5224\u65ad\u200b\uff09","text":"<ul> <li>\u200b\u76f4\u65b9\u56fe\u200b\uff1a\u200b\u89c2\u5bdf\u200b\u6570\u636e\u5206\u5e03\u200b\u662f\u5426\u200b\u5448\u73b0\u200b\u201c\u200b\u4e2d\u95f4\u200b\u9ad8\u200b\u3001\u200b\u4e24\u5934\u200b\u4f4e\u200b\u201d\u200b\u7684\u200b\u949f\u5f62\u200b\u66f2\u7ebf\u200b\uff0c\u200b\u4e14\u200b\u5de6\u53f3\u200b\u57fa\u672c\u200b\u5bf9\u79f0\u200b\u3002</li> <li>Q-Q\u200b\u56fe\u200b / P-P\u200b\u56fe\u200b\uff1a\u200b\u82e5\u200b\u6570\u636e\u200b\u70b9\u200b\u5927\u81f4\u200b\u843d\u200b\u5728\u200b\u4e00\u6761\u200b\u5bf9\u89d2\u7ebf\u200b\u4e0a\u200b\uff0c\u200b\u8868\u660e\u200b\u6570\u636e\u200b\u4e0e\u200b\u6b63\u6001\u5206\u5e03\u200b\u543b\u5408\u200b\u826f\u597d\u200b\u3002</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u76f4\u89c2\u200b\u3001\u200b\u6613\u4e8e\u200b\u7406\u89e3\u200b\uff0c\u200b\u9002\u5408\u200b\u521d\u6b65\u5224\u65ad\u200b\uff0c\u200b\u5c24\u5176\u200b\u5728\u200b\u5927\u200b\u6837\u672c\u200b\u65f6\u200b\u66f4\u200b\u7a33\u5065\u200b\u3002</li> </ul>"},{"location":"machine/interview/#2_8","title":"2. \u200b\u63cf\u8ff0\u6027\u200b\u7edf\u8ba1\u200b\u91cf\u6cd5","text":"<ul> <li>\u200b\u504f\u5ea6\u200b\uff08Skewness\uff09\u200b\u4e0e\u200b\u5cf0\u5ea6\u200b\uff08Kurtosis\uff09\uff1a</li> <li>\u200b\u504f\u5ea6\u200b\u22480 \u200b\u8868\u793a\u200b\u5bf9\u79f0\u200b\u5206\u5e03\u200b\uff08\u200b\u6b63\u6001\u200b\uff09\uff1b&gt;0 \u200b\u4e3a\u200b\u53f3\u200b\u504f\u200b\uff0c&lt;0 \u200b\u4e3a\u200b\u5de6\u504f\u200b\u3002</li> <li>\u200b\u5cf0\u5ea6\u200b\u22480 \u200b\u8868\u793a\u200b\u5cf0\u6001\u200b\u9002\u4e2d\u200b\uff08\u200b\u6b63\u6001\u200b\uff09\uff1b&gt;0 \u200b\u4e3a\u200b\u5c16\u5cf0\u200b\uff0c&lt;0 \u200b\u4e3a\u200b\u5e73\u5cf0\u200b\u3002</li> <li>\u200b\u4e00\u822c\u200b\u8ba4\u4e3a\u200b\uff1a|\u200b\u504f\u5ea6\u200b| \u3002</li> </ul>"},{"location":"machine/interview/#3_5","title":"3. \u200b\u7edf\u8ba1\u200b\u68c0\u9a8c\u6cd5\u200b\uff08\u200b\u5047\u8bbe\u68c0\u9a8c\u200b\uff09","text":"<ul> <li>Shapiro-Wilk \u200b\u68c0\u9a8c\u200b\uff08W \u200b\u68c0\u9a8c\u200b\uff09\uff1a<ul> <li>\u200b\u9002\u7528\u200b\u4e8e\u200b\u5c0f\u200b\u6837\u672c\u200b\uff08n \u2264 50\uff09\uff0c\u200b\u68c0\u9a8c\u200b\u6548\u80fd\u200b\u8f83\u200b\u9ad8\u200b\u3002</li> </ul> </li> <li>Kolmogorov-Smirnov \u200b\u68c0\u9a8c\u200b\uff08K-S \u200b\u68c0\u9a8c\u200b\uff09\uff1a<ul> <li>\u200b\u9002\u7528\u200b\u4e8e\u200b\u5927\u200b\u6837\u672c\u200b\uff08n &gt; 50 \u200b\u6216\u200b n &gt; 2000\uff0c\u200b\u4f9d\u200b\u8f6f\u4ef6\u200b\u800c\u5b9a\u200b\uff09\uff0c\u200b\u901a\u8fc7\u200b\u6bd4\u8f83\u200b\u6837\u672c\u5206\u5e03\u200b\u4e0e\u200b\u6b63\u6001\u5206\u5e03\u200b\u7684\u200b\u7d2f\u79ef\u200b\u51fd\u6570\u200b\u5dee\u5f02\u200b\u8fdb\u884c\u200b\u5224\u65ad\u200b\u3002</li> </ul> </li> <li>\u200b\u7ed3\u679c\u200b\u89e3\u8bfb\u200b\uff1a<ul> <li>\u200b\u539f\u200b\u5047\u8bbe\u200b H\u2080\uff1a\u200b\u6570\u636e\u200b\u670d\u4ece\u200b\u6b63\u6001\u5206\u5e03\u200b\u3002</li> <li>\u200b\u82e5\u200b p &gt; 0.05\uff0c\u200b\u4e0d\u200b\u62d2\u7edd\u200b\u539f\u200b\u5047\u8bbe\u200b\uff0c\u200b\u8ba4\u4e3a\u200b\u6570\u636e\u200b\u7b26\u5408\u200b\u6b63\u6001\u5206\u5e03\u200b\u3002</li> </ul> </li> </ul> <p>\u200b\u603b\u7ed3\u200b\u6d41\u7a0b\u56fe\u200b\uff1a</p> <pre><code>\n1. \u200b\u7ed8\u5236\u200b\u76f4\u65b9\u56fe\u200b/QQ\u200b\u56fe\u200b \u2192 \u200b\u521d\u6b65\u5224\u65ad\u200b\u5f62\u72b6\u200b\n       \u2193\n2. \u200b\u67e5\u770b\u200b\u504f\u5ea6\u200b/\u200b\u5cf0\u5ea6\u200b \u2192 \u200b\u6570\u503c\u200b\u662f\u5426\u200b\u5728\u200b\u5408\u7406\u200b\u8303\u56f4\u200b\n       \u2193\n3. \u200b\u8fdb\u884c\u200bSW\u200b\u6216\u200bKS\u200b\u68c0\u9a8c\u200b \u2192 p &gt; 0.05\uff1f\n       \u2193\n4. \u200b\u7efc\u5408\u200b\u7ed3\u8bba\u200b\uff1a\u200b\u662f\u5426\u200b\u6ee1\u8db3\u200b\u6b63\u6001\u6027\u200b\u5047\u8bbe\u200b\n</code></pre>"},{"location":"machine/interview/#_55","title":"\u56db\u200b\u3001\u200b\u6a21\u578b\u200b\u9a8c\u8bc1","text":""},{"location":"machine/interview/#41","title":"4.1 \u200b\u8fc7\u200b\u62df\u5408\u200b &amp; \u200b\u6b20\u200b\u62df\u5408","text":""},{"location":"machine/interview/#underfitting","title":"\u6b20\u200b\u62df\u5408\u200b\uff08Underfitting\uff09","text":"<ul> <li>\u200b\u6982\u5ff5\u200b\uff1a\u200b\u6a21\u578b\u200b\u8fc7\u4e8e\u200b\u7b80\u5355\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u6355\u6349\u200b\u6570\u636e\u200b\u4e2d\u200b\u7684\u200b\u89c4\u5f8b\u200b\u3002</li> <li> <p>\u200b\u8868\u73b0\u200b\uff1a</p> <ul> <li>\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u8bef\u5dee\u200b\u9ad8\u200b</li> <li>\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\u8bef\u5dee\u200b\u9ad8\u200b</li> </ul> </li> <li> <p>\u200b\u539f\u56e0\u200b\uff1a</p> <ul> <li>\u200b\u6a21\u578b\u200b\u5bb9\u91cf\u200b\u4e0d\u8db3\u200b\uff08\u200b\u5982\u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b\u62df\u5408\u200b\u975e\u7ebf\u6027\u200b\u6570\u636e\u200b\uff09</li> <li>\u200b\u7279\u5f81\u200b\u4e0d\u8db3\u200b</li> <li>\u200b\u8bad\u7ec3\u200b\u8f6e\u6570\u200b\u592a\u200b\u5c11\u200b\u3001\u200b\u6b63\u5219\u200b\u5316\u8fc7\u200b\u5f3a\u200b</li> </ul> </li> </ul>"},{"location":"machine/interview/#overfitting","title":"\u8fc7\u200b\u62df\u5408\u200b\uff08Overfitting\uff09","text":"<ul> <li>\u200b\u6982\u5ff5\u200b\uff1a\u200b\u6a21\u578b\u200b\u8fc7\u4e8e\u200b\u590d\u6742\u200b\uff0c\u200b\u8fc7\u5ea6\u200b\u62df\u5408\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u4e2d\u200b\u7684\u200b\u566a\u58f0\u200b\u3002</li> <li> <p>\u200b\u8868\u73b0\u200b\uff1a</p> <ul> <li>\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u8bef\u5dee\u200b\u4f4e\u200b</li> <li>\u200b\u6d4b\u8bd5\u200b\u96c6\u200b\u8bef\u5dee\u200b\u9ad8\u200b</li> </ul> </li> <li> <p>\u200b\u539f\u56e0\u200b\uff1a</p> <ul> <li>\u200b\u6a21\u578b\u200b\u5bb9\u91cf\u200b\u592a\u200b\u5927\u200b\uff08\u200b\u5982\u200b\u6df1\u5ea6\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff09</li> <li>\u200b\u7279\u5f81\u200b\u592a\u200b\u591a\u200b\u3001\u200b\u566a\u58f0\u200b\u5927\u200b</li> <li>\u200b\u8bad\u7ec3\u200b\u8f6e\u6570\u200b\u592a\u200b\u591a\u200b\u3001\u200b\u6b63\u5219\u200b\u5316\u200b\u592a\u5f31\u200b</li> </ul> </li> </ul> \u200b\u60c5\u51b5\u200b \u200b\u8bad\u7ec3\u200b\u8bef\u5dee\u200b \u200b\u6d4b\u8bd5\u200b\u8bef\u5dee\u200b \u200b\u6b20\u200b\u62df\u5408\u200b \u200b\u9ad8\u200b \u200b\u9ad8\u200b \u200b\u5408\u9002\u200b\u62df\u5408\u200b \u200b\u4f4e\u200b \u200b\u4f4e\u200b \u200b\u8fc7\u200b\u62df\u5408\u200b \u200b\u4f4e\u200b \u200b\u9ad8\u200b <p>\u200b\u8bad\u7ec3\u200b\u8bef\u5dee\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u8bef\u5dee\u200b\u968f\u200b\u8bad\u7ec3\u200b\u8f6e\u6570\u200b\u53d8\u5316\u200b\u66f2\u7ebf\u200b\u793a\u610f\u200b\uff1a</p> <ul> <li>\u200b\u6b20\u200b\u62df\u5408\u200b\uff1a\u200b\u8bef\u5dee\u200b\u66f2\u7ebf\u200b\u9ad8\u4e14\u200b\u51e0\u4e4e\u200b\u4e0d\u200b\u4e0b\u964d\u200b</li> <li>\u200b\u8fc7\u200b\u62df\u5408\u200b\uff1a\u200b\u8bad\u7ec3\u200b\u8bef\u5dee\u200b\u4e0d\u65ad\u200b\u4e0b\u964d\u200b\uff0c\u200b\u6d4b\u8bd5\u200b\u8bef\u5dee\u200b\u4e0b\u964d\u200b\u540e\u200b\u56de\u5347\u200b</li> </ul>"},{"location":"machine/interview/#_56","title":"\u6b20\u200b\u62df\u5408\u200b\u89e3\u51b3\u200b\u7b56\u7565","text":"<ul> <li>\u200b\u63d0\u9ad8\u200b\u6a21\u578b\u200b\u590d\u6742\u5ea6\u200b\uff08\u200b\u5982\u7528\u200b\u591a\u9879\u5f0f\u200b\u56de\u5f52\u200b\u3001\u200b\u6df1\u5c42\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff09</li> <li>\u200b\u589e\u52a0\u200b\u7279\u5f81\u200b\u6216\u200b\u5de5\u7a0b\u200b\u7279\u5f81\u200b</li> <li>\u200b\u51cf\u5c0f\u200b\u6b63\u5219\u200b\u5316\u200b\u53c2\u6570\u200b\uff08\u200b\u5982\u200b L1/L2\uff09</li> <li>\u200b\u8bad\u7ec3\u200b\u66f4\u200b\u957f\u65f6\u95f4\u200b</li> </ul>"},{"location":"machine/interview/#_57","title":"\u8fc7\u200b\u62df\u5408\u200b\u89e3\u51b3\u200b\u7b56\u7565","text":"<ul> <li>\u200b\u6b63\u5219\u200b\u5316\u200b\uff1aL1/L2\u3001Dropout</li> <li>\u200b\u7b80\u5316\u200b\u6a21\u578b\u200b\uff1a\u200b\u51cf\u5c11\u200b\u53c2\u6570\u200b\u3001\u200b\u964d\u4f4e\u200b\u7f51\u7edc\u5c42\u200b\u6570\u200b</li> <li>\u200b\u589e\u52a0\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b</li> <li>\u200b\u6570\u636e\u200b\u589e\u5f3a\u200b\uff08\u200b\u5982\u200b\u56fe\u50cf\u200b\u7ffb\u8f6c\u200b\u3001\u200b\u566a\u58f0\u200b\uff09</li> <li>\u200b\u63d0\u524d\u200b\u505c\u6b62\u200b\uff08Early stopping\uff09</li> <li>\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff1a\u200b\u5224\u65ad\u200b\u6a21\u578b\u200b\u6cdb\u5316\u200b\u6027\u80fd\u200b</li> </ul> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.pipeline import make_pipeline\n\n# \u200b\u751f\u6210\u200b\u975e\u7ebf\u6027\u200b\u6570\u636e\u200b\nnp.random.seed(0)\nX = np.sort(np.random.rand(20,1)*2 - 1, axis=0)\ny = X**3 + 0.1*np.random.randn(20,1)\n\n# \u200b\u6b20\u200b\u62df\u5408\u200b\uff1a1\u200b\u9636\u200b\u591a\u9879\u5f0f\u200b\nmodel_under = make_pipeline(PolynomialFeatures(1), LinearRegression())\nmodel_under.fit(X,y)\ny_pred_under = model_under.predict(X)\n\n# \u200b\u9002\u5408\u200b\u62df\u5408\u200b\uff1a3\u200b\u9636\u200b\u591a\u9879\u5f0f\u200b\nmodel_good = make_pipeline(PolynomialFeatures(3), LinearRegression())\nmodel_good.fit(X,y)\ny_pred_good = model_good.predict(X)\n\n# \u200b\u8fc7\u200b\u62df\u5408\u200b\uff1a15\u200b\u9636\u200b\u591a\u9879\u5f0f\u200b\nmodel_over = make_pipeline(PolynomialFeatures(15), LinearRegression())\nmodel_over.fit(X,y)\ny_pred_over = model_over.predict(X)\n\n# \u200b\u53ef\u89c6\u5316\u200b\nplt.scatter(X, y, color='black', label='data')\nplt.plot(X, y_pred_under, label='Underfit')\nplt.plot(X, y_pred_good, label='Good fit')\nplt.plot(X, y_pred_over, label='Overfit')\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"machine/interview/#42","title":"4.2 \u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1","text":"<p>\u200b\u5728\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u6a21\u578b\u200b\u4e0d\u4ec5\u200b\u5728\u200b\u8bad\u7ec3\u200b\u96c6\u4e0a\u200b\u8868\u73b0\u200b\u597d\u200b\uff0c\u200b\u8fd8\u200b\u80fd\u200b\u5728\u200b\u672a\u200b\u89c1\u200b\u8fc7\u200b\u7684\u200b\u6570\u636e\u200b\u4e0a\u200b\u6709\u200b\u826f\u597d\u200b\u7684\u200b\u8868\u73b0\u200b\uff08\u200b\u5373\u200b\u6cdb\u5316\u200b\u80fd\u529b\u200b\uff09\u3002 \u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\u662f\u200b\u4e00\u79cd\u200b\u901a\u8fc7\u200b\u591a\u6b21\u200b\u5212\u5206\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u548c\u200b\u9a8c\u8bc1\u200b\u96c6\u6765\u200b\u8bc4\u4f30\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\u7684\u200b\u6280\u672f\u200b\u3002</p> <ul> <li>\u200b\u76ee\u6807\u200b\uff1a\u200b\u51cf\u5c11\u200b\u6a21\u578b\u200b\u8bc4\u4f30\u200b\u7684\u200b\u504f\u5dee\u200b\uff0c\u200b\u4f7f\u200b\u6027\u80fd\u200b\u8bc4\u4f30\u200b\u66f4\u200b\u7a33\u5b9a\u200b\u53ef\u9760\u200b\u3002</li> </ul>"},{"location":"machine/interview/#_58","title":"\u57fa\u672c\u200b\u601d\u60f3","text":"<p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u6570\u636e\u200b\u96c6\u200b \\(D\\)\uff0c\u200b\u5927\u5c0f\u200b\u4e3a\u200b \\(N\\)\u3002</p> <ol> <li>\u200b\u5c06\u200b \\(D\\) \u200b\u5206\u6210\u200b \\(k\\) \u200b\u4e2a\u200b\u5927\u5c0f\u200b\u76f8\u540c\u200b\u7684\u200b\u5b50\u96c6\u200b\uff08folds\uff09\uff1a\\(D_1, D_2, ..., D_k\\)</li> <li> <p>\u200b\u8fdb\u884c\u200b \\(k\\) \u200b\u6b21\u200b\u8bad\u7ec3\u200b\u548c\u200b\u9a8c\u8bc1\u200b\uff1a</p> </li> <li> <p>\u200b\u6bcf\u6b21\u200b\u7528\u200b \\(k-1\\) \u200b\u4e2a\u200b\u5b50\u96c6\u200b\u4f5c\u4e3a\u200b\u8bad\u7ec3\u200b\u96c6\u200b</p> </li> <li>\u200b\u5269\u4e0b\u200b\u7684\u200b 1 \u200b\u4e2a\u200b\u5b50\u96c6\u200b\u4f5c\u4e3a\u200b\u9a8c\u8bc1\u200b\u96c6\u200b</li> <li>\u200b\u6bcf\u6b21\u200b\u8ba1\u7b97\u200b\u6027\u80fd\u6307\u6807\u200b\uff08\u200b\u5982\u200b\u51c6\u786e\u7387\u200b \\(Acc_i\\)\uff09</li> <li>\u200b\u5e73\u5747\u200b \\(k\\) \u200b\u6b21\u200b\u6027\u80fd\u6307\u6807\u200b\u5f97\u5230\u200b\u6700\u7ec8\u200b\u4f30\u8ba1\u200b\uff1a    $$    Acc_{CV} = \\frac{1}{k} \\sum_{i=1}^{k} Acc_i    $$</li> </ol>"},{"location":"machine/interview/#_59","title":"\u5e38\u7528\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\u65b9\u6cd5","text":""},{"location":"machine/interview/#1-k-k-fold-cv","title":"1. k \u200b\u6298\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff08k-Fold CV\uff09","text":"<ul> <li>\u200b\u5c06\u200b\u6570\u636e\u200b\u968f\u673a\u200b\u5206\u6210\u200b \\(k\\) \u200b\u4efd\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u8f6e\u6d41\u200b\u505a\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\u3002</li> <li>\u200b\u5e38\u7528\u200b \\(k=5\\) \u200b\u6216\u200b \\(k=10\\)\u3002</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u5229\u7528\u200b\u6570\u636e\u200b\u5145\u5206\u200b\u3001\u200b\u7a33\u5b9a\u6027\u200b\u597d\u200b</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u8bad\u7ec3\u200b\u6b21\u6570\u200b \\(k\\) \u200b\u6b21\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u91cf\u200b\u5927\u200b</li> </ul>"},{"location":"machine/interview/#2-leave-one-out-loo","title":"2. \u200b\u7559\u4e00\u6cd5\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff08Leave-One-Out, LOO\uff09","text":"<ul> <li>\u200b\u6bcf\u6b21\u200b\u7559\u200b 1 \u200b\u4e2a\u200b\u6837\u672c\u200b\u505a\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u5176\u4f59\u200b \\(N-1\\) \u200b\u4e2a\u200b\u6837\u672c\u200b\u505a\u200b\u8bad\u7ec3\u200b</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u65e0\u504f\u200b\u4f30\u8ba1\u200b</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u8ba1\u7b97\u200b\u91cf\u200b\u975e\u5e38\u200b\u5927\u200b\uff08\u200b\u5c24\u5176\u200b\u6837\u672c\u200b\u591a\u65f6\u200b\uff09</li> </ul>"},{"location":"machine/interview/#3-p-leave-p-out-lpo","title":"3. \u200b\u7559\u200b P \u200b\u6cd5\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff08Leave-P-Out, LPO\uff09","text":"<ul> <li>\u200b\u6bcf\u6b21\u200b\u7559\u200b \\(p\\) \u200b\u4e2a\u200b\u6837\u672c\u200b\u505a\u200b\u9a8c\u8bc1\u200b</li> <li>\u200b\u6cdb\u5316\u200b\u4e86\u200b LOO</li> </ul>"},{"location":"machine/interview/#4-k-stratified-k-fold","title":"4. \u200b\u5206\u5c42\u200b k \u200b\u6298\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff08Stratified k-Fold\uff09","text":"<ul> <li>\u200b\u9002\u7528\u200b\u4e8e\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b</li> <li>\u200b\u4fdd\u8bc1\u200b\u6bcf\u200b\u6298\u4e2d\u200b\u5404\u7c7b\u200b\u522b\u200b\u6bd4\u4f8b\u200b\u4e0e\u200b\u6574\u4f53\u200b\u6570\u636e\u200b\u96c6\u200b\u4e00\u81f4\u200b</li> <li>Python \u200b\u5e38\u7528\u200b <code>StratifiedKFold</code></li> </ul>"},{"location":"machine/interview/#5-shuffle-split","title":"5. \u200b\u91cd\u590d\u200b\u968f\u673a\u200b\u5212\u5206\u200b\uff08Shuffle Split\uff09","text":"<ul> <li>\u200b\u6bcf\u6b21\u200b\u968f\u673a\u200b\u5212\u5206\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u548c\u200b\u9a8c\u8bc1\u200b\u96c6\u200b</li> <li>\u200b\u53ef\u4ee5\u200b\u91cd\u590d\u200b\u591a\u6b21\u200b</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u7075\u6d3b\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u6bd4\u4f8b\u200b\u53ef\u63a7\u200b</li> </ul>"},{"location":"machine/interview/#_60","title":"\u6570\u5b66\u200b\u8868\u8ff0","text":"<p>\u200b\u8bbe\u200b\u6027\u80fd\u6307\u6807\u200b\u51fd\u6570\u200b\u4e3a\u200b \\(M(\\cdot)\\)\uff08\u200b\u5982\u5747\u65b9\u200b\u8bef\u5dee\u200b MSE\u3001\u200b\u51c6\u786e\u7387\u200b Accuracy \u200b\u7b49\u200b\uff09\uff0c\\(k\\) \u200b\u6298\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\u7684\u200b\u4f30\u8ba1\u200b\u4e3a\u200b\uff1a</p> \\[ CV_{k} = \\frac{1}{k} \\sum_{i=1}^{k} M(\\text{model trained on } D \\setminus D_i, D_i) \\] <ul> <li>\\(D \\setminus D_i\\)\uff1a\u200b\u8bad\u7ec3\u200b\u96c6\u200b</li> <li>\\(D_i\\)\uff1a\u200b\u9a8c\u8bc1\u200b\u96c6\u200b</li> </ul> <pre><code>from sklearn.model_selection import cross_val_score, KFold, StratifiedKFold\nfrom sklearn.datasets import load_iris\nfrom sklearn.linear_model import LogisticRegression\n\n# \u200b\u6570\u636e\u200b\u96c6\u200b\nX, y = load_iris(return_X_y=True)\n\n# \u200b\u6a21\u578b\u200b\nmodel = LogisticRegression(max_iter=200)\n\n# k-Fold \u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\nkf = KFold(n_splits=5, shuffle=True, random_state=42)\nscores = cross_val_score(model, X, y, cv=kf, scoring='accuracy')\nprint(\"5-Fold CV Accuracy:\", scores)\nprint(\"\u200b\u5e73\u5747\u200b\u51c6\u786e\u7387\u200b:\", scores.mean())\n\n# \u200b\u5206\u5c42\u200b k-Fold\uff08\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\uff09\nskf = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\nscores_strat = cross_val_score(model, X, y, cv=skf, scoring='accuracy')\nprint(\"Stratified 5-Fold CV Accuracy:\", scores_strat.mean())\n</code></pre>"},{"location":"machine/interview/#43","title":"4.3 \u200b\u7f51\u683c\u200b\u641c\u7d22","text":""},{"location":"machine/interview/#_61","title":"\u7f51\u683c\u200b\u641c\u7d22\u200b\u7684\u200b\u6838\u5fc3\u200b\u539f\u7406","text":"<ol> <li>\u200b\u5b9a\u4e49\u200b\u53c2\u6570\u200b\u7f51\u683c\u200b    \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u8d85\u200b\u53c2\u6570\u503c\u200b\u7684\u200b\u53c2\u6570\u200b\u7f51\u683c\u200b\uff0c\u200b\u5373\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b\u7ec4\u5408\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u652f\u6301\u200b\u5411\u91cf\u200b\u673a\u200b\uff08SVM\uff09\uff0c\u200b\u53ef\u4ee5\u200b\u641c\u7d22\u200b\u53c2\u6570\u200b <code>C</code> \u200b\u548c\u200b <code>gamma</code>\uff0c\u200b\u5bf9\u4e8e\u200b\u968f\u673a\u200b\u68ee\u6797\u200b\u53ef\u4ee5\u200b\u641c\u7d22\u200b <code>max_depth</code> \u200b\u548c\u200b <code>n_estimators</code></li> <li>\u200b\u904d\u5386\u200b\u53c2\u6570\u200b\u7ec4\u5408\u200b    \u200b\u6309\u7167\u200b\u7f51\u683c\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u7ec4\u5408\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u5e76\u200b\u8bc4\u4f30\u200b\u6027\u80fd\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u7ec4\u5408\u200b\uff0c\u200b\u4f7f\u7528\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\u6765\u200b\u8bc4\u4f30\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b</li> <li>\u200b\u9009\u62e9\u200b\u6700\u4f73\u200b\u53c2\u6570\u200b    \u200b\u6839\u636e\u200b\u67d0\u79cd\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\uff08\u200b\u5982\u200b\u51c6\u786e\u7387\u200b\u3001F1\u200b\u5206\u6570\u200b\u6216\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff09\uff0c\u200b\u9009\u51fa\u200b\u6027\u80fd\u200b\u6700\u597d\u200b\u7684\u200b\u53c2\u6570\u200b\u914d\u7f6e\u200b</li> </ol>"},{"location":"machine/interview/#_62","title":"\u7f51\u683c\u200b\u641c\u7d22\u200b\u7684\u200b\u6d41\u7a0b","text":"<ul> <li>\u200b\u6570\u636e\u200b\u51c6\u5907\u200b\uff1a\u200b\u51c6\u5907\u200b\u597d\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u548c\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\uff0c\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\u7528\u4e8e\u200b\u8bc4\u4f30\u200b\u6bcf\u4e2a\u200b\u53c2\u6570\u200b\u7ec4\u5408\u200b\u7684\u200b\u6027\u80fd\u200b</li> <li>\u200b\u5b9a\u4e49\u200b\u6a21\u578b\u200b\uff1a\u200b\u6307\u5b9a\u200b\u9700\u8981\u200b\u4f18\u5316\u200b\u7684\u200b\u6a21\u578b\u200b\uff08\u200b\u4f8b\u5982\u200b\u51b3\u7b56\u6811\u200b\u3001\u200b\u652f\u6301\u200b\u5411\u91cf\u200b\u673a\u200b\u6216\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\uff09</li> <li>\u200b\u53c2\u6570\u200b\u8303\u56f4\u200b\uff1a\u200b\u5b9a\u4e49\u200b\u9700\u8981\u200b\u8c03\u8282\u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b\u53ca\u5176\u200b\u53ef\u80fd\u200b\u7684\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b</li> <li>\u200b\u8bad\u7ec3\u200b\u4e0e\u200b\u8bc4\u4f30\u200b\uff1a\u200b\u904d\u5386\u200b\u6240\u6709\u200b\u53c2\u6570\u200b\u7ec4\u5408\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u9a8c\u8bc1\u200b\u96c6\u4e0a\u200b\u8bc4\u4f30\u200b\u6027\u80fd\u200b</li> <li>\u200b\u9009\u62e9\u200b\u6700\u4f73\u200b\u53c2\u6570\u200b\uff1a\u200b\u6839\u636e\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\u7684\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\uff0c\u200b\u9009\u51fa\u200b\u6027\u80fd\u200b\u6700\u597d\u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b\u7ec4\u5408\u200b</li> </ul>"},{"location":"machine/interview/#_63","title":"\u4f18\u70b9\u200b\u4e0e\u200b\u7f3a\u70b9","text":"<p>\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u7cfb\u7edf\u200b\u5168\u9762\u200b\uff1a\u200b\u901a\u8fc7\u200b\u904d\u5386\u200b\u6240\u6709\u200b\u53c2\u6570\u200b\u7ec4\u5408\u200b\uff0c\u200b\u4fdd\u8bc1\u200b\u627e\u5230\u200b\u5168\u5c40\u200b\u6700\u4f18\u200b\u89e3\u200b\uff08\u200b\u5728\u200b\u7ed9\u5b9a\u200b\u641c\u7d22\u200b\u7a7a\u95f4\u200b\u5185\u200b\uff09</li> <li>\u200b\u6613\u4e8e\u200b\u5b9e\u73b0\u200b\uff1a\u200b\u5404\u79cd\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u5e93\u200b\uff08\u200b\u5982\u200b scikit-learn\uff09\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u7b80\u5355\u200b\u7684\u200b\u63a5\u53e3\u200b\u6765\u200b\u5b9e\u73b0\u200b\u7f51\u683c\u200b\u641c\u7d22\u200b</li> </ul> <p>\u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u8ba1\u7b97\u6210\u672c\u200b\u9ad8\u200b\uff1a\u200b\u968f\u7740\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u548c\u200b\u53ef\u80fd\u200b\u7684\u200b\u53d6\u503c\u200b\u589e\u52a0\u200b\uff0c\u200b\u641c\u7d22\u200b\u7a7a\u95f4\u200b\u4f1a\u200b\u5448\u200b\u6307\u6570\u200b\u7ea7\u200b\u589e\u957f\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u8bad\u7ec3\u200b\u65f6\u95f4\u200b\u8fc7\u957f\u200b</li> <li>\u200b\u6548\u7387\u200b\u4f4e\u4e0b\u200b\uff1a\u200b\u5bf9\u4e8e\u200b\u5927\u578b\u200b\u6570\u636e\u200b\u96c6\u200b\u548c\u200b\u590d\u6742\u200b\u6a21\u578b\u200b\uff0c\u200b\u7f51\u683c\u200b\u641c\u7d22\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u53d8\u5f97\u200b\u975e\u5e38\u200b\u8017\u65f6\u200b</li> </ul> <pre><code>from sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import SVC\nfrom sklearn.datasets import load_iris\n\u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\u96c6\u200b\ndata = load_iris()\nX, y = data.data, data.target\n\u200b\u5b9a\u4e49\u200b\u6a21\u578b\u200b\nmodel = SVC()\n\u200b\u5b9a\u4e49\u200b\u53c2\u6570\u200b\u7f51\u683c\u200b\nparam_grid = {\n    'C': [0.1, 1, 10, 100],\n    'gamma': [1, 0.1, 0.01, 0.001],\n    'kernel': ['rbf']\n}\n\u200b\u7f51\u683c\u200b\u641c\u7d22\u200b\ngrid_search = GridSearchCV(estimator=model, param_grid=param_grid, cv=5, scoring='accuracy')\ngrid_search.fit(X, y)\n\u200b\u8f93\u51fa\u200b\u6700\u4f73\u200b\u53c2\u6570\u200b\u548c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6027\u80fd\u200b\nprint(\"\u200b\u6700\u4f73\u200b\u53c2\u6570\u200b:\", grid_search.best_params_)\nprint(\"\u200b\u6700\u4f73\u200b\u51c6\u786e\u7387\u200b:\", grid_search.best_score_)\n</code></pre>"},{"location":"machine/interview/#44","title":"4.4 \u200b\u968f\u673a\u200b\u641c\u7d22","text":""},{"location":"machine/interview/#_64","title":"\u968f\u673a\u200b\u641c\u7d22\u200b\u7684\u200b\u6838\u5fc3\u200b\u539f\u7406","text":"<ol> <li>\u200b\u968f\u673a\u200b\u91c7\u6837\u200b    \u200b\u4e0e\u200b\u7f51\u683c\u200b\u641c\u7d22\u200b\u4e0d\u540c\u200b\uff0c\u200b\u968f\u673a\u200b\u641c\u7d22\u200b\u4e0d\u4f1a\u200b\u7a77\u4e3e\u200b\u6240\u6709\u200b\u53c2\u6570\u200b\u7ec4\u5408\u200b\uff0c\u200b\u800c\u662f\u200b\u4ece\u200b\u53c2\u6570\u200b\u7684\u200b\u5019\u9009\u200b\u5206\u5e03\u200b\u4e2d\u200b\u968f\u673a\u200b\u9009\u62e9\u200b\u7ec4\u5408\u200b\u8fdb\u884c\u200b\u8bc4\u4f30\u200b\u3002\u200b\u8fd9\u6837\u200b\u53ef\u4ee5\u200b\u5927\u5927\u51cf\u5c11\u200b\u8ba1\u7b97\u200b\u91cf\u200b\uff0c\u200b\u5c24\u5176\u200b\u5728\u200b\u8d85\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u8f83\u591a\u65f6\u200b\uff0c\u200b\u6548\u7387\u200b\u66f4\u9ad8\u200b\u3002</li> <li>\u200b\u8fed\u4ee3\u200b\u4f18\u5316\u200b    \u200b\u968f\u673a\u200b\u641c\u7d22\u200b\u901a\u8fc7\u200b\u591a\u6b21\u200b\u8fed\u4ee3\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u968f\u673a\u200b\u751f\u6210\u200b\u4e00\u7ec4\u200b\u8d85\u200b\u53c2\u6570\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u5e76\u200b\u8bc4\u4f30\u200b\u6027\u80fd\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u6700\u4f73\u200b\u7ed3\u679c\u200b\u3002\u200b\u968f\u7740\u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\u589e\u52a0\u200b\uff0c\u200b\u627e\u5230\u200b\u8f83\u4f18\u200b\u89e3\u200b\u7684\u200b\u6982\u7387\u200b\u63d0\u5347\u200b\u3002</li> <li>\u200b\u7075\u6d3b\u200b\u7684\u200b\u641c\u7d22\u200b\u7a7a\u95f4\u200b    \u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u6982\u7387\u5206\u5e03\u200b\uff08\u200b\u5982\u200b\u5747\u5300\u5206\u5e03\u200b\u3001\u200b\u5bf9\u6570\u200b\u5747\u5300\u5206\u5e03\u200b\u3001\u200b\u6b63\u6001\u5206\u5e03\u200b\u7b49\u200b\uff09\uff0c\u200b\u80fd\u200b\u66f4\u597d\u200b\u5730\u200b\u63a2\u7d22\u200b\u53c2\u6570\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u6709\u52a9\u4e8e\u200b\u8df3\u51fa\u200b\u5c40\u90e8\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002</li> </ol>"},{"location":"machine/interview/#_65","title":"\u4f18\u70b9\u200b\u4e0e\u200b\u7f3a\u70b9","text":"<p>\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u8ba1\u7b97\u200b\u6548\u7387\u9ad8\u200b\uff1a\u200b\u76f8\u6bd4\u200b\u7f51\u683c\u200b\u641c\u7d22\u200b\uff0c\u200b\u8ba1\u7b97\u6210\u672c\u200b\u663e\u8457\u200b\u964d\u4f4e\u200b\uff0c\u200b\u5c24\u5176\u200b\u9002\u5408\u200b\u9ad8\u7ef4\u200b\u53c2\u6570\u200b\u7a7a\u95f4\u200b</li> <li>\u200b\u7075\u6d3b\u200b\u5ea6\u9ad8\u200b\uff1a\u200b\u652f\u6301\u200b\u8fde\u7eed\u200b\u3001\u200b\u79bb\u6563\u200b\u53c2\u6570\u200b\u53ca\u200b\u5404\u79cd\u200b\u5206\u5e03\u200b\uff0c\u200b\u51cf\u5c11\u200b\u4eba\u4e3a\u200b\u8bbe\u5b9a\u200b\u504f\u5dee\u200b</li> <li>\u200b\u6613\u4e8e\u200b\u5e76\u884c\u200b\uff1a\u200b\u6bcf\u6b21\u200b\u91c7\u6837\u200b\u72ec\u7acb\u200b\uff0c\u200b\u53ef\u200b\u65b9\u4fbf\u200b\u5730\u200b\u5e76\u884c\u5904\u7406\u200b</li> </ul> <p>\u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u7ed3\u679c\u200b\u4e0d\u786e\u5b9a\u6027\u200b\uff1a\u200b\u7531\u4e8e\u200b\u968f\u673a\u6027\u200b\uff0c\u200b\u4e0d\u540c\u200b\u8fd0\u884c\u200b\u7ed3\u679c\u200b\u53ef\u80fd\u200b\u6709\u200b\u5dee\u5f02\u200b\uff0c\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u603b\u80fd\u200b\u627e\u5230\u200b\u5168\u5c40\u200b\u6700\u4f18\u200b\u89e3\u200b</li> <li>\u200b\u7f3a\u4e4f\u200b\u65b9\u5411\u6027\u200b\uff1a\u200b\u6bcf\u6b21\u200b\u91c7\u6837\u200b\u72ec\u7acb\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u5229\u7528\u200b\u5386\u53f2\u200b\u4fe1\u606f\u200b\u6307\u5bfc\u200b\u641c\u7d22\u200b</li> </ul> <pre><code>from sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\nfrom scipy.stats import randint\n\u200b\u5b9a\u4e49\u200b\u6a21\u578b\u200b\nmodel = RandomForestClassifier()\n\u200b\u5b9a\u4e49\u200b\u53c2\u6570\u200b\u5206\u5e03\u200b\nparam_dist = {\n    'n_estimators': randint(1, 200),\n    'max_features': randint(7, 9),\n}\n\u200b\u968f\u673a\u200b\u641c\u7d22\u200b\nrandom_search = RandomizedSearchCV(model, param_distributions=param_dist, n_iter=10, cv=5)\nrandom_search.fit(X_train, y_train)\n\u200b\u8f93\u51fa\u200b\u6700\u4f73\u200b\u53c2\u6570\u200b\nprint(\"\u200b\u6700\u4f73\u200b\u53c2\u6570\u200b:\", random_search.best_params_)\nprint(\"\u200b\u6700\u4f73\u200b\u5f97\u5206\u200b:\", random_search.best_score_)\n</code></pre>"},{"location":"machine/interview/#45","title":"4.5 \u200b\u8d1d\u53f6\u65af\u200b\u4f18\u5316","text":""},{"location":"machine/interview/#_66","title":"\u4e94\u200b\u3001\u200b\u5206\u7c7b","text":"<p>\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\uff1a \u200b\u5b66\u4e60\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b \\(f(x)\\) \u200b\u6765\u200b\u9884\u6d4b\u200b\u6837\u672c\u200b\u5c5e\u4e8e\u200b\u7c7b\u522b\u200b \\(y\\) \u200b\u7684\u200b\u6982\u7387\u200b\u3002</p> <p>\u200b\u5e38\u89c1\u200b\u7c7b\u578b\u200b\uff1a</p> <ul> <li>\u200b\u4e8c\u200b\u5206\u7c7b\u200b\uff1a\\(y \\in {0,1}\\)</li> <li>\u200b\u591a\u200b\u5206\u7c7b\u200b\uff1a\\(y \\in {1,2,...,K}\\)</li> </ul> <p>\u200b\u6211\u4eec\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u635f\u5931\u200b\u51fd\u6570\u200b \\(L(y, \\hat{y})\\) \u200b\u8861\u91cf\u200b\u9884\u6d4b\u200b \\(\\hat{y}\\) \u200b\u4e0e\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b \\(y\\) \u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u8ddd\u200b\u3002 \u200b\u5b66\u4e60\u200b\u76ee\u6807\u200b\u662f\u200b\u6700\u5c0f\u5316\u200b\u671f\u671b\u200b\u635f\u5931\u200b\uff1a</p> \\[ \\min_\\theta ; \\mathbb{E}*{(x,y)} [L(y, f*\\theta(x))] \\]"},{"location":"machine/interview/#51","title":"5.1 \u200b\u635f\u5931\u200b\u51fd\u6570","text":"\u7c7b\u578b\u200b \u200b\u635f\u5931\u200b\u51fd\u6570\u200b \u200b\u5e38\u7528\u200b\u4e8e\u200b\u7b97\u6cd5\u200b 0-1 \u200b\u635f\u5931\u200b \u200b\u7406\u8bba\u200b\u8bc4\u4f30\u200b \u200b\u7406\u8bba\u200b\u6700\u4f18\u200b\u5206\u7c7b\u5668\u200b \u200b\u5bf9\u6570\u200b\u635f\u5931\u200b / \u200b\u4ea4\u53c9\u200b\u71b5\u200b Logistic \u200b\u56de\u5f52\u200b\u3001\u200b\u795e\u7ecf\u7f51\u7edc\u200b \u200b\u6982\u7387\u6a21\u578b\u200b Hinge \u200b\u635f\u5931\u200b \u200b\u652f\u6301\u200b\u5411\u91cf\u200b\u673a\u200b\uff08SVM\uff09 \u200b\u95f4\u9694\u200b\u6700\u5927\u5316\u200b \u200b\u6307\u6570\u200b\u635f\u5931\u200b Adaboost \u200b\u96c6\u6210\u200b\u65b9\u6cd5\u200b Softmax + CrossEntropy \u200b\u591a\u200b\u5206\u7c7b\u200b \u200b\u795e\u7ecf\u7f51\u7edc\u200b\u3001\u200b\u591a\u200b\u7c7b\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b Focal Loss \u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\uff08\u200b\u4e0d\u200b\u5e73\u8861\u200b\u6837\u672c\u200b\uff09 \u200b\u6df1\u5ea6\u200b\u5b66\u4e60"},{"location":"machine/interview/#1_11","title":"1\ufe0f\u20e3 \u200b\u4e8c\u200b\u5206\u7c7b\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u8be6\u89e3","text":""},{"location":"machine/interview/#1-0-1","title":"(1) 0-1 \u200b\u635f\u5931","text":"<p>\u200b\u5b9a\u4e49\u200b\uff1a</p> \\[ L(y, \\hat{y}) = \\begin{cases} 0, &amp; \\text{if } y = \\hat{y} \\\\ 1, &amp; \\text{if } y \\neq \\hat{y} \\end{cases} \\] <p>\u200b\u7279\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u53cd\u6620\u200b\u5206\u7c7b\u200b\u51c6\u786e\u7387\u200b</li> <li>\u200b\u4e0d\u53ef\u200b\u5bfc\u200b\u3001\u200b\u4e0d\u200b\u8fde\u7eed\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u7528\u4e8e\u200b\u4f18\u5316\u200b</li> </ul> <p>\u200b\u7528\u9014\u200b\uff1a</p> <ul> <li>\u200b\u7406\u8bba\u200b\u5206\u6790\u200b\uff08\u200b\u4f8b\u5982\u200b Bayes \u200b\u6700\u4f18\u200b\u5206\u7c7b\u5668\u200b\uff09</li> </ul>"},{"location":"machine/interview/#2_9","title":"(2) \u200b\u5bf9\u6570\u200b\u635f\u5931\u200b / \u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931","text":"<p>\u200b\u6838\u5fc3\u601d\u60f3\u200b\uff1a \u200b\u7528\u200b\u9884\u6d4b\u200b\u6982\u7387\u200b\u903c\u8fd1\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b\uff0c\u200b\u6700\u5c0f\u5316\u200b\u5b83\u4eec\u200b\u7684\u200b\u5dee\u5f02\u200b\uff08\u200b\u5373\u200b\u4ea4\u53c9\u200b\u71b5\u200b\uff09\u3002</p> <p>\u200b\u5047\u8bbe\u200b\u8f93\u51fa\u200b\u4e3a\u200b\u6982\u7387\u200b \\(\\hat{p} = P(y=1|x)\\)\uff0c\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b \\(y \\in {0,1}\\)\u3002</p> <p>\u200b\u516c\u5f0f\u200b\uff1a</p> \\[ L(y, \\hat{p}) = -[y \\log(\\hat{p}) + (1 - y)\\log(1 - \\hat{p})] \\] <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <ul> <li>\u200b\u5f53\u200b\u9884\u6d4b\u200b\u63a5\u8fd1\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\u65f6\u200b\uff0c\u200b\u635f\u5931\u200b\u8d8b\u8fd1\u200b\u4e8e\u200b 0\uff1b</li> <li>\u200b\u5f53\u200b\u9884\u6d4b\u200b\u9519\u8bef\u200b\u4e14\u200b\u7f6e\u4fe1\u5ea6\u200b\u9ad8\u65f6\u200b\uff0c\u200b\u635f\u5931\u200b\u5de8\u5927\u200b\uff08\u200b\u60e9\u7f5a\u200b\u66f4\u5f3a\u200b\uff09\u3002</li> </ul> <p>\u200b\u56fe\u50cf\u200b\u7406\u89e3\u200b\uff1a \u200b\u4ea4\u53c9\u200b\u71b5\u200b\u66f2\u7ebf\u200b\u6bd4\u200b\u5e73\u65b9\u200b\u8bef\u5dee\u200b\u9661\u5ced\u200b\uff0c\u200b\u4f18\u5316\u200b\u6548\u679c\u200b\u66f4\u597d\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>from sklearn.metrics import log_loss\ny_true = [1, 0, 1, 1]\ny_pred = [0.9, 0.1, 0.8, 0.6]\nprint(log_loss(y_true, y_pred))\n</code></pre> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a</p> <ul> <li>\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\uff08Logistic Regression\uff09</li> <li>\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u5206\u7c7b\u200b\u5c42\u200b\uff08Softmax + CrossEntropy\uff09</li> </ul>"},{"location":"machine/interview/#3-hinge","title":"(3) Hinge \u200b\u635f\u5931\u200b\uff08\u200b\u5408\u9875\u200b\u635f\u5931\u200b\uff09","text":"<p>\u200b\u7528\u4e8e\u200b\u652f\u6301\u200b\u5411\u91cf\u200b\u673a\u200b\uff08SVM\uff09\u200b\u7b49\u200b\u6700\u5927\u200b\u95f4\u9694\u200b\u5206\u7c7b\u200b\u3002</p> <p>\u200b\u5047\u8bbe\u200b\u6807\u7b7e\u200b \\(y \\in {-1, +1}\\)\uff0c\u200b\u9884\u6d4b\u503c\u200b\u4e3a\u200b \\(f(x)\\)\u3002</p> <p>\u200b\u516c\u5f0f\u200b\uff1a</p> \\[ L(y, f(x)) = \\max(0, 1 - y \\cdot f(x)) \\] <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <ul> <li>\u200b\u82e5\u200b \\(y \\cdot f(x) \\ge 1\\)\uff0c\u200b\u8bf4\u660e\u200b\u5206\u7c7b\u200b\u6b63\u786e\u200b\u4e14\u200b\u6709\u200b\u8db3\u591f\u200b\u95f4\u9694\u200b \u2192 \u200b\u635f\u5931\u200b\u4e3a\u200b 0\uff1b</li> <li>\u200b\u5426\u5219\u200b\uff0c\u200b\u635f\u5931\u200b\u4e0e\u200b\u8ddd\u79bb\u200b\u6210\u200b\u7ebf\u6027\u200b\u589e\u52a0\u200b\u3002</li> </ul> <p>\u200b\u51e0\u4f55\u200b\u610f\u4e49\u200b\uff1a \u200b\u5e0c\u671b\u200b\u70b9\u79bb\u5206\u200b\u754c\u9762\u200b\u201c\u200b\u66f4\u200b\u8fdc\u200b\u201d\uff0c\u200b\u4ece\u800c\u200b\u63d0\u5347\u200b\u9c81\u68d2\u6027\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>from sklearn.svm import LinearSVC\nfrom sklearn.metrics import hinge_loss\n\ny_true = [1, -1, 1]\npred_decision = [0.8, -0.5, 0.2]\nprint(hinge_loss(y_true, pred_decision))\n</code></pre>"},{"location":"machine/interview/#4-exponential-loss","title":"(4) \u200b\u6307\u6570\u200b\u635f\u5931\u200b\uff08Exponential Loss\uff09","text":"<p>\u200b\u7528\u4e8e\u200b Adaboost \u200b\u7b97\u6cd5\u200b\u3002</p> <p>\u200b\u516c\u5f0f\u200b\uff1a</p> \\[ L(y, f(x)) = e^{-y f(x)} \\] <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <ul> <li>\u200b\u9519\u8bef\u200b\u5206\u7c7b\u200b\uff08\\(y f(x) &lt; 0\\)\uff09\u200b\u65f6\u200b\u60e9\u7f5a\u200b\u5448\u200b\u6307\u6570\u200b\u589e\u957f\u200b\uff1b</li> <li>\u200b\u5bf9\u200b\u5f02\u5e38\u200b\u503c\u200b\u654f\u611f\u200b\u3002</li> </ul> <p>\u200b\u5e94\u7528\u200b\uff1a</p> <ul> <li>Boosting \u200b\u7cfb\u5217\u200b\u7b97\u6cd5\u200b\u7684\u200b\u7406\u8bba\u200b\u57fa\u7840\u200b</li> </ul>"},{"location":"machine/interview/#2_10","title":"2\ufe0f\u20e3 \u200b\u591a\u200b\u5206\u7c7b\u200b\u635f\u5931\u200b\u51fd\u6570","text":""},{"location":"machine/interview/#1-softmax-cross-entropy","title":"(1) Softmax + Cross-Entropy","text":"<p>\u200b\u8fd9\u200b\u662f\u200b\u591a\u200b\u5206\u7c7b\u200b\u6700\u200b\u5e38\u89c1\u200b\u7684\u200b\u635f\u5931\u200b\u3002</p> <p>Softmax \u200b\u5c42\u200b\uff1a \u200b\u5c06\u200b\u6a21\u578b\u200b\u8f93\u51fa\u200b \\(z_i\\) \u200b\u6620\u5c04\u200b\u4e3a\u200b\u6982\u7387\u200b\uff1a</p> \\[ \\hat{p_i} = \\frac{e^{z_i}}{\\sum_{j=1}^K e^{z_j}} \\] <p>Cross-Entropy\uff1a $$ L = - \\sum_{i=1}^K y_i \\log(\\hat{p_i}) $$</p> <p>\u200b\u5176\u4e2d\u200b \\(y_i\\) \u200b\u662f\u200b\u72ec\u70ed\u200b\u7f16\u7801\u200b\uff08one-hot\uff09\u200b\u5f62\u5f0f\u200b\u3002 \u200b\u82e5\u200b\u771f\u5b9e\u200b\u7c7b\u522b\u200b\u4e3a\u200b \\(c\\)\uff1a</p> \\[ L = -\\log(\\hat{p_c}) \\] <p>\u200b\u89e3\u91ca\u200b\uff1a \u200b\u9884\u6d4b\u200b\u771f\u5b9e\u200b\u7c7b\u522b\u200b\u7684\u200b\u6982\u7387\u200b\u8d8a\u5927\u200b\uff0c\u200b\u635f\u5931\u200b\u8d8a\u5c0f\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>import torch\nimport torch.nn.functional as F\n\ny_true = torch.tensor([2])  # \u200b\u7c7b\u522b\u200b\u7d22\u5f15\u200b\ny_pred = torch.tensor([[2.0, 0.5, 4.0]])  # logits\nloss = F.cross_entropy(y_pred, y_true)\nprint(loss.item())\n</code></pre>"},{"location":"machine/interview/#2-hinge","title":"(2) \u200b\u591a\u200b\u7c7b\u200b Hinge \u200b\u635f\u5931","text":"<p>\u200b\u516c\u5f0f\u200b\uff1a</p> \\[ L = \\sum_{i \\ne y} \\max(0, f_i - f_y + \\Delta) \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(f_i\\) \u200b\u4e3a\u200b\u7c7b\u522b\u200b \\(i\\) \u200b\u7684\u200b\u5f97\u5206\u200b</li> <li>\\(\\Delta\\) \u200b\u4e3a\u200b\u95f4\u9694\u200b\uff08\u200b\u901a\u5e38\u200b\u53d6\u200b 1\uff09</li> </ul> <p>\u200b\u7528\u9014\u200b\uff1a</p> <ul> <li>\u200b\u591a\u200b\u7c7b\u200b\u652f\u6301\u200b\u5411\u91cf\u200b\u673a\u200b\uff08Multi-class SVM\uff09</li> </ul>"},{"location":"machine/interview/#3-weighted-loss","title":"3\ufe0f\u20e3 \u200b\u5e26\u6743\u200b\u635f\u5931\u200b\uff08Weighted Loss\uff09","text":"<p>\u200b\u5728\u200b\u6837\u672c\u200b\u7c7b\u522b\u200b\u4e0d\u200b\u5e73\u8861\u200b\u65f6\u200b\uff08\u200b\u4f8b\u5982\u200b\u6b3a\u8bc8\u200b\u68c0\u6d4b\u200b\u3001\u200b\u533b\u5b66\u200b\u8bca\u65ad\u200b\uff09\uff0c \u200b\u7ed9\u200b\u4e0d\u540c\u200b\u7c7b\u522b\u200b\u4e0d\u540c\u200b\u6743\u91cd\u200b\uff1a</p> \\[ L = -[w_1 y \\log(\\hat{p}) + w_0 (1-y)\\log(1-\\hat{p})] \\] <p>\u200b\u6216\u200b\u591a\u200b\u5206\u7c7b\u200b\u7248\u672c\u200b\uff1a</p> \\[ L = -\\sum_{i=1}^K w_i y_i \\log(\\hat{p_i}) \\] <p>\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u6269\u5c55\u200b\uff1a Focal Loss\uff08\u200b\u7528\u4e8e\u200b\u76ee\u6807\u200b\u68c0\u6d4b\u200b\uff09\uff1a</p> \\[ L = - (1 - \\hat{p_t})^\\gamma \\log(\\hat{p_t}) \\] <p>\u200b\u5176\u4e2d\u200b \\(\\gamma &gt; 0\\) \u200b\u63a7\u5236\u200b\u56f0\u96be\u200b\u6837\u672c\u200b\u7684\u200b\u5173\u6ce8\u5ea6\u200b\u3002</p>"},{"location":"machine/interview/#52","title":"5.2 \u200b\u8bc4\u4f30\u200b\u6307\u6807","text":""},{"location":"machine/interview/#_67","title":"\ud83e\udded \u200b\u4e00\u200b\u3001\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u4e2d\u200b\u7684\u200b\u56db\u79cd\u200b\u7ed3\u679c\u200b\u7c7b\u578b\u200b\uff08\u200b\u6df7\u6dc6\u200b\u77e9\u9635\u200b\u57fa\u7840\u200b\uff09","text":"<p>\u200b\u5728\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u4e2d\u200b\uff08\u200b\u6b63\u7c7b\u200b Positive / \u200b\u8d1f\u7c7b\u200b Negative\uff09\uff0c\u200b\u6bcf\u4e2a\u200b\u6837\u672c\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u53ef\u200b\u5206\u4e3a\u200b\u56db\u7c7b\u200b\uff1a</p> \u200b\u5b9e\u9645\u200b / \u200b\u9884\u6d4b\u200b Positive Negative Positive\uff08\u200b\u771f\u5b9e\u200b\u4e3a\u200b\u6b63\u200b\uff09 True Positive (TP) False Negative (FN) Negative\uff08\u200b\u771f\u5b9e\u200b\u4e3a\u200b\u8d1f\u200b\uff09 False Positive (FP) True Negative (TN) <p>\u200b\u7531\u6b64\u200b\u5f62\u6210\u200b\u6df7\u6dc6\u200b\u77e9\u9635\u200b\uff08Confusion Matrix\uff09\uff1a</p> \\[ \\begin{bmatrix} TP &amp; FP \\ FN &amp; TN \\end{bmatrix} \\]"},{"location":"machine/interview/#accuracy","title":"\ud83e\uddee \u200b\u4e8c\u200b\u3001\u200b\u51c6\u786e\u7387\u200b\uff08Accuracy\uff09","text":""},{"location":"machine/interview/#_68","title":"\u5b9a\u4e49\u200b\uff1a","text":"\\[ \\text{Accuracy} = \\frac{TP + TN}{TP + TN + FP + FN} \\]"},{"location":"machine/interview/#_69","title":"\u542b\u4e49\u200b\uff1a","text":"<p>\u200b\u9884\u6d4b\u200b\u6b63\u786e\u200b\u7684\u200b\u6837\u672c\u200b\u5360\u200b\u603b\u200b\u6837\u672c\u200b\u6bd4\u4f8b\u200b\u3002</p>"},{"location":"machine/interview/#_70","title":"\u793a\u4f8b\u200b\uff1a","text":"<p>\u200b\u82e5\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b 100 \u200b\u4e2a\u200b\u6837\u672c\u200b\uff0c\u200b\u5176\u4e2d\u200b\u6b63\u786e\u200b 90 \u200b\u4e2a\u200b\uff0c\u200b\u5219\u200b\uff1a $$ \\text{Accuracy} = \\frac{90}{100} = 0.9 $$</p>"},{"location":"machine/interview/#_71","title":"\u4f18\u7f3a\u70b9\u200b\uff1a","text":"<ul> <li>\u2705 \u200b\u7b80\u5355\u200b\u76f4\u89c2\u200b\u3002</li> <li>\u274c \u200b\u5f53\u200b\u6837\u672c\u200b\u4e25\u91cd\u200b\u4e0d\u200b\u5e73\u8861\u200b\u65f6\u200b\uff08\u200b\u4f8b\u5982\u200b 99% \u200b\u4e3a\u200b\u8d1f\u7c7b\u200b\uff09\uff0c\u200b\u51c6\u786e\u7387\u200b\u4f1a\u200b\u63a9\u76d6\u200b\u9519\u8bef\u200b\u3002\u200b\u4f8b\u5982\u200b\u6a21\u578b\u200b\u5168\u200b\u9884\u6d4b\u200b\u4e3a\u200b\u8d1f\u7c7b\u200b\uff0c\u200b\u51c6\u786e\u7387\u200b\u4ecd\u200b\u53ef\u8fbe\u200b 99%\u3002</li> </ul>"},{"location":"machine/interview/#precisionrecall","title":"\ud83c\udfaf \u200b\u4e09\u200b\u3001\u200b\u7cbe\u786e\u200b\u7387\u200b\uff08Precision\uff09\u200b\u4e0e\u200b\u53ec\u56de\u200b\u7387\u200b\uff08Recall\uff09","text":""},{"location":"machine/interview/#1-precision","title":"1\ufe0f\u20e3 \u200b\u7cbe\u786e\u200b\u7387\u200b\uff08Precision\uff09","text":"<p>\u200b\u5b9a\u4e49\u200b\uff1a $$ \\text{Precision} = \\frac{TP}{TP + FP} $$</p> <p>\u200b\u542b\u4e49\u200b\uff1a \u200b\u88ab\u200b\u9884\u6d4b\u200b\u4e3a\u200b\u6b63\u7c7b\u200b\u7684\u200b\u6837\u672c\u200b\u4e2d\u200b\uff0c\u200b\u6709\u200b\u591a\u5c11\u200b\u662f\u200b\u771f\u7684\u200b\u6b63\u7c7b\u200b\u3002</p> <p>\u200b\u9ad8\u200b\u7cbe\u786e\u200b\u7387\u200b \u2192 \u200b\u6a21\u578b\u200b\u201c\u200b\u614e\u91cd\u200b\u201d\uff0c\u200b\u9884\u6d4b\u200b\u4e3a\u200b\u6b63\u200b\u7684\u200b\u6837\u672c\u200b\u5927\u591a\u200b\u786e\u5b9e\u200b\u662f\u200b\u6b63\u200b\u3002</p>"},{"location":"machine/interview/#2-recall","title":"2\ufe0f\u20e3 \u200b\u53ec\u56de\u200b\u7387\u200b\uff08Recall\uff09","text":"<p>\u200b\u5b9a\u4e49\u200b\uff1a $$ \\text{Recall} = \\frac{TP}{TP + FN} $$</p> <p>\u200b\u542b\u4e49\u200b\uff1a \u200b\u6240\u6709\u200b\u771f\u5b9e\u200b\u6b63\u7c7b\u200b\u6837\u672c\u200b\u4e2d\u200b\uff0c\u200b\u6a21\u578b\u200b\u627e\u51fa\u200b\u4e86\u200b\u591a\u5c11\u200b\u4e2a\u200b\u3002</p> <p>\u200b\u9ad8\u200b\u53ec\u56de\u200b\u7387\u200b \u2192 \u200b\u6a21\u578b\u200b\u201c\u200b\u654f\u611f\u200b\u201d\uff0c\u200b\u5c3d\u53ef\u80fd\u200b\u627e\u51fa\u200b\u6240\u6709\u200b\u6b63\u200b\u6837\u672c\u200b\u3002</p>"},{"location":"machine/interview/#_72","title":"\u6570\u503c\u200b\u793a\u4f8b\u200b\uff1a","text":"\u5b9e\u9645\u200b \u200b\u9884\u6d4b\u200b 100 \u200b\u4e2a\u200b\u6b63\u200b\u6837\u672c\u200b\u4e2d\u200b\u6a21\u578b\u200b\u627e\u51fa\u200b 80 \u200b\u4e2a\u200b\uff08TP=80\uff0cFN=20\uff09 \u200b\u540c\u65f6\u200b\u9519\u8bef\u200b\u9884\u6d4b\u200b 10 \u200b\u4e2a\u200b\u8d1f\u200b\u6837\u672c\u200b\u4e3a\u200b\u6b63\u200b\uff08FP=10\uff09 <p>\u200b\u8ba1\u7b97\u200b\uff1a $$ \\text{Precision} = \\frac{80}{80+10} = 0.8889 $$ $$ \\text{Recall} = \\frac{80}{80+20} = 0.8 $$</p>"},{"location":"machine/interview/#precision-recall-tradeoff","title":"\u5e73\u8861\u200b\u5173\u7cfb\u200b\uff08Precision-Recall Tradeoff\uff09\uff1a","text":"<p>\u200b\u901a\u5e38\u200b\uff0c\u200b\u63d0\u9ad8\u200b Recall \u200b\u4f1a\u200b\u964d\u4f4e\u200b Precision\uff08\u200b\u6a21\u578b\u200b\u66f4\u200b\u201c\u200b\u6fc0\u8fdb\u200b\u201d\uff09\uff0c\u200b\u53cd\u4e4b\u4ea6\u7136\u200b\u3002 \u200b\u9608\u503c\u200b\uff08threshold\uff09\u200b\u8c03\u8282\u200b\u80fd\u200b\u6539\u53d8\u200b\u4e24\u8005\u200b\u5e73\u8861\u200b\u3002</p>"},{"location":"machine/interview/#f1-f1-score","title":"\ud83d\udd01 \u200b\u56db\u200b\u3001F1 \u200b\u5206\u6570\u200b\uff08F1-score\uff09","text":"<p>\u200b\u4e3a\u200b\u5e73\u8861\u200b\u7cbe\u786e\u200b\u7387\u200b\u4e0e\u200b\u53ec\u56de\u200b\u7387\u200b\uff0c\u200b\u5f15\u5165\u200b\u8c03\u548c\u200b\u5e73\u5747\u6570\u200b\uff1a</p> \\[ F_1 = 2 \\cdot \\frac{\\text{Precision} \\cdot \\text{Recall}}{\\text{Precision} + \\text{Recall}} \\]"},{"location":"machine/interview/#_73","title":"\u793a\u4f8b\u200b\uff1a","text":"\\[ \\text{Precision}=0.8889,\\quad \\text{Recall}=0.8 \\] <p>\u200b\u4ee3\u5165\u200b\uff1a</p> \\[ F_1 = 2 \\times \\frac{0.8889\\times 0.8}{0.8889+0.8} = 0.842 \\]"},{"location":"machine/interview/#_74","title":"\u7279\u70b9\u200b\uff1a","text":"<ul> <li>F1 \u200b\u9ad8\u200b \u2192 \u200b\u6a21\u578b\u200b\u540c\u65f6\u200b\u517c\u987e\u200b\u9ad8\u200b Precision \u200b\u548c\u200b Recall\uff1b</li> <li>\u200b\u5e38\u7528\u200b\u4e8e\u200b\u4e0d\u200b\u5e73\u8861\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\uff1b</li> <li>\u200b\u5f53\u200b\u6b63\u8d1f\u200b\u6837\u672c\u200b\u6bd4\u4f8b\u200b\u6781\u200b\u4e0d\u200b\u5747\u8861\u200b\u65f6\u200b\uff0cF1 \u200b\u6bd4\u200b Accuracy \u200b\u66f4\u80fd\u200b\u53cd\u6620\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\u3002</li> </ul>"},{"location":"machine/interview/#f","title":"\u2696\ufe0f \u200b\u4e94\u200b\u3001F\u03b2 \u200b\u5206\u6570\u200b\uff08\u200b\u901a\u7528\u200b\u5f62\u5f0f\u200b\uff09","text":"<p>\u200b\u82e5\u200b\u5e0c\u671b\u200b\u66f4\u200b\u5173\u6ce8\u200b Recall \u200b\u6216\u200b Precision\uff0c\u200b\u53ef\u7528\u200b\u52a0\u6743\u200b\u7248\u200b\uff1a</p> \\[ F_\\beta = (1+\\beta^2)\\cdot \\frac{\\text{Precision}\\cdot\\text{Recall}}{(\\beta^2\\cdot\\text{Precision})+\\text{Recall}} \\] <ul> <li>\\(\\beta&gt;1\\) \u2192 \u200b\u66f4\u200b\u6ce8\u91cd\u200b Recall\uff1b</li> <li>\\(\\beta&lt;1\\) \u2192 \u200b\u66f4\u200b\u6ce8\u91cd\u200b Precision\u3002</li> </ul> <p>\u200b\u4f8b\u200b\uff1a\\(F_{0.5}\\) \u200b\u504f\u5411\u200b\u7cbe\u786e\u200b\u7387\u200b\uff0c\\(F_2\\) \u200b\u504f\u5411\u200b\u53ec\u56de\u200b\u7387\u200b\u3002</p>"},{"location":"machine/interview/#specificityfpr","title":"\ud83d\udcca \u200b\u516d\u200b\u3001\u200b\u7279\u5f02\u200b\u5ea6\u200b\uff08Specificity\uff09\u200b\u4e0e\u200b\u5047\u9633\u7387\u200b\uff08FPR\uff09","text":""},{"location":"machine/interview/#true-negative-rate","title":"\u7279\u5f02\u200b\u5ea6\u200b\uff08True Negative Rate\uff09\uff1a","text":"\\[ \\text{Specificity} = \\frac{TN}{TN + FP} \\]"},{"location":"machine/interview/#false-positive-rate","title":"\u5047\u9633\u7387\u200b\uff08False Positive Rate\uff09\uff1a","text":"\\[ \\text{FPR} = \\frac{FP}{FP + TN} = 1 - \\text{Specificity} \\] <p>\u200b\u5728\u200b\u533b\u5b66\u200b\u573a\u666f\u200b\uff0c\u200b\u7279\u5f02\u200b\u5ea6\u200b\u8868\u793a\u200b\u6a21\u578b\u200b\u8bc6\u522b\u200b\u201c\u200b\u5065\u5eb7\u4eba\u200b\u201d\u200b\u7684\u200b\u80fd\u529b\u200b\u3002</p>"},{"location":"machine/interview/#roc-aucarea-under-curve","title":"\ud83e\udeb6 \u200b\u4e03\u200b\u3001ROC \u200b\u66f2\u7ebf\u200b\u4e0e\u200b AUC\uff08Area Under Curve\uff09","text":""},{"location":"machine/interview/#1-roc","title":"1\ufe0f\u20e3 ROC \u200b\u66f2\u7ebf\u200b\u5b9a\u4e49\u200b\uff1a","text":"<p>ROC \u200b\u66f2\u7ebf\u200b\u4ee5\u200b\uff1a</p> <ul> <li>\u200b\u6a2a\u8f74\u200b\uff1a\u200b\u5047\u9633\u7387\u200b\uff08FPR\uff09</li> <li>\u200b\u7eb5\u8f74\u200b\uff1a\u200b\u771f\u6b63\u200b\u7387\u200b\uff08TPR\uff09= Recall = \\(\\frac{TP}{TP + FN}\\)</li> </ul> <p>\u200b\u5f53\u200b\u9608\u503c\u200b\u4ece\u200b 1 \u200b\u964d\u5230\u200b 0 \u200b\u65f6\u200b\uff0c\u200b\u7ed8\u5236\u200b \\((\\text{FPR}, \\text{TPR})\\) \u200b\u70b9\u200b\u3002</p>"},{"location":"machine/interview/#2-auc","title":"2\ufe0f\u20e3 AUC \u200b\u6307\u6807\u200b\uff1a","text":"<p>AUC \u200b\u662f\u200b ROC \u200b\u66f2\u7ebf\u200b\u4e0b\u200b\u7684\u200b\u9762\u79ef\u200b\uff1a $$ \\text{AUC} = \\int_0^1 \\text{TPR}(x),dx $$</p> <p>AUC \u200b\u53d6\u503c\u200b\u8303\u56f4\u200b \\([0,1]\\)\uff1a</p> <ul> <li>AUC = 1\uff1a\u200b\u5b8c\u7f8e\u200b\u5206\u7c7b\u5668\u200b</li> <li>AUC = 0.5\uff1a\u200b\u968f\u673a\u200b\u731c\u6d4b\u200b</li> <li>AUC &lt; 0.5\uff1a\u200b\u6027\u80fd\u6bd4\u200b\u968f\u673a\u200b\u8fd8\u200b\u5dee\u200b\uff08\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u53ef\u200b\u53cd\u8f6c\u200b\uff09</li> </ul>"},{"location":"machine/interview/#3_6","title":"3\ufe0f\u20e3 \u200b\u76f4\u89c2\u200b\u89e3\u91ca\u200b\uff1a","text":"<p>AUC = \u201c\u200b\u968f\u673a\u200b\u62bd\u53d6\u200b\u4e00\u5bf9\u200b\uff08\u200b\u6b63\u200b\u6837\u672c\u200b\u3001\u200b\u8d1f\u200b\u6837\u672c\u200b\uff09\uff0c\u200b\u6a21\u578b\u200b\u5224\u65ad\u200b\u6b63\u200b\u6837\u672c\u200b\u5f97\u5206\u200b\u66f4\u200b\u9ad8\u200b\u7684\u200b\u6982\u7387\u200b\u201d\u3002</p>"},{"location":"machine/interview/#pr-precisionrecall","title":"\ud83e\uddf1 \u200b\u516b\u200b\u3001PR \u200b\u66f2\u7ebf\u200b\uff08Precision\u2013Recall \u200b\u66f2\u7ebf\u200b\uff09","text":"<p>\u200b\u6a2a\u8f74\u200b\u4e3a\u200b Recall\uff0c\u200b\u7eb5\u8f74\u200b\u4e3a\u200b Precision\uff0c\u200b\u66f2\u7ebf\u200b\u53cd\u6620\u200b\u9608\u503c\u200b\u53d8\u5316\u200b\u4e0b\u200b\u7684\u200b\u53d6\u820d\u200b\u3002</p> <p>\u200b\u5728\u200b\u7c7b\u522b\u200b\u6781\u200b\u4e0d\u200b\u5e73\u8861\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0cPR \u200b\u66f2\u7ebf\u200b\u66f4\u6709\u610f\u4e49\u200b\uff08\u200b\u76f8\u6bd4\u200b ROC \u200b\u66f2\u7ebf\u200b\uff09\u3002</p>"},{"location":"machine/interview/#_75","title":"\ud83e\uddfe \u200b\u4e5d\u200b\u3001\u200b\u5b8f\u200b\u5e73\u5747\u200b\u4e0e\u200b\u5fae\u200b\u5e73\u5747\u200b\uff08\u200b\u591a\u200b\u5206\u7c7b\u200b\u6307\u6807\u200b\uff09","text":"<p>\u200b\u5f53\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u662f\u200b\u591a\u200b\u7c7b\u522b\u200b\uff08\u200b\u5982\u200b 3 \u200b\u7c7b\u200b\u30015 \u200b\u7c7b\u200b\uff09\u200b\u65f6\u200b\uff0cPrecision\u3001Recall\u3001F1 \u200b\u6709\u200b\u591a\u79cd\u200b\u6c42\u6cd5\u200b\uff1a</p> <ul> <li> <p>Macro \u200b\u5e73\u5747\u200b\uff08Macro-Average\uff09\uff1a   \u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u7c7b\u522b\u200b\u72ec\u7acb\u200b\u8ba1\u7b97\u200b\u6307\u6807\u200b\uff0c\u200b\u7136\u540e\u200b\u5e73\u5747\u200b\uff1a   $$   \\text{Macro-F1} = \\frac{1}{C}\\sum_{i=1}^C F_1^{(i)}   $$   \u2192 \u200b\u5404\u7c7b\u200b\u6743\u91cd\u200b\u76f8\u540c\u200b\uff08\u200b\u4e0d\u200b\u8003\u8651\u200b\u6837\u672c\u6570\u200b\u5dee\u5f02\u200b\uff09</p> </li> <li> <p>Micro \u200b\u5e73\u5747\u200b\uff08Micro-Average\uff09\uff1a   \u200b\u7edf\u8ba1\u200b\u6240\u6709\u200b\u6837\u672c\u200b\u603b\u200b\u7684\u200b TP\u3001FP\u3001FN \u200b\u540e\u200b\u518d\u200b\u7b97\u200b\uff1a   $$   \\text{Micro-F1} = \\frac{2TP_{\\text{total}}}{2TP_{\\text{total}} + FP_{\\text{total}} + FN_{\\text{total}}}   $$   \u2192 \u200b\u5404\u200b\u6837\u672c\u200b\u6743\u91cd\u200b\u76f8\u540c\u200b\uff08\u200b\u5927\u200b\u7c7b\u522b\u200b\u5360\u200b\u4e3b\u5bfc\u200b\uff09</p> </li> </ul>"},{"location":"machine/interview/#cohens-kappa","title":"\ud83e\udde9 \u200b\u5341\u200b\u3001Cohen\u2019s Kappa \u200b\u7cfb\u6570\u200b\uff08\u200b\u4e00\u81f4\u6027\u200b\u5ea6\u91cf\u200b\uff09","text":""},{"location":"machine/interview/#_76","title":"\u5b9a\u4e49\u200b\uff1a","text":"<p>$$ \\kappa = \\frac{p_o - p_e}{1 - p_e} $$ \u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(p_o\\) = \u200b\u5b9e\u9645\u200b\u89c2\u6d4b\u200b\u4e00\u81f4\u200b\u7387\u200b\uff08\u200b\u5373\u200b Accuracy\uff09</li> <li>\\(p_e\\) = \u200b\u968f\u673a\u200b\u4e00\u81f4\u200b\u7684\u200b\u671f\u671b\u503c\u200b</li> </ul> <p>\u200b\u53cd\u6620\u200b\u9884\u6d4b\u200b\u4e0e\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\u4e4b\u95f4\u200b\u7684\u200b\u4e00\u81f4\u6027\u200b\uff0c\u200b\u5254\u9664\u200b\u4e86\u200b\u968f\u673a\u200b\u4e00\u81f4\u200b\u7684\u200b\u5f71\u54cd\u200b\u3002</p> <p>\u200b\u53d6\u503c\u200b\uff1a</p> <ul> <li>\\(\\kappa=1\\)\uff1a\u200b\u5b8c\u5168\u4e00\u81f4\u200b</li> <li>\\(\\kappa=0\\)\uff1a\u200b\u968f\u673a\u200b\u4e00\u81f4\u200b</li> <li>\\(\\kappa&lt;0\\)\uff1a\u200b\u6bd4\u200b\u968f\u673a\u200b\u8fd8\u200b\u5dee\u200b</li> </ul>"},{"location":"machine/interview/#_77","title":"\ud83e\uddee \u200b\u5341\u4e00\u200b\u3001\u200b\u793a\u4f8b\u200b\u6c47\u603b\u200b\uff08\u200b\u6570\u503c\u200b\u8ba1\u7b97\u200b\uff09","text":"<p>\u200b\u5047\u8bbe\u200b\uff1a</p> \u200b\u5b9e\u9645\u200b / \u200b\u9884\u6d4b\u200b Positive Negative Positive 50 (TP) 10 (FN) Negative 5 (FP) 35 (TN) <p>\u200b\u8ba1\u7b97\u200b\uff1a</p> <ul> <li>Accuracy = \\((50+35)/100 = 0.85\\)</li> <li>Precision = \\(50/(50+5)=0.909\\)</li> <li>Recall = \\(50/(50+10)=0.833\\)</li> <li>F1 = \\(2\u00d7(0.909\u00d70.833)/(0.909+0.833)=0.87\\)</li> <li>Specificity = \\(35/(35+5)=0.875\\)</li> <li>FPR = \\(0.125\\)</li> </ul> \u200b\u6307\u6807\u200b \u200b\u5173\u6ce8\u70b9\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b Accuracy \u200b\u6574\u4f53\u200b\u6b63\u786e\u7387\u200b \u200b\u7c7b\u522b\u200b\u5e73\u8861\u200b\u65f6\u200b\u4f7f\u7528\u200b Precision \u200b\u9884\u6d4b\u200b\u4e3a\u200b\u6b63\u200b\u7684\u200b\u53ef\u4fe1\u5ea6\u200b \u200b\u6b3a\u8bc8\u200b\u68c0\u6d4b\u200b\u3001\u200b\u5783\u573e\u90ae\u4ef6\u200b\u8bc6\u522b\u200b Recall \u200b\u8986\u76d6\u200b\u6b63\u7c7b\u200b\u7684\u200b\u80fd\u529b\u200b \u200b\u75be\u75c5\u200b\u7b5b\u67e5\u200b\u3001\u200b\u98ce\u9669\u200b\u76d1\u6d4b\u200b F1 \u200b\u7cbe\u786e\u200b\u7387\u200b\u4e0e\u200b\u53ec\u56de\u200b\u7387\u200b\u5e73\u8861\u200b \u200b\u4e0d\u200b\u5e73\u8861\u200b\u5206\u7c7b\u200b ROC\u2013AUC \u200b\u9608\u503c\u200b\u65e0\u5173\u200b\u7684\u200b\u6574\u4f53\u200b\u6027\u80fd\u200b \u200b\u5404\u7c7b\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u901a\u7528\u200b PR\u2013AUC \u200b\u5c11\u6570\u7c7b\u200b\u5173\u6ce8\u200b\u573a\u666f\u200b \u200b\u4e25\u91cd\u200b\u4e0d\u200b\u5e73\u8861\u200b\u6570\u636e\u200b Kappa \u200b\u5254\u9664\u200b\u968f\u673a\u200b\u4e00\u81f4\u200b\u5f71\u54cd\u200b \u200b\u591a\u200b\u5206\u7c7b\u200b\u4e00\u81f4\u6027\u200b\u8bc4\u4f30\u200b <pre><code>from sklearn.metrics import (\n    accuracy_score, precision_score, recall_score, f1_score,\n    roc_auc_score, confusion_matrix, classification_report\n)\n\ny_true = [1, 0, 1, 1, 0, 1, 0]\ny_pred = [1, 0, 1, 0, 0, 1, 1]\ny_prob = [0.9, 0.2, 0.8, 0.4, 0.3, 0.95, 0.7]  # \u200b\u6982\u7387\u200b\u8f93\u51fa\u200b\n\nprint(\"Accuracy:\", accuracy_score(y_true, y_pred))\nprint(\"Precision:\", precision_score(y_true, y_pred))\nprint(\"Recall:\", recall_score(y_true, y_pred))\nprint(\"F1:\", f1_score(y_true, y_pred))\nprint(\"ROC-AUC:\", roc_auc_score(y_true, y_prob))\nprint(\"Confusion Matrix:\\n\", confusion_matrix(y_true, y_pred))\nprint(\"\\nClassification Report:\\n\", classification_report(y_true, y_pred))\n</code></pre>"},{"location":"machine/interview/#53","title":"5.3 \u200b\u591a\u200b\u5206\u7c7b","text":"<p>\u200b\u591a\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b \u200b\u662f\u200b\u6307\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u6837\u672c\u200b\u53ea\u80fd\u200b\u5c5e\u4e8e\u200b\u591a\u4e2a\u200b\u53ef\u80fd\u200b\u7c7b\u522b\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e14\u200b\u4ec5\u200b\u4e00\u4e2a\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff1a</p> <ul> <li>\u200b\u8f93\u5165\u200b\uff1a\u200b\u4e00\u5f20\u200b\u56fe\u7247\u200b</li> <li>\u200b\u8f93\u51fa\u200b\u7c7b\u522b\u200b\uff1a{\u200b\u732b\u200b, \u200b\u72d7\u200b, \u200b\u9e1f\u200b}   \u2192 \u200b\u53ea\u80fd\u200b\u5c5e\u4e8e\u200b\u5176\u4e2d\u200b\u4e00\u4e2a\u200b\u3002</li> </ul> <p>\u200b\u6570\u5b66\u200b\u4e0a\u200b\uff0c\u200b\u7ed9\u5b9a\u200b\uff1a</p> <ul> <li>\u200b\u8f93\u5165\u200b\u7279\u5f81\u200b\uff1a\\(x \\in \\mathbb{R}^d\\)</li> <li>\u200b\u8f93\u51fa\u200b\u6807\u7b7e\u200b\uff1a\\(y \\in {1, 2, \\dots, K}\\)</li> </ul> <p>\u200b\u4efb\u52a1\u200b\u76ee\u6807\u200b\u662f\u200b\u5b66\u4e60\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff1a $$ f_\\theta(x) = \\arg\\max_{k} P(y=k \\mid x; \\theta) $$</p>"},{"location":"machine/interview/#_78","title":"\u2699\ufe0f \u200b\u4e8c\u200b\u3001\u200b\u6a21\u578b\u200b\u7ed3\u6784\u200b\u4e0e\u200b\u539f\u7406","text":""},{"location":"machine/interview/#1_12","title":"1\ufe0f\u20e3 \u200b\u7ebf\u6027\u200b\u6a21\u578b","text":"<p>\u200b\u6700\u200b\u57fa\u672c\u200b\u5f62\u5f0f\u200b\uff08\u200b\u5982\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\u7684\u200b\u591a\u200b\u5206\u7c7b\u200b\u6269\u5c55\u200b\uff09\uff1a $$ z_k = w_k^\\top x + b_k, \\quad k = 1, 2, \\dots, K $$ \u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(w_k\\) \u200b\u662f\u200b\u7b2c\u200b \\(k\\) \u200b\u7c7b\u200b\u7684\u200b\u6743\u91cd\u200b\u5411\u91cf\u200b\uff1b</li> <li>\\(b_k\\) \u200b\u662f\u200b\u504f\u7f6e\u200b\uff1b</li> <li>\\(z_k\\) \u200b\u662f\u200b\u8be5\u7c7b\u200b\u522b\u7684\u200b\u201c\u200b\u6253\u5206\u200b\u201d\uff08logit\uff09\u3002</li> </ul>"},{"location":"machine/interview/#2-softmax","title":"2\ufe0f\u20e3 Softmax \u200b\u51fd\u6570\u200b\uff08\u200b\u5f52\u4e00\u5316\u200b\u6982\u7387\u200b\uff09","text":"<p>\u200b\u4e3a\u4e86\u200b\u5f97\u5230\u200b\u5404\u7c7b\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b\uff0c\u200b\u4f7f\u7528\u200b Softmax\uff1a $$ p_k = P(y=k \\mid x; \\theta) = \\frac{e^{z_k}}{\\sum_{j=1}^{K} e^{z_j}} $$</p>"},{"location":"machine/interview/#softmax","title":"\ud83d\udd0d Softmax \u200b\u6027\u8d28\u200b\uff1a","text":"<ol> <li>\u200b\u6bcf\u4e2a\u200b \\(p_k \\in (0,1)\\)\uff1b</li> <li>\\(\\sum_k p_k = 1\\)\u3002</li> </ol>"},{"location":"machine/interview/#cross-entropy-loss","title":"\ud83e\uddee \u200b\u4e09\u200b\u3001\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff08Cross-Entropy Loss\uff09","text":"<p>\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff08Cross-Entropy Loss\uff09\uff0c\u200b\u5b83\u200b\u662f\u200b\u6781\u5927\u200b\u4f3c\u7136\u200b\u4f30\u8ba1\u200b\u7684\u200b\u8d1f\u200b\u5bf9\u6570\u200b\u5f62\u5f0f\u200b\u3002</p>"},{"location":"machine/interview/#1_13","title":"1\ufe0f\u20e3 \u200b\u6781\u5927\u200b\u4f3c\u7136\u200b\u63a8\u5bfc\u200b\uff1a","text":"<p>\u200b\u7ed9\u5b9a\u200b\u6837\u672c\u200b \\((x^{(i)}, y^{(i)})\\)\uff0c\u200b\u5176\u200b\u6982\u7387\u200b\u4e3a\u200b\uff1a $$ P(y^{(i)} \\mid x^{(i)}; \\theta) = \\prod_{k=1}^K p_k^{\\mathbf{1}(y^{(i)}=k)} $$</p> <p>\u200b\u5176\u4e2d\u200b \\(\\mathbf{1}(\\cdot)\\) \u200b\u662f\u200b\u6307\u793a\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u6574\u4e2a\u200b\u8bad\u7ec3\u200b\u96c6\u4f3c\u7136\u200b\u4e3a\u200b\uff1a $$ L(\\theta) = \\prod_{i=1}^m P(y^{(i)} \\mid x^{(i)}; \\theta) $$</p> <p>\u200b\u53d6\u200b\u5bf9\u6570\u200b\uff08\u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b\uff09\uff1a $$ \\log L(\\theta) = \\sum_{i=1}^m \\sum_{k=1}^K \\mathbf{1}(y^{(i)}=k) \\log p_k^{(i)} $$</p> <p>\u200b\u8d1f\u53f7\u200b\u53d6\u8d1f\u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b\uff1a $$ J(\\theta) = - \\frac{1}{m} \\sum_{i=1}^m \\sum_{k=1}^K y_k^{(i)} \\log p_k^{(i)} $$</p> <p>\u200b\u8fd9\u200b\u5c31\u662f\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b\uff08Cross-Entropy Loss\uff09\u3002</p>"},{"location":"machine/interview/#2_11","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u89e3\u91ca\u200b\uff1a","text":"<ul> <li>\\(y_k^{(i)}\\) \u200b\u662f\u200b one-hot \u200b\u7f16\u7801\u200b\uff08\u200b\u4f8b\u5982\u200b\u7c7b\u522b\u200b 3 \u2192 \\([0, 0, 1, 0, 0]\\)\uff09\uff1b</li> <li>\u200b\u53ea\u200b\u5728\u200b\u771f\u5b9e\u200b\u7c7b\u522b\u200b\u5bf9\u5e94\u200b\u9879\u4e0a\u200b\u8d77\u200b\u4f5c\u7528\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b\uff1a \u200b\u5047\u8bbe\u200b 3 \u200b\u7c7b\u200b\u95ee\u9898\u200b\u4e2d\u200b\u771f\u5b9e\u200b\u7c7b\u522b\u200b\u4e3a\u200b 2\uff0c\u200b\u9884\u6d4b\u200b\u6982\u7387\u200b\u4e3a\u200b\uff1a $$ \\hat{p} = [0.2, 0.7, 0.1] $$ \u200b\u5219\u200b\u635f\u5931\u200b\u4e3a\u200b\uff1a $$ L = -\\log(0.7) = 0.357 $$</p>"},{"location":"machine/interview/#_79","title":"\ud83d\udcc8 \u200b\u56db\u200b\u3001\u200b\u68af\u5ea6\u200b\u63a8\u5bfc\u200b\uff08\u200b\u91cd\u8981\u200b\uff01\uff09","text":"<p>Softmax \u200b\u7684\u200b\u8f93\u51fa\u200b\uff1a $$ p_k = \\frac{e^{z_k}}{\\sum_{j} e^{z_j}} $$</p> <p>\u200b\u5bf9\u200b \\(z_k\\) \u200b\u6c42\u5bfc\u200b\uff1a</p> \\[ \\frac{\\partial p_k}{\\partial z_j} = \\begin{cases} p_k(1 - p_k), &amp; \\text{if } j=k \\\\ * p_k p_j, &amp; \\text{if } j \\ne k   \\end{cases} \\] <p>\u200b\u5bf9\u200b\u635f\u5931\u200b\u51fd\u6570\u200b \\(J\\)\uff1a $$ \\frac{\\partial J}{\\partial z_k} = p_k - y_k $$</p> <p>\u200b\u76f4\u89c2\u200b\u7406\u89e3\u200b\uff1a\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b \\(p_k\\) \u200b\u4e0e\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b \\(y_k\\) \u200b\u7684\u200b\u5dee\u503c\u200b\u5c31\u662f\u200b\u68af\u5ea6\u200b\u3002</p> <p>\u200b\u8fd9\u200b\u4e5f\u200b\u662f\u200b\u591a\u200b\u5206\u7c7b\u200b Softmax \u200b\u56de\u5f52\u200b\u8bad\u7ec3\u200b\u7684\u200b\u6838\u5fc3\u200b\u66f4\u65b0\u200b\u89c4\u5219\u200b\u3002</p> <pre><code>from sklearn.datasets import load_iris\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\n\n# \u200b\u52a0\u8f7d\u200b\u6570\u636e\u200b\u96c6\u200b\nX, y = load_iris(return_X_y=True)\n\n# \u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\u591a\u200b\u5206\u7c7b\u200b\nmodel = LogisticRegression(multi_class='multinomial', solver='lbfgs', max_iter=500)\nmodel.fit(X, y)\n\n# \u200b\u9884\u6d4b\u200b\ny_pred = model.predict(X)\n\nprint(classification_report(y, y_pred))\n</code></pre>"},{"location":"machine/interview/#_80","title":"\u5e38\u89c1\u200b\u7b97\u6cd5\u200b\uff08\u200b\u7528\u4e8e\u200b\u591a\u200b\u5206\u7c7b\u200b\uff09","text":"\u7b97\u6cd5\u200b \u200b\u601d\u8def\u200b \u200b\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b Softmax \u200b\u56de\u5f52\u200b\uff08\u200b\u591a\u9879\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\uff09 \u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b + Softmax \u200b\u7b80\u5355\u200b\u53ef\u200b\u89e3\u91ca\u200b \u200b\u7ebf\u6027\u200b\u53ef\u200b\u5206\u200b\u9650\u5236\u200b SVM\uff08\u200b\u591a\u200b\u5206\u7c7b\u200b\u6269\u5c55\u200b\uff09 \u200b\u4e00\u5bf9\u4e00\u200b / \u200b\u4e00\u5bf9\u200b\u591a\u200b \u200b\u8f83\u200b\u9ad8\u200b\u51c6\u786e\u7387\u200b \u200b\u8bad\u7ec3\u200b\u590d\u6742\u200b \u200b\u51b3\u7b56\u6811\u200b / \u200b\u968f\u673a\u200b\u68ee\u6797\u200b \u200b\u57fa\u4e8e\u200b\u5212\u5206\u200b\u89c4\u5219\u200b \u200b\u975e\u7ebf\u6027\u200b\u80fd\u529b\u200b\u5f3a\u200b \u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\u6709\u9650\u200b \u200b\u795e\u7ecf\u7f51\u7edc\u200b \u200b\u591a\u5c42\u200b\u975e\u7ebf\u6027\u200b\u6620\u5c04\u200b \u200b\u9ad8\u200b\u8868\u8fbe\u80fd\u529b\u200b \u200b\u9700\u200b\u5927\u91cf\u200b\u6570\u636e\u200b kNN \u200b\u57fa\u4e8e\u200b\u90bb\u5c45\u200b\u6295\u7968\u200b \u200b\u65e0\u9700\u200b\u8bad\u7ec3\u200b \u200b\u9884\u6d4b\u200b\u8017\u65f6"},{"location":"machine/interview/#54","title":"5.4 \u200b\u591a\u200b\u6807\u7b7e","text":"<p>\u200b\u5728\u200b\u591a\u200b\u6807\u7b7e\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u4e2d\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u6837\u672c\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u5c5e\u4e8e\u200b\u591a\u4e2a\u200b\u7c7b\u522b\u200b\u3002 \u200b\u4e0e\u200b\u4e4b\u200b\u76f8\u5bf9\u200b\u7684\u200b\uff0c\u200b\u591a\u200b\u5206\u7c7b\u200b\uff08Multi-Class\uff09\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u6837\u672c\u200b\u53ea\u200b\u5c5e\u4e8e\u200b\u4e00\u4e2a\u200b\u7c7b\u522b\u200b\u3002</p> <ul> <li> <p>\u200b\u4e8c\u200b\u5206\u7c7b\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u6837\u672c\u200b\u53ea\u200b\u5c5e\u4e8e\u200b\u4e24\u4e2a\u200b\u7c7b\u522b\u200b\u4e4b\u4e00\u200b   \u200b\u4f8b\u5982\u200b\uff1a\u200b\u5783\u573e\u90ae\u4ef6\u200b\u8bc6\u522b\u200b\uff08spam / not spam\uff09</p> </li> <li> <p>\u200b\u591a\u200b\u5206\u7c7b\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u6837\u672c\u200b\u5c5e\u4e8e\u200b\u591a\u4e2a\u200b\u7c7b\u522b\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b   \u200b\u4f8b\u5982\u200b\uff1a\u200b\u624b\u5199\u200b\u6570\u5b57\u200b\u8bc6\u522b\u200b\uff080~9\uff09</p> </li> <li> <p>\u200b\u591a\u200b\u6807\u7b7e\u200b\u5206\u7c7b\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u6837\u672c\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u5c5e\u4e8e\u200b\u591a\u4e2a\u200b\u7c7b\u522b\u200b   \u200b\u4f8b\u5982\u200b\uff1a   \u200b\u4e00\u5f20\u200b\u56fe\u7247\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u5305\u542b\u200b\uff1a</p> <ul> <li>\u201c\u200b\u732b\u200b\u201d \u2705</li> <li>\u201c\u200b\u72d7\u200b\u201d \u2705</li> <li>\u201c\u200b\u8f66\u200b\u201d \u274c </li> <li>\u200b\u56e0\u6b64\u200b\u6807\u7b7e\u200b\u4e3a\u200b <code>[1, 1, 0]</code></li> </ul> </li> </ul>"},{"location":"machine/interview/#_81","title":"\u4e8c\u200b\u3001\u200b\u6570\u5b66\u200b\u5b9a\u4e49","text":"<p>\u200b\u5047\u8bbe\u200b\uff1a</p> <ul> <li>\u200b\u6837\u672c\u200b\u7279\u5f81\u200b\u4e3a\u200b \\(x_i \\in \\mathbb{R}^d\\)</li> <li>\u200b\u6807\u7b7e\u200b\u96c6\u5408\u200b\u4e3a\u200b \\(Y = {1, 2, \\dots, K}\\)</li> <li>\u200b\u6bcf\u4e2a\u200b\u6837\u672c\u200b\u7684\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\u4e3a\u200b \\(y_i \\subseteq Y\\)</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u591a\u200b\u6807\u7b7e\u200b\u95ee\u9898\u200b\uff0c\u200b\u6211\u4eec\u200b\u901a\u5e38\u200b\u5c06\u200b\u6807\u7b7e\u200b\u8868\u793a\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b \\(K\\) \u200b\u7684\u200b\u4e8c\u8fdb\u5236\u200b\u5411\u91cf\u200b\uff1a</p> \\[ \\mathbf{y}*i = [y*{i1}, y_{i2}, \\dots, y_{iK}] \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> \\[ y_{ik} = \\begin{cases} 1, &amp; \\text{\u200b\u5982\u679c\u200b\u6837\u672c\u200b } i \\text{ \u200b\u5c5e\u4e8e\u200b\u7c7b\u522b\u200b } k \\ 0, &amp; \\text{\u200b\u5426\u5219\u200b} \\end{cases} \\] <p>\u200b\u6a21\u578b\u200b\u8f93\u51fa\u200b\u4e3a\u200b\uff1a</p> \\[ \\hat{\\mathbf{y}}*i = [\\hat{y}*{i1}, \\hat{y}*{i2}, \\dots, \\hat{y}*{iK}] \\] <p>\u200b\u5176\u4e2d\u200b \\(\\hat{y}_{ik} \\in [0,1]\\) \u200b\u8868\u793a\u200b\u5c5e\u4e8e\u200b\u6807\u7b7e\u200b \\(k\\) \u200b\u7684\u200b\u6982\u7387\u200b\u3002</p>"},{"location":"machine/interview/#_82","title":"\u4e09\u200b\u3001\u200b\u5e38\u89c1\u200b\u5efa\u6a21\u200b\u65b9\u6cd5","text":""},{"location":"machine/interview/#1-binary-relevancebr","title":"1. Binary Relevance\uff08BR\uff09","text":"<p>\u200b\u6700\u200b\u5e38\u89c1\u200b\u3001\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff1a \u200b\u628a\u200b\u591a\u200b\u6807\u7b7e\u200b\u95ee\u9898\u200b\u62c6\u6210\u200b K \u200b\u4e2a\u200b\u72ec\u7acb\u200b\u7684\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u6bcf\u4e2a\u200b\u6807\u7b7e\u200b\u72ec\u7acb\u200b\u5efa\u6a21\u200b\uff1a $$ P(y_k=1|x) = \\sigma(w_k^\\top x) $$</p> <p>\u200b\u5176\u4e2d\u200b \\(\\sigma(z)=\\frac{1}{1+e^{-z}}\\) \u200b\u662f\u200b sigmoid \u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u7b80\u5355\u200b\u3001\u200b\u6613\u200b\u5b9e\u73b0\u200b</li> <li>\u200b\u53ef\u4ee5\u200b\u5e76\u884c\u200b\u8bad\u7ec3\u200b</li> </ul> <p>\u200b\u7f3a\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u5ffd\u7565\u200b\u4e86\u200b\u6807\u7b7e\u200b\u4e4b\u95f4\u200b\u7684\u200b\u76f8\u5173\u6027\u200b\uff08\u200b\u4f8b\u5982\u200b\u201c\u200b\u732b\u200b\u201d\u200b\u548c\u200b\u201c\u200b\u52a8\u7269\u200b\u201d\u200b\u5f3a\u200b\u76f8\u5173\u200b\uff09</li> </ul>"},{"location":"machine/interview/#2-classifier-chaincc","title":"2. Classifier Chain\uff08CC\uff09","text":"<p>\u200b\u901a\u8fc7\u200b\u5c06\u200b\u524d\u9762\u200b\u6807\u7b7e\u200b\u7684\u200b\u9884\u6d4b\u200b\u4f5c\u4e3a\u200b\u540e\u7eed\u200b\u6a21\u578b\u200b\u7684\u200b\u8f93\u5165\u200b\uff0c\u200b\u6355\u6349\u200b\u6807\u7b7e\u200b\u95f4\u200b\u4f9d\u8d56\u200b\u3002</p> <p>\u200b\u5047\u8bbe\u200b\u6807\u7b7e\u200b\u987a\u5e8f\u200b\u4e3a\u200b \\((y_1, y_2, ..., y_K)\\)\uff1a</p> \\[ P(y_1, ..., y_K | x) = \\prod_{k=1}^K P(y_k | x, y_1, ..., y_{k-1}) \\] <p>\u200b\u5373\u200b\u7b2c\u200b \\(k\\) \u200b\u4e2a\u200b\u5206\u7c7b\u5668\u200b\u4e0d\u4ec5\u200b\u4f7f\u7528\u200b\u7279\u5f81\u200b \\(x\\)\uff0c\u200b\u8fd8\u200b\u4f7f\u7528\u200b\u4e4b\u524d\u200b\u7684\u200b\u6807\u7b7e\u200b\u9884\u6d4b\u200b\u3002</p>"},{"location":"machine/interview/#3-label-powersetlp","title":"3. Label Powerset\uff08LP\uff09","text":"<p>\u200b\u628a\u200b\u6240\u6709\u200b\u6807\u7b7e\u200b\u7ec4\u5408\u200b\u89c6\u4e3a\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u201c\u200b\u590d\u5408\u200b\u7c7b\u200b\u201d\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff1a</p> <ul> <li>\u200b\u539f\u59cb\u200b\u6807\u7b7e\u200b\u7a7a\u95f4\u200b\uff1a<code>{A, B, C}</code></li> <li>\u200b\u53ef\u80fd\u200b\u7684\u200b\u7ec4\u5408\u200b\uff1a<code>{}</code>, <code>{A}</code>, <code>{B}</code>, <code>{C}</code>, <code>{A,B}</code>, <code>{A,C}</code>, <code>{B,C}</code>, <code>{A,B,C}</code></li> </ul> <p>\u2192 \u200b\u53d8\u6210\u200b\u4e00\u4e2a\u591a\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u8003\u8651\u200b\u4e86\u200b\u6807\u7b7e\u200b\u76f8\u5173\u6027\u200b \u200b\u7f3a\u70b9\u200b\uff1a\u200b\u5f53\u200b\u6807\u7b7e\u200b\u6570\u91cf\u200b\u591a\u65f6\u200b\uff0c\u200b\u7ec4\u5408\u200b\u7206\u70b8\u200b\u3002</p>"},{"location":"machine/interview/#loss-function_1","title":"\u56db\u200b\u3001\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff08Loss Function\uff09","text":""},{"location":"machine/interview/#1-binary-cross-entropysigmoid-bce","title":"1. Binary Cross-Entropy\uff08Sigmoid + BCE\uff09","text":"<p>\u200b\u6700\u200b\u5e38\u7528\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u3002\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u6807\u7b7e\u200b\u72ec\u7acb\u200b\u4f7f\u7528\u200b sigmoid\uff0c\u200b\u518d\u200b\u8ba1\u7b97\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u5355\u4e2a\u200b\u6837\u672c\u200b\uff1a $$ L_i = -\\sum_{k=1}^{K} \\Big[ y_{ik} \\log(\\hat{y}{ik}) + (1 - y{ik}) \\log(1 - \\hat{y}_{ik}) \\Big] $$</p> <p>\u200b\u6574\u4f53\u200b\u635f\u5931\u200b\u4e3a\u200b\uff1a $$ L = \\frac{1}{N} \\sum_{i=1}^{N} L_i $$</p> <p>Python \u200b\u793a\u4f8b\u200b\uff08PyTorch\uff09\uff1a</p> <pre><code>import torch\nimport torch.nn as nn\n\ncriterion = nn.BCEWithLogitsLoss()  # \u200b\u5185\u90e8\u200b\u81ea\u5e26\u200b sigmoid\nloss = criterion(preds, labels)\n</code></pre>"},{"location":"machine/interview/#2-focal-loss","title":"2. Focal Loss\uff08\u200b\u5904\u7406\u200b\u7c7b\u522b\u200b\u4e0d\u200b\u5e73\u8861\u200b\uff09","text":"<p>\u200b\u5f53\u200b\u6b63\u8d1f\u200b\u6837\u672c\u200b\u6781\u5ea6\u200b\u4e0d\u200b\u5e73\u8861\u200b\u65f6\u200b\u4f7f\u7528\u200b\uff1a $$ L = - \\sum_k \\alpha (1 - \\hat{y}_k)^\\gamma y_k \\log(\\hat{y}_k) $$</p> <ul> <li>\\(\\alpha\\)\uff1a\u200b\u5e73\u8861\u200b\u6b63\u8d1f\u200b\u6837\u672c\u200b</li> <li>\\(\\gamma\\)\uff1a\u200b\u805a\u7126\u200b\u96be\u200b\u5206\u7c7b\u200b\u6837\u672c\u200b</li> </ul>"},{"location":"machine/interview/#evaluation-metrics","title":"\u4e94\u200b\u3001\u200b\u8bc4\u4f30\u200b\u6307\u6807\u200b\uff08Evaluation Metrics\uff09","text":"<p>\u200b\u5bf9\u4e8e\u200b\u591a\u200b\u6807\u7b7e\u200b\u4efb\u52a1\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u6309\u200b\u6807\u7b7e\u200b\u7ef4\u5ea6\u200b\u6216\u200b\u6837\u672c\u200b\u7ef4\u5ea6\u200b\u8ba1\u7b97\u200b\u6307\u6807\u200b\u3002</p>"},{"location":"machine/interview/#1-hamming-loss","title":"1. Hamming Loss","text":"<p>\u200b\u8861\u91cf\u200b\u9519\u8bef\u200b\u9884\u6d4b\u200b\u7684\u200b\u6bd4\u4f8b\u200b\uff1a $$ \\text{Hamming Loss} = \\frac{1}{N \\times K} \\sum_{i=1}^N \\sum_{k=1}^K I[y_{ik} \\neq \\hat{y}_{ik}] $$</p> <p>\u200b\u8d8a\u5c0f\u8d8a\u200b\u597d\u200b\u3002</p>"},{"location":"machine/interview/#2-subset-accuracyexact-match-ratio","title":"2. Subset Accuracy\uff08Exact Match Ratio\uff09","text":"<p>\u200b\u6240\u6709\u200b\u6807\u7b7e\u200b\u5b8c\u5168\u200b\u5339\u914d\u200b\u624d\u200b\u7b97\u200b\u6b63\u786e\u200b\uff1a $$ \\text{Subset Accuracy} = \\frac{1}{N} \\sum_{i=1}^N I[\\mathbf{y}_i = \\hat{\\mathbf{y}}_i] $$</p> <p>\u200b\u8fc7\u4e8e\u200b\u4e25\u683c\u200b\uff0c\u200b\u5e38\u200b\u4e0d\u200b\u63a8\u8350\u200b\u5355\u72ec\u200b\u4f7f\u7528\u200b\u3002</p>"},{"location":"machine/interview/#3-precision-recall-f1-scoremicro-macro","title":"3. Precision / Recall / F1-score\uff08Micro / Macro\uff09","text":"<ul> <li>Micro-F1\uff1a\u200b\u5168\u5c40\u200b\u7edf\u8ba1\u200b TP, FP, FN   \u200b\u66f4\u200b\u5173\u6ce8\u200b\u9891\u7e41\u200b\u6807\u7b7e\u200b\u7684\u200b\u6574\u4f53\u200b\u8868\u73b0\u200b\u3002</li> <li>Macro-F1\uff1a\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u6807\u7b7e\u200b\u5355\u72ec\u200b\u8ba1\u7b97\u200b F1\uff0c\u200b\u518d\u200b\u5e73\u5747\u200b\u3002   \u200b\u66f4\u200b\u5173\u6ce8\u200b\u7a00\u6709\u200b\u6807\u7b7e\u200b\u3002</li> </ul> <p>Python\uff1a</p> <pre><code>from sklearn.metrics import f1_score\nf1_micro = f1_score(y_true, y_pred, average='micro')\nf1_macro = f1_score(y_true, y_pred, average='macro')\n</code></pre> <pre><code>from sklearn.datasets import make_multilabel_classification\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.multioutput import MultiOutputClassifier\nfrom sklearn.metrics import f1_score\n\n# 1. \u200b\u6784\u9020\u200b\u6570\u636e\u200b\nX, y = make_multilabel_classification(n_samples=2000, n_features=10, n_classes=5, random_state=42)\n\n# 2. \u200b\u5212\u5206\u200b\u6570\u636e\u200b\u96c6\u200b\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# 3. \u200b\u6a21\u578b\u200b\nmodel = MultiOutputClassifier(LogisticRegression())\nmodel.fit(X_train, y_train)\n\n# 4. \u200b\u9884\u6d4b\u200b\u4e0e\u200b\u8bc4\u4f30\u200b\ny_pred = model.predict(X_test)\nprint(\"Micro-F1:\", f1_score(y_test, y_pred, average='micro'))\nprint(\"Macro-F1:\", f1_score(y_test, y_pred, average='macro'))\n</code></pre>"},{"location":"machine/interview/#_83","title":"\u516d\u200b\u3001\u200b\u56de\u5f52","text":""},{"location":"machine/interview/#61","title":"6.1 \u200b\u635f\u5931\u200b\u51fd\u6570","text":""},{"location":"machine/interview/#1_14","title":"1. \u200b\u603b\u4f53\u200b\u80cc\u666f\u200b\u4e0e\u200b\u7b26\u53f7\u200b\u7ea6\u5b9a","text":"<ul> <li>\u200b\u8bad\u7ec3\u6837\u672c\u200b \\({(x^{(i)}, y^{(i)})}_{i=1}^{m}\\)\u3002</li> <li>\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b\u4e3a\u200b \\(\\hat{y}^{(i)} = f_\\theta(x^{(i)})\\)\uff0c\u200b\u53c2\u6570\u200b\u4e3a\u200b \\(\\theta\\)\u3002</li> <li>\u200b\u5355\u200b\u6837\u672c\u200b\u635f\u5931\u200b\u8bb0\u200b\u4e3a\u200b \\(L\\big(y^{(i)},\\hat{y}^{(i)}\\big)\\)\uff0c\u200b\u603b\u4f53\u200b\uff08\u200b\u5e73\u5747\u200b\uff09\u200b\u635f\u5931\u200b\u4e3a\u200b   $$   J(\\theta)=\\frac{1}{m}\\sum_{i=1}^m L\\big(y^{(i)},\\hat{y}^{(i)}\\big).   $$</li> </ul> <p>\u200b\u6211\u4eec\u200b\u5173\u5fc3\u200b\u7684\u200b\u5e38\u89c1\u200b\u56de\u5f52\u200b\u635f\u5931\u200b\uff1aMSE\u3001MAE\u3001Huber\u3001Log-cosh\u3001Quantile Loss\uff08\u200b\u5206\u200b\u4f4d\u6570\u200b\u635f\u5931\u200b\uff09\u3001Poisson/NLL \u200b\u7b49\u200b\u3002</p>"},{"location":"machine/interview/#2-mse-mean-squared-error","title":"2. \u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE / Mean Squared Error\uff09","text":""},{"location":"machine/interview/#_84","title":"\u5b9a\u4e49","text":"\\[ L_{\\text{MSE}}(y,\\hat{y}) = (y - \\hat{y})^2. \\] <p>\u200b\u5e73\u5747\u200b\uff08\u200b\u6837\u672c\u200b\uff09\u200b\u635f\u5931\u200b\uff1a</p> \\[ J_{\\text{MSE}}(\\theta)=\\frac{1}{m}\\sum_{i=1}^m (y^{(i)} - \\hat{y}^{(i)})^2. \\]"},{"location":"machine/interview/#_85","title":"\u542b\u4e49","text":"<p>\u200b\u5bf9\u200b\u9884\u6d4b\u200b\u8bef\u5dee\u200b\u5e73\u65b9\u200b\u60e9\u7f5a\u200b\uff0c\u200b\u8f83\u5927\u200b\u8bef\u5dee\u200b\u88ab\u200b\u653e\u5927\u200b\uff08\u200b\u5bf9\u200b\u79bb\u7fa4\u200b\u70b9\u200b\u654f\u611f\u200b\uff09\u3002MSE \u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u5047\u8bbe\u200b\u8bef\u5dee\u200b\u670d\u4ece\u200b\u5747\u503c\u200b\u4e3a\u200b 0\u3001\u200b\u65b9\u5dee\u200b\u4e3a\u200b\u5e38\u6570\u200b\u7684\u200b\u9ad8\u65af\u200b\u566a\u58f0\u200b\uff0c\u200b\u4f7f\u7528\u200b\u6781\u5927\u200b\u4f3c\u7136\u200b\u53ef\u200b\u5bfc\u51fa\u200b MSE\u3002</p>"},{"location":"machine/interview/#haty","title":"\u68af\u5ea6\u200b\uff08\u200b\u5bf9\u5355\u200b\u6837\u672c\u200b\u7684\u200b\u9884\u6d4b\u200b \\(\\hat{y}\\)\uff09","text":"<p>\u200b\u5bf9\u200b \\(\\hat{y}\\)\uff1a $$ \\frac{\\partial L_{\\text{MSE}}}{\\partial \\hat{y}} = -2 (y - \\hat{y}). $$ \u200b\u82e5\u200b\u5bf9\u200b\u53c2\u6570\u200b \\(\\theta\\)\uff0c\u200b\u94fe\u5f0f\u6cd5\u5219\u200b\uff1a $$ \\nabla_\\theta L_{\\text{MSE}} = -2 (y - \\hat{y}) \\nabla_\\theta \\hat{y}. $$</p>"},{"location":"machine/interview/#_86","title":"\u6570\u503c\u200b\u4f8b\u5b50\u200b\uff08\u200b\u9010\u4f4d\u200b\u7b97\u200b\uff09","text":"<p>\u200b\u53d6\u5355\u200b\u6837\u672c\u200b \\(y=3.0,\\ \\hat{y}=2.2\\)\uff1a</p> <ul> <li>\u200b\u8bef\u5dee\u200b \\(e = y - \\hat{y} = 3.0 - 2.2 = 0.8\\)\u3002</li> <li>MSE \u200b\u635f\u5931\u200b \\(L = e^2 = 0.8^2 = 0.64\\)\u3002</li> <li>\u200b\u68af\u5ea6\u200b w.r.t. \\(\\hat{y}\\)\uff1a\\(\\partial L/\\partial \\hat{y} = -2 \\times 0.8 = -1.6\\)\u3002</li> </ul> <p>\uff08\u200b\u6ce8\u610f\u200b\uff1a\u200b\u6570\u503c\u200b\u8ba1\u7b97\u200b\u90fd\u200b\u9010\u4f4d\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u786e\u4fdd\u200b\u51c6\u786e\u200b\u3002\uff09</p>"},{"location":"machine/interview/#_87","title":"\u4f18\u7f3a\u70b9","text":"<ul> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u89e3\u6790\u200b\u7b80\u5355\u200b\u3001\u200b\u53ef\u5bfc\u200b\u3001\u200b\u5e38\u7528\u200b\u3002</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u5bf9\u5927\u200b\u8bef\u5dee\u200b\uff08\u200b\u79bb\u7fa4\u200b\u70b9\u200b\uff09\u200b\u654f\u611f\u200b\u3002</li> </ul>"},{"location":"machine/interview/#3-mae-mean-absolute-error","title":"3. \u200b\u5e73\u5747\u200b\u7edd\u5bf9\u8bef\u5dee\u200b\uff08MAE / Mean Absolute Error\uff09","text":""},{"location":"machine/interview/#_88","title":"\u5b9a\u4e49","text":"\\[ L_{\\text{MAE}}(y,\\hat{y}) = |y - \\hat{y}|. \\] <p>\u200b\u5e73\u5747\u200b\u635f\u5931\u200b\uff1a</p> \\[ J_{\\text{MAE}}(\\theta)=\\frac{1}{m}\\sum_{i=1}^m |y^{(i)} - \\hat{y}^{(i)}|. \\]"},{"location":"machine/interview/#_89","title":"\u542b\u4e49","text":"<p>\u200b\u5bf9\u200b\u8bef\u5dee\u200b\u6309\u200b\u7edd\u5bf9\u503c\u200b\u60e9\u7f5a\u200b\uff0c\u200b\u9c81\u68d2\u6027\u200b\u6bd4\u200b MSE \u200b\u66f4\u5f3a\u200b\uff08\u200b\u5bf9\u200b\u79bb\u7fa4\u200b\u70b9\u200b\u4e0d\u200b\u90a3\u4e48\u200b\u654f\u611f\u200b\uff09\u3002\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u5047\u8bbe\u200b\u8bef\u5dee\u200b\u670d\u4ece\u200b\u62c9\u666e\u62c9\u65af\u200b\u5206\u5e03\u200b\u3002</p>"},{"location":"machine/interview/#_90","title":"\u68af\u5ea6\u200b\uff08\u200b\u5bf9\u5355\u200b\u6837\u672c\u200b\uff09","text":"<p>\u200b\u5bf9\u200b \\(\\hat{y}\\) \u200b\u7684\u200b\u6b21\u5bfc\u200b/\u200b\u7b26\u53f7\u200b\u51fd\u6570\u200b\uff08\\(y\\neq\\hat{y}\\)\uff09\uff1a $$ \\frac{\\partial L_{\\text{MAE}}}{\\partial \\hat{y}} = \\begin{cases} -1, &amp; \\hat{y} &lt; y,\\ +1, &amp; \\hat{y} &gt; y. \\end{cases} $$ \u200b\u5728\u200b \\(\\hat{y}=y\\) \u200b\u5904\u200b\u4e0d\u53ef\u200b\u5bfc\u200b\uff0c\u200b\u7528\u200b\u6b21\u68af\u5ea6\u200b \\(\\in[-1,1]\\)\u3002</p>"},{"location":"machine/interview/#_91","title":"\u6570\u503c\u200b\u4f8b\u5b50","text":"<p>\\(y=3.0,\\ \\hat{y}=2.2\\)\uff1a</p> <ul> <li>\u200b\u8bef\u5dee\u200b \\(e=0.8\\)\uff1b</li> <li>MAE \\(=|0.8|=0.8\\)\uff1b</li> <li>\u200b\u68af\u5ea6\u200b\u5bf9\u200b \\(\\hat{y}\\)\uff1a\u200b\u56e0\u4e3a\u200b \\(\\hat{y}&lt;y\\)\uff0c\\(\\partial L/\\partial \\hat{y} = -1\\)\u3002</li> </ul>"},{"location":"machine/interview/#_92","title":"\u4f18\u7f3a\u70b9","text":"<ul> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u5bf9\u200b\u79bb\u7fa4\u200b\u70b9\u200b\u66f4\u9c81\u68d2\u200b\u3002</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u4e0d\u53ef\u200b\u5bfc\u70b9\u200b\u5bfc\u81f4\u200b\u7528\u200b\u68af\u5ea6\u200b\u6cd5\u65f6\u200b\u6536\u655b\u200b\u884c\u4e3a\u200b\u4e0d\u5982\u200b MSE \u200b\u5e73\u6ed1\u200b\uff1b\u200b\u5728\u200b\u5f88\u591a\u200b\u6846\u67b6\u200b\u4e2d\u200b\u7528\u200b\u6b21\u68af\u5ea6\u200b\u5904\u7406\u200b\u5373\u53ef\u200b\u3002</li> </ul>"},{"location":"machine/interview/#4-huber-mae-mse","title":"4. Huber \u200b\u635f\u5931\u200b\uff08\u200b\u5e73\u6ed1\u200b\u7684\u200b MAE / MSE \u200b\u6df7\u5408\u200b\uff09","text":""},{"location":"machine/interview/#delta0","title":"\u5b9a\u4e49\u200b\uff08\u200b\u5e26\u200b\u9608\u503c\u200b \\(\\delta&gt;0\\)\uff09","text":"<p>\u200b\u5355\u200b\u6837\u672c\u200b\uff1a $$ L_{\\text{Huber}}(y,\\hat{y}) = \\begin{cases} \\frac{1}{2}(y-\\hat{y})^2, &amp; \\text{if } |y-\\hat{y}|\\le \\delta,[6pt] \\delta\\big(|y-\\hat{y}| - \\tfrac{1}{2}\\delta\\big), &amp; \\text{if } |y-\\hat{y}|&gt;\\delta. \\end{cases} $$</p>"},{"location":"machine/interview/#_93","title":"\u542b\u4e49","text":"<p>\u200b\u5728\u200b\u5c0f\u200b\u8bef\u5dee\u200b\u533a\u57df\u200b\u4f7f\u7528\u200b\u4e8c\u6b21\u200b\uff08MSE\uff09\uff0c\u200b\u5728\u200b\u5927\u200b\u8bef\u5dee\u200b\uff08\u200b\u79bb\u7fa4\u200b\u70b9\u200b\uff09\u200b\u533a\u57df\u200b\u4f7f\u7528\u200b\u7ebf\u6027\u200b\uff08MAE\uff09\u200b\u60e9\u7f5a\u200b\uff0c\u200b\u56e0\u6b64\u200b\u517c\u987e\u200b\u5e73\u6ed1\u200b\u6027\u200b\u4e0e\u200b\u9c81\u68d2\u6027\u200b\u3002\\(\\delta\\) \u200b\u63a7\u5236\u200b\u4ece\u200b\u4e8c\u6b21\u200b\u5230\u200b\u7ebf\u6027\u200b\u7684\u200b\u5207\u6362\u200b\u70b9\u200b\u3002</p>"},{"location":"machine/interview/#haty_1","title":"\u68af\u5ea6\u200b\uff08\u200b\u5bf9\u200b \\(\\hat{y}\\)\uff09","text":"\\[ \\frac{\\partial L_{\\text{Huber}}}{\\partial \\hat{y}} = \\begin{cases} -(y-\\hat{y}), &amp; |y-\\hat{y}|\\le \\delta,[4pt] -\\delta,\\mathrm{sign}(y-\\hat{y}), &amp; |y-\\hat{y}|&gt;\\delta. \\end{cases} \\]"},{"location":"machine/interview/#delta1","title":"\u6570\u503c\u200b\u4f8b\u5b50\u200b\uff08\u200b\u53d6\u200b \\(\\delta=1\\)\uff09","text":"<ul> <li> <p>\u200b\u82e5\u200b \\(y=3.0,\\ \\hat{y}=2.2\\)\uff0c\u200b\u8bef\u5dee\u200b \\(0.8\\le1\\)\uff1a</p> </li> <li> <p>\u200b\u635f\u5931\u200b \\(=\\tfrac{1}{2}\\cdot 0.8^2 = 0.5 \\times 0.64 = 0.32\\)\uff1b</p> </li> <li>\u200b\u68af\u5ea6\u200b \\(=-(3.0-2.2) = -0.8\\)\u3002</li> <li> <p>\u200b\u82e5\u200b \\(y=10,\\ \\hat{y}=2\\)\uff0c\u200b\u8bef\u5dee\u200b \\(8&gt;1\\)\uff1a</p> </li> <li> <p>\u200b\u635f\u5931\u200b \\(=1\\cdot(8 - 0.5\\cdot1)=8 - 0.5 = 7.5\\)\uff1b</p> </li> <li>\u200b\u68af\u5ea6\u200b \\(=-1\\cdot \\mathrm{sign}(8) = -1\\)\uff08\u200b\u5373\u200b\u5bf9\u200b \\(\\hat{y}\\) \u200b\u4e3a\u200b -1\uff09\u3002</li> </ul>"},{"location":"machine/interview/#_94","title":"\u4f18\u7f3a\u70b9","text":"<ul> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u5e73\u6ed1\u200b\u4e14\u9c81\u68d2\u200b\uff0c\u200b\u5e38\u7528\u200b\u5728\u200b\u56de\u5f52\u200b\u548c\u200b RL\uff08\u200b\u5956\u52b1\u200b\uff09\u200b\u4e2d\u200b\u3002</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u9700\u200b\u9009\u62e9\u200b\u8d85\u53c2\u200b \\(\\delta\\)\u3002</li> </ul>"},{"location":"machine/interview/#5-log-cosh","title":"5. Log-cosh \u200b\u635f\u5931","text":""},{"location":"machine/interview/#_95","title":"\u5b9a\u4e49","text":"\\[ L_{\\text{log-cosh}}(y,\\hat{y}) = \\log\\big(\\cosh(y - \\hat{y})\\big). \\]"},{"location":"machine/interview/#_96","title":"\u542b\u4e49","text":"<p>\u200b\u5bf9\u200b\u5c0f\u200b\u8bef\u5dee\u200b\u8fd1\u4f3c\u200b \\(\\tfrac{1}{2}(y-\\hat{y})^2\\)\uff0c\u200b\u5bf9\u5927\u200b\u8bef\u5dee\u200b\u8fd1\u4f3c\u200b \\(|y-\\hat{y}| - \\log 2\\)\uff0c\u200b\u56e0\u6b64\u200b\u884c\u4e3a\u200b\u4ecb\u4e8e\u200b MSE \u200b\u4e0e\u200b MAE \u200b\u4e4b\u95f4\u200b\u4e14\u200b\u5e73\u6ed1\u200b\u53ef\u5bfc\u200b\u3002</p>"},{"location":"machine/interview/#_97","title":"\u68af\u5ea6","text":"\\[ \\frac{\\partial L_{\\text{log-cosh}}}{\\partial \\hat{y}} = -\\tanh(y - \\hat{y}). \\]"},{"location":"machine/interview/#_98","title":"\u6570\u503c\u200b\u4f8b\u5b50","text":"<p>\\(y=3.0,\\ \\hat{y}=2.2\\)\uff0c\u200b\u8bef\u5dee\u200b \\(0.8\\)\uff1a</p> <ul> <li>\\(\\cosh(0.8) = \\tfrac{e^{0.8}+e^{-0.8}}{2}\\approx \\tfrac{2.22554+0.44933}{2}=1.337435\\)\uff08\u200b\u9010\u4f4d\u200b\u8ba1\u7b97\u200b\uff1a\\(e^{0.8}\\approx2.2255409, e^{-0.8}\\approx0.449329\\)\uff0c\u200b\u548c\u7ea6\u200b \\(2.67487\\), \u200b\u9664\u4ee5\u200b 2 \u200b\u5f97\u200b \\(1.337435\\)\uff09\u3002</li> <li>\\(\\log\\cosh(0.8)\\approx \\log 1.337435 \\approx 0.290\\)\uff08\u200b\u8fd1\u4f3c\u200b\uff09\u3002</li> <li>\u200b\u68af\u5ea6\u200b \\(= -\\tanh(0.8)\\approx -0.664\\)\uff08\\(\\tanh(0.8)\\approx0.664\\)\uff09\u3002</li> </ul> <p>\uff08\u200b\u6570\u503c\u200b\u7528\u200b\u8fd1\u4f3c\u503c\u200b\u8868\u793a\u200b\uff0c\u200b\u4fdd\u7559\u200b\u793a\u4f8b\u200b\u8bf4\u660e\u200b\u76ee\u7684\u200b\u3002\uff09</p>"},{"location":"machine/interview/#6-quantile-loss","title":"6. Quantile Loss\uff08\u200b\u5206\u200b\u4f4d\u6570\u200b\u635f\u5931\u200b\uff09 \u2014 \u200b\u7528\u4e8e\u200b\u9884\u6d4b\u200b\u5206\u200b\u4f4d\u6570\u200b\uff08\u200b\u5982\u200b\u4e0a\u200b\u3001\u200b\u4e0b\u754c\u200b\uff09","text":""},{"location":"machine/interview/#tauin01","title":"\u5b9a\u4e49\u200b\uff08\u200b\u5206\u200b\u4f4d\u6570\u200b \\(\\tau\\in(0,1)\\)\uff09","text":"<p>\u200b\u5355\u200b\u6837\u672c\u200b\uff1a</p> \\[ L_{\\tau}(y,\\hat{y}) = \\begin{cases} \\tau (y - \\hat{y}), &amp; \\text{if } y \\ge \\hat{y},\\\\[4pt] (1-\\tau)(\\hat{y} - y), &amp; \\text{if } y &lt; \\hat{y}. \\end{cases} \\]"},{"location":"machine/interview/#_99","title":"\u542b\u4e49","text":"<p>\u200b\u7528\u4e8e\u200b\u5b66\u4e60\u200b\u6761\u4ef6\u200b\u5206\u200b\u4f4d\u6570\u200b\uff08\u200b\u4f8b\u5982\u200b\u4e2d\u4f4d\u6570\u200b \\(\\tau=0.5\\) \u200b\u5bf9\u5e94\u200b MAE \u200b\u7684\u200b\u4e2d\u4f4d\u6570\u200b\u89e3\u200b\uff09\u3002\u200b\u5728\u200b\u9884\u6d4b\u200b\u4e0d\u200b\u5bf9\u79f0\u200b\u98ce\u9669\u200b\uff08\u200b\u5bf9\u8fc7\u200b\u9ad8\u200b\u6216\u200b\u8fc7\u200b\u4f4e\u200b\u8bef\u5dee\u200b\u60e9\u7f5a\u200b\u4e0d\u540c\u200b\uff09\u200b\u65f6\u200b\u975e\u5e38\u200b\u6709\u7528\u200b\u3002</p>"},{"location":"machine/interview/#tau09","title":"\u6570\u503c\u200b\u4f8b\u5b50\u200b\uff08\\(\\tau=0.9\\)\uff09","text":"<p>\\(y=10,\\ \\hat{y}=8\\)\uff1a\\(y\\ge\\hat{y}\\)\uff0c\u200b\u635f\u5931\u200b \\(=0.9*(10-8)=0.9*2=1.8\\)\u3002</p> <p>\\(y=6,\\ \\hat{y}=8\\)\uff1a\\(y&lt;\\hat{y}\\)\uff0c\u200b\u635f\u5931\u200b \\(=(1-0.9)*(8-6)=0.1*2=0.2\\)\u3002</p> <p>\u200b\u8bf4\u660e\u200b\u9ad8\u4f30\u200b\u8bef\u5dee\u200b\uff08\\(\\hat{y}&gt;y\\)\uff09\u200b\u88ab\u200b\u8f7b\u7f5a\u200b\uff0c\u200b\u4f4e\u4f30\u200b\u8bef\u5dee\u200b\uff08\\(\\hat{y}&lt;y\\)\uff09\u200b\u88ab\u200b\u91cd\u7f5a\u200b\uff08\u200b\u6216\u200b\u53cd\u4e4b\u200b\uff0c\u200b\u53d6\u51b3\u4e8e\u200b \\(\\tau\\)\uff09\u3002</p>"},{"location":"machine/interview/#7-poisson-gamma-nll","title":"7. Poisson / Gamma / NLL\uff08\u200b\u9002\u7528\u200b\u4e8e\u200b\u8ba1\u6570\u200b\u6216\u200b\u7279\u5b9a\u200b\u566a\u58f0\u200b\u6a21\u578b\u200b\uff09","text":""},{"location":"machine/interview/#poisson-nll","title":"Poisson NLL\uff08\u200b\u8ba1\u6570\u200b\u578b\u200b\u8f93\u51fa\u200b\uff09","text":"<p>\u200b\u82e5\u200b\u5047\u8bbe\u200b \\(y\\sim\\text{Poisson}(\\lambda=\\hat{y})\\)\uff0c\u200b\u8d1f\u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b\uff08\u200b\u5355\u200b\u6837\u672c\u200b\uff09\uff1a $$ L_{\\text{Poisson}}(y,\\hat{y}) = \\hat{y} - y\\log \\hat{y} + \\log(y!). $$ \uff08\u200b\u5e38\u200b\u7701\u53bb\u200b\u4e0e\u200b \\(\\hat{y}\\) \u200b\u65e0\u5173\u200b\u7684\u200b \\(\\log(y!)\\) \u200b\u9879\u200b\u7528\u4e8e\u200b\u4f18\u5316\u200b\uff09</p> <p>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a\u200b\u8ba1\u6570\u200b\u6570\u636e\u200b\uff08\u200b\u4e8b\u4ef6\u200b\u6b21\u6570\u200b\uff09\u3002</p>"},{"location":"machine/interview/#8_2","title":"8. \u200b\u635f\u5931\u200b\u9009\u62e9\u200b\u7684\u200b\u6807\u51c6\u200b\u4e0e\u200b\u5b9e\u8df5\u200b\u5efa\u8bae","text":"<ul> <li>\u200b\u82e5\u200b\u8bef\u5dee\u200b\u5448\u200b\u9ad8\u65af\u200b\u566a\u58f0\u200b\u4e14\u200b\u4f60\u200b\u5e0c\u671b\u200b\u5bf9\u5927\u200b\u8bef\u5dee\u200b\u66f4\u200b\u654f\u611f\u200b\uff1a\u200b\u9009\u62e9\u200b MSE\u3002</li> <li>\u200b\u82e5\u200b\u6570\u636e\u200b\u542b\u200b\u79bb\u7fa4\u200b\u70b9\u200b\u6216\u200b\u5e0c\u671b\u200b\u9c81\u68d2\u200b\uff1a\u200b\u9009\u62e9\u200b MAE \u200b\u6216\u200b Huber\uff08\u200b\u9996\u9009\u200b\uff09 \u200b\u6216\u200b Log-cosh\u3002</li> <li>\u200b\u82e5\u200b\u9700\u8981\u200b\u9884\u6d4b\u200b\u5206\u200b\u4f4d\u6570\u200b\u6216\u200b\u4e0d\u200b\u5bf9\u79f0\u200b\u635f\u5931\u200b\uff1a\u200b\u7528\u200b Quantile Loss\u3002</li> <li>\u200b\u82e5\u200b\u8f93\u51fa\u200b\u662f\u200b\u8ba1\u6570\u200b\u578b\u200b\uff08\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\uff09\uff1a\u200b\u7528\u200b Poisson NLL\u3002</li> </ul> <p>\u200b\u540c\u65f6\u200b\u5efa\u8bae\u200b\uff1a</p> <ul> <li>\u200b\u5728\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u4e2d\u200b\uff0c\u200b\u82e5\u200b\u4f7f\u7528\u200b MSE \u200b\u4e14\u200b\u8f93\u51fa\u200b\u5c3a\u5ea6\u200b\u5927\u200b\uff0c\u200b\u914d\u5408\u200b\u5408\u9002\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\u548c\u200b\u6807\u51c6\u5316\u200b\uff08target scaling\uff09\uff1b</li> <li>\u200b\u82e5\u200b\u4f7f\u7528\u200b MAE/Hinge \u200b\u7c7b\u578b\u200b\u4e0d\u53ef\u200b\u5bfc\u70b9\u200b\u7684\u200b\u635f\u5931\u200b\uff0c\u200b\u53ef\u7528\u200b\u4f18\u5316\u200b\u5668\u200b\uff08Adam\uff09\u200b\u914d\u5408\u200b subgradient \u200b\u6216\u200b\u4f7f\u7528\u200b Huber \u200b\u4ee3\u66ff\u200b\u3002</li> </ul>"},{"location":"machine/interview/#9","title":"9. \u200b\u6b63\u5219\u200b\u5316\u200b\u4e0e\u200b\u635f\u5931\u200b\u7ed3\u5408","text":"<p>\u200b\u901a\u5e38\u200b\u5728\u200b\u6700\u5c0f\u5316\u200b\u635f\u5931\u200b\u65f6\u4f1a\u200b\u52a0\u200b\u6b63\u5219\u200b\u5316\u9879\u200b\uff08\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b\uff09\uff1a $$ J(\\theta) = \\frac{1}{m}\\sum_{i=1}^m L(y^{(i)},\\hat{y}^{(i)}) + \\lambda R(\\theta), $$ \u200b\u5e38\u89c1\u200b \\(R(\\theta)=|\\theta|_2^2\\)\uff08L2\uff09\u200b\u6216\u200b \\(|\\theta|_1\\)\uff08L1\uff09\u3002</p>"},{"location":"machine/interview/#10","title":"10. \u200b\u8bc4\u4f30\u200b\u6307\u6807\u200b\uff08\u200b\u4e0e\u200b\u635f\u5931\u200b\u4e0d\u540c\u200b\uff0c\u200b\u5e38\u7528\u200b\u4e8e\u200b\u6a21\u578b\u200b\u8bc4\u4f30\u200b\uff09","text":"<ul> <li>MSE\uff1a\\(\\text{MSE}=\\frac{1}{m}\\sum (y-\\hat{y})^2\\)\u3002</li> <li>RMSE\uff08\u200b\u5747\u200b\u65b9\u6839\u200b\u8bef\u5dee\u200b\uff09\uff1a\\(\\text{RMSE}=\\sqrt{\\text{MSE}}\\)\uff0c\u200b\u4e0e\u200b\u539f\u59cb\u200b\u5355\u4f4d\u200b\u4e00\u81f4\u200b\u3002</li> <li>MAE\uff1a\\(\\frac{1}{m}\\sum |y-\\hat{y}|\\)\u3002</li> <li>R\u00b2\uff08\u200b\u51b3\u5b9a\u7cfb\u6570\u200b\uff09\uff1a   $$   R^2 = 1 - \\frac{\\sum_i (y_i - \\hat{y}_i)^2}{\\sum_i (y_i - \\bar{y})^2},   $$   \u200b\u5176\u4e2d\u200b \\(\\bar{y}=\\frac{1}{m}\\sum_i y_i\\)\u3002\\(R^2\\) \u200b\u8d8a\u200b\u63a5\u8fd1\u200b 1 \u200b\u8d8a\u200b\u597d\u200b\uff1b\u200b\u8d1f\u503c\u200b\u8868\u793a\u200b\u6a21\u578b\u200b\u6027\u80fd\u6bd4\u200b\u5e38\u6570\u200b\u9884\u6d4b\u200b\u5dee\u200b\u3002</li> </ul>"},{"location":"machine/interview/#11-python-numpy-pytorch","title":"11. Python \u200b\u5b9e\u73b0\u200b\u793a\u4f8b\u200b\uff08NumPy / PyTorch\uff09","text":""},{"location":"machine/interview/#numpy-mse-mae-huber","title":"NumPy\uff1a\u200b\u8ba1\u7b97\u200b MSE / MAE / Huber","text":"<pre><code>import numpy as np\n\ny = np.array([3.0, 2.0, 7.0])\ny_hat = np.array([2.2, 2.5, 6.0])\nm = len(y)\n\n# MSE\nmse = np.mean((y - y_hat)**2)  # (0.64 + 0.25 + 1.0)/3 = 1.89/3 = 0.63\n# \u200b\u9010\u4f4d\u200b\u8ba1\u7b97\u200b: 0.8^2=0.64, (-0.5)^2=0.25, 1.0^2=1.0 -&gt; sum 1.89\n\n# MAE\nmae = np.mean(np.abs(y - y_hat))  # (0.8 + 0.5 + 1.0)/3 = 2.3/3 \u2248 0.7666667\n\n# Huber (delta=1.0)\ndelta = 1.0\ndiff = np.abs(y - y_hat)\nhuber = np.where(diff &lt;= delta, 0.5 * diff**2, delta * (diff - 0.5 * delta))\nhuber_mean = np.mean(huber)\n# \u200b\u9010\u4f4d\u200b: diff = [0.8,0.5,1.0] -&gt; huber = [0.5*0.64=0.32, 0.5*0.25=0.125, 0.5*1.0=0.5] -&gt; sum=0.945 -&gt; mean=0.315\n</code></pre> <p>\u200b\u6ce8\u200b\uff1a\u200b\u4e0a\u9762\u200b MSE \u200b\u7684\u200b\u9010\u4f4d\u200b\u548c\u200b\u8ba1\u7b97\u200b\u5df2\u200b\u660e\u786e\u200b\u5217\u51fa\u200b\uff0c\u200b\u786e\u4fdd\u200b\u6570\u503c\u200b\u51c6\u786e\u200b\u3002</p>"},{"location":"machine/interview/#pytorch","title":"PyTorch\uff1a\u200b\u5e38\u7528\u200b\u635f\u5931","text":"<pre><code>import torch\nimport torch.nn as nn\n\ny = torch.tensor([3.0, 2.0, 7.0])\ny_hat = torch.tensor([2.2, 2.5, 6.0])\n\nmse_loss = nn.MSELoss()\nmae_loss = nn.L1Loss()\nhuber_loss = nn.SmoothL1Loss()  # PyTorch \u200b\u7684\u200b SmoothL1 \u200b\u76f8\u5f53\u4e8e\u200b Huber\uff08\u200b\u9ed8\u8ba4\u200b beta=1.0\uff09\n\nprint(mse_loss(y_hat, y))   # \u2248 0.63\nprint(mae_loss(y_hat, y))   # \u2248 0.7667\nprint(huber_loss(y_hat, y)) # \u2248 0.315\n</code></pre>"},{"location":"machine/interview/#12_1","title":"12. \u200b\u6570\u503c\u200b\u7a33\u5b9a\u6027\u200b\u4e0e\u200b\u5b9e\u8df5\u200b\u7ec6\u8282","text":"<ul> <li>\u200b\u5bf9\u4e8e\u200b MSE\uff0c\u200b\u82e5\u200b\u76ee\u6807\u503c\u200b\u8303\u56f4\u200b\u5f88\u5927\u200b\uff0c\u200b\u68af\u5ea6\u200b\u53ef\u80fd\u200b\u5f88\u5927\u200b\uff0c\u200b\u9700\u8c03\u200b\u5c0f\u200b\u5b66\u4e60\u200b\u7387\u200b\u6216\u200b\u7f29\u653e\u200b target\u3002</li> <li>\u200b\u5bf9\u200b MAE/Hinge \u200b\u7c7b\u578b\u200b\u7684\u200b\u4e0d\u53ef\u200b\u5bfc\u70b9\u200b\uff0c\u200b\u7528\u200b\u6b21\u68af\u5ea6\u200b\u6216\u200b\u5e73\u6ed1\u200b\u8fd1\u4f3c\u200b\uff08Huber / Log-cosh\uff09\u3002</li> <li>\u200b\u5bf9\u4e8e\u200b Poisson / NLL\uff0c\u200b\u9884\u6d4b\u503c\u200b \\(\\hat{y}\\) \u200b\u5fc5\u987b\u200b\u662f\u200b\u6b63\u200b\uff08\u200b\u53ef\u7528\u200b softplus \u200b\u6fc0\u6d3b\u200b \\(\\log(1+e^z)\\)\uff09\uff0c\u200b\u907f\u514d\u200b \\(\\log 0\\)\u3002</li> <li>\u200b\u5728\u200b\u6df1\u5ea6\u200b\u7f51\u7edc\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>BCEWithLogitsLoss</code>\u3001<code>CrossEntropyLoss</code> \u200b\u7b49\u200b\u5185\u7f6e\u200b\u7a33\u5b9a\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u907f\u514d\u200b\u624b\u5199\u200b\u6570\u503c\u200b\u4e0d\u200b\u7a33\u200b\u3002</li> </ul>"},{"location":"machine/interview/#62","title":"6.2 \u200b\u8bc4\u4f30\u200b\u6307\u6807","text":""},{"location":"machine/interview/#_100","title":"\ud83c\udf1f \u200b\u4e00\u200b\u3001\u200b\u5e38\u89c1\u200b\u7684\u200b\u56de\u5f52\u200b\u8bc4\u4f30\u200b\u6307\u6807\u200b\u6982\u89c8","text":"\u6307\u6807\u200b\u540d\u79f0\u200b \u200b\u82f1\u6587\u540d\u79f0\u200b \u200b\u6570\u5b66\u516c\u5f0f\u200b \u200b\u542b\u4e49\u200b \u200b\u5e73\u5747\u200b\u7edd\u5bf9\u8bef\u5dee\u200b MAE (Mean Absolute Error) $\\displaystyle MAE = \\frac{1}{n} \\sum_{i=1}^{n} y_i - \\hat{y}_i $ \u200b\u5e73\u5747\u200b\u7edd\u5bf9\u200b\u504f\u5dee\u200b\uff0c\u200b\u8861\u91cf\u200b\u5e73\u5747\u8bef\u5dee\u200b\u5927\u5c0f\u200b \u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b MSE (Mean Squared Error) \\(\\displaystyle MSE = \\frac{1}{n} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2\\) \u200b\u5f3a\u8c03\u200b\u5927\u200b\u8bef\u5dee\u200b\u7684\u200b\u60e9\u7f5a\u200b \u200b\u5747\u200b\u65b9\u6839\u200b\u8bef\u5dee\u200b RMSE (Root Mean Squared Error) \\(\\displaystyle RMSE = \\sqrt{MSE}\\) \u200b\u4e0e\u200b\u539f\u200b\u76ee\u6807\u200b\u5355\u4f4d\u200b\u4e00\u81f4\u200b\uff0c\u200b\u66f4\u200b\u76f4\u89c2\u200b \u200b\u5e73\u5747\u200b\u7edd\u5bf9\u200b\u767e\u5206\u6bd4\u200b\u8bef\u5dee\u200b MAPE (Mean Absolute Percentage Error) $\\displaystyle MAPE = \\frac{100%}{n} \\sum_{i=1}^{n} \\left \\frac{y_i - \\hat{y}_i}{y_i} \\right $ \u200b\u8861\u91cf\u200b\u76f8\u5bf9\u8bef\u5dee\u200b\uff08\u200b\u9002\u7528\u200b\u4e8e\u200b\u6bd4\u4f8b\u200b\u95ee\u9898\u200b\uff09 \u200b\u5224\u5b9a\u200b\u7cfb\u6570\u200b \\(R^2\\) (R-squared) \\(\\displaystyle R^2 = 1 - \\frac{\\sum (y_i - \\hat{y}_i)^2}{\\sum (y_i - \\bar{y})^2}\\) \u200b\u8861\u91cf\u200b\u6a21\u578b\u200b\u5bf9\u65b9\u200b\u5dee\u200b\u7684\u200b\u89e3\u91ca\u200b\u80fd\u529b\u200b\uff08\u200b\u62df\u5408\u200b\u4f18\u5ea6\u200b\uff09"},{"location":"machine/interview/#_101","title":"\ud83e\uddee \u200b\u4e8c\u200b\u3001\u200b\u5404\u200b\u6307\u6807\u200b\u6570\u5b66\u539f\u7406\u200b\u4e0e\u200b\u89e3\u91ca","text":""},{"location":"machine/interview/#1-mae","title":"1\ufe0f\u20e3 \u200b\u5e73\u5747\u200b\u7edd\u5bf9\u8bef\u5dee\u200b\uff08MAE\uff09","text":"\\[ MAE = \\frac{1}{n} \\sum_{i=1}^{n} |y_i - \\hat{y}_i| \\] <ul> <li>\u200b\u542b\u4e49\u200b\uff1a\u200b\u6240\u6709\u200b\u9884\u6d4b\u200b\u8bef\u5dee\u200b\u7684\u200b\u7edd\u5bf9\u503c\u200b\u5e73\u5747\u503c\u200b\u3002</li> <li> <p>\u200b\u7279\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u200b\u5f02\u5e38\u200b\u503c\u200b\uff08outlier\uff09\u200b\u4e0d\u200b\u654f\u611f\u200b\u3002</li> <li>\u200b\u7269\u7406\u200b\u610f\u4e49\u200b\u660e\u786e\u200b\uff1a\u200b\u5e73\u5747\u200b\u9884\u6d4b\u200b\u8bef\u5dee\u200b\u662f\u200b\u591a\u5c11\u200b\u4e2a\u200b\u5355\u4f4d\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u4e3e\u4f8b\u200b\uff1a</p> <ul> <li>\u200b\u82e5\u200b\u771f\u5b9e\u200b\u503c\u4e3a\u200b \\([3, 5, 7]\\)\uff0c\u200b\u9884\u6d4b\u503c\u200b\u4e3a\u200b \\([2, 6, 8]\\)\uff1a $$ MAE = \\frac{|3-2| + |5-6| + |7-8|}{3} = 1 $$</li> </ul> </li> </ul>"},{"location":"machine/interview/#2-mse","title":"2\ufe0f\u20e3 \u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE\uff09","text":"\\[ MSE = \\frac{1}{n} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2 \\] <ul> <li>\u200b\u542b\u4e49\u200b\uff1a\u200b\u8bef\u5dee\u200b\u5e73\u65b9\u200b\u7684\u200b\u5e73\u5747\u200b\u3002</li> <li> <p>\u200b\u7279\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u5e73\u65b9\u200b\u9879\u4f1a\u200b\u653e\u5927\u200b\u5927\u200b\u8bef\u5dee\u200b\u7684\u200b\u5f71\u54cd\u200b\uff08\u200b\u5bf9\u200b\u5f02\u5e38\u200b\u503c\u200b\u654f\u611f\u200b\uff09\u3002</li> <li>\u200b\u4f18\u70b9\u200b\u662f\u200b\u5149\u6ed1\u200b\u53ef\u5bfc\u200b\uff0c\u200b\u4fbf\u4e8e\u200b\u4f18\u5316\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u4e3e\u4f8b\u200b\uff1a   $$   MSE = \\frac{(3-2)^2 + (5-6)^2 + (7-8)^2}{3} = 1   $$</p> </li> </ul>"},{"location":"machine/interview/#3-rmse","title":"3\ufe0f\u20e3 \u200b\u5747\u200b\u65b9\u6839\u200b\u8bef\u5dee\u200b\uff08RMSE\uff09","text":"\\[ RMSE = \\sqrt{MSE} \\] <ul> <li>\u200b\u542b\u4e49\u200b\uff1aMSE \u200b\u7684\u200b\u5e73\u65b9\u6839\u200b\uff0c\u200b\u4f7f\u200b\u5355\u4f4d\u200b\u4e0e\u200b\u539f\u200b\u6570\u636e\u200b\u4e00\u81f4\u200b\u3002</li> <li> <p>\u200b\u7279\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u6570\u503c\u200b\u66f4\u200b\u76f4\u89c2\u200b\uff08\u200b\u5355\u4f4d\u200b\u4e0e\u200b \\(y\\) \u200b\u76f8\u540c\u200b\uff09\u3002</li> <li>\u200b\u540c\u6837\u200b\u5bf9\u200b\u5f02\u5e38\u200b\u503c\u200b\u654f\u611f\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u4e3e\u4f8b\u200b\uff1a   $$   RMSE = \\sqrt{1} = 1   $$</p> </li> </ul>"},{"location":"machine/interview/#4-mape","title":"4\ufe0f\u20e3 \u200b\u5e73\u5747\u200b\u7edd\u5bf9\u200b\u767e\u5206\u6bd4\u200b\u8bef\u5dee\u200b\uff08MAPE\uff09","text":"\\[ MAPE = \\frac{100%}{n} \\sum_{i=1}^{n} \\left| \\frac{y_i - \\hat{y}_i}{y_i} \\right| \\] <ul> <li>\u200b\u542b\u4e49\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u9884\u6d4b\u503c\u200b\u76f8\u5bf9\u200b\u771f\u5b9e\u200b\u503c\u200b\u7684\u200b\u767e\u5206\u6bd4\u200b\u8bef\u5dee\u200b\u5e73\u5747\u200b\u3002</li> <li> <p>\u200b\u7279\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u9002\u5408\u200b \u200b\u91cf\u7eb2\u200b\u4e0d\u540c\u200b \u200b\u7684\u200b\u6570\u636e\u200b\u6bd4\u8f83\u200b\u3002</li> <li>\u200b\u4f46\u200b\u5f53\u200b \\(y_i = 0\\) \u200b\u65f6\u200b\u65e0\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u9700\u6ce8\u610f\u200b\u3002</li> <li> <p>\u200b\u4e3e\u4f8b\u200b\uff1a</p> </li> <li> <p>\\(y = [100, 200, 300]\\), \\(\\hat{y} = [110, 190, 310]\\)\uff1a $$ MAPE = \\frac{1}{3}(0.1 + 0.05 + 0.0333) \\times 100% = 6.1% $$</p> </li> </ul> </li> </ul>"},{"location":"machine/interview/#5-r2","title":"5\ufe0f\u20e3 \u200b\u5224\u5b9a\u200b\u7cfb\u6570\u200b\uff08\\(R^2\\)\uff09","text":"\\[ R^2 = 1 - \\frac{SS_{res}}{SS_{tot}} = 1 - \\frac{\\sum (y_i - \\hat{y}_i)^2}{\\sum (y_i - \\bar{y})^2} \\] <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ul> <li>\\(SS_{res}\\)\uff1a\u200b\u6b8b\u5dee\u200b\u5e73\u65b9\u548c\u200b\uff08residual sum of squares\uff09</li> <li>\\(SS_{tot}\\)\uff1a\u200b\u603b\u200b\u5e73\u65b9\u548c\u200b\uff08total sum of squares\uff09</li> <li>\\(\\bar{y}\\)\uff1a\u200b\u6837\u672c\u200b\u771f\u5b9e\u200b\u503c\u200b\u7684\u200b\u5e73\u5747\u6570\u200b</li> </ul> <p>\u200b\u542b\u4e49\u200b\uff1a</p> <ul> <li>\u200b\u8861\u91cf\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b\u89e3\u91ca\u200b\u4e86\u200b\u76ee\u6807\u200b\u53d8\u91cf\u200b\u65b9\u5dee\u200b\u7684\u200b\u6bd4\u4f8b\u200b\u3002</li> <li>\\(R^2\\) \u200b\u7684\u200b\u8303\u56f4\u200b\u901a\u5e38\u200b\u5728\u200b \\([0, 1]\\)\uff08\u200b\u4f46\u200b\u5728\u200b\u67d0\u4e9b\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u53ef\u200b\u5c0f\u4e8e\u200b 0\uff09\u3002</li> <li>\u200b\u503c\u8d8a\u200b\u5927\u200b\u8868\u793a\u200b\u6a21\u578b\u200b\u62df\u5408\u200b\u6548\u679c\u200b\u8d8a\u200b\u597d\u200b\u3002</li> </ul> <p>\u200b\u4e3e\u4f8b\u200b\uff1a</p> <ul> <li>\u200b\u82e5\u200b\u6a21\u578b\u200b\u9884\u6d4b\u503c\u200b\u5b8c\u5168\u6b63\u786e\u200b\uff0c\\(\\sum (y_i - \\hat{y}_i)^2 = 0\\)\uff0c\u200b\u5219\u200b \\(R^2 = 1\\)\uff1b</li> <li>\u200b\u82e5\u200b\u6a21\u578b\u200b\u4e0e\u200b\u5747\u503c\u200b\u9884\u6d4b\u200b\u65e0\u5dee\u522b\u200b\uff0c\u200b\u5219\u200b \\(R^2 = 0\\)\u3002</li> </ul>"},{"location":"machine/interview/#_102","title":"\ud83d\udca1 \u200b\u4e09\u200b\u3001\u200b\u5404\u200b\u6307\u6807\u200b\u5bf9\u6bd4\u200b\u603b\u7ed3","text":"\u6307\u6807\u200b \u200b\u662f\u5426\u200b\u5bf9\u200b\u5f02\u5e38\u200b\u503c\u200b\u654f\u611f\u200b \u200b\u662f\u5426\u200b\u53ef\u5bfc\u200b \u200b\u662f\u5426\u200b\u6709\u200b\u7269\u7406\u200b\u610f\u4e49\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b MAE \u200b\u5426\u200b \u200b\u5426\u200b\uff08\u200b\u4e0d\u53ef\u200b\u5bfc\u70b9\u200b\uff09 \u200b\u6709\u200b \u200b\u4e00\u822c\u200b\u8bef\u5dee\u200b\u5206\u6790\u200b MSE \u200b\u662f\u200b \u200b\u662f\u200b \u200b\u6709\u200b \u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\u4f18\u5316\u200b RMSE \u200b\u662f\u200b \u200b\u662f\u200b \u200b\u5f3a\u200b \u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\u89e3\u91ca\u200b MAPE \u200b\u662f\u200b \u200b\u5426\u200b \u200b\u5f3a\u200b \u200b\u6bd4\u4f8b\u200b\u578b\u200b\u6570\u636e\u200b \\(R^2\\) \u200b\u5426\u200b \u200b\u5426\u200b \u200b\u76f8\u5bf9\u200b\u89e3\u91ca\u200b\u80fd\u529b\u200b \u200b\u6a21\u578b\u200b\u6574\u4f53\u200b\u62df\u5408\u200b\u8d28\u91cf"},{"location":"machine/interview/#sklearn","title":"\ud83e\udde0 \u200b\u56db\u200b\u3001\u200b\u4ee3\u7801\u200b\u5b9e\u6218\u200b\uff08\u200b\u4ee5\u200b <code>sklearn</code> \u200b\u4e3a\u4f8b\u200b\uff09","text":"<pre><code>from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\nimport numpy as np\n\n# \u200b\u5047\u8bbe\u200b\u771f\u5b9e\u200b\u503c\u200b\u4e0e\u200b\u9884\u6d4b\u503c\u200b\ny_true = np.array([3, 5, 7])\ny_pred = np.array([2, 6, 8])\n\nmae = mean_absolute_error(y_true, y_pred)\nmse = mean_squared_error(y_true, y_pred)\nrmse = np.sqrt(mse)\nr2 = r2_score(y_true, y_pred)\n\nprint(f\"MAE = {mae:.3f}\")\nprint(f\"MSE = {mse:.3f}\")\nprint(f\"RMSE = {rmse:.3f}\")\nprint(f\"R\u00b2 = {r2:.3f}\")\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>MAE = 1.000\nMSE = 1.000\nRMSE = 1.000\nR\u00b2 = 0.875\n</code></pre>"},{"location":"machine/interview/#_103","title":"\ud83d\udcd8 \u200b\u4e94\u200b\u3001\u200b\u603b\u7ed3","text":"<ul> <li>MAE\uff1a\u200b\u5e73\u5747\u8bef\u5dee\u200b\uff08\u200b\u7a33\u5065\u200b\u3001\u200b\u76f4\u89c2\u200b\uff09</li> <li>MSE / RMSE\uff1a\u200b\u5e73\u65b9\u200b\u60e9\u7f5a\u200b\uff08\u200b\u504f\u91cd\u200b\u5927\u200b\u8bef\u5dee\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u5e38\u7528\u200b\uff09</li> <li>MAPE\uff1a\u200b\u767e\u5206\u6bd4\u200b\u8bef\u5dee\u200b\uff08\u200b\u9002\u5408\u200b\u6bd4\u4f8b\u200b\u578b\u200b\u95ee\u9898\u200b\uff09</li> <li>\\(R^2\\)\uff1a\u200b\u89e3\u91ca\u200b\u65b9\u5dee\u200b\u6bd4\u4f8b\u200b\uff08\u200b\u62df\u5408\u200b\u4f18\u5ea6\u200b\u6307\u6807\u200b\uff09</li> </ul>"},{"location":"machine/interview/#_104","title":"\u4e03\u200b\u3001\u200b\u7279\u5f81\u200b\u5de5\u7a0b","text":""},{"location":"machine/interview/#71","title":"7.1 \u200b\u7279\u5f81\u9009\u62e9","text":""},{"location":"machine/interview/#_105","title":"\u4e00\u200b\u3001\u200b\u4ec0\u4e48\u200b\u662f\u200b\u7279\u5f81\u9009\u62e9","text":"<p>\u200b\u7279\u5f81\u9009\u62e9\u200b\u662f\u200b\u6307\u200b\u5728\u200b \u200b\u539f\u59cb\u200b\u7279\u5f81\u200b\u96c6\u5408\u200b\u4e2d\u200b\u9009\u62e9\u200b\u5bf9\u6a21\u578b\u200b\u6700\u200b\u6709\u7528\u200b\u7684\u200b\u5b50\u96c6\u200b\uff0c\u200b\u5220\u9664\u200b\u5197\u4f59\u200b\u6216\u200b\u65e0\u5173\u200b\u7279\u5f81\u200b\uff0c\u200b\u4ece\u800c\u200b\u63d0\u9ad8\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\u3001\u200b\u51cf\u5c11\u200b\u8fc7\u200b\u62df\u5408\u200b\u3001\u200b\u964d\u4f4e\u200b\u8ba1\u7b97\u200b\u590d\u6742\u5ea6\u200b\u548c\u200b\u63d0\u9ad8\u200b\u6a21\u578b\u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\u3002</p> <p>\u200b\u5047\u8bbe\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u200b\u96c6\u200b \\(X \\in \\mathbb{R}^{n \\times d}\\)\uff0c\\(n\\) \u200b\u4e3a\u200b\u6837\u672c\u6570\u200b\uff0c\\(d\\) \u200b\u4e3a\u200b\u7279\u5f81\u200b\u6570\u200b\u3002</li> <li>\u200b\u6807\u7b7e\u200b\u4e3a\u200b \\(y \\in \\mathbb{R}^n\\)\uff08\u200b\u56de\u5f52\u200b\uff09\u200b\u6216\u200b \\(y \\in {0,1}^n\\)\uff08\u200b\u5206\u7c7b\u200b\uff09\u3002</li> <li>\u200b\u7279\u5f81\u9009\u62e9\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u627e\u5230\u200b\u5b50\u96c6\u200b \\(S \\subseteq {1,2,\\dots,d}\\)\uff0c\u200b\u4f7f\u5f97\u200b \\(X_S\\) \u200b\u5bf9\u200b\u9884\u6d4b\u200b \\(y\\) \u200b\u6709\u200b\u6700\u5927\u200b\u8d21\u732e\u200b\u3002</li> </ul>"},{"location":"machine/interview/#_106","title":"\u4e8c\u200b\u3001\u200b\u7279\u5f81\u9009\u62e9\u200b\u7684\u200b\u4e09\u5927\u200b\u7c7b\u522b","text":""},{"location":"machine/interview/#1-filter","title":"1\ufe0f\u20e3 Filter\uff08\u200b\u8fc7\u6ee4\u6cd5\u200b\uff09","text":"<ul> <li>\u200b\u539f\u7406\u200b\uff1a\u200b\u72ec\u7acb\u200b\u4e8e\u200b\u6a21\u578b\u200b\uff0c\u200b\u57fa\u4e8e\u200b \u200b\u7279\u5f81\u200b\u4e0e\u200b\u6807\u7b7e\u200b\u7684\u200b\u7edf\u8ba1\u200b\u5173\u7cfb\u200b \u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\u548c\u200b\u7b5b\u9009\u200b\u3002</li> <li>\u200b\u65b9\u6cd5\u200b\uff1a</li> </ul>"},{"location":"machine/interview/#1-variance-threshold","title":"(1) \u200b\u65b9\u5dee\u200b\u9009\u62e9\u200b\uff08Variance Threshold\uff09","text":"<ul> <li>\u200b\u539f\u7406\u200b\uff1a\u200b\u5982\u679c\u200b\u7279\u5f81\u200b\u7684\u200b\u65b9\u5dee\u200b\u5f88\u5c0f\u200b\uff0c\u200b\u8bf4\u660e\u200b\u8be5\u200b\u7279\u5f81\u200b\u51e0\u4e4e\u200b\u4e0d\u200b\u53d8\u5316\u200b\uff0c\u200b\u5bf9\u200b\u9884\u6d4b\u200b\u65e0\u7528\u200b\u3002</li> <li>\u200b\u516c\u5f0f\u200b\uff1a   $$   Var(x_j) = \\frac{1}{n} \\sum_{i=1}^n (x_{ij} - \\bar{x}_j)^2   $$</li> <li>\u200b\u9608\u503c\u200b\u8bbe\u5b9a\u200b \\(\\theta\\)\uff0c\u200b\u82e5\u200b \\(Var(x_j) &lt; \\theta\\)\uff0c\u200b\u5219\u200b\u5220\u9664\u200b\u7279\u5f81\u200b \\(x_j\\)\u3002</li> </ul>"},{"location":"machine/interview/#2-correlation","title":"(2) \u200b\u76f8\u5173\u7cfb\u6570\u200b\uff08Correlation\uff09","text":"<ul> <li>Pearson \u200b\u76f8\u5173\u7cfb\u6570\u200b\uff08\u200b\u8fde\u7eed\u200b\u7279\u5f81\u200b\uff09\uff1a</li> </ul> \\[   \\rho_{x_j,y} = \\frac{Cov(x_j,y)}{\\sigma_{x_j}\\sigma_y} = \\frac{\\sum_i (x_{ij}-\\bar{x}*j)(y_i-\\bar{y})}{\\sqrt{\\sum_i (x*{ij}-\\bar{x}_j)^2}\\sqrt{\\sum_i (y_i-\\bar{y})^2}} \\] <ul> <li>\u200b\u9ad8\u200b\u76f8\u5173\u200b\uff08\u200b\u7edd\u5bf9\u503c\u200b\u5927\u200b\uff09\u200b\u4fdd\u7559\u200b\uff0c\u200b\u4f4e\u200b\u76f8\u5173\u200b\u5254\u9664\u200b\u3002</li> <li>\u200b\u5bf9\u200b\u5206\u7c7b\u200b\u53ef\u7528\u200b \u200b\u5361\u65b9\u200b\u68c0\u9a8c\u200b\uff1a   $$   \\chi^2 = \\sum_{i,j} \\frac{(O_{ij}-E_{ij})^2}{E_{ij}}   $$</li> <li>\u200b\u5bf9\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u53d8\u91cf\u200b\u6216\u200b\u5206\u7c7b\u200b\u7279\u5f81\u200b\u5e38\u7528\u200b Mutual Information\uff08\u200b\u4e92\u4fe1\u606f\u200b\uff09\uff1a   $$   I(X;Y) = \\sum_{x\\in X}\\sum_{y\\in Y} p(x,y)\\log \\frac{p(x,y)}{p(x)p(y)}   $$</li> </ul>"},{"location":"machine/interview/#2-wrapper","title":"2\ufe0f\u20e3 Wrapper\uff08\u200b\u5305\u88f9\u200b\u6cd5\u200b\uff09","text":"<ul> <li>\u200b\u539f\u7406\u200b\uff1a\u200b\u4f7f\u7528\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\u4f5c\u4e3a\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\uff0c\u200b\u641c\u7d22\u200b\u7279\u5f81\u200b\u5b50\u96c6\u200b\u3002</li> <li> <p>\u200b\u7279\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u8017\u65f6\u200b\u8f83\u200b Filter \u200b\u65b9\u6cd5\u200b\u9ad8\u200b\uff0c\u200b\u4f46\u200b\u901a\u5e38\u200b\u6548\u679c\u200b\u66f4\u597d\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u65b9\u6cd5\u200b\uff1a</p> </li> </ul>"},{"location":"machine/interview/#1-rfe-recursive-feature-elimination","title":"(1) \u200b\u9012\u5f52\u200b\u7279\u5f81\u200b\u6d88\u9664\u200b\uff08RFE, Recursive Feature Elimination\uff09","text":"<ul> <li> <p>\u200b\u8fc7\u7a0b\u200b\uff1a</p> <ol> <li>\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u6216\u200bSVM\uff09</li> <li>\u200b\u6839\u636e\u200b\u7279\u5f81\u200b\u91cd\u8981\u6027\u200b\uff08\u200b\u6743\u91cd\u200b \\(w_j\\) \u200b\u6216\u200b\u7279\u5f81\u200b\u7cfb\u6570\u200b\uff09\u200b\u5220\u9664\u200b\u6700\u200b\u4e0d\u200b\u91cd\u8981\u200b\u7684\u200b\u7279\u5f81\u200b</li> <li>\u200b\u91cd\u590d\u200b\u8fed\u4ee3\u200b\u76f4\u5230\u200b\u8fbe\u5230\u200b\u671f\u671b\u200b\u7279\u5f81\u200b\u6570\u91cf\u200b</li> </ol> </li> <li> <p>\u200b\u516c\u5f0f\u200b\uff08\u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b\u91cd\u8981\u6027\u200b\u793a\u4f8b\u200b\uff09\uff1a   $$   w_j = | \\theta_j |   $$</p> </li> </ul>"},{"location":"machine/interview/#2-stepwise-selection","title":"(2) \u200b\u524d\u5411\u200b/\u200b\u540e\u200b\u5411\u200b/\u200b\u9010\u6b65\u200b\u9009\u62e9\u200b\uff08Stepwise Selection\uff09","text":"<ul> <li>\u200b\u524d\u5411\u200b\u9009\u62e9\u200b\uff1a\u200b\u4ece\u200b\u7a7a\u96c6\u200b\u5f00\u59cb\u200b\uff0c\u200b\u9010\u6b65\u200b\u52a0\u5165\u200b\u4f7f\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\u63d0\u5347\u200b\u6700\u5927\u200b\u7684\u200b\u7279\u5f81\u200b</li> <li>\u200b\u540e\u200b\u5411\u200b\u9009\u62e9\u200b\uff1a\u200b\u4ece\u200b\u5168\u91cf\u200b\u7279\u5f81\u200b\u5f00\u59cb\u200b\uff0c\u200b\u9010\u6b65\u200b\u5254\u9664\u200b\u5bf9\u6a21\u578b\u200b\u5f71\u54cd\u200b\u6700\u5c0f\u200b\u7684\u200b\u7279\u5f81\u200b</li> <li>\u200b\u9010\u6b65\u200b\u9009\u62e9\u200b\uff1a\u200b\u524d\u5411\u200b + \u200b\u540e\u200b\u5411\u200b\u4ea4\u66ff\u200b\u8fdb\u884c\u200b</li> </ul>"},{"location":"machine/interview/#3-embedded","title":"3\ufe0f\u20e3 Embedded\uff08\u200b\u5d4c\u5165\u200b\u6cd5\u200b\uff09","text":"<ul> <li>\u200b\u539f\u7406\u200b\uff1a\u200b\u7279\u5f81\u9009\u62e9\u200b\u5d4c\u5165\u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u901a\u8fc7\u200b\u6b63\u5219\u200b\u5316\u200b\u6216\u200b\u6811\u200b\u6a21\u578b\u200b\u81ea\u52a8\u200b\u8bc4\u4f30\u200b\u7279\u5f81\u200b\u91cd\u8981\u6027\u200b\u3002</li> <li>\u200b\u65b9\u6cd5\u200b\uff1a</li> </ul>"},{"location":"machine/interview/#1-l1-lasso","title":"(1) L1 \u200b\u6b63\u5219\u200b\u5316\u200b\uff08Lasso \u200b\u56de\u5f52\u200b\uff09","text":"<ul> <li>\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff1a   $$   J(\\theta) = \\frac{1}{n}\\sum_{i=1}^{n} (y_i - X_i \\theta)^2 + \\lambda \\sum_{j=1}^{d} |\\theta_j|   $$</li> <li>\u200b\u5f53\u200b \\(\\lambda\\) \u200b\u8db3\u591f\u200b\u5927\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u5c06\u200b\u90e8\u5206\u200b \\(\\theta_j\\) \u200b\u6536\u7f29\u200b\u4e3a\u200b 0 \u2192 \u200b\u5bf9\u5e94\u200b\u7279\u5f81\u200b\u88ab\u200b\u5254\u9664\u200b\u3002</li> </ul>"},{"location":"machine/interview/#2_12","title":"(2) \u200b\u6811\u200b\u6a21\u578b\u200b\u7279\u5f81\u200b\u91cd\u8981\u6027","text":"<ul> <li>\u200b\u51b3\u7b56\u6811\u200b\u3001\u200b\u968f\u673a\u200b\u68ee\u6797\u200b\u3001XGBoost \u200b\u7b49\u200b\u53ef\u200b\u8f93\u51fa\u200b\u6bcf\u4e2a\u200b\u7279\u5f81\u200b\u7684\u200b Gini importance \u200b\u6216\u200b Gain\u3002</li> <li>\u200b\u5bf9\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\uff1a   $$   Importance(x_j) = \\sum_{t\\in T: split \\text{ on } x_j} \\Delta i(t)   $$</li> <li>\\(\\Delta i(t)\\) \u200b\u4e3a\u200b\u8282\u70b9\u200b \\(t\\) \u200b\u5728\u200b\u5206\u88c2\u200b\u65f6\u200b\u4e0d\u200b\u7eaf\u5ea6\u200b\u4e0b\u964d\u200b\uff08Gini \u200b\u6216\u200b Entropy\uff09</li> </ul>"},{"location":"machine/interview/#_107","title":"\u4e09\u200b\u3001\u200b\u7279\u5f81\u9009\u62e9\u200b\u7684\u200b\u6570\u5b66\u200b\u76ee\u6807","text":"<p>\u200b\u7279\u5f81\u9009\u62e9\u200b\u672c\u8d28\u200b\u662f\u200b\u4f18\u5316\u200b\u5b50\u96c6\u200b \\(S\\)\uff1a</p> \\[ S^* = \\arg\\max_{S\\subseteq{1,\\dots,d}} Score(S) \\] <ul> <li>Filter\uff1a\\(Score(S) = \\sum_{j\\in S} |\\rho(x_j,y)|\\) \u200b\u6216\u200b\u4e92\u4fe1\u606f\u200b</li> <li>Wrapper\uff1a\\(Score(S) = CV_Score(Model(X_S, y))\\)</li> <li>Embedded\uff1a\\(Score(S) = \\sum_{j\\in S} |w_j|\\) \u200b\u6216\u6811\u200b\u6a21\u578b\u200b\u91cd\u8981\u6027\u200b</li> </ul> <p>\u200b\u7279\u5f81\u9009\u62e9\u200b\u95ee\u9898\u200b\u662f\u200bNP-hard\uff08\u200b\u7ec4\u5408\u200b\u4f18\u5316\u200b\uff09\uff0c\u200b\u5b9e\u9645\u200b\u7528\u200b\u542f\u53d1\u5f0f\u200b\u7b97\u6cd5\u200b\uff08RFE\u3001\u200b\u8d2a\u5fc3\u200b\u3001\u200b\u6b63\u5219\u200b\u5316\u200b\uff09\u200b\u8fd1\u4f3c\u200b\u6c42\u89e3\u200b\u3002</p>"},{"location":"machine/interview/#_108","title":"\u56db\u200b\u3001\u200b\u7279\u5f81\u9009\u62e9\u200b\u7684\u200b\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u907f\u514d\u200b\u6570\u636e\u200b\u6cc4\u6f0f\u200b\uff1a\u200b\u5728\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b/\u200b\u6d4b\u8bd5\u200b\u96c6\u4e0a\u200b\u505a\u200b\u7279\u5f81\u9009\u62e9\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6570\u636e\u200b\u6cc4\u6f0f\u200b\uff0c\u200b\u5e94\u4ec5\u200b\u5728\u200b\u8bad\u7ec3\u200b\u96c6\u4e0a\u200b\u9009\u62e9\u200b\u7279\u5f81\u200b\u3002</li> <li>\u200b\u591a\u91cd\u200b\u5171\u7ebf\u6027\u200b\uff1a\u200b\u9ad8\u200b\u76f8\u5173\u200b\u7279\u5f81\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u6a21\u578b\u200b\u4e0d\u200b\u7a33\u5b9a\u200b\uff0c\u200b\u53ef\u200b\u5254\u9664\u200b\u5197\u4f59\u200b\u7279\u5f81\u200b\u6216\u200b\u505a\u200b PCA \u200b\u964d\u7ef4\u200b\u3002</li> <li> <p>\u200b\u7c7b\u522b\u200b\u7279\u5f81\u200b\u7f16\u7801\u200b\uff1a</p> <ul> <li>One-hot \u200b\u7f16\u7801\u200b\u540e\u200b\u7279\u5f81\u200b\u6570\u91cf\u200b\u589e\u52a0\u200b\uff0c\u200b\u9700\u200b\u7ed3\u5408\u200b\u6b63\u5219\u200b\u5316\u200b\u6216\u200b\u6811\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u7b5b\u9009\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u7279\u5f81\u9009\u62e9\u200b\u4e0e\u200b\u6807\u51c6\u5316\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u200b L1/L2 \u200b\u6b63\u5219\u200b\u5316\u200b\u6a21\u578b\u200b\u9700\u8981\u200b\u5148\u5bf9\u200b\u7279\u5f81\u200b\u5f52\u4e00\u5316\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u7279\u5f81\u200b\u91cd\u8981\u6027\u200b\u89e3\u91ca\u200b\uff1a</p> <ul> <li>Filter \u200b\u65b9\u6cd5\u200b\u7b80\u5355\u200b\u53ef\u200b\u89e3\u91ca\u200b\uff0c\u200b\u4f46\u200b\u5ffd\u7565\u200b\u7279\u5f81\u200b\u95f4\u200b\u4ea4\u4e92\u200b\u3002</li> <li>Wrapper/Embedded \u200b\u65b9\u6cd5\u200b\u8003\u8651\u200b\u7279\u5f81\u200b\u4ea4\u4e92\u200b\uff0c\u200b\u4f46\u200b\u590d\u6742\u5ea6\u200b\u9ad8\u200b\u3002</li> </ul> </li> </ol>"},{"location":"machine/interview/#_109","title":"\u4e94\u200b\u3001\u200b\u7279\u5f81\u9009\u62e9\u200b\u793a\u4f8b\u200b\u4ee3\u7801","text":""},{"location":"machine/interview/#1-filter_1","title":"1\ufe0f\u20e3 Filter \u200b\u65b9\u6cd5\u200b\uff08\u200b\u65b9\u5dee\u200b &amp; \u200b\u76f8\u5173\u7cfb\u6570\u200b\uff09","text":"<pre><code>from sklearn.feature_selection import VarianceThreshold, SelectKBest, f_classif\nimport numpy as np\n\nX = np.random.rand(100, 10)\ny = np.random.randint(0,2,100)\n\n# \u200b\u65b9\u5dee\u200b\u9009\u62e9\u200b\nselector = VarianceThreshold(threshold=0.01)\nX_var = selector.fit_transform(X)\n\n# \u200b\u5361\u65b9\u200b\u68c0\u9a8c\u200b\uff08\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff09\nselector = SelectKBest(score_func=f_classif, k=5)\nX_best = selector.fit_transform(X, y)\n</code></pre>"},{"location":"machine/interview/#2-wrapper-rfe","title":"2\ufe0f\u20e3 Wrapper \u200b\u65b9\u6cd5\u200b\uff08RFE + \u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\uff09","text":"<pre><code>from sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression()\nrfe = RFE(model, n_features_to_select=5)\nX_rfe = rfe.fit_transform(X, y)\nprint(rfe.support_)  # \u200b\u8f93\u51fa\u200b\u4fdd\u7559\u200b\u7279\u5f81\u200b\u5e03\u5c14\u200b\u6570\u7ec4\u200b\n</code></pre>"},{"location":"machine/interview/#3-embedded-lasso","title":"3\ufe0f\u20e3 Embedded \u200b\u65b9\u6cd5\u200b\uff08Lasso + \u200b\u6811\u200b\u6a21\u578b\u200b\uff09","text":"<pre><code>from sklearn.linear_model import Lasso\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Lasso \u200b\u56de\u5f52\u200b\nlasso = Lasso(alpha=0.01)\nlasso.fit(X, y)\nselected_features = np.where(lasso.coef_ != 0)[0]\n\n# \u200b\u6811\u200b\u6a21\u578b\u200b\nrf = RandomForestClassifier()\nrf.fit(X, y)\nimportances = rf.feature_importances_\n</code></pre>"},{"location":"machine/interview/#_110","title":"\u516d\u200b\u3001\u200b\u603b\u7ed3","text":"\u65b9\u6cd5\u200b \u200b\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u4f7f\u7528\u200b\u573a\u666f\u200b Filter \u200b\u5feb\u200b\u3001\u200b\u6613\u200b\u89e3\u91ca\u200b \u200b\u5ffd\u7565\u200b\u7279\u5f81\u200b\u95f4\u200b\u4ea4\u4e92\u200b \u200b\u5927\u89c4\u6a21\u200b\u7279\u5f81\u200b\u7b5b\u9009\u200b Wrapper \u200b\u8003\u8651\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\u3001\u200b\u4ea4\u4e92\u200b \u200b\u8ba1\u7b97\u200b\u91cf\u200b\u5927\u200b \u200b\u5c0f\u89c4\u6a21\u200b\u7279\u5f81\u200b\u3001\u200b\u8ffd\u6c42\u200b\u9ad8\u7cbe\u5ea6\u200b Embedded \u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\u81ea\u52a8\u200b\u7b5b\u9009\u200b\u3001\u200b\u6548\u7387\u9ad8\u200b \u200b\u4f9d\u8d56\u200b\u6a21\u578b\u200b L1/L2\u200b\u56de\u5f52\u200b\u3001\u200b\u6811\u200b\u6a21\u578b\u200b <p>\u200b\u7279\u5f81\u9009\u62e9\u200b\u672c\u8d28\u200b\u662f\u200b \u200b\u964d\u4f4e\u200b\u566a\u58f0\u200b\u3001\u200b\u51cf\u5c11\u200b\u8fc7\u200b\u62df\u5408\u200b\u3001\u200b\u63d0\u5347\u200b\u6a21\u578b\u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\uff0c\u200b\u5b9e\u9645\u64cd\u4f5c\u200b\u65f6\u5e38\u200b\u4e0e\u200b\u6b63\u5219\u200b\u5316\u200b\u3001PCA\u3001\u200b\u6a21\u578b\u200b\u8c03\u53c2\u200b\u7ed3\u5408\u200b\u4f7f\u7528\u200b\u3002</p>"},{"location":"machine/interview/#72","title":"7.2 \u200b\u7279\u5f81\u63d0\u53d6","text":""},{"location":"machine/interview/#_111","title":"\u4e00\u200b\u3001\u200b\u4ec0\u4e48\u200b\u662f\u200b\u7279\u5f81\u63d0\u53d6","text":"<ul> <li>\u200b\u7279\u5f81\u9009\u62e9\u200b\uff08Feature Selection\uff09\uff1a\u200b\u4ece\u200b\u539f\u6709\u200b\u7279\u5f81\u200b\u4e2d\u200b\u9009\u62e9\u200b\u5bf9\u6a21\u578b\u200b\u6709\u7528\u200b\u7684\u200b\u7279\u5f81\u200b\u3002</li> <li>\u200b\u7279\u5f81\u63d0\u53d6\u200b\uff08Feature Extraction\uff09\uff1a\u200b\u901a\u8fc7\u200b\u53d8\u6362\u200b\u539f\u59cb\u200b\u7279\u5f81\u200b\u751f\u6210\u200b\u65b0\u200b\u7684\u200b\u7279\u5f81\u200b\uff0c\u200b\u4ee5\u200b\u66f4\u200b\u6709\u6548\u200b\u5730\u200b\u8868\u793a\u200b\u6570\u636e\u200b\u3002</li> </ul> <p>\u200b\u901a\u4fd7\u200b\u7406\u89e3\u200b\uff1a</p> <ul> <li>\u200b\u7279\u5f81\u9009\u62e9\u200b \u2192 \u200b\u5220\u6389\u200b\u4e0d\u200b\u91cd\u8981\u200b\u7684\u200b\u7279\u5f81\u200b</li> <li>\u200b\u7279\u5f81\u63d0\u53d6\u200b \u2192 \u200b\u751f\u6210\u200b\u65b0\u200b\u7684\u200b\u3001\u200b\u66f4\u200b\u7d27\u51d1\u200b\u6216\u200b\u66f4\u200b\u6709\u200b\u4fe1\u606f\u91cf\u200b\u7684\u200b\u7279\u5f81\u200b</li> </ul> <p>\u200b\u76ee\u6807\u200b\uff1a</p> <ul> <li>\u200b\u964d\u7ef4\u200b</li> <li>\u200b\u63d0\u5347\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b</li> <li>\u200b\u6d88\u9664\u200b\u5197\u4f59\u200b\u6216\u200b\u566a\u58f0\u200b</li> <li>\u200b\u63d0\u53d6\u200b\u6570\u636e\u200b\u7684\u200b\u6f5c\u5728\u200b\u7ed3\u6784\u200b</li> </ul> <p>\u200b\u5047\u8bbe\u200b\uff1a</p> <ul> <li>\u200b\u539f\u59cb\u6570\u636e\u200b\u77e9\u9635\u200b \\(X \\in \\mathbb{R}^{n \\times d}\\)\uff08\\(n\\) \u200b\u6837\u672c\u200b\uff0c\\(d\\) \u200b\u7279\u5f81\u200b\uff09</li> <li>\u200b\u7279\u5f81\u63d0\u53d6\u200b\u751f\u6210\u200b\u65b0\u200b\u7684\u200b\u7279\u5f81\u200b\u77e9\u9635\u200b \\(Z \\in \\mathbb{R}^{n \\times k}\\)\uff0c\u200b\u901a\u5e38\u200b \\(k&lt;d\\)\u3002</li> </ul>"},{"location":"machine/interview/#_112","title":"\u4e8c\u200b\u3001\u200b\u7279\u5f81\u63d0\u53d6\u200b\u7684\u200b\u6838\u5fc3\u200b\u539f\u7406","text":"<p>\u200b\u7279\u5f81\u63d0\u53d6\u200b\u901a\u5e38\u200b\u901a\u8fc7\u200b\u6570\u5b66\u200b\u53d8\u6362\u200b\u6216\u200b\u6620\u5c04\u200b\u5c06\u200b\u539f\u59cb\u200b\u7279\u5f81\u200b\u7a7a\u95f4\u200b\u6620\u5c04\u200b\u5230\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u7279\u5f81\u200b\u7a7a\u95f4\u200b\uff1a</p> \\[ Z = f(X) \\] <ul> <li>\\(f\\) \u200b\u53ef\u4ee5\u200b\u662f\u200b\u7ebf\u6027\u200b\u6216\u200b\u975e\u7ebf\u6027\u200b\u6620\u5c04\u200b</li> <li>\u200b\u65b0\u200b\u7279\u5f81\u200b \\(Z\\) \u200b\u4fdd\u7559\u200b\u539f\u59cb\u6570\u636e\u200b\u7684\u200b\u5173\u952e\u200b\u4fe1\u606f\u200b\uff0c\u200b\u53ef\u80fd\u200b\u51cf\u5c11\u200b\u566a\u58f0\u200b\u6216\u200b\u5197\u4f59\u200b</li> </ul> <p>\u200b\u7279\u5f81\u63d0\u53d6\u200b\u5e38\u200b\u4e0e\u200b \u200b\u964d\u7ef4\u200b\uff08Dimensionality Reduction\uff09 \u200b\u5bc6\u5207\u76f8\u5173\u200b\u3002</p>"},{"location":"machine/interview/#_113","title":"\u4e09\u200b\u3001\u200b\u5e38\u89c1\u200b\u7ebf\u6027\u200b\u7279\u5f81\u63d0\u53d6\u200b\u65b9\u6cd5","text":""},{"location":"machine/interview/#1-pca-principal-component-analysis","title":"1\ufe0f\u20e3 \u200b\u4e3b\u200b\u6210\u5206\u200b\u5206\u6790\u200b\uff08PCA, Principal Component Analysis\uff09","text":"<ul> <li>\u200b\u76ee\u6807\u200b\uff1a\u200b\u627e\u5230\u200b\u80fd\u200b\u6700\u5927\u5316\u200b\u6570\u636e\u200b\u65b9\u5dee\u200b\u7684\u200b\u6b63\u4ea4\u200b\u65b9\u5411\u200b</li> <li> <p>\u200b\u6570\u5b66\u200b\u5b9a\u4e49\u200b\uff1a</p> </li> <li> <p>\u200b\u6570\u636e\u4e2d\u5fc3\u200b\u5316\u200b\uff1a\\(\\tilde{X} = X - \\bar{X}\\)</p> </li> <li>\u200b\u534f\u65b9\u5dee\u200b\u77e9\u9635\u200b\uff1a     $$     \\Sigma = \\frac{1}{n} \\tilde{X}^T \\tilde{X}     $$</li> <li>\u200b\u6c42\u89e3\u200b\u7279\u5f81\u503c\u200b\u548c\u200b\u7279\u5f81\u5411\u91cf\u200b\uff1a     $$     \\Sigma v_i = \\lambda_i v_i     $$</li> <li>\u200b\u9009\u62e9\u200b\u524d\u200b \\(k\\) \u200b\u4e2a\u200b\u6700\u5927\u200b\u7279\u5f81\u503c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7279\u5f81\u5411\u91cf\u200b\u7ec4\u6210\u200b\u6295\u5f71\u200b\u77e9\u9635\u200b \\(V_k\\)\uff1a     $$     Z = \\tilde{X} V_k     $$</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u538b\u7f29\u200b\u7ef4\u5ea6\u200b\u3001\u200b\u53bb\u200b\u76f8\u5173\u6027\u200b</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u53ea\u200b\u6355\u6349\u200b\u7ebf\u6027\u5173\u7cfb\u200b\uff0c\u200b\u7279\u5f81\u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\u5dee\u200b</li> </ul>"},{"location":"machine/interview/#2-lda-linear-discriminant-analysis","title":"2\ufe0f\u20e3 \u200b\u7ebf\u6027\u200b\u5224\u522b\u5206\u6790\u200b\uff08LDA, Linear Discriminant Analysis\uff09","text":"<ul> <li>\u200b\u76ee\u6807\u200b\uff1a\u200b\u5728\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u4e2d\u200b\u6700\u5927\u5316\u200b\u7c7b\u95f4\u200b\u8ddd\u79bb\u200b\u3001\u200b\u6700\u5c0f\u5316\u200b\u7c7b\u5185\u200b\u65b9\u5dee\u200b</li> <li> <p>\u200b\u516c\u5f0f\u200b\uff1a</p> </li> <li> <p>\u200b\u7c7b\u5185\u200b\u6563\u5ea6\u200b\u77e9\u9635\u200b\uff1a     $$     S_W = \\sum_{c=1}^{C} \\sum_{x_i \\in c} (x_i - \\mu_c)(x_i - \\mu_c)^T     $$</p> </li> <li>\u200b\u7c7b\u95f4\u200b\u6563\u5ea6\u200b\u77e9\u9635\u200b\uff1a     $$     S_B = \\sum_{c=1}^{C} n_c (\\mu_c - \\mu)(\\mu_c - \\mu)^T     $$</li> <li>\u200b\u6c42\u89e3\u200b\u6295\u5f71\u200b\u77e9\u9635\u200b \\(W\\)\uff1a     $$     W = \\arg\\max_W \\frac{|W^T S_B W|}{|W^T S_W W|}     $$</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u9002\u7528\u200b\u4e8e\u200b\u76d1\u7763\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\uff0c\u200b\u964d\u7ef4\u540e\u200b\u7c7b\u522b\u200b\u53ef\u5206\u6027\u200b\u589e\u5f3a\u200b</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u53ea\u80fd\u200b\u63d0\u53d6\u200b \\(C-1\\) \u200b\u4e2a\u200b\u7279\u5f81\u200b\uff08\u200b\u7c7b\u522b\u200b\u6570\u200b\u9650\u5236\u200b\uff09\uff0c\u200b\u5047\u8bbe\u200b\u6570\u636e\u200b\u9ad8\u65af\u5206\u5e03\u200b</li> </ul>"},{"location":"machine/interview/#3-ica-independent-component-analysis","title":"3\ufe0f\u20e3 \u200b\u72ec\u7acb\u200b\u6210\u5206\u200b\u5206\u6790\u200b\uff08ICA, Independent Component Analysis\uff09","text":"<ul> <li>\u200b\u76ee\u6807\u200b\uff1a\u200b\u5c06\u200b\u6df7\u5408\u200b\u4fe1\u53f7\u200b\u5206\u89e3\u200b\u4e3a\u200b\u7edf\u8ba1\u200b\u72ec\u7acb\u200b\u7684\u200b\u6210\u5206\u200b</li> <li> <p>\u200b\u516c\u5f0f\u200b\uff1a   $$   X = A S   $$</p> </li> <li> <p>\\(X\\)\uff1a\u200b\u89c2\u6d4b\u200b\u6570\u636e\u200b</p> </li> <li>\\(A\\)\uff1a\u200b\u6df7\u5408\u200b\u77e9\u9635\u200b</li> <li>\\(S\\)\uff1a\u200b\u72ec\u7acb\u200b\u6210\u5206\u200b</li> <li>\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\uff1a\u200b\u6700\u5927\u5316\u200b\u975e\u200b\u9ad8\u65af\u200b\u6027\u200b\u6216\u200b\u6700\u5c0f\u5316\u200b\u4e92\u4fe1\u606f\u200b\uff1a   $$   \\max \\sum_i \\text{Negentropy}(s_i)   $$</li> </ul>"},{"location":"machine/interview/#_114","title":"\u56db\u200b\u3001\u200b\u5e38\u89c1\u200b\u975e\u7ebf\u6027\u200b\u7279\u5f81\u63d0\u53d6\u200b\u65b9\u6cd5","text":""},{"location":"machine/interview/#1-kernel-pca","title":"1\ufe0f\u20e3 \u200b\u6838\u4e3b\u200b\u6210\u5206\u200b\u5206\u6790\u200b\uff08Kernel PCA\uff09","text":"<ul> <li>\u200b\u601d\u60f3\u200b\uff1a\u200b\u5bf9\u200b\u539f\u59cb\u6570\u636e\u200b\u505a\u200b\u975e\u7ebf\u6027\u200b\u6620\u5c04\u200b \\(\\phi: X \\rightarrow \\mathcal{F}\\)\uff0c\u200b\u518d\u200b\u505a\u200b PCA</li> <li>\u200b\u6838\u200b\u6280\u5de7\u200b\uff1a   $$   K_{ij} = \\phi(x_i)^T \\phi(x_j)   $$</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u63d0\u53d6\u200b\u975e\u7ebf\u6027\u200b\u7ed3\u6784\u200b</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u8ba1\u7b97\u200b\u91cf\u200b\u5927\u200b\uff0c\u200b\u6838\u9009\u62e9\u200b\u654f\u611f\u200b</li> </ul>"},{"location":"machine/interview/#2-t-snet-distributed-stochastic-neighbor-embedding","title":"2\ufe0f\u20e3 t-SNE\uff08t-Distributed Stochastic Neighbor Embedding\uff09","text":"<ul> <li>\u200b\u76ee\u6807\u200b\uff1a\u200b\u5c06\u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b\u5d4c\u5165\u200b\u4f4e\u200b\u7ef4\u7a7a\u95f4\u200b\uff08\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u53ef\u89c6\u5316\u200b\uff09</li> <li> <p>\u200b\u65b9\u6cd5\u200b\uff1a</p> </li> <li> <p>\u200b\u9ad8\u200b\u7ef4\u7a7a\u95f4\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\uff1a     $$     p_{j|i} = \\frac{\\exp(-|x_i - x_j|^2 / 2\\sigma_i^2)}{\\sum_{k\\neq i} \\exp(-|x_i - x_k|^2 / 2\\sigma_i^2)}     $$</p> </li> <li>\u200b\u4f4e\u200b\u7ef4\u7a7a\u95f4\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\uff1a     $$     q_{ij} = \\frac{(1 + |y_i - y_j|^2)^{-1}}{\\sum_{k\\neq l} (1 + |y_k - y_l|^2)^{-1}}     $$</li> <li>\u200b\u6700\u5c0f\u5316\u200b KL \u200b\u6563\u5ea6\u200b\uff1a     $$     KL(P|Q) = \\sum_i \\sum_j p_{ij} \\log \\frac{p_{ij}}{q_{ij}}     $$</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u4fdd\u6301\u200b\u5c40\u90e8\u200b\u7ed3\u6784\u200b\uff0c\u200b\u89c6\u89c9\u6548\u679c\u200b\u597d\u200b</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u4e0d\u53ef\u200b\u89e3\u91ca\u200b\u3001\u200b\u9002\u5408\u200b\u5c0f\u200b\u6570\u636e\u200b\u96c6\u200b</li> </ul>"},{"location":"machine/interview/#3-autoencoder","title":"3\ufe0f\u20e3 AutoEncoder\uff08\u200b\u81ea\u200b\u7f16\u7801\u5668\u200b\uff09","text":"<ul> <li> <p>\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u5b9e\u73b0\u200b\u7279\u5f81\u63d0\u53d6\u200b\uff1a</p> </li> <li> <p>\u200b\u7f16\u7801\u5668\u200b \\(f_\\theta: X \\rightarrow Z\\)</p> </li> <li>\u200b\u89e3\u7801\u5668\u200b \\(g_\\phi: Z \\rightarrow \\hat{X}\\)</li> <li>\u200b\u6700\u5c0f\u5316\u200b\u91cd\u5efa\u200b\u8bef\u5dee\u200b\uff1a     $$     \\min_{\\theta,\\phi} \\sum_i |x_i - g_\\phi(f_\\theta(x_i))|^2     $$</li> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u53ef\u200b\u5b66\u4e60\u200b\u975e\u7ebf\u6027\u200b\u4f4e\u7ef4\u200b\u8868\u793a\u200b</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u8bad\u7ec3\u200b\u590d\u6742\u200b\uff0c\u200b\u9700\u8c03\u200b\u53c2\u200b</li> </ul>"},{"location":"machine/interview/#vs","title":"\u4e94\u200b\u3001\u200b\u7279\u5f81\u63d0\u53d6\u200b vs \u200b\u7279\u5f81\u9009\u62e9","text":"\u7279\u70b9\u200b \u200b\u7279\u5f81\u9009\u62e9\u200b \u200b\u7279\u5f81\u63d0\u53d6\u200b \u200b\u65b9\u6cd5\u200b \u200b\u9009\u62e9\u200b\u539f\u59cb\u200b\u7279\u5f81\u200b\u5b50\u96c6\u200b \u200b\u751f\u6210\u200b\u65b0\u200b\u7279\u5f81\u200b \u200b\u662f\u5426\u200b\u964d\u7ef4\u200b \u200b\u4e0d\u200b\u4e00\u5b9a\u200b \u200b\u4e00\u822c\u200b\u964d\u7ef4\u200b \u200b\u662f\u5426\u200b\u6539\u53d8\u200b\u539f\u59cb\u6570\u636e\u200b \u200b\u5426\u200b \u200b\u662f\u200b\uff08\u200b\u7ebf\u6027\u200b\u6216\u200b\u975e\u7ebf\u6027\u200b\u53d8\u6362\u200b\uff09 \u200b\u4f18\u70b9\u200b \u200b\u7b80\u5355\u200b\u53ef\u200b\u89e3\u91ca\u200b \u200b\u63d0\u53d6\u200b\u6f5c\u5728\u200b\u7ed3\u6784\u200b\u3001\u200b\u51cf\u5c11\u200b\u5197\u4f59\u200b \u200b\u7f3a\u70b9\u200b \u200b\u5ffd\u7565\u200b\u7ec4\u5408\u200b\u5173\u7cfb\u200b \u200b\u7279\u5f81\u200b\u96be\u200b\u89e3\u91ca"},{"location":"machine/interview/#python_1","title":"\u516d\u200b\u3001\u200b\u7279\u5f81\u63d0\u53d6\u200b\u5b9e\u6218\u200b\u793a\u4f8b\u200b\uff08Python\uff09","text":""},{"location":"machine/interview/#1-pca","title":"1\ufe0f\u20e3 PCA","text":"<pre><code>from sklearn.decomposition import PCA\nimport numpy as np\n\nX = np.random.rand(100, 10)\npca = PCA(n_components=3)\nZ = pca.fit_transform(X)\nprint(\"\u200b\u65b0\u200b\u7279\u5f81\u200b\u7ef4\u5ea6\u200b:\", Z.shape)  # (100,3)\n</code></pre>"},{"location":"machine/interview/#2-lda","title":"2\ufe0f\u20e3 LDA\uff08\u200b\u76d1\u7763\u200b\u964d\u7ef4\u200b\uff09","text":"<pre><code>from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA\n\ny = np.random.randint(0,3,100)  # \u200b\u4e09\u7c7b\u200b\nlda = LDA(n_components=2)\nZ = lda.fit_transform(X, y)\nprint(\"\u200b\u65b0\u200b\u7279\u5f81\u200b\u7ef4\u5ea6\u200b:\", Z.shape)  # (100,2)\n</code></pre>"},{"location":"machine/interview/#3-autoencoderpytorch","title":"3\ufe0f\u20e3 AutoEncoder\uff08PyTorch\u200b\u793a\u4f8b\u200b\uff09","text":"<pre><code>import torch\nimport torch.nn as nn\n\nX_tensor = torch.rand(100,10)\n\nclass AutoEncoder(nn.Module):\n    def __init__(self, input_dim=10, hidden_dim=3):\n        super().__init__()\n        self.encoder = nn.Linear(input_dim, hidden_dim)\n        self.decoder = nn.Linear(hidden_dim, input_dim)\n    def forward(self, x):\n        z = torch.relu(self.encoder(x))\n        out = self.decoder(z)\n        return out, z\n\nmodel = AutoEncoder()\noptimizer = torch.optim.Adam(model.parameters(), lr=0.01)\ncriterion = nn.MSELoss()\n\nfor epoch in range(100):\n    optimizer.zero_grad()\n    out, z = model(X_tensor)\n    loss = criterion(out, X_tensor)\n    loss.backward()\n    optimizer.step()\n\n# \u200b\u63d0\u53d6\u200b\u4f4e\u7ef4\u200b\u7279\u5f81\u200b\n_, Z_new = model(X_tensor)\nprint(\"\u200b\u4f4e\u7ef4\u200b\u7279\u5f81\u200b:\", Z_new.shape)  # (100,3)\n</code></pre>"},{"location":"machine/interview/#_115","title":"\u4e03\u200b\u3001\u200b\u7279\u5f81\u63d0\u53d6\u200b\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li> <p>\u200b\u6807\u51c6\u5316\u200b/\u200b\u5f52\u4e00\u5316\u200b\uff1a</p> <ul> <li>PCA\u3001LDA \u200b\u5bf9\u200b\u5c3a\u5ea6\u200b\u654f\u611f\u200b\uff0c\u200b\u9700\u5148\u200b\u6807\u51c6\u5316\u200b \\(X\\)\u3002</li> </ul> </li> <li> <p>\u200b\u9009\u62e9\u200b\u7ef4\u5ea6\u200b \\(k\\)\uff1a</p> <ul> <li>PCA \u200b\u53ef\u200b\u6839\u636e\u200b\u7d2f\u8ba1\u200b\u65b9\u5dee\u200b\u8d21\u732e\u7387\u200b\u9009\u62e9\u200b \\(k\\)\u3002</li> </ul> </li> <li> <p>\u200b\u76d1\u7763\u200b vs \u200b\u65e0\u200b\u76d1\u7763\u200b\uff1a</p> <ul> <li>LDA \u200b\u9700\u200b\u6807\u7b7e\u200b\uff0cPCA \u200b\u4e0d\u9700\u200b\u6807\u7b7e\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\uff1a</p> <ul> <li>PCA/AutoEncoder \u200b\u7279\u5f81\u200b\u96be\u200b\u89e3\u91ca\u200b\uff0c\u200b\u9700\u8981\u200b\u7ed3\u5408\u200b\u539f\u59cb\u200b\u7279\u5f81\u200b\u7406\u89e3\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u975e\u7ebf\u6027\u200b\u7279\u5f81\u63d0\u53d6\u200b\uff1a</p> <ul> <li>t-SNE \u200b\u9002\u5408\u200b\u53ef\u89c6\u200b</li> </ul> </li> </ol>"},{"location":"machine/interview/#_116","title":"\u516b\u200b\u3001\u200b\u51b3\u7b56\u6811","text":""},{"location":"machine/interview/#81","title":"8.1 \u200b\u6559\u7a0b","text":"<p>\u200b\u5728\u200b\u51b3\u7b56\u6811\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u9009\u62e9\u200b \u200b\u6700\u4f18\u200b\u7279\u5f81\u200b \u200b\u6765\u200b\u8fdb\u884c\u200b\u5212\u5206\u200b\uff0c\u200b\u8ba9\u200b\u6bcf\u6b21\u200b\u5212\u5206\u200b\u540e\u200b\u7684\u200b\u5b50\u96c6\u200b\u201c\u200b\u8d8a\u7eaf\u8d8a\u200b\u597d\u200b\u201d\u3002</p> <ul> <li>\u200b\u7eaf\u200b\u7684\u200b\u610f\u601d\u200b\uff1a\u200b\u5b50\u200b\u96c6\u4e2d\u200b\u7684\u200b\u6837\u672c\u200b\u5c3d\u53ef\u80fd\u200b\u5c5e\u4e8e\u200b\u540c\u4e00\u200b\u7c7b\u522b\u200b\u3002</li> </ul> <p>\u200b\u4e0d\u540c\u200b\u7b97\u6cd5\u200b\u8861\u91cf\u200b\u201c\u200b\u7eaf\u5ea6\u200b\u201d\u200b\u7684\u200b\u65b9\u6cd5\u200b\u4e0d\u540c\u200b\uff1a</p> <ul> <li>ID3 \u2192 \u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b</li> <li>C4.5 \u2192 \u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u7387\u200b</li> <li> <p>CART \u2192 \u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b</p> </li> <li> <p>\u200b\u5b9a\u4e49\u200b\uff1a\u200b\u51b3\u7b56\u6811\u200b\u662f\u200b\u4e00\u79cd\u200b \u200b\u6811\u5f62\u200b\u7ed3\u6784\u200b\u6a21\u578b\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5206\u7c7b\u200b\u6216\u200b\u56de\u5f52\u200b\u4efb\u52a1\u200b\u3002</p> <ul> <li>\u200b\u8282\u70b9\u200b\uff08Node\uff09\uff1a\u200b\u8868\u793a\u200b\u7279\u5f81\u200b\u6216\u200b\u5c5e\u6027\u200b\u7684\u200b\u6761\u4ef6\u200b</li> <li>\u200b\u8fb9\u200b\uff08Edge\uff09\uff1a\u200b\u8868\u793a\u200b\u6761\u4ef6\u200b\u5224\u65ad\u200b\u7684\u200b\u7ed3\u679c\u200b</li> <li>\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b\uff08Leaf\uff09\uff1a\u200b\u8868\u793a\u200b\u6700\u7ec8\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b</li> </ul> </li> <li> <p>\u200b\u5206\u7c7b\u200b vs \u200b\u56de\u5f52\u200b\uff1a</p> <ul> <li>\u200b\u5206\u7c7b\u200b\u6811\u200b\uff08CART\u200b\u5206\u7c7b\u200b\uff09\uff1a\u200b\u9884\u6d4b\u200b\u79bb\u6563\u200b\u6807\u7b7e\u200b</li> <li>\u200b\u56de\u5f52\u200b\u6811\u200b\uff08CART\u200b\u56de\u5f52\u200b\uff09\uff1a\u200b\u9884\u6d4b\u200b\u8fde\u7eed\u200b\u503c\u200b</li> </ul> </li> </ul> <p>\u200b\u51b3\u7b56\u6811\u200b\u7279\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u975e\u7ebf\u6027\u200b\u3001\u200b\u975e\u200b\u53c2\u6570\u200b\u6a21\u578b\u200b</li> <li>\u200b\u53ef\u200b\u5904\u7406\u200b\u591a\u200b\u7c7b\u522b\u200b\u3001\u200b\u591a\u200b\u7279\u5f81\u200b</li> <li>\u200b\u6613\u200b\u89e3\u91ca\u200b\uff0c\u200b\u53ef\u200b\u53ef\u89c6\u5316\u200b</li> </ul>"},{"location":"machine/interview/#1_15","title":"1\ufe0f\u20e3 \u200b\u5206\u7c7b\u200b\u95ee\u9898","text":"<p>\u200b\u5728\u200b\u51b3\u7b56\u6811\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u9009\u62e9\u200b \u200b\u6700\u4f18\u200b\u7279\u5f81\u200b \u200b\u6765\u200b\u8fdb\u884c\u200b\u5212\u5206\u200b\uff0c\u200b\u8ba9\u200b\u6bcf\u6b21\u200b\u5212\u5206\u200b\u540e\u200b\u7684\u200b\u5b50\u96c6\u200b\u201c\u200b\u8d8a\u7eaf\u8d8a\u200b\u597d\u200b\u201d\u3002</p> <ul> <li>\u200b\u7eaf\u200b\u7684\u200b\u610f\u601d\u200b\uff1a\u200b\u5b50\u200b\u96c6\u4e2d\u200b\u7684\u200b\u6837\u672c\u200b\u5c3d\u53ef\u80fd\u200b\u5c5e\u4e8e\u200b\u540c\u4e00\u200b\u7c7b\u522b\u200b\u3002</li> </ul> <p>\u200b\u4e0d\u540c\u200b\u7b97\u6cd5\u200b\u8861\u91cf\u200b\u201c\u200b\u7eaf\u5ea6\u200b\u201d\u200b\u7684\u200b\u65b9\u6cd5\u200b\u4e0d\u540c\u200b\uff1a</p> <ul> <li>ID3 \u2192 \u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b</li> <li>C4.5 \u2192 \u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u7387\u200b</li> <li>CART \u2192 \u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b</li> </ul>"},{"location":"machine/interview/#id3-information-gain","title":"\u4e8c\u200b\u3001ID3 \u200b\u4e0e\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\uff08Information Gain\uff09","text":""},{"location":"machine/interview/#1_16","title":"1. \u200b\u6982\u5ff5","text":"<p>\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u6765\u6e90\u4e8e\u200b\u4fe1\u606f\u8bba\u200b\u3002\u200b\u5b83\u200b\u8861\u91cf\u200b\u7684\u200b\u662f\u200b \u200b\u4f7f\u7528\u200b\u67d0\u200b\u7279\u5f81\u200b\u5212\u5206\u200b\u6570\u636e\u200b\u524d\u540e\u200b\uff0c\u200b\u4fe1\u606f\u200b\u7684\u200b\u4e0d\u786e\u5b9a\u6027\u200b\u51cf\u5c11\u200b\u4e86\u200b\u591a\u5c11\u200b\u3002</p> <ul> <li>\u200b\u71b5\u200b\uff08Entropy\uff09\uff1a\u200b\u8868\u793a\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u4e0d\u786e\u5b9a\u6027\u200b</li> </ul> \\[   H(D) = - \\sum_{i=1}^k p_i \\log_2 p_i \\] <ul> <li>\\(D\\)\uff1a\u200b\u6570\u636e\u200b\u96c6\u200b</li> <li>\\(k\\)\uff1a\u200b\u7c7b\u522b\u200b\u6570\u200b</li> <li> <p>\\(p_i\\)\uff1a\u200b\u7c7b\u522b\u200b \\(i\\) \u200b\u7684\u200b\u6982\u7387\u200b</p> </li> <li> <p>\u200b\u6761\u4ef6\u200b\u71b5\u200b\uff08Conditional Entropy\uff09\uff1a\u200b\u5728\u200b\u5df2\u77e5\u200b\u67d0\u4e2a\u200b\u7279\u5f81\u200b \\(A\\) \u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u7c7b\u522b\u200b\u7684\u200b\u4e0d\u786e\u5b9a\u6027\u200b</p> </li> </ul> \\[   H(D|A) = \\sum_{v \\in \\text{values}(A)} \\frac{|D_v|}{|D|} H(D_v) \\] <ul> <li> <p>\\(D_v\\)\uff1a\u200b\u5728\u200b\u7279\u5f81\u200b \\(A\\) \u200b\u53d6\u503c\u200b \\(v\\) \u200b\u7684\u200b\u5b50\u96c6\u200b</p> </li> <li> <p>\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\uff08Information Gain\uff09\uff1a\u200b\u5212\u5206\u200b\u524d\u540e\u200b\u7684\u200b\u71b5\u200b\u51cf\u5c11\u200b\u91cf\u200b</p> </li> </ul> \\[   Gain(D,A) = H(D) - H(D|A) \\]"},{"location":"machine/interview/#2_13","title":"2. \u200b\u76f4\u89c2\u200b\u89e3\u91ca","text":"<ul> <li>\u200b\u71b5\u200b\u8d8a\u200b\u5927\u200b \u2192 \u200b\u6570\u636e\u200b\u8d8a\u200b\u6df7\u4e71\u200b</li> <li>\u200b\u5212\u5206\u200b\u540e\u200b\u71b5\u200b\u8d8a\u200b\u5c0f\u200b \u2192 \u200b\u6570\u636e\u200b\u8d8a\u7eaf\u200b \u2192 \u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u8d8a\u5927\u200b</li> <li>ID3\u200b\u9009\u62e9\u200b \u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u6700\u5927\u200b\u7684\u200b\u7279\u5f81\u200b \u200b\u4f5c\u4e3a\u200b\u5212\u5206\u200b\u8282\u70b9\u200b</li> </ul>"},{"location":"machine/interview/#3_7","title":"3. \u200b\u793a\u4f8b","text":"<p>\u200b\u5047\u8bbe\u200b\u6570\u636e\u200b\u96c6\u200b \\(D\\) \u200b\u6709\u200b 10 \u200b\u4e2a\u200b\u6837\u672c\u200b\uff0c\u200b\u5206\u4e3a\u200b\u4e24\u7c7b\u200b\uff1a<code>Yes</code> 6 \u200b\u4e2a\u200b\uff0c<code>No</code> 4 \u200b\u4e2a\u200b\u3002</p> <ul> <li>\u200b\u603b\u71b5\u200b\uff1a $$   H(D) = - \\frac{6}{10}\\log_2 \\frac{6}{10} - \\frac{4}{10}\\log_2 \\frac{4}{10} \\approx 0.971 $$</li> </ul> <p>\u200b\u5047\u8bbe\u200b\u4e00\u4e2a\u200b\u7279\u5f81\u200b \\(A\\) \u200b\u6709\u200b\u4e24\u4e2a\u200b\u53d6\u503c\u200b <code>a1</code> \u200b\u548c\u200b <code>a2</code>\uff0c\u200b\u5bf9\u5e94\u200b\u5b50\u96c6\u200b\u71b5\u200b\u5206\u522b\u200b\u4e3a\u200b 0.0 \u200b\u548c\u200b 1.0\uff0c\u200b\u5b50\u96c6\u200b\u6bd4\u4f8b\u200b\u4e3a\u200b 0.4 \u200b\u548c\u200b 0.6\uff1a</p> \\[ H(D|A) = 0.4 \\cdot 0 + 0.6 \\cdot 1 = 0.6 \\] <p>\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\uff1a $$ Gain(D,A) = 0.971 - 0.6 = 0.371 $$</p>"},{"location":"machine/interview/#c45-information-gain-ratio","title":"\u4e09\u200b\u3001C4.5 \u200b\u4e0e\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u7387\u200b\uff08Information Gain Ratio\uff09","text":""},{"location":"machine/interview/#1_17","title":"1. \u200b\u95ee\u9898","text":"<p>ID3 \u200b\u7684\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u6709\u200b\u504f\u5411\u200b\u6027\u200b\uff1a</p> <ul> <li>\u200b\u503e\u5411\u200b\u9009\u62e9\u200b\u53d6\u503c\u200b \u200b\u8f83\u200b\u591a\u200b\u7684\u200b\u7279\u5f81\u200b\uff08\u200b\u5982\u200b\u8eab\u4efd\u8bc1\u53f7\u200b\u3001\u200b\u65e5\u671f\u200b\u7b49\u200b\uff09\uff0c\u200b\u5373\u4f7f\u200b\u8fd9\u4e9b\u200b\u7279\u5f81\u200b\u5bf9\u200b\u5206\u7c7b\u200b\u6ca1\u592a\u200b\u5927\u7528\u5904\u200b\u3002</li> </ul>"},{"location":"machine/interview/#2_14","title":"2. \u200b\u89e3\u51b3\u65b9\u6848","text":"<p>C4.5 \u200b\u4f7f\u7528\u200b \u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u7387\u200b \u200b\u6765\u200b\u4fee\u6b63\u200b\uff1a $$ GainRatio(D,A) = \\frac{Gain(D,A)}{SplitInfo(D,A)} $$</p> <ul> <li> <p>\u200b\u5206\u88c2\u200b\u4fe1\u606f\u200b\uff08SplitInfo\uff09\uff1a $$   SplitInfo(D,A) = - \\sum_{v \\in values(A)} \\frac{|D_v|}{|D|} \\log_2 \\frac{|D_v|}{|D|} $$</p> </li> <li> <p>\u200b\u6838\u5fc3\u601d\u60f3\u200b\uff1a\u200b\u7528\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u9664\u4ee5\u200b\u7279\u5f81\u200b\u81ea\u8eab\u200b\u7684\u200b\u5212\u5206\u200b\u201c\u200b\u6742\u4e71\u200b\u5ea6\u200b\u201d\uff0c\u200b\u964d\u4f4e\u200b\u53d6\u503c\u200b\u591a\u200b\u7684\u200b\u7279\u5f81\u200b\u504f\u597d\u200b\u3002</p> </li> </ul>"},{"location":"machine/interview/#3_8","title":"3. \u200b\u76f4\u89c2\u200b\u7406\u89e3","text":"<ul> <li>\u200b\u7279\u5f81\u503c\u200b\u8d8a\u200b\u591a\u200b\uff0cSplitInfo \u200b\u8d8a\u5927\u200b \u2192 GainRatio \u200b\u8d8a\u5c0f\u200b \u2192 \u200b\u51cf\u5c11\u200b\u504f\u5411\u200b</li> <li>C4.5 \u200b\u9009\u62e9\u200b \u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u7387\u200b\u6700\u5927\u200b\u7684\u200b\u7279\u5f81\u200b \u200b\u8fdb\u884c\u200b\u5212\u5206\u200b</li> </ul>"},{"location":"machine/interview/#cart-gini-index","title":"\u56db\u200b\u3001CART \u200b\u4e0e\u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b\uff08Gini Index\uff09","text":"<p>CART (Classification and Regression Tree) \u200b\u7528\u200b \u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b \u200b\u6765\u200b\u8861\u91cf\u200b\u7eaf\u5ea6\u200b\u3002</p>"},{"location":"machine/interview/#1_18","title":"1. \u200b\u6982\u5ff5","text":"<p>\u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b\u8868\u793a\u200b \u200b\u4ece\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u968f\u673a\u200b\u62bd\u53d6\u200b\u4e24\u4e2a\u200b\u6837\u672c\u200b\uff0c\u200b\u5b83\u4eec\u200b\u5c5e\u4e8e\u200b\u4e0d\u540c\u200b\u7c7b\u522b\u200b\u7684\u200b\u6982\u7387\u200b\uff1a</p> \\[ Gini(D) = 1 - \\sum_{i=1}^{k} p_i^2 \\] <ul> <li>\\(p_i\\)\uff1a\u200b\u7c7b\u522b\u200b \\(i\\) \u200b\u7684\u200b\u6982\u7387\u200b</li> <li>\u200b\u503c\u8d8a\u200b\u5c0f\u200b \u2192 \u200b\u6570\u636e\u200b\u8d8a\u7eaf\u200b</li> </ul>"},{"location":"machine/interview/#2_15","title":"2. \u200b\u5212\u5206\u200b\u540e\u200b\u7684\u200b\u57fa\u5c3c\u200b\u6307\u6570","text":"<p>\u200b\u5047\u8bbe\u200b\u7528\u200b\u7279\u5f81\u200b \\(A\\) \u200b\u5212\u5206\u200b\u6570\u636e\u200b\u96c6\u200b\uff1a $$ Gini_{split}(D,A) = \\sum_{v \\in values(A)} \\frac{|D_v|}{|D|} Gini(D_v) $$</p> <ul> <li>\u200b\u9009\u62e9\u200b \u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b\u6700\u5c0f\u200b\u7684\u200b\u7279\u5f81\u200b\u8fdb\u884c\u200b\u5212\u5206\u200b</li> <li>CART \u200b\u751f\u6210\u200b \u200b\u4e8c\u53c9\u6811\u200b\uff08\u200b\u6bcf\u6b21\u200b\u5206\u6210\u200b\u4e24\u4e2a\u200b\u5b50\u96c6\u200b\uff09</li> </ul>"},{"location":"machine/interview/#3_9","title":"3. \u200b\u76f4\u89c2\u200b\u7406\u89e3","text":"<ul> <li>\u200b\u4e0e\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u4e0d\u540c\u200b\uff1a\u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b\u5173\u6ce8\u200b \u200b\u6837\u672c\u200b\u201c\u200b\u6df7\u5408\u200b\u5ea6\u200b\u201d</li> <li>\u200b\u8d8a\u7eaf\u200b \u2192 \u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b\u8d8a\u4f4e\u200b \u2192 \u200b\u66f4\u4f18\u200b\u5212\u5206\u200b</li> </ul>"},{"location":"machine/interview/#4_8","title":"4. \u200b\u793a\u4f8b","text":"<p>\u200b\u5047\u8bbe\u200b\u4e00\u4e2a\u200b\u5b50\u96c6\u200b\u6709\u200b 10 \u200b\u4e2a\u200b\u6837\u672c\u200b\uff0c\u200b\u5176\u4e2d\u200b 6 \u200b\u4e2a\u200b <code>Yes</code>\uff0c4 \u200b\u4e2a\u200b <code>No</code>\uff1a $$ Gini(D) = 1 - (0.6^2 + 0.4^2) = 1 - (0.36 + 0.16) = 0.48 $$</p>"},{"location":"machine/interview/#_117","title":"\u4e94\u200b\u3001\u200b\u603b\u7ed3\u200b\u5bf9\u6bd4\u200b\u8868","text":"\u7b97\u6cd5\u200b \u200b\u7279\u5f81\u9009\u62e9\u200b\u6307\u6807\u200b \u200b\u503e\u5411\u200b \u200b\u5212\u5206\u200b\u7c7b\u578b\u200b \u200b\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b ID3 \u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b Gain \u200b\u504f\u5411\u200b\u53d6\u503c\u200b\u591a\u200b\u7684\u200b\u7279\u5f81\u200b \u200b\u591a\u53c9\u200b \u200b\u7b80\u5355\u200b\uff0c\u200b\u6982\u5ff5\u200b\u76f4\u89c2\u200b \u200b\u5bf9\u591a\u503c\u200b\u7279\u5f81\u200b\u6709\u200b\u504f\u5411\u200b\u6027\u200b C4.5 \u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u7387\u200b GainRatio \u200b\u4fee\u6b63\u200b ID3 \u200b\u504f\u5411\u200b \u200b\u591a\u53c9\u200b \u200b\u5904\u7406\u200b\u591a\u503c\u200b\u7279\u5f81\u200b\u66f4\u200b\u5408\u7406\u200b \u200b\u9700\u8981\u200b\u8ba1\u7b97\u200b\u5206\u88c2\u200b\u4fe1\u606f\u200b\uff0c\u200b\u7565\u200b\u590d\u6742\u200b CART \u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b Gini \u200b\u504f\u5411\u200b\u7eaf\u5ea6\u200b\u5927\u200b\u5b50\u96c6\u200b \u200b\u4e8c\u53c9\u200b \u200b\u8ba1\u7b97\u200b\u7b80\u5355\u200b\uff0c\u200b\u751f\u6210\u200b\u4e8c\u53c9\u6811\u200b \u200b\u5bf9\u200b\u7c7b\u522b\u200b\u6bd4\u4f8b\u200b\u654f\u611f"},{"location":"machine/interview/#2_16","title":"2\ufe0f\u20e3 \u200b\u56de\u5f52\u200b\u95ee\u9898","text":"<ul> <li>\u200b\u5e38\u7528\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff1a\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE\uff09   $$   MSE(D) = \\frac{1}{|D|} \\sum_{i \\in D} (y_i - \\bar{y}_D)^2   $$</li> <li>\u200b\u5212\u5206\u200b\u540e\u200b\uff1a   $$   \\Delta MSE = MSE(D) - \\left( \\frac{|D_1|}{|D|} MSE(D_1) + \\frac{|D_2|}{|D|} MSE(D_2) \\right)   $$</li> <li>\u200b\u9009\u62e9\u200b\u4f7f\u200b \\(\\Delta MSE\\) \u200b\u6700\u5927\u200b\u7684\u200b\u7279\u5f81\u200b\u548c\u200b\u5207\u5206\u200b\u70b9\u200b</li> </ul>"},{"location":"machine/interview/#2_17","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570","text":""},{"location":"machine/interview/#3-cart","title":"3\ufe0f\u20e3 \u200b\u51b3\u7b56\u6811\u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b\u200b\uff08\u200b\u4ee5\u200bCART\u200b\u5206\u7c7b\u200b\u6811\u4e3a\u4f8b\u200b\uff09","text":"<ol> <li> <p>\u200b\u6839\u200b\u8282\u70b9\u200b\u9009\u62e9\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u7279\u5f81\u200b \\(A_j\\)\uff0c\u200b\u5c1d\u8bd5\u200b\u6bcf\u4e2a\u200b\u53ef\u80fd\u200b\u5212\u5206\u200b\u70b9\u200b \\(s\\)</li> <li>\u200b\u8ba1\u7b97\u200b\u5212\u5206\u200b\u540e\u200b\u7684\u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b\uff1a   $$   Gini(D, A_j, s) = \\frac{|D_{\\le s}|}{|D|} Gini(D_{\\le s}) + \\frac{|D_{&gt; s}|}{|D|} Gini(D_{&gt; s})   $$</li> </ul> </li> <li> <p>\u200b\u9009\u62e9\u200b\u6700\u5c0f\u200b \\(Gini(D,A_j,s)\\)</p> </li> <li> <p>\u200b\u9012\u5f52\u200b\u5212\u5206\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u200b\u5de6\u53f3\u200b\u5b50\u6811\u200b\u91cd\u590d\u200b\u4ee5\u4e0a\u200b\u8fc7\u7a0b\u200b</li> <li> <p>\u200b\u76f4\u5230\u200b\u6ee1\u8db3\u200b\u505c\u6b62\u200b\u6761\u4ef6\u200b\uff1a</p> <ul> <li>\u200b\u8282\u70b9\u200b\u6837\u672c\u6570\u200b &lt; min_samples_split</li> <li>\u200b\u6811\u200b\u6df1\u5ea6\u200b\u8fbe\u5230\u200b max_depth</li> <li>\u200b\u8282\u70b9\u200b\u7eaf\u5ea6\u200b\u8fbe\u5230\u200b\u9608\u503c\u200b</li> </ul> </li> </ul> </li> </ol>"},{"location":"machine/interview/#4_9","title":"4\ufe0f\u20e3 \u200b\u8bc4\u4f30\u200b\u6307\u6807","text":"<ul> <li> <p>\u200b\u5206\u7c7b\u200b\u6811\u200b\uff1a</p> <ul> <li>\u200b\u51c6\u786e\u7387\u200b\uff08Accuracy\uff09</li> <li>\u200b\u7cbe\u786e\u200b\u7387\u200b / \u200b\u53ec\u56de\u200b\u7387\u200b / F1</li> <li>ROC / AUC</li> </ul> </li> <li> <p>\u200b\u56de\u5f52\u200b\u6811\u200b\uff1a</p> <ul> <li>\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE\uff09</li> <li>\u200b\u5747\u200b\u65b9\u6839\u200b\u8bef\u5dee\u200b\uff08RMSE\uff09</li> <li>\u200b\u5e73\u5747\u200b\u7edd\u5bf9\u8bef\u5dee\u200b\uff08MAE\uff09</li> <li>\u200b\u5224\u5b9a\u200b\u7cfb\u6570\u200b \\(R^2\\)</li> </ul> </li> </ul>"},{"location":"machine/interview/#5_4","title":"5\ufe0f\u20e3 \u200b\u5b9e\u73b0\u200b\u4ee3\u7801","text":""},{"location":"machine/interview/#1_19","title":"1\ufe0f\u20e3 \u200b\u5206\u7c7b\u200b\u6811","text":"<pre><code>from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\n\nX_train, X_test, y_train, y_test = ...\nclf = DecisionTreeClassifier(criterion='gini', max_depth=5, min_samples_split=10)\nclf.fit(X_train, y_train)\n\ny_pred = clf.predict(X_test)\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred))\n</code></pre>"},{"location":"machine/interview/#2_18","title":"2\ufe0f\u20e3 \u200b\u56de\u5f52\u200b\u6811","text":"<pre><code>from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import mean_squared_error\n\nreg = DecisionTreeRegressor(criterion='squared_error', max_depth=5)\nreg.fit(X_train, y_train)\n\ny_pred = reg.predict(X_test)\nmse = mean_squared_error(y_test, y_pred)\nprint(\"MSE:\", mse)\n</code></pre>"},{"location":"machine/interview/#3_10","title":"3\ufe0f\u20e3 \u200b\u53ef\u89c6\u5316","text":"<pre><code>from sklearn.tree import export_text, plot_tree\nimport matplotlib.pyplot as plt\n\n# \u200b\u6587\u672c\u200b\u5c55\u793a\u200b\nprint(export_text(clf, feature_names=feature_names))\n\n# \u200b\u56fe\u5f62\u200b\u5c55\u793a\u200b\nplt.figure(figsize=(12,8))\nplot_tree(clf, feature_names=feature_names, class_names=class_names, filled=True)\nplt.show()\n</code></pre>"},{"location":"machine/interview/#6_4","title":"6\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u4f18\u5316","text":"<ol> <li> <p>\u200b\u526a\u679d\u200b\uff08Pruning\uff09\uff1a</p> <ul> <li>\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b</li> <li>\u200b\u9884\u200b\u526a\u679d\u200b\uff1a\u200b\u8bbe\u7f6e\u200b max_depth, min_samples_split, min_samples_leaf</li> <li>\u200b\u540e\u200b\u526a\u679d\u200b\uff1a\u200b\u8bad\u7ec3\u200b\u5b8c\u6210\u200b\u540e\u200b\u5220\u9664\u200b\u8d21\u732e\u200b\u4e0d\u5927\u200b\u7684\u200b\u8282\u70b9\u200b</li> </ul> </li> <li> <p>\u200b\u96c6\u6210\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li>Bagging \u2192 \u200b\u968f\u673a\u200b\u68ee\u6797\u200b\uff08Random Forest\uff09</li> <li>Boosting \u2192 GBDT / XGBoost</li> </ul> </li> <li> <p>\u200b\u7279\u5f81\u200b\u5904\u7406\u200b\uff1a</p> <ul> <li>\u200b\u7c7b\u522b\u200b\u7279\u5f81\u200b\u7f16\u7801\u200b\uff1aOne-hot \u200b\u6216\u200b Ordinal</li> <li>\u200b\u8fde\u7eed\u200b\u7279\u5f81\u200b\u65e0\u9700\u200b\u6807\u51c6\u5316\u200b</li> </ul> </li> <li> <p>\u200b\u53c2\u6570\u200b\u8c03\u4f18\u200b\uff1a</p> <ul> <li>max_depth, min_samples_split, min_samples_leaf, max_features, ccp_alpha</li> </ul> </li> </ol>"},{"location":"machine/interview/#7_3","title":"7\ufe0f\u20e3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u5bb9\u6613\u200b\u8fc7\u200b\u62df\u5408\u200b \u2192 \u200b\u63a7\u5236\u200b\u6811\u6df1\u200b\u3001\u200b\u526a\u679d\u200b\u6216\u200b\u96c6\u6210\u200b</li> <li>\u200b\u5bf9\u200b\u566a\u58f0\u200b\u654f\u611f\u200b</li> <li>\u200b\u6837\u672c\u5206\u5e03\u200b\u4e0d\u200b\u5e73\u8861\u200b \u2192 \u200b\u5f71\u54cd\u200b\u5212\u5206\u200b\u8d28\u91cf\u200b\uff0c\u200b\u53ef\u7528\u200b class_weight</li> <li>\u200b\u5bf9\u200b\u8fde\u7eed\u200b\u7279\u5f81\u200b\u3001\u200b\u7c7b\u522b\u200b\u7279\u5f81\u200b\u5904\u7406\u200b\u4e0d\u540c\u200b</li> </ul>"},{"location":"machine/interview/#8_3","title":"8\ufe0f\u20e3 \u200b\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b 1. \u200b\u6613\u200b\u7406\u89e3\u200b\u3001\u200b\u53ef\u200b\u89e3\u91ca\u200b\uff0c\u200b\u53ef\u200b\u53ef\u89c6\u5316\u200b 1. \u200b\u5bb9\u6613\u200b\u8fc7\u200b\u62df\u5408\u200b 2. \u200b\u65e0\u9700\u200b\u7279\u5f81\u200b\u5f52\u4e00\u5316\u200b 2. \u200b\u5bf9\u200b\u566a\u58f0\u200b\u654f\u611f\u200b 3. \u200b\u53ef\u200b\u5904\u7406\u200b\u6570\u503c\u200b\u548c\u200b\u7c7b\u522b\u200b\u7279\u5f81\u200b 3. \u200b\u5355\u68f5\u6811\u200b\u4e0d\u200b\u7a33\u5b9a\u200b 4. \u200b\u53ef\u4ee5\u200b\u5904\u7406\u200b\u591a\u200b\u7c7b\u522b\u200b\u95ee\u9898\u200b 4. \u200b\u9884\u6d4b\u200b\u7cbe\u5ea6\u200b\u6709\u9650\u200b\uff08\u200b\u9700\u200b\u96c6\u6210\u200b\u63d0\u5347\u200b\uff09"},{"location":"machine/interview/#knn","title":"\u4e5d\u200b\u3001KNN","text":""},{"location":"machine/interview/#91-knn","title":"9.1 KNN\u200b\u6559\u7a0b","text":""},{"location":"machine/interview/#1_20","title":"1\ufe0f\u20e3 \u200b\u539f\u7406","text":"<p>KNN \u200b\u662f\u200b\u4e00\u79cd\u200b\u57fa\u4e8e\u200b\u5b9e\u4f8b\u200b\u7684\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u65e2\u200b\u53ef\u4ee5\u200b\u505a\u200b\u5206\u7c7b\u200b\uff08Classification\uff09\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u505a\u200b\u56de\u5f52\u200b\uff08Regression\uff09\u3002 \u200b\u6838\u5fc3\u601d\u60f3\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u6570\u636e\u200b\u70b9\u200b \\(x\\)\uff0c\u200b\u627e\u5230\u200b\u8bad\u7ec3\u200b\u96c6\u4e2d\u200b\u4e0e\u200b\u5b83\u200b\u6700\u8fd1\u200b\u7684\u200b \\(K\\) \u200b\u4e2a\u70b9\u200b\u3002</li> <li> <p>\u200b\u6839\u636e\u200b\u8fd9\u4e9b\u200b\u70b9\u200b\u7684\u200b\u6807\u7b7e\u200b\u6765\u200b\u9884\u6d4b\u200b\u65b0\u200b\u6837\u672c\u200b\u7684\u200b\u6807\u7b7e\u200b\uff1a</p> </li> <li> <p>\u200b\u5206\u7c7b\u200b\uff1a\u200b\u591a\u6570\u200b\u6295\u7968\u200b\uff08majority voting\uff09\u3002</p> </li> <li>\u200b\u56de\u5f52\u200b\uff1a\u200b\u5e73\u5747\u200b\u6216\u200b\u52a0\u6743\u200b\u5e73\u5747\u200b\u3002</li> </ul>"},{"location":"machine/interview/#11_1","title":"1.1 \u200b\u8ddd\u79bb\u200b\u5ea6\u91cf","text":"<p>\u200b\u5e38\u7528\u200b\u7684\u200b\u8ddd\u79bb\u200b\u5ea6\u91cf\u200b\u65b9\u6cd5\u200b\uff1a</p> <ol> <li> <p>\u200b\u6b27\u6c0f\u200b\u8ddd\u79bb\u200b\uff08Euclidean distance\uff09\uff1a    $$    d(x_i, x_j) = \\sqrt{\\sum_{m=1}^{M} (x_{i,m} - x_{j,m})^2}    $$</p> </li> <li> <p>\u200b\u66fc\u54c8\u987f\u200b\u8ddd\u79bb\u200b\uff08Manhattan distance\uff09\uff1a    $$    d(x_i, x_j) = \\sum_{m=1}^{M} |x_{i,m} - x_{j,m}|    $$</p> </li> <li> <p>\u200b\u95f5\u53ef\u200b\u592b\u65af\u57fa\u200b\u8ddd\u79bb\u200b\uff08Minkowski distance\uff09\uff1a    $$    d(x_i, x_j) = \\left(\\sum_{m=1}^{M} |x_{i,m} - x_{j,m}|^p \\right)^{1/p}    $$</p> </li> <li> <p>\u200b\u5f53\u200b \\(p=2\\) \u2192 \u200b\u6b27\u6c0f\u200b\u8ddd\u79bb\u200b</p> </li> <li> <p>\u200b\u5f53\u200b \\(p=1\\) \u2192 \u200b\u66fc\u54c8\u987f\u200b\u8ddd\u79bb\u200b</p> </li> <li> <p>\u200b\u52a0\u6743\u200b\u8ddd\u79bb\u200b\uff08\u200b\u5e38\u7528\u200b\u4e8e\u200b KNN \u200b\u56de\u5f52\u200b\u6216\u200b\u52a0\u6743\u200b\u5206\u7c7b\u200b\uff09\uff1a    $$    w_i = \\frac{1}{d(x, x_i) + \\epsilon}, \\quad \\hat{y} = \\frac{\\sum_{i=1}^K w_i y_i}{\\sum_{i=1}^K w_i}    $$</p> </li> </ol>"},{"location":"machine/interview/#2_19","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570","text":"<p>KNN \u200b\u672c\u8d28\u200b\u662f\u975e\u200b\u53c2\u6570\u200b\u3001\u200b\u61d2\u60f0\u200b\u5b66\u4e60\u200b\uff08lazy learning\uff09\uff0c\u200b\u6ca1\u6709\u200b\u663e\u5f0f\u200b\u7684\u200b\u53c2\u6570\u200b\u62df\u5408\u200b\uff0c\u200b\u6240\u4ee5\u200b \u200b\u6ca1\u6709\u200b\u8bad\u7ec3\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f46\u662f\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4ee5\u4e0b\u200b\u65b9\u5f0f\u200b\u63cf\u8ff0\u200b\u9884\u6d4b\u200b\u8bef\u5dee\u200b\uff1a</p>"},{"location":"machine/interview/#21_2","title":"2.1 \u200b\u5206\u7c7b\u200b\u635f\u5931","text":"<p>\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u6d4b\u8bd5\u200b\u6837\u672c\u200b \\(x\\)\uff0c\u200b\u9884\u6d4b\u200b\u7c7b\u522b\u200b \\(\\hat{y}\\) \u200b\u4e0e\u200b\u771f\u5b9e\u200b\u7c7b\u522b\u200b \\(y\\) \u200b\u7684\u200b\u635f\u5931\u200b\u901a\u5e38\u200b\u7528\u200b0-1 \u200b\u635f\u5931\u200b\uff1a $$ L(y, \\hat{y}) = \\begin{cases} 0, &amp; y = \\hat{y} \\ 1, &amp; y \\neq \\hat{y} \\end{cases} $$</p>"},{"location":"machine/interview/#22_2","title":"2.2 \u200b\u56de\u5f52\u200b\u635f\u5931","text":"<p>\u200b\u5e38\u7528\u200b \u200b\u5e73\u65b9\u200b\u8bef\u5dee\u200b \u200b\u6216\u200b \u200b\u7edd\u5bf9\u8bef\u5dee\u200b\uff1a</p> <ul> <li>\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE\uff09\uff1a   $$   L(y, \\hat{y}) = (y - \\hat{y})^2   $$</li> <li>\u200b\u5e73\u5747\u200b\u7edd\u5bf9\u8bef\u5dee\u200b\uff08MAE\uff09\uff1a   $$   L(y, \\hat{y}) = |y - \\hat{y}|   $$</li> </ul>"},{"location":"machine/interview/#3_11","title":"3\ufe0f\u20e3 \u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":""},{"location":"machine/interview/#31_1","title":"3.1 \u200b\u5206\u7c7b","text":"<p>\u200b\u5047\u8bbe\u200b\u627e\u5230\u200b \\(K\\) \u200b\u4e2a\u200b\u6700\u8fd1\u200b\u90bb\u200b\u6837\u672c\u200b\u96c6\u5408\u200b \\(N_K(x)\\)\uff0c\u200b\u6bcf\u4e2a\u200b\u90bb\u5c45\u200b \\(x_i\\) \u200b\u7684\u200b\u7c7b\u522b\u200b\u4e3a\u200b \\(y_i\\)\uff1a</p> \\[ \\hat{y} = \\arg\\max_{c \\in C} \\sum_{x_i \\in N_K(x)} \\mathbf{1}(y_i = c) \\] <ul> <li>\\(\\mathbf{1}(\\cdot)\\) \u200b\u4e3a\u200b\u6307\u793a\u200b\u51fd\u6570\u200b</li> <li>\\(C\\) \u200b\u662f\u200b\u7c7b\u522b\u200b\u96c6\u5408\u200b</li> </ul> <p>\u200b\u52a0\u6743\u200b\u6295\u7968\u200b\uff1a $$ \\hat{y} = \\arg\\max_{c \\in C} \\sum_{x_i \\in N_K(x)} w_i \\mathbf{1}(y_i = c) $$ \u200b\u5176\u4e2d\u200b \\(w_i = \\frac{1}{d(x, x_i) + \\epsilon}\\)</p>"},{"location":"machine/interview/#32_3","title":"3.2 \u200b\u56de\u5f52","text":"<p>\u200b\u627e\u5230\u200b \\(K\\) \u200b\u4e2a\u200b\u90bb\u5c45\u200b \\(N_K(x)\\)\uff0c\u200b\u53d6\u200b\u5747\u503c\u200b\u6216\u200b\u52a0\u6743\u200b\u5747\u503c\u200b\uff1a $$ \\hat{y} = \\frac{1}{K} \\sum_{x_i \\in N_K(x)} y_i $$ \u200b\u52a0\u6743\u200b\uff1a $$ \\hat{y} = \\frac{\\sum_{x_i \\in N_K(x)} w_i y_i}{\\sum_{x_i \\in N_K(x)} w_i} $$</p>"},{"location":"machine/interview/#4_10","title":"4\ufe0f\u20e3 \u200b\u8bc4\u4f30\u200b\u6307\u6807","text":""},{"location":"machine/interview/#41_1","title":"4.1 \u200b\u5206\u7c7b","text":"<ul> <li>\u200b\u51c6\u786e\u7387\u200b\uff08Accuracy\uff09\uff1a   $$   \\text{Accuracy} = \\frac{\\text{\u200b\u9884\u6d4b\u200b\u6b63\u786e\u200b\u6837\u672c\u6570\u200b}}{\\text{\u200b\u603b\u200b\u6837\u672c\u6570\u200b}}   $$</li> <li>\u200b\u7cbe\u786e\u200b\u7387\u200b\u3001\u200b\u53ec\u56de\u200b\u7387\u200b\u3001F1-score\uff1a   $$   \\text{Precision} = \\frac{TP}{TP+FP}, \\quad   \\text{Recall} = \\frac{TP}{TP+FN}, \\quad   F1 = \\frac{2 \\cdot Precision \\cdot Recall}{Precision + Recall}   $$</li> </ul>"},{"location":"machine/interview/#42_1","title":"4.2 \u200b\u56de\u5f52","text":"<ul> <li>\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE\uff09</li> <li>\u200b\u5747\u200b\u65b9\u6839\u200b\u8bef\u5dee\u200b\uff08RMSE\uff09</li> <li>\u200b\u5e73\u5747\u200b\u7edd\u5bf9\u8bef\u5dee\u200b\uff08MAE\uff09</li> <li>\\(R^2\\) \u200b\u51b3\u5b9a\u7cfb\u6570\u200b\uff1a   $$   R^2 = 1 - \\frac{\\sum_i (y_i - \\hat{y}_i)^2}{\\sum_i (y_i - \\bar{y})^2}   $$</li> </ul>"},{"location":"machine/interview/#5_5","title":"5\ufe0f\u20e3 \u200b\u5b9e\u73b0\u200b\u4ee3\u7801","text":"<pre><code>from sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score, classification_report\n\n# 1. \u200b\u6570\u636e\u200b\u51c6\u5907\u200b\ndata = load_iris()\nX, y = data.data, data.target\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# 2. \u200b\u7279\u5f81\u200b\u5f52\u4e00\u5316\u200b\uff08KNN \u200b\u5bf9\u200b\u8ddd\u79bb\u200b\u654f\u611f\u200b\uff09\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n\n# 3. KNN \u200b\u5206\u7c7b\u200b\nknn = KNeighborsClassifier(n_neighbors=5, weights='distance')  # \u200b\u6743\u91cd\u200b\u8ddd\u79bb\u200b\u52a0\u6743\u200b\nknn.fit(X_train, y_train)\n\n# 4. \u200b\u9884\u6d4b\u200b\ny_pred = knn.predict(X_test)\n\n# 5. \u200b\u8bc4\u4f30\u200b\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\n</code></pre> <p>\u200b\u56de\u5f52\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u53ea\u200b\u9700\u7528\u200b <code>KNeighborsRegressor</code>\uff0c\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u6539\u4e3a\u200b MSE/MAE\u3002</p>"},{"location":"machine/interview/#6_5","title":"6\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u4f18\u5316","text":"<ol> <li> <p>\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b K \u200b\u503c\u200b\uff1a</p> <ul> <li>K \u200b\u592a\u5c0f\u200b \u2192 \u200b\u6613\u53d7\u200b\u566a\u58f0\u200b\u5f71\u54cd\u200b\uff0c\u200b\u8fc7\u200b\u62df\u5408\u200b</li> <li>K \u200b\u592a\u200b\u5927\u200b \u2192 \u200b\u8fc7\u4e8e\u200b\u5e73\u6ed1\u200b\uff0c\u200b\u6b20\u200b\u62df\u5408\u200b</li> <li>\u200b\u5e38\u7528\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\u9009\u62e9\u200b\u6700\u4f18\u200b K</li> </ul> </li> <li> <p>\u200b\u8ddd\u79bb\u200b\u5ea6\u91cf\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u200b\u8fde\u7eed\u53d8\u91cf\u200b\uff1a\u200b\u6b27\u6c0f\u200b\u3001\u200b\u66fc\u54c8\u987f\u200b</li> <li>\u200b\u5bf9\u200b\u7c7b\u522b\u200b\u53d8\u91cf\u200b\uff1a\u200b\u6c49\u660e\u200b\u8ddd\u79bb\u200b\uff08Hamming distance\uff09</li> </ul> </li> <li> <p>\u200b\u7279\u5f81\u200b\u7f29\u653e\u200b\uff1a</p> <ul> <li>KNN \u200b\u5bf9\u200b\u5c3a\u5ea6\u200b\u654f\u611f\u200b\uff0c\u200b\u5efa\u8bae\u200b\u6807\u51c6\u5316\u200b\uff08StandardScaler\uff09\u200b\u6216\u200b\u5f52\u4e00\u5316\u200b\uff08MinMaxScaler\uff09</li> </ul> </li> <li> <p>\u200b\u6743\u91cd\u200b\u9009\u62e9\u200b\uff1a</p> <ul> <li>\u200b\u8ddd\u79bb\u200b\u52a0\u6743\u200b\u6295\u7968\u200b\u80fd\u200b\u63d0\u5347\u200b\u9884\u6d4b\u200b\u6548\u679c\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200b\u6570\u636e\u5206\u5e03\u200b\u4e0d\u5747\u200b\u65f6\u200b</li> </ul> </li> <li> <p>\u200b\u964d\u7ef4\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u200b\u7ef4\u5ea6\u200b\u8fc7\u9ad8\u200b \u2192 \u201c\u200b\u7ef4\u5ea6\u200b\u707e\u96be\u200b\u201d\uff0c\u200b\u53ef\u7528\u200b PCA \u200b\u964d\u7ef4\u200b</li> </ul> </li> </ol>"},{"location":"machine/interview/#7_4","title":"7\ufe0f\u20e3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>KNN \u200b\u662f\u200b\u60f0\u6027\u200b\u5b66\u4e60\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u5feb\u200b\uff0c\u200b\u4f46\u200b\u9884\u6d4b\u200b\u6162\u200b\uff08\u200b\u9700\u200b\u8ba1\u7b97\u200b\u6240\u6709\u200b\u8bad\u7ec3\u6837\u672c\u200b\u8ddd\u79bb\u200b\uff09</li> <li>\u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u201c\u200b\u8ddd\u79bb\u200b\u96c6\u4e2d\u200b\u73b0\u8c61\u200b\u201d\uff0c\u200b\u5f71\u54cd\u200b\u6548\u679c\u200b</li> <li>\u200b\u5bf9\u200b\u5f02\u5e38\u200b\u503c\u200b\u654f\u611f\u200b\uff08\u200b\u5c24\u5176\u200b\u662f\u200b K \u200b\u5c0f\u65f6\u200b\uff09</li> <li>\u200b\u9700\u8981\u200b\u8db3\u591f\u200b\u5185\u5b58\u200b\u5b58\u50a8\u200b\u5168\u90e8\u200b\u8bad\u7ec3\u200b\u96c6\u200b</li> <li>\u200b\u7279\u5f81\u200b\u5c3a\u5ea6\u200b\u4e0d\u200b\u4e00\u81f4\u200b\u9700\u200b\u5f52\u4e00\u5316\u200b\u6216\u200b\u6807\u51c6\u5316\u200b</li> </ul>"},{"location":"machine/interview/#8_4","title":"8\ufe0f\u20e3 \u200b\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u7b80\u5355\u200b\u76f4\u89c2\u200b\uff0c\u200b\u5bb9\u6613\u200b\u7406\u89e3\u200b\u548c\u200b\u5b9e\u73b0\u200b \u200b\u9884\u6d4b\u200b\u9636\u6bb5\u200b\u8ba1\u7b97\u200b\u91cf\u200b\u5927\u200b\uff0c\u200b\u5b58\u50a8\u200b\u9700\u6c42\u200b\u9ad8\u200b \u200b\u65e0\u9700\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u65e0\u200b\u53c2\u6570\u200b\u5b66\u4e60\u200b \u200b\u5bf9\u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b\u6548\u679c\u200b\u5dee\u200b\uff08\u200b\u7ef4\u5ea6\u200b\u707e\u96be\u200b\uff09 \u200b\u53ef\u200b\u7528\u4e8e\u200b\u5206\u7c7b\u200b\u4e0e\u200b\u56de\u5f52\u200b \u200b\u5bf9\u200b\u5f02\u5e38\u200b\u503c\u200b\u654f\u611f\u200b \u200b\u53ef\u200b\u901a\u8fc7\u200b\u8ddd\u79bb\u200b\u52a0\u6743\u200b\u63d0\u5347\u200b\u6027\u80fd\u200b K \u200b\u503c\u200b\u9009\u62e9\u200b\u5bf9\u200b\u7ed3\u679c\u200b\u5f71\u54cd\u200b\u5927\u200b \u200b\u53ef\u200b\u5904\u7406\u200b\u975e\u7ebf\u6027\u200b\u8fb9\u754c\u200b \u200b\u7279\u5f81\u200b\u5c3a\u5ea6\u200b\u654f\u611f\u200b\uff0c\u200b\u9700\u8981\u200b\u5f52\u4e00\u5316"},{"location":"machine/interview/#svm","title":"\u5341\u200b\u3001SVM","text":""},{"location":"machine/interview/#101-svm","title":"10.1 SVM\u200b\u6559\u7a0b","text":""},{"location":"machine/interview/#1_21","title":"1\ufe0f\u20e3 \u200b\u539f\u7406","text":"<p>SVM \u200b\u662f\u200b\u4e00\u79cd\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5206\u7c7b\u200b\u548c\u200b\u56de\u5f52\u200b\uff08\u200b\u5206\u7c7b\u200b\u6700\u200b\u5e38\u7528\u200b\uff09\u3002\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\uff1a</p> <ol> <li>\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\uff1a\u200b\u5728\u200b\u7279\u5f81\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u5bfb\u627e\u200b\u4e00\u4e2a\u200b\u6700\u4f18\u200b\u8d85\u5e73\u9762\u200b\uff08Hyperplane\uff09\uff0c\u200b\u5c06\u200b\u4e0d\u540c\u200b\u7c7b\u522b\u200b\u7684\u200b\u6837\u672c\u200b\u5206\u5f00\u200b\u3002</li> <li>\u200b\u6700\u5927\u5316\u200b\u95f4\u9694\u200b\uff08Margin\uff09\uff1a\u200b\u5728\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u5206\u9694\u200b\u8d85\u5e73\u9762\u200b\u4e2d\u200b\uff0c\u200b\u9009\u62e9\u200b\u4f7f\u200b\u4e24\u7c7b\u200b\u6837\u672c\u200b\u6700\u8fd1\u200b\u70b9\u5230\u200b\u8d85\u5e73\u9762\u200b\u8ddd\u79bb\u200b\u6700\u5927\u200b\u7684\u200b\u5e73\u9762\u200b\u3002</li> <li>\u200b\u652f\u6301\u200b\u5411\u91cf\u200b\uff1a\u200b\u79bb\u200b\u8d85\u5e73\u9762\u200b\u6700\u8fd1\u200b\u7684\u200b\u8bad\u7ec3\u6837\u672c\u200b\u70b9\u200b\u79f0\u4e3a\u200b\u652f\u6301\u200b\u5411\u91cf\u200b\uff0c\u200b\u5b83\u4eec\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u8d85\u5e73\u9762\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002</li> </ol>"},{"location":"machine/interview/#11_2","title":"1.1 \u200b\u8d85\u5e73\u9762\u200b\u516c\u5f0f","text":"<p>\u200b\u5bf9\u4e8e\u200b\u7ebf\u6027\u200b\u53ef\u5206\u200b\u7684\u200b\u60c5\u51b5\u200b\uff1a</p> \\[ \\mathbf{w} \\cdot \\mathbf{x} + b = 0 \\] <ul> <li>\\(\\mathbf{w}\\)\uff1a\u200b\u6cd5\u200b\u5411\u91cf\u200b\uff0c\u200b\u51b3\u5b9a\u200b\u8d85\u5e73\u9762\u200b\u65b9\u5411\u200b</li> <li>\\(b\\)\uff1a\u200b\u504f\u7f6e\u200b\u9879\u200b</li> <li>\u200b\u5206\u7c7b\u200b\u51b3\u7b56\u51fd\u6570\u200b\uff1a   $$   f(\\mathbf{x}) = \\text{sign}(\\mathbf{w}\\cdot \\mathbf{x} + b)   $$</li> </ul>"},{"location":"machine/interview/#2_20","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570","text":""},{"location":"machine/interview/#21-svm","title":"2.1 \u200b\u7ebf\u6027\u200b\u53ef\u200b\u5206\u200b SVM","text":"<ul> <li>\u200b\u6700\u5927\u5316\u200b\u95f4\u9694\u200b \\(\\gamma = \\frac{2}{|\\mathbf{w}|}\\)</li> <li>\u200b\u7ea6\u675f\u6761\u4ef6\u200b\uff1a   $$   y_i (\\mathbf{w} \\cdot \\mathbf{x}_i + b) \\ge 1, \\quad i=1,\\dots,n   $$</li> <li>\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\uff08\u200b\u786c\u200b\u95f4\u9694\u200b\u6700\u5927\u5316\u200b\uff09\uff1a   $$   \\min_{\\mathbf{w},b} \\frac{1}{2}|\\mathbf{w}|^2   $$</li> </ul>"},{"location":"machine/interview/#22-svm","title":"2.2 \u200b\u7ebf\u6027\u200b\u4e0d\u53ef\u200b\u5206\u200b\uff08\u200b\u8f6f\u200b\u95f4\u9694\u200b\uff09SVM","text":"<ul> <li>\u200b\u5f15\u5165\u200b\u677e\u5f1b\u200b\u53d8\u91cf\u200b \\(\\xi_i \\ge 0\\)\uff1a   $$   y_i (\\mathbf{w} \\cdot \\mathbf{x}_i + b) \\ge 1 - \\xi_i   $$</li> <li>\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff08\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\uff09\uff1a   $$   \\min_{\\mathbf{w},b,\\xi} \\frac{1}{2}|\\mathbf{w}|^2 + C \\sum_{i=1}^n \\xi_i   $$</li> <li>\\(C\\)\uff1a\u200b\u6b63\u5219\u200b\u5316\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e73\u8861\u200b\u95f4\u9694\u200b\u6700\u5927\u5316\u200b\u548c\u200b\u5206\u7c7b\u200b\u9519\u8bef\u200b</li> </ul>"},{"location":"machine/interview/#23-hinge","title":"2.3 Hinge \u200b\u635f\u5931\u200b\u51fd\u6570","text":"<ul> <li>SVM \u200b\u7684\u200b\u5206\u7c7b\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u53ef\u200b\u8868\u793a\u200b\u4e3a\u200b hinge loss\uff1a   $$   L(y_i, f(\\mathbf{x}_i)) = \\max(0, 1 - y_i f(\\mathbf{x}_i))   $$</li> <li>\u200b\u603b\u200b\u635f\u5931\u200b\uff1a   $$   \\min_{\\mathbf{w},b} \\frac{1}{2} |\\mathbf{w}|^2 + C \\sum_{i=1}^n \\max(0, 1 - y_i (\\mathbf{w}\\cdot \\mathbf{x}_i + b))   $$</li> </ul>"},{"location":"machine/interview/#3_12","title":"3\ufe0f\u20e3 \u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":""},{"location":"machine/interview/#31-primal-problem","title":"3.1 \u200b\u539f\u59cb\u200b\u95ee\u9898\u200b\uff08Primal Problem\uff09","text":"\\[ \\min_{\\mathbf{w},b,\\xi} \\frac{1}{2}|\\mathbf{w}|^2 + C \\sum_{i=1}^n \\xi_i \\] \\[ \\text{s.t. } y_i (\\mathbf{w}\\cdot \\mathbf{x}_i + b) \\ge 1 - \\xi_i, \\quad \\xi_i \\ge 0 \\]"},{"location":"machine/interview/#32-dual-problem","title":"3.2 \u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\uff08Dual Problem\uff09","text":"<p>\u200b\u901a\u8fc7\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u4e58\u5b50\u200b \\(\\alpha_i \\ge 0\\)\uff1a</p> \\[ L(\\mathbf{w},b,\\xi, \\alpha, \\mu) = \\frac{1}{2}|\\mathbf{w}|^2 + C \\sum_i \\xi_i - \\sum_i \\alpha_i [y_i(\\mathbf{w}\\cdot \\mathbf{x}_i+b) - 1 + \\xi_i] - \\sum_i \\mu_i \\xi_i \\] <p>\u200b\u5bf9\u200b \\(\\mathbf{w}, b, \\xi\\) \u200b\u6c42\u200b\u504f\u5bfc\u200b\uff0c\u200b\u5f97\u5230\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\uff1a</p> \\[ \\max_{\\alpha} \\sum_i \\alpha_i - \\frac{1}{2}\\sum_{i,j} \\alpha_i \\alpha_j y_i y_j \\mathbf{x}_i \\cdot \\mathbf{x}_j \\] \\[ \\text{s.t. } 0 \\le \\alpha_i \\le C, \\quad \\sum_i \\alpha_i y_i = 0 \\] <ul> <li>\u200b\u9884\u6d4b\u200b\u51fd\u6570\u200b\uff1a   $$   f(\\mathbf{x}) = \\text{sign}\\left(\\sum_{i \\in SV} \\alpha_i y_i \\mathbf{x}_i \\cdot \\mathbf{x} + b \\right)   $$</li> <li>\u200b\u53ea\u200b\u4f9d\u8d56\u200b\u652f\u6301\u200b\u5411\u91cf\u200b\uff08SV\uff09</li> </ul>"},{"location":"machine/interview/#33-kernel-trick","title":"3.3 \u200b\u6838\u200b\u65b9\u6cd5\u200b\uff08Kernel Trick\uff09","text":"<p>\u200b\u7ebf\u6027\u200b\u4e0d\u53ef\u200b\u5206\u200b\u65f6\u200b\uff0c\u200b\u5c06\u200b\u6570\u636e\u200b\u6620\u5c04\u200b\u5230\u200b\u9ad8\u200b\u7ef4\u7a7a\u95f4\u200b\uff1a</p> \\[ f(\\mathbf{x}) = \\text{sign}\\left(\\sum_{i \\in SV} \\alpha_i y_i K(\\mathbf{x}_i, \\mathbf{x}) + b \\right) \\] <p>\u200b\u5e38\u7528\u200b\u6838\u200b\u51fd\u6570\u200b\uff1a</p> <ol> <li>\u200b\u7ebf\u6027\u200b\u6838\u200b\uff1a\\(K(\\mathbf{x}_i,\\mathbf{x}_j) = \\mathbf{x}_i \\cdot \\mathbf{x}_j\\)</li> <li>\u200b\u591a\u9879\u5f0f\u200b\u6838\u200b\uff1a\\(K(\\mathbf{x}_i,\\mathbf{x}_j) = (\\mathbf{x}_i\\cdot \\mathbf{x}_j + 1)^d\\)</li> <li>RBF\uff08\u200b\u9ad8\u65af\u200b\u6838\u200b\uff09\uff1a\\(K(\\mathbf{x}_i,\\mathbf{x}_j) = \\exp(-\\gamma |\\mathbf{x}_i-\\mathbf{x}_j|^2)\\)</li> <li>Sigmoid \u200b\u6838\u200b\uff1a\\(K(\\mathbf{x}_i,\\mathbf{x}_j) = \\tanh(\\kappa \\mathbf{x}_i \\cdot \\mathbf{x}_j + \\theta)\\)</li> </ol>"},{"location":"machine/interview/#4_11","title":"4\ufe0f\u20e3 \u200b\u8bc4\u4f30\u200b\u6307\u6807","text":"<ul> <li>\u200b\u5206\u7c7b\u200b\u51c6\u786e\u7387\u200b\uff08Accuracy\uff09</li> <li>\u200b\u7cbe\u786e\u200b\u7387\u200b\u3001\u200b\u53ec\u56de\u200b\u7387\u200b\u3001F1-score</li> <li>ROC-AUC\uff08\u200b\u9002\u5408\u200b\u4e8c\u200b\u5206\u7c7b\u200b\uff09</li> <li>\u200b\u6df7\u6dc6\u200b\u77e9\u9635\u200b</li> </ul> <p>\u200b\u56de\u5f52\u200b\u95ee\u9898\u200b\u53ef\u7528\u200b MSE\u3001MAE\u3001\\(R^2\\) \u200b\u7b49\u200b\u6307\u6807\u200b\uff08SVR\uff09\u3002</p>"},{"location":"machine/interview/#5_6","title":"5\ufe0f\u20e3 \u200b\u5b9e\u73b0\u200b\u4ee3\u7801","text":"<pre><code>from sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score, classification_report\n\n# 1. \u200b\u6570\u636e\u200b\ndata = load_iris()\nX, y = data.data, data.target\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# 2. \u200b\u7279\u5f81\u200b\u6807\u51c6\u5316\u200b\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n\n# 3. SVM \u200b\u5206\u7c7b\u5668\u200b\nsvm_clf = SVC(kernel='rbf', C=1.0, gamma='scale')  # RBF \u200b\u6838\u200b\nsvm_clf.fit(X_train, y_train)\n\n# 4. \u200b\u9884\u6d4b\u200b\ny_pred = svm_clf.predict(X_test)\n\n# 5. \u200b\u8bc4\u4f30\u200b\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\n</code></pre> <p>\u200b\u56de\u5f52\u200b\u4f7f\u7528\u200b <code>SVR(kernel='rbf')</code>\uff0c\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4e3a\u200b epsilon-insensitive loss\u3002</p>"},{"location":"machine/interview/#6_6","title":"6\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u4f18\u5316","text":"<ol> <li> <p>\u200b\u9009\u62e9\u200b\u6838\u200b\u51fd\u6570\u200b\uff1a</p> <ul> <li>\u200b\u7ebf\u6027\u200b\u6838\u200b\u9002\u5408\u200b\u9ad8\u7ef4\u200b\u7a00\u758f\u200b\u6570\u636e\u200b</li> <li>RBF \u200b\u6838\u200b\u9002\u5408\u200b\u5927\u591a\u6570\u200b\u975e\u7ebf\u6027\u200b\u95ee\u9898\u200b</li> </ul> </li> <li> <p>\u200b\u8c03\u8282\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li>\\(C\\)\uff1a\u200b\u6b63\u5219\u200b\u5316\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fc7\u5927\u200b\u5bb9\u6613\u200b\u8fc7\u200b\u62df\u5408\u200b\uff0c\u200b\u8fc7\u5c0f\u6b20\u200b\u62df\u5408\u200b</li> <li>\\(\\gamma\\)\uff08RBF \u200b\u6838\u200b\uff09\uff1a\u200b\u6838\u200b\u5bbd\u5ea6\u200b\uff0c\u200b\u8fc7\u5927\u8fc7\u200b\u62df\u5408\u200b\uff0c\u200b\u8fc7\u5c0f\u6b20\u200b\u62df\u5408\u200b</li> </ul> </li> <li> <p>\u200b\u7279\u5f81\u200b\u7f29\u653e\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u200b\u8ddd\u79bb\u200b\u654f\u611f\u200b\uff0c\u200b\u9700\u200b\u5f52\u4e00\u5316\u200b\u6216\u200b\u6807\u51c6\u5316\u200b</li> </ul> </li> <li> <p>\u200b\u4f7f\u7528\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\u9009\u62e9\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li><code>GridSearchCV</code> \u200b\u6216\u200b <code>RandomizedSearchCV</code></li> </ul> </li> <li> <p>\u200b\u5904\u7406\u200b\u7c7b\u522b\u200b\u4e0d\u200b\u5e73\u8861\u200b\uff1a</p> <ul> <li>\u200b\u8bbe\u7f6e\u200b <code>class_weight='balanced'</code></li> </ul> </li> </ol>"},{"location":"machine/interview/#7_5","title":"7\ufe0f\u20e3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u5bf9\u200b\u5927\u89c4\u6a21\u200b\u6570\u636e\u200b\u8bad\u7ec3\u200b\u65f6\u95f4\u200b\u957f\u200b</li> <li>\u200b\u5bf9\u200b\u566a\u58f0\u200b\u548c\u200b\u5f02\u5e38\u200b\u503c\u200b\u654f\u611f\u200b\uff08\u200b\u5c24\u5176\u200b C \u200b\u5927\u65f6\u200b\uff09</li> <li>\u200b\u6838\u200b\u51fd\u6570\u200b\u9009\u62e9\u200b\u548c\u200b\u53c2\u6570\u200b\u8c03\u8282\u200b\u5f88\u200b\u5173\u952e\u200b</li> <li>\u200b\u9ad8\u7ef4\u200b\u7a00\u758f\u200b\u6570\u636e\u200b\u7ebf\u6027\u200b\u6838\u200b\u66f4\u200b\u9002\u5408\u200b</li> <li>SVM \u200b\u672c\u8d28\u200b\u662f\u200b\u4e8c\u200b\u5206\u7c7b\u200b\uff0c\u200b\u591a\u200b\u5206\u7c7b\u200b\u9700\u200b\u201c\u200b\u4e00\u5bf9\u200b\u591a\u200b\u201d\u200b\u6216\u200b\u201c\u200b\u4e00\u5bf9\u4e00\u200b\u201d\u200b\u7b56\u7565\u200b</li> </ul>"},{"location":"machine/interview/#8_5","title":"8\ufe0f\u20e3 \u200b\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u5bf9\u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b\u6548\u679c\u200b\u597d\u200b \u200b\u5bf9\u5927\u200b\u6570\u636e\u200b\u96c6\u200b\u8bad\u7ec3\u200b\u6162\u200b\uff0c\u200b\u9884\u6d4b\u200b\u6162\u200b \u200b\u9002\u5408\u200b\u975e\u7ebf\u6027\u200b\u8fb9\u754c\u200b\uff08\u200b\u6838\u200b\u65b9\u6cd5\u200b\uff09 \u200b\u5bf9\u200b\u53c2\u6570\u200b\uff08C, \u03b3\uff09\u200b\u654f\u611f\u200b \u200b\u5177\u6709\u200b\u5168\u5c40\u200b\u6700\u4f18\u200b\u89e3\u200b\uff08\u200b\u51f8\u200b\u4f18\u5316\u200b\uff09 \u200b\u5bf9\u200b\u566a\u58f0\u200b\u548c\u200b\u5f02\u5e38\u200b\u503c\u200b\u654f\u611f\u200b \u200b\u53ef\u4ee5\u200b\u5904\u7406\u200b\u7ebf\u6027\u200b\u548c\u200b\u975e\u7ebf\u6027\u200b\u95ee\u9898\u200b \u200b\u6838\u200b\u65b9\u6cd5\u200b\u4e0d\u6613\u200b\u89e3\u91ca\u200b \u200b\u652f\u6301\u200b\u591a\u200b\u5206\u7c7b\u200b\u6269\u5c55\u200b \u200b\u5bf9\u200b\u7c7b\u522b\u200b\u4e0d\u200b\u5e73\u8861\u200b\u95ee\u9898\u200b\u654f\u611f"},{"location":"machine/interview/#_118","title":"\u5341\u4e00\u200b\u3001\u200b\u96c6\u6210\u200b\u5b66\u4e60","text":""},{"location":"machine/interview/#111","title":"11.1 \u200b\u6559\u7a0b","text":""},{"location":"machine/interview/#1_22","title":"1\ufe0f\u20e3 \u200b\u539f\u7406","text":"<p>\u200b\u96c6\u6210\u200b\u5b66\u4e60\u200b\u662f\u200b\u4e00\u7c7b\u200b\u5c06\u200b\u591a\u4e2a\u200b\u6a21\u578b\u200b\u7ec4\u5408\u200b\u5728\u200b\u4e00\u8d77\u200b\u4ee5\u200b\u63d0\u9ad8\u200b\u6574\u4f53\u200b\u6027\u80fd\u200b\u7684\u200b\u7b97\u6cd5\u200b\u601d\u60f3\u200b\uff0c\u200b\u5176\u200b\u6838\u5fc3\u7406\u5ff5\u200b\u662f\u200b\uff1a</p> <p>\u201c\u200b\u591a\u4e2a\u200b\u5f31\u200b\u5b66\u4e60\u200b\u5668\u200b\u7ed3\u5408\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u5f3a\u200b\u5b66\u4e60\u200b\u5668\u200b\u3002\u201d</p> <p>\u200b\u96c6\u6210\u200b\u65b9\u6cd5\u200b\u4e3b\u8981\u200b\u6709\u200b\u4e24\u7c7b\u200b\uff1a</p>"},{"location":"machine/interview/#11-baggingbootstrap-aggregating","title":"1.1 Bagging\uff08Bootstrap Aggregating\uff0c\u200b\u81ea\u52a9\u200b\u805a\u5408\u200b\uff09","text":"<ul> <li>\u200b\u6838\u5fc3\u601d\u60f3\u200b\uff1a\u200b\u901a\u8fc7\u200b\u5bf9\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u8fdb\u884c\u200b\u6709\u653e\u56de\u200b\u62bd\u6837\u200b\u751f\u6210\u200b\u591a\u4e2a\u200b\u4e0d\u540c\u200b\u5b50\u96c6\u200b\uff0c\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u5b50\u96c6\u200b\u4e0a\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200b\u591a\u4e2a\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u5e73\u5747\u200b\uff08\u200b\u56de\u5f52\u200b\uff09\u200b\u6216\u200b\u6295\u7968\u200b\uff08\u200b\u5206\u7c7b\u200b\uff09\u3002</li> <li> <p>\u200b\u4ee3\u8868\u200b\u7b97\u6cd5\u200b\uff1a</p> <ul> <li>\u200b\u968f\u673a\u200b\u68ee\u6797\u200b\uff08Random Forest\uff09</li> </ul> </li> <li> <p>\u200b\u4f5c\u7528\u200b\uff1a\u200b\u964d\u4f4e\u200b\u6a21\u578b\u200b\u65b9\u5dee\u200b\uff08Variance\uff09</p> </li> </ul> <p>\u200b\u516c\u5f0f\u200b\uff1a $$ \\hat{y} = \\frac{1}{M} \\sum_{m=1}^M h_m(x) $$</p> <ul> <li>\\(h_m(x)\\)\uff1a\u200b\u7b2c\u200b \\(m\\) \u200b\u4e2a\u57fa\u200b\u6a21\u578b\u200b\u7684\u200b\u9884\u6d4b\u200b</li> <li>\\(M\\)\uff1a\u200b\u57fa\u200b\u6a21\u578b\u200b\u6570\u91cf\u200b</li> </ul>"},{"location":"machine/interview/#12-boosting","title":"1.2 Boosting\uff08\u200b\u63d0\u5347\u200b\u65b9\u6cd5\u200b\uff09","text":"<ul> <li>\u200b\u6838\u5fc3\u601d\u60f3\u200b\uff1a\u200b\u987a\u5e8f\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u65b0\u200b\u6a21\u578b\u200b\u91cd\u70b9\u200b\u5173\u6ce8\u200b\u524d\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b\u9519\u8bef\u200b\u7684\u200b\u6837\u672c\u200b\u3002</li> <li> <p>\u200b\u4ee3\u8868\u200b\u7b97\u6cd5\u200b\uff1a</p> <ul> <li>AdaBoost</li> <li>Gradient Boosting / XGBoost / LightGBM / CatBoost</li> </ul> </li> <li> <p>\u200b\u4f5c\u7528\u200b\uff1a\u200b\u964d\u4f4e\u200b\u6a21\u578b\u200b\u504f\u5dee\u200b\uff08Bias\uff09</p> </li> </ul> <p>AdaBoost \u200b\u5206\u7c7b\u200b\u9884\u6d4b\u200b\u516c\u5f0f\u200b\uff1a $$ H(x) = \\text{sign}\\left(\\sum_{m=1}^M \\alpha_m h_m(x)\\right) $$</p> <ul> <li>\\(\\alpha_m\\)\uff1a\u200b\u7b2c\u200b \\(m\\) \u200b\u4e2a\u200b\u6a21\u578b\u200b\u7684\u200b\u6743\u91cd\u200b</li> <li>\\(h_m(x)\\)\uff1a\u200b\u57fa\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\uff08\u200b\u901a\u5e38\u200b\u4e3a\u200b \\(\\pm 1\\)\uff09</li> </ul>"},{"location":"machine/interview/#13-stacking","title":"1.3 Stacking\uff08\u200b\u5806\u53e0\u200b\uff09","text":"<ul> <li>\u200b\u6838\u5fc3\u601d\u60f3\u200b\uff1a\u200b\u4f7f\u7528\u200b\u591a\u4e2a\u200b\u4e0d\u540c\u200b\u6a21\u578b\u200b\u751f\u6210\u200b\u4e00\u5c42\u200b\u8f93\u51fa\u200b\uff0c\u200b\u518d\u7528\u200b\u4e00\u4e2a\u200b\u201c\u200b\u5143\u200b\u5b66\u4e60\u200b\u5668\u200b\uff08Meta-learner\uff09\u201d\u200b\u7efc\u5408\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u3002</li> <li>\u200b\u516c\u5f0f\u200b\uff1a</li> </ul> <p>$$   z_i = [h_1(x_i), h_2(x_i), \\dots, h_M(x_i)]   $$</p> <p>$$   \\hat{y}_i = g(z_i)   $$</p> <ul> <li>\\(h_m\\)\uff1a\u200b\u7b2c\u200b \\(m\\) \u200b\u4e2a\u57fa\u200b\u6a21\u578b\u200b</li> <li>\\(g\\)\uff1a\u200b\u5143\u200b\u5b66\u4e60\u200b\u5668\u200b\uff08\u200b\u5982\u200b\u903b\u8f91\u200b\u56de\u5f52\u200b\u3001\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\uff09</li> </ul>"},{"location":"machine/interview/#2_21","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570","text":"<p>\u200b\u96c6\u6210\u200b\u5b66\u4e60\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u53d6\u51b3\u4e8e\u200b\u57fa\u200b\u6a21\u578b\u200b\u548c\u200b\u4efb\u52a1\u200b\u7c7b\u578b\u200b\uff1a</p>"},{"location":"machine/interview/#21_3","title":"2.1 \u200b\u5206\u7c7b","text":"<ul> <li>0-1 \u200b\u635f\u5931\u200b\uff1a   $$   L(y, \\hat{y}) = \\mathbf{1}(y \\neq \\hat{y})   $$</li> <li>\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b\uff08Soft Voting \u200b\u53ef\u7528\u200b\uff09\uff1a   $$   L(y, \\hat{p}) = - \\sum_{c} y_c \\log \\hat{p}_c   $$</li> </ul>"},{"location":"machine/interview/#22_3","title":"2.2 \u200b\u56de\u5f52","text":"<ul> <li>\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE\uff09\uff1a   $$   L(y, \\hat{y}) = (y - \\hat{y})^2   $$</li> <li>\u200b\u5e73\u5747\u200b\u7edd\u5bf9\u8bef\u5dee\u200b\uff08MAE\uff09\uff1a   $$   L(y, \\hat{y}) = |y - \\hat{y}|   $$</li> </ul>"},{"location":"machine/interview/#3_13","title":"3\ufe0f\u20e3 \u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":""},{"location":"machine/interview/#31-bagging","title":"3.1 Bagging \u200b\u65b9\u5dee\u200b\u51cf\u5c11\u200b\u516c\u5f0f","text":"<p>\u200b\u5047\u8bbe\u200b\u57fa\u200b\u6a21\u578b\u200b\u65b9\u5dee\u200b\u4e3a\u200b \\(\\sigma^2\\)\uff0c\u200b\u76f8\u5173\u6027\u200b\u4e3a\u200b \\(\\rho\\)\uff1a $$ \\text{Var}(\\hat{y}_{bag}) = \\rho \\sigma^2 + \\frac{1-\\rho}{M}\\sigma^2 $$</p> <ul> <li>\\(M\\)\uff1a\u200b\u57fa\u200b\u6a21\u578b\u200b\u6570\u91cf\u200b</li> <li>\u200b\u7ed3\u8bba\u200b\uff1a\u200b\u57fa\u200b\u6a21\u578b\u200b\u8d8a\u200b\u591a\u200b\uff0c\u200b\u65b9\u5dee\u200b\u8d8a\u5c0f\u200b\uff0c\u200b\u4e14\u57fa\u200b\u6a21\u578b\u200b\u76f8\u5173\u6027\u200b\u8d8a\u4f4e\u200b\u6548\u679c\u200b\u8d8a\u200b\u597d\u200b</li> </ul>"},{"location":"machine/interview/#32-boosting","title":"3.2 Boosting \u200b\u52a0\u6743\u200b\u7ec4\u5408","text":"<p>AdaBoost\uff1a</p> <ol> <li>\u200b\u521d\u59cb\u5316\u200b\u6837\u672c\u200b\u6743\u91cd\u200b \\(w_i = 1/n\\)</li> <li>\u200b\u8bad\u7ec3\u200b\u57fa\u200b\u6a21\u578b\u200b \\(h_m(x)\\)\uff0c\u200b\u8ba1\u7b97\u200b\u52a0\u6743\u200b\u9519\u8bef\u7387\u200b\uff1a    $$    \\epsilon_m = \\frac{\\sum_{i=1}^n w_i \\mathbf{1}(y_i \\neq h_m(x_i))}{\\sum_{i=1}^n w_i}    $$</li> <li>\u200b\u57fa\u200b\u6a21\u578b\u200b\u6743\u91cd\u200b\uff1a    $$    \\alpha_m = \\frac{1}{2} \\ln \\frac{1-\\epsilon_m}{\\epsilon_m}    $$</li> <li>\u200b\u66f4\u65b0\u200b\u6837\u672c\u200b\u6743\u91cd\u200b\uff1a    $$    w_i \\leftarrow w_i \\cdot \\exp(-\\alpha_m y_i h_m(x_i))    $$</li> </ol>"},{"location":"machine/interview/#4_12","title":"4\ufe0f\u20e3 \u200b\u8bc4\u4f30\u200b\u6307\u6807","text":""},{"location":"machine/interview/#41_2","title":"4.1 \u200b\u5206\u7c7b","text":"<ul> <li>Accuracy\u3001Precision\u3001Recall\u3001F1-score</li> <li>ROC-AUC</li> </ul>"},{"location":"machine/interview/#42_2","title":"4.2 \u200b\u56de\u5f52","text":"<ul> <li>MSE\u3001RMSE\u3001MAE</li> <li>\\(R^2\\)</li> </ul>"},{"location":"machine/interview/#5_7","title":"5\ufe0f\u20e3 \u200b\u5b9e\u73b0\u200b\u4ee3\u7801","text":""},{"location":"machine/interview/#51-bagging","title":"5.1 Bagging\uff08\u200b\u968f\u673a\u200b\u68ee\u6797\u200b\uff09","text":"<pre><code>from sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, classification_report\n\ndata = load_iris()\nX_train, X_test, y_train, y_test = train_test_split(data.data, data.target, test_size=0.2, random_state=42)\n\nrf = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=42)\nrf.fit(X_train, y_train)\ny_pred = rf.predict(X_test)\n\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\n</code></pre>"},{"location":"machine/interview/#52-boostingxgboost","title":"5.2 Boosting\uff08XGBoost\uff09","text":"<pre><code>import xgboost as xgb\nfrom sklearn.metrics import accuracy_score\n\nxg_clf = xgb.XGBClassifier(n_estimators=100, max_depth=3, learning_rate=0.1, random_state=42)\nxg_clf.fit(X_train, y_train)\ny_pred = xg_clf.predict(X_test)\n\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred))\n</code></pre>"},{"location":"machine/interview/#6_7","title":"6\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u4f18\u5316","text":"<ol> <li> <p>Bagging</p> <ul> <li>\u200b\u589e\u52a0\u200b\u57fa\u200b\u6a21\u578b\u200b\u6570\u91cf\u200b\uff08n_estimators\uff09</li> <li>\u200b\u964d\u4f4e\u200b\u57fa\u200b\u6a21\u578b\u200b\u6df1\u5ea6\u200b\u4ee5\u200b\u51cf\u5c11\u200b\u8fc7\u200b\u62df\u5408\u200b</li> <li>\u200b\u968f\u673a\u200b\u9009\u200b\u7279\u5f81\u200b\uff08feature subsampling\uff09</li> </ul> </li> <li> <p>Boosting</p> <ul> <li>\u200b\u8c03\u8282\u200b\u5b66\u4e60\u200b\u7387\u200b\uff08learning_rate\uff09</li> <li>\u200b\u8c03\u8282\u200b\u6811\u200b\u6df1\u5ea6\u200b\uff08max_depth\uff09</li> <li>\u200b\u8c03\u8282\u200b\u57fa\u200b\u6a21\u578b\u200b\u6570\u91cf\u200b\uff08n_estimators\uff09</li> <li>\u200b\u4f7f\u7528\u200b\u6b63\u5219\u200b\u5316\u200b\uff08L1/L2\uff09</li> </ul> </li> <li> <p>Stacking</p> <ul> <li>\u200b\u591a\u6837\u5316\u200b\u57fa\u200b\u6a21\u578b\u200b\u7c7b\u578b\u200b\uff08\u200b\u51b3\u7b56\u6811\u200b\u3001SVM\u3001\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u7b49\u200b\uff09</li> <li>\u200b\u4f7f\u7528\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\u9632\u6b62\u200b\u5143\u200b\u5b66\u4e60\u200b\u5668\u8fc7\u200b\u62df\u5408\u200b</li> </ul> </li> </ol>"},{"location":"machine/interview/#7_6","title":"7\ufe0f\u20e3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>Bagging \u200b\u66f4\u200b\u9002\u5408\u200b\u9ad8\u200b\u65b9\u5dee\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b\u51b3\u7b56\u6811\u200b\uff09</li> <li>Boosting \u200b\u66f4\u200b\u9002\u5408\u200b\u9ad8\u200b\u504f\u5dee\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u6d45\u6811\u200b\uff09</li> <li>\u200b\u6837\u672c\u200b\u4e0d\u200b\u5e73\u8861\u200b\u95ee\u9898\u200b\u9700\u200b\u4f7f\u7528\u200b\u52a0\u6743\u200b\u6216\u91cd\u200b\u91c7\u6837\u200b</li> <li>\u200b\u57fa\u200b\u6a21\u578b\u200b\u9009\u62e9\u200b\u4e0e\u200b\u591a\u6837\u6027\u200b\u5f71\u54cd\u200b\u6548\u679c\u200b</li> <li>\u200b\u6837\u672c\u91cf\u200b\u5927\u65f6\u200b\u8ba1\u7b97\u200b\u5f00\u9500\u200b\u5927\u200b</li> </ul>"},{"location":"machine/interview/#8_6","title":"8\ufe0f\u20e3 \u200b\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u63d0\u5347\u200b\u6a21\u578b\u200b\u51c6\u786e\u6027\u200b\u548c\u200b\u7a33\u5b9a\u6027\u200b \u200b\u8bad\u7ec3\u200b\u548c\u200b\u9884\u6d4b\u200b\u65f6\u95f4\u200b\u8f83\u957f\u200b \u200b\u964d\u4f4e\u200b\u8fc7\u200b\u62df\u5408\u200b\u98ce\u9669\u200b\uff08Bagging\uff09 \u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\u5dee\u200b \u200b\u53ef\u200b\u5904\u7406\u200b\u9ad8\u200b\u7ef4\u548c\u200b\u590d\u6742\u200b\u6570\u636e\u200b \u200b\u53c2\u6570\u200b\u8c03\u8282\u200b\u8f83\u200b\u591a\u200b\uff08Boosting\uff09 \u200b\u7075\u6d3b\u200b\uff0c\u200b\u53ef\u200b\u7ec4\u5408\u200b\u591a\u79cd\u200b\u6a21\u578b\u200b \u200b\u6837\u672c\u91cf\u200b\u5c0f\u200b\u53ef\u80fd\u200b\u6548\u679c\u200b\u4e0d\u4f73\u200b \u200b\u9002\u7528\u200b\u4e8e\u200b\u5206\u7c7b\u200b\u4e0e\u200b\u56de\u5f52\u200b Stacking \u200b\u9700\u200b\u4ea4\u53c9\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u590d\u6742"},{"location":"machine/interview/#_119","title":"\u5341\u4e8c\u200b\u3001\u200b\u65e0\u200b\u76d1\u7763\u200b\u5b66\u4e60","text":""},{"location":"machine/interview/#121","title":"12.1 \u200b\u805a\u7c7b","text":""},{"location":"machine/interview/#1_23","title":"1\ufe0f\u20e3 \u200b\u539f\u7406","text":"<p>\u200b\u805a\u7c7b\u200b\u7b97\u6cd5\u200b\u901a\u8fc7\u200b\u67d0\u79cd\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u6216\u200b\u8ddd\u79bb\u200b\u5ea6\u91cf\u200b\uff0c\u200b\u5c06\u200b\u6570\u636e\u200b\u96c6\u200b\u5212\u5206\u200b\u4e3a\u200b\u82e5\u5e72\u200b\u7c07\u200b\uff08Cluster\uff09\u3002</p> <p>\u200b\u5e38\u89c1\u200b\u805a\u7c7b\u200b\u65b9\u6cd5\u200b\uff1a</p> \u200b\u7c7b\u578b\u200b \u200b\u7b97\u6cd5\u200b \u200b\u7279\u70b9\u200b \u200b\u5212\u5206\u200b\u5f0f\u200b K-Means\u3001K-Medoids \u200b\u7b80\u5355\u200b\u9ad8\u6548\u200b\uff0c\u200b\u9002\u5408\u200b\u51f8\u5f62\u200b\u7c07\u200b \u200b\u5c42\u6b21\u200b\u5f0f\u200b Agglomerative\u3001Divisive \u200b\u6784\u5efa\u200b\u6811\u72b6\u200b\u7ed3\u6784\u200b\uff0c\u200b\u76f4\u89c2\u200b \u200b\u5bc6\u5ea6\u200b\u5f0f\u200b DBSCAN\u3001OPTICS \u200b\u53ef\u200b\u53d1\u73b0\u200b\u4efb\u610f\u200b\u5f62\u72b6\u200b\u7c07\u200b\uff0c\u200b\u5904\u7406\u200b\u566a\u58f0\u200b \u200b\u6a21\u578b\u200b\u5f0f\u200b \u200b\u9ad8\u65af\u200b\u6df7\u5408\u200b\u6a21\u578b\u200b\uff08GMM\uff09 \u200b\u57fa\u4e8e\u200b\u6982\u7387\u6a21\u578b\u200b\uff0c\u200b\u8f6f\u805a\u7c7b\u200b \u200b\u8c31\u200b\u805a\u7c7b\u200b Spectral Clustering \u200b\u57fa\u4e8e\u200b\u56fe\u8bba\u200b\uff0c\u200b\u9002\u5408\u200b\u590d\u6742\u200b\u5f62\u72b6"},{"location":"machine/interview/#2_22","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570","text":""},{"location":"machine/interview/#21-k-means","title":"2.1 K-Means","text":"<ul> <li>\u200b\u76ee\u6807\u200b\u662f\u200b\u6700\u5c0f\u5316\u200b\u7c07\u5185\u200b\u5e73\u65b9\u200b\u8bef\u5dee\u200b\uff08WCSS, within-cluster sum of squares\uff09\uff1a   $$   J = \\sum_{k=1}^{K} \\sum_{x_i \\in C_k} |x_i - \\mu_k|^2   $$</li> <li>\\(\\mu_k\\)\uff1a\u200b\u7b2c\u200b \\(k\\) \u200b\u4e2a\u200b\u7c07\u200b\u7684\u200b\u8d28\u5fc3\u200b</li> <li>\u200b\u4f18\u5316\u200b\u8fc7\u7a0b\u200b\u5373\u200b\u6700\u5c0f\u5316\u200b\u7c07\u5185\u200b\u5e73\u65b9\u200b\u8ddd\u79bb\u200b</li> </ul>"},{"location":"machine/interview/#22-gmm","title":"2.2 \u200b\u9ad8\u65af\u200b\u6df7\u5408\u200b\u6a21\u578b\u200b\uff08GMM\uff09","text":"<ul> <li>\u200b\u6700\u5927\u5316\u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b\uff1a   $$   \\log L(\\theta) = \\sum_{i=1}^{n} \\log \\left( \\sum_{k=1}^{K} \\pi_k \\mathcal{N}(x_i | \\mu_k, \\Sigma_k) \\right)   $$</li> <li>\\(\\pi_k\\)\uff1a\u200b\u7c07\u200b\u6743\u91cd\u200b</li> <li>\\(\\mathcal{N}\\)\uff1a\u200b\u9ad8\u65af\u5206\u5e03\u200b</li> </ul>"},{"location":"machine/interview/#23-dbscan","title":"2.3 DBSCAN","text":"<ul> <li> <p>\u200b\u6ca1\u6709\u200b\u660e\u786e\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff0c\u200b\u57fa\u4e8e\u200b\u5bc6\u5ea6\u200b\u53ef\u8fbe\u6027\u200b\uff1a</p> <ul> <li>\u200b\u6838\u5fc3\u200b\u70b9\u200b\uff1a\u200b\u90bb\u57df\u200b\u5185\u200b\u6837\u672c\u6570\u200b \u2265 MinPts</li> <li>\u200b\u7c07\u7531\u200b\u6838\u5fc3\u200b\u70b9\u200b\u53ca\u5176\u200b\u53ef\u8fbe\u70b9\u200b\u7ec4\u6210\u200b</li> </ul> </li> </ul>"},{"location":"machine/interview/#3_14","title":"3\ufe0f\u20e3 \u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":"<ol> <li>\u200b\u521d\u59cb\u5316\u200b \\(K\\) \u200b\u4e2a\u200b\u8d28\u5fc3\u200b \\(\\mu_k\\)</li> <li>\u200b\u5206\u914d\u200b\u6b65\u9aa4\u200b\uff08Assignment\uff09\uff1a    $$    C_k = { x_i : |x_i - \\mu_k|^2 \\le |x_i - \\mu_j|^2, \\forall j }    $$</li> <li>\u200b\u66f4\u65b0\u200b\u6b65\u9aa4\u200b\uff08Update\uff09\uff1a    $$    \\mu_k = \\frac{1}{|C_k|} \\sum_{x_i \\in C_k} x_i    $$</li> <li>\u200b\u91cd\u590d\u200b 2-3 \u200b\u6b65\u200b\uff0c\u200b\u76f4\u5230\u200b\u8d28\u5fc3\u200b\u4e0d\u518d\u200b\u53d8\u5316\u200b\u6216\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u6536\u655b\u200b</li> </ol> <p>GMM \u200b\u4f7f\u7528\u200b EM \u200b\u7b97\u6cd5\u200b\uff1a</p> <ul> <li>E \u200b\u6b65\u200b\uff1a\u200b\u8ba1\u7b97\u200b\u540e\u9a8c\u200b\u6982\u7387\u200b   $$   \\gamma_{ik} = \\frac{\\pi_k \\mathcal{N}(x_i|\\mu_k, \\Sigma_k)}{\\sum_{j=1}^K \\pi_j \\mathcal{N}(x_i|\\mu_j, \\Sigma_j)}   $$</li> <li>M \u200b\u6b65\u200b\uff1a\u200b\u66f4\u65b0\u200b\u53c2\u6570\u200b   $$   \\mu_k = \\frac{\\sum_i \\gamma_{ik} x_i}{\\sum_i \\gamma_{ik}}, \\quad   \\Sigma_k = \\frac{\\sum_i \\gamma_{ik} (x_i - \\mu_k)(x_i - \\mu_k)^T}{\\sum_i \\gamma_{ik}}, \\quad   \\pi_k = \\frac{\\sum_i \\gamma_{ik}}{n}   $$</li> </ul>"},{"location":"machine/interview/#4_13","title":"4\ufe0f\u20e3 \u200b\u8bc4\u4f30\u200b\u6307\u6807","text":""},{"location":"machine/interview/#41_3","title":"4.1 \u200b\u5185\u90e8\u200b\u6307\u6807\u200b\uff08\u200b\u65e0\u9700\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\uff09","text":"<ul> <li>\u200b\u7c07\u5185\u200b\u5e73\u65b9\u548c\u200b\uff08WCSS\uff09</li> <li>\u200b\u8f6e\u5ed3\u200b\u7cfb\u6570\u200b\uff08Silhouette Score\uff09\uff1a   $$   s(i) = \\frac{b(i) - a(i)}{\\max(a(i), b(i))}   $$</li> <li>Calinski-Harabasz \u200b\u6307\u6570\u200b</li> <li>Davies-Bouldin \u200b\u6307\u6570\u200b</li> </ul>"},{"location":"machine/interview/#42_3","title":"4.2 \u200b\u5916\u90e8\u200b\u6307\u6807\u200b\uff08\u200b\u6709\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\uff09","text":"<ul> <li>\u200b\u8c03\u6574\u200b\u5170\u5fb7\u200b\u6307\u6570\u200b\uff08ARI, Adjusted Rand Index\uff09</li> <li>\u200b\u4e92\u4fe1\u606f\u200b\uff08AMI, Adjusted Mutual Information\uff09</li> <li>\u200b\u7eaf\u5ea6\u200b\uff08Purity\uff09</li> </ul>"},{"location":"machine/interview/#5_8","title":"5\ufe0f\u20e3 \u200b\u5b9e\u73b0\u200b\u4ee3\u7801","text":""},{"location":"machine/interview/#51-k-means","title":"5.1 K-Means","text":"<pre><code>from sklearn.datasets import make_blobs\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nX, _ = make_blobs(n_samples=300, centers=4, random_state=42)\n\nkmeans = KMeans(n_clusters=4, random_state=42)\nlabels = kmeans.fit_predict(X)\n\nprint(\"\u200b\u8d28\u5fc3\u200b:\\n\", kmeans.cluster_centers_)\nprint(\"\u200b\u8f6e\u5ed3\u200b\u7cfb\u6570\u200b:\", silhouette_score(X, labels))\n</code></pre>"},{"location":"machine/interview/#52-dbscan","title":"5.2 DBSCAN","text":"<pre><code>from sklearn.cluster import DBSCAN\n\ndb = DBSCAN(eps=0.5, min_samples=5)\nlabels = db.fit_predict(X)\n\nprint(\"\u200b\u7c07\u200b\u6807\u7b7e\u200b:\", set(labels))  # -1\u200b\u8868\u793a\u200b\u566a\u58f0\u200b\n</code></pre>"},{"location":"machine/interview/#53-gmm","title":"5.3 GMM","text":"<pre><code>from sklearn.mixture import GaussianMixture\n\ngmm = GaussianMixture(n_components=4, random_state=42)\ngmm.fit(X)\nlabels = gmm.predict(X)\n</code></pre>"},{"location":"machine/interview/#6_8","title":"6\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u4f18\u5316","text":"<ol> <li> <p>K \u200b\u503c\u200b\u9009\u62e9\u200b\uff08K-Means/GMM\uff09\uff1a</p> <ul> <li>\u200b\u8098\u90e8\u200b\u6cd5\u200b\uff08Elbow Method\uff09</li> <li>\u200b\u8f6e\u5ed3\u200b\u7cfb\u6570\u200b\u6700\u5927\u5316\u200b</li> </ul> </li> <li> <p>\u200b\u7279\u5f81\u200b\u7f29\u653e\u200b\uff1a</p> <ul> <li>\u200b\u805a\u7c7b\u200b\u5bf9\u200b\u5c3a\u5ea6\u200b\u654f\u611f\u200b\uff0c\u200b\u5efa\u8bae\u200b\u6807\u51c6\u5316\u200b\uff08StandardScaler\uff09</li> </ul> </li> <li> <p>\u200b\u521d\u59cb\u5316\u200b\u4f18\u5316\u200b\uff1a</p> <ul> <li>K-Means++ \u200b\u521d\u59cb\u5316\u200b\u8d28\u5fc3\u200b</li> </ul> </li> <li> <p>\u200b\u5f02\u5e38\u200b\u503c\u200b\u5904\u7406\u200b\uff1a</p> <ul> <li>\u200b\u5bc6\u5ea6\u200b\u7c7b\u200b\u7b97\u6cd5\u200b\uff08DBSCAN\uff09\u200b\u53ef\u200b\u5904\u7406\u200b\u566a\u58f0\u200b</li> </ul> </li> <li> <p>\u200b\u964d\u7ef4\u200b\uff1a</p> <ul> <li>PCA / t-SNE / UMAP \u200b\u7528\u4e8e\u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b\u53ef\u89c6\u5316\u200b\u6216\u200b\u964d\u7ef4\u805a\u7c7b\u200b</li> </ul> </li> </ol>"},{"location":"machine/interview/#7_7","title":"7\ufe0f\u20e3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>K-Means \u200b\u5bf9\u200b\u521d\u59cb\u200b\u8d28\u5fc3\u200b\u654f\u611f\u200b\uff0c\u200b\u53ef\u80fd\u200b\u9677\u5165\u200b\u5c40\u90e8\u200b\u6700\u4f18\u200b</li> <li>K-Means \u200b\u5047\u8bbe\u200b\u7c07\u4e3a\u200b\u51f8\u5f62\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u5904\u7406\u200b\u4efb\u610f\u200b\u5f62\u72b6\u200b\u7c07\u200b</li> <li>DBSCAN \u200b\u5bf9\u200b\u53c2\u6570\u200b\uff08eps, min_samples\uff09\u200b\u654f\u611f\u200b</li> <li>GMM \u200b\u5047\u8bbe\u200b\u6570\u636e\u200b\u7b26\u5408\u200b\u9ad8\u65af\u5206\u5e03\u200b</li> <li>\u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b\u6613\u53d7\u200b\u201c\u200b\u7ef4\u5ea6\u200b\u707e\u96be\u200b\u201d\u200b\u5f71\u54cd\u200b</li> <li>\u200b\u805a\u7c7b\u200b\u7ed3\u679c\u200b\u53ef\u80fd\u200b\u4e0d\u200b\u552f\u4e00\u200b\uff0c\u200b\u9700\u8981\u200b\u591a\u6b21\u200b\u5c1d\u8bd5\u200b</li> </ul>"},{"location":"machine/interview/#8_7","title":"8\ufe0f\u20e3 \u200b\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u65e0\u9700\u200b\u6807\u7b7e\u200b\uff0c\u200b\u9002\u5408\u200b\u65e0\u200b\u76d1\u7763\u200b\u4efb\u52a1\u200b \u200b\u7ed3\u679c\u200b\u4f9d\u8d56\u200b\u7b97\u6cd5\u200b\u548c\u200b\u53c2\u6570\u200b\u9009\u62e9\u200b \u200b\u53ef\u200b\u53d1\u73b0\u200b\u9690\u85cf\u200b\u7ed3\u6784\u200b K-Means \u200b\u5047\u8bbe\u200b\u7c07\u4e3a\u200b\u7403\u5f62\u200b DBSCAN \u200b\u80fd\u200b\u53d1\u73b0\u200b\u4efb\u610f\u200b\u5f62\u72b6\u200b\u7c07\u200b \u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b\u6548\u679c\u200b\u5dee\u200b\uff08\u200b\u9700\u964d\u7ef4\u200b\uff09 \u200b\u7b97\u6cd5\u200b\u79cd\u7c7b\u200b\u4e30\u5bcc\u200b\uff0c\u200b\u53ef\u9009\u6027\u200b\u5f3a\u200b \u200b\u5bf9\u200b\u566a\u58f0\u200b\u548c\u200b\u5f02\u5e38\u200b\u503c\u200b\u654f\u611f\u200b\uff08\u200b\u90e8\u5206\u200b\u7b97\u6cd5\u200b\uff09 \u200b\u53ef\u200b\u7ed3\u5408\u200b\u964d\u7ef4\u200b\u65b9\u6cd5\u200b\u53ef\u89c6\u5316\u200b\u6570\u636e\u200b \u200b\u805a\u7c7b\u200b\u7ed3\u679c\u200b\u89e3\u91ca\u6027\u200b\u6709\u9650"},{"location":"machine/interview/#122","title":"12.2 \u200b\u964d\u7ef4","text":""},{"location":"machine/interview/#1_24","title":"1\ufe0f\u20e3 \u200b\u539f\u7406","text":"<p>\u200b\u964d\u7ef4\u6307\u200b\u5c06\u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b\u6620\u5c04\u200b\u5230\u200b\u4f4e\u200b\u7ef4\u7a7a\u95f4\u200b\uff0c\u200b\u540c\u65f6\u200b\u5c3d\u91cf\u200b\u4fdd\u7559\u200b\u539f\u59cb\u6570\u636e\u200b\u7684\u200b\u4e3b\u8981\u200b\u7279\u5f81\u200b\u4fe1\u606f\u200b\u3002 \u200b\u76ee\u7684\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li>\u200b\u53bb\u200b\u566a\u200b\uff1a\u200b\u53bb\u9664\u200b\u5197\u4f59\u200b\u7279\u5f81\u200b</li> <li>\u200b\u53ef\u89c6\u5316\u200b\uff1a\u200b\u5c06\u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b\u6620\u5c04\u200b\u5230\u200b 2D \u200b\u6216\u200b 3D \u200b\u4fbf\u4e8e\u200b\u5c55\u793a\u200b</li> <li>\u200b\u51cf\u5c11\u200b\u8ba1\u7b97\u200b\u91cf\u200b\uff1a\u200b\u964d\u4f4e\u200b\u7b97\u6cd5\u200b\u590d\u6742\u5ea6\u200b</li> <li>\u200b\u7f13\u89e3\u200b\u7ef4\u5ea6\u200b\u707e\u96be\u200b\uff1a\u200b\u9ad8\u200b\u7ef4\u7a7a\u95f4\u200b\u4e2d\u200b\u6570\u636e\u200b\u7a00\u758f\u200b\uff0c\u200b\u964d\u4f4e\u200b\u6a21\u578b\u200b\u8fc7\u200b\u62df\u5408\u200b\u98ce\u9669\u200b</li> </ul> <p>\u200b\u5e38\u89c1\u200b\u65b9\u6cd5\u200b\u5206\u7c7b\u200b\uff1a</p> \u200b\u7c7b\u578b\u200b \u200b\u65b9\u6cd5\u200b \u200b\u7279\u70b9\u200b \u200b\u7ebf\u6027\u200b\u964d\u7ef4\u200b PCA\uff08\u200b\u4e3b\u200b\u6210\u5206\u200b\u5206\u6790\u200b\uff09\u3001LDA\uff08\u200b\u7ebf\u6027\u200b\u5224\u522b\u5206\u6790\u200b\uff09 \u200b\u7b80\u5355\u200b\u3001\u200b\u6548\u7387\u9ad8\u200b\uff0c\u200b\u5047\u8bbe\u200b\u6570\u636e\u200b\u7ebf\u6027\u200b\u7ed3\u6784\u200b \u200b\u975e\u7ebf\u6027\u200b\u964d\u7ef4\u200b t-SNE\u3001UMAP\u3001Isomap\u3001Kernel PCA \u200b\u9002\u5408\u200b\u590d\u6742\u200b\u7ed3\u6784\u200b\uff0c\u200b\u9ad8\u7ef4\u200b\u975e\u7ebf\u6027\u200b\u5173\u7cfb"},{"location":"machine/interview/#2_23","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570","text":""},{"location":"machine/interview/#21-pca","title":"2.1 PCA","text":"<ul> <li>\u200b\u76ee\u6807\u200b\u662f\u200b\u4fdd\u7559\u200b\u65b9\u5dee\u200b\u6700\u5927\u200b\uff1a   $$   \\max_{W} \\text{Tr}(W^T S W)   $$</li> <li>\\(S\\)\uff1a\u200b\u6570\u636e\u200b\u534f\u65b9\u5dee\u200b\u77e9\u9635\u200b</li> <li>\\(W\\)\uff1a\u200b\u964d\u7ef4\u200b\u6295\u5f71\u200b\u77e9\u9635\u200b</li> <li>\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u6700\u5c0f\u5316\u200b\u91cd\u6784\u200b\u8bef\u5dee\u200b\uff1a   $$   J = \\sum_{i=1}^{n} |x_i - \\hat{x}i|^2 = \\sum{i=1}^{n} |x_i - WW^T x_i|^2   $$</li> </ul>"},{"location":"machine/interview/#22-lda","title":"2.2 LDA","text":"<ul> <li>\u200b\u76ee\u6807\u200b\u662f\u200b\u6700\u5927\u5316\u200b\u7c7b\u95f4\u200b\u6563\u5ea6\u200b/\u200b\u7c7b\u5185\u200b\u6563\u5ea6\u200b\u6bd4\u200b\uff1a   $$   J(W) = \\frac{|W^T S_B W|}{|W^T S_W W|}   $$</li> <li>\\(S_B\\)\uff1a\u200b\u7c7b\u95f4\u200b\u6563\u5ea6\u200b\u77e9\u9635\u200b</li> <li>\\(S_W\\)\uff1a\u200b\u7c7b\u5185\u200b\u6563\u5ea6\u200b\u77e9\u9635\u200b</li> </ul>"},{"location":"machine/interview/#23-t-sne-umap","title":"2.3 t-SNE / UMAP","text":"<ul> <li> <p>t-SNE\uff1a\u200b\u6700\u5c0f\u5316\u200b\u9ad8\u7ef4\u200b\u6982\u7387\u5206\u5e03\u200b \\(P\\) \u200b\u4e0e\u200b\u4f4e\u7ef4\u200b\u6982\u7387\u5206\u5e03\u200b \\(Q\\) \u200b\u7684\u200b KL \u200b\u6563\u5ea6\u200b\uff1a   $$   C = KL(P|Q) = \\sum_i \\sum_j p_{ij} \\log \\frac{p_{ij}}{q_{ij}}   $$</p> </li> <li> <p>UMAP\uff1a\u200b\u6700\u5c0f\u5316\u200b\u56fe\u200b\u7684\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b\uff0c\u200b\u4fdd\u6301\u200b\u5c40\u90e8\u200b\u90bb\u57df\u200b\u7ed3\u6784\u200b\u3002</p> </li> </ul>"},{"location":"machine/interview/#3_15","title":"3\ufe0f\u20e3 \u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":""},{"location":"machine/interview/#31-pca","title":"3.1 PCA","text":"<ol> <li>\u200b\u6570\u636e\u4e2d\u5fc3\u200b\u5316\u200b\uff1a    $$    X \\leftarrow X - \\bar{X}    $$</li> <li>\u200b\u8ba1\u7b97\u200b\u534f\u65b9\u5dee\u200b\u77e9\u9635\u200b\uff1a    $$    S = \\frac{1}{n} X^T X    $$</li> <li>\u200b\u7279\u5f81\u503c\u200b\u5206\u89e3\u200b\uff1a    $$    S W = W \\Lambda    $$</li> <li>\u200b\u9009\u62e9\u200b\u524d\u200b \\(k\\) \u200b\u4e2a\u200b\u6700\u5927\u200b\u7279\u5f81\u503c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7279\u5f81\u5411\u91cf\u200b \\(W_k\\)\uff0c\u200b\u6295\u5f71\u200b\uff1a    $$    Z = X W_k    $$</li> </ol>"},{"location":"machine/interview/#32-lda","title":"3.2 LDA","text":"<ol> <li>\u200b\u8ba1\u7b97\u200b\u7c7b\u5185\u200b\u6563\u5ea6\u200b\u77e9\u9635\u200b \\(S_W\\)\uff1a    $$    S_W = \\sum_{c=1}^{C} \\sum_{x_i \\in c} (x_i - \\mu_c)(x_i - \\mu_c)^T    $$</li> <li>\u200b\u8ba1\u7b97\u200b\u7c7b\u95f4\u200b\u6563\u5ea6\u200b\u77e9\u9635\u200b \\(S_B\\)\uff1a    $$    S_B = \\sum_{c=1}^{C} n_c (\\mu_c - \\mu)(\\mu_c - \\mu)^T    $$</li> <li>\u200b\u6c42\u200b\u5e7f\u4e49\u200b\u7279\u5f81\u503c\u200b\u95ee\u9898\u200b\uff1a    $$    S_B W = \\Lambda S_W W    $$</li> <li>\u200b\u6295\u5f71\u200b\uff1a    $$    Z = X W    $$</li> </ol>"},{"location":"machine/interview/#4_14","title":"4\ufe0f\u20e3 \u200b\u8bc4\u4f30\u200b\u6307\u6807","text":"<ul> <li>\u200b\u4fdd\u7559\u200b\u65b9\u5dee\u200b\uff08Explained Variance\uff09\uff08PCA\uff09\uff1a   $$   \\text{Explained Variance Ratio} = \\frac{\\sum_{i=1}^k \\lambda_i}{\\sum_{i=1}^d \\lambda_i}   $$</li> <li>\u200b\u91cd\u6784\u200b\u8bef\u5dee\u200b\uff08Reconstruction Error\uff09</li> <li>\u200b\u4e0b\u6e38\u200b\u4efb\u52a1\u200b\u6027\u80fd\u200b\uff1a\u200b\u964d\u7ef4\u540e\u200b\u6570\u636e\u200b\u5728\u200b\u5206\u7c7b\u200b/\u200b\u56de\u5f52\u200b\u4e0a\u200b\u7684\u200b\u51c6\u786e\u7387\u200b\u6216\u200b \\(R^2\\)</li> <li>\u200b\u805a\u7c7b\u200b\u4fdd\u771f\u5ea6\u200b\uff1a\u200b\u964d\u7ef4\u540e\u200b\u805a\u7c7b\u200b\u8d28\u91cf\u200b\uff08\u200b\u8f6e\u5ed3\u200b\u7cfb\u6570\u200b\uff09</li> </ul>"},{"location":"machine/interview/#5_9","title":"5\ufe0f\u20e3 \u200b\u5b9e\u73b0\u200b\u4ee3\u7801","text":""},{"location":"machine/interview/#51-pca","title":"5.1 PCA","text":"<pre><code>from sklearn.decomposition import PCA\nfrom sklearn.datasets import load_iris\n\ndata = load_iris()\nX = data.data\n\npca = PCA(n_components=2)\nX_reduced = pca.fit_transform(X)\n\nprint(\"\u200b\u4fdd\u7559\u200b\u65b9\u5dee\u200b\u6bd4\u200b:\", pca.explained_variance_ratio_)\n</code></pre>"},{"location":"machine/interview/#52-lda","title":"5.2 LDA","text":"<pre><code>from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA\n\ny = data.target\nlda = LDA(n_components=2)\nX_lda = lda.fit_transform(X, y)\n</code></pre>"},{"location":"machine/interview/#53-t-sne","title":"5.3 t-SNE","text":"<pre><code>from sklearn.manifold import TSNE\n\ntsne = TSNE(n_components=2, random_state=42)\nX_tsne = tsne.fit_transform(X)\n</code></pre>"},{"location":"machine/interview/#6_9","title":"6\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u4f18\u5316","text":"<ul> <li> <p>\u200b\u9009\u62e9\u200b\u964d\u200b\u7ef4\u7ef4\u200b\u5ea6\u200b \\(k\\)\uff1a</p> <ul> <li>PCA\uff1a\u200b\u7d2f\u8ba1\u200b\u65b9\u5dee\u200b &gt; 90%</li> <li>LDA\uff1a\u200b\u6700\u200b\u591a\u200b \\(C-1\\) \u200b\u7ef4\u200b\uff08\u200b\u7c7b\u522b\u200b\u6570\u200b - 1\uff09</li> </ul> </li> <li> <p>\u200b\u6807\u51c6\u5316\u200b\uff1a</p> <ul> <li>PCA\u3001LDA \u200b\u5bf9\u200b\u5c3a\u5ea6\u200b\u654f\u611f\u200b\uff0c\u200b\u5148\u200b\u6807\u51c6\u5316\u200b\u6216\u200b\u5f52\u4e00\u5316\u200b</li> </ul> </li> <li> <p>\u200b\u975e\u7ebf\u6027\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li>t-SNE/UMAP \u200b\u53c2\u6570\u200b\u8c03\u8282\u200b\uff1a<code>perplexity</code>\u3001<code>learning_rate</code>\u3001\u200b\u90bb\u57df\u200b\u5927\u5c0f\u200b</li> </ul> </li> <li> <p>\u200b\u964d\u566a\u200b\u5904\u7406\u200b\uff1a</p> <ul> <li>\u200b\u53ef\u200b\u5148\u200b PCA \u200b\u964d\u566a\u200b\uff0c\u200b\u518d\u200b\u4f7f\u7528\u200b t-SNE \u200b\u53ef\u89c6\u5316\u200b</li> </ul> </li> </ul>"},{"location":"machine/interview/#7_8","title":"7\ufe0f\u20e3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>PCA \u200b\u5047\u8bbe\u200b\u6570\u636e\u200b\u7ebf\u6027\u200b\u53ef\u200b\u5206\u200b\uff0c\u200b\u5bf9\u200b\u975e\u7ebf\u6027\u200b\u7ed3\u6784\u200b\u53ef\u80fd\u200b\u5931\u6548\u200b</li> <li>LDA \u200b\u9700\u8981\u200b\u6807\u7b7e\u200b\u4fe1\u606f\u200b\uff0c\u200b\u4ec5\u200b\u7528\u4e8e\u200b\u6709\u200b\u76d1\u7763\u200b\u964d\u7ef4\u200b</li> <li>t-SNE \u200b\u968f\u673a\u6027\u200b\u8f83\u5927\u200b\uff0c\u200b\u9700\u200b\u8bbe\u7f6e\u200b <code>random_state</code></li> <li>\u200b\u975e\u7ebf\u6027\u200b\u65b9\u6cd5\u200b\u8ba1\u7b97\u200b\u91cf\u200b\u5927\u200b\uff0c\u200b\u9002\u5408\u200b\u4e2d\u5c0f\u578b\u200b\u6570\u636e\u200b</li> <li>\u200b\u9ad8\u7ef4\u200b\u7a00\u758f\u200b\u6570\u636e\u200b\u9700\u5148\u200b\u8003\u8651\u200b\u7a00\u758f\u200b\u6027\u200b\u5904\u7406\u200b</li> </ul>"},{"location":"machine/interview/#8_8","title":"8\ufe0f\u20e3 \u200b\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u964d\u4f4e\u200b\u8ba1\u7b97\u200b\u590d\u6742\u5ea6\u200b \u200b\u53ef\u80fd\u200b\u4e22\u5931\u200b\u90e8\u5206\u200b\u4fe1\u606f\u200b \u200b\u53bb\u200b\u566a\u200b\u3001\u200b\u51cf\u5c11\u200b\u5197\u4f59\u200b \u200b\u975e\u7ebf\u6027\u200b\u65b9\u6cd5\u200b\u96be\u4ee5\u200b\u89e3\u91ca\u200b \u200b\u53ef\u89c6\u5316\u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b \u200b\u90e8\u5206\u200b\u65b9\u6cd5\u200b\u53c2\u6570\u200b\u654f\u611f\u200b\uff08t-SNE/UMAP\uff09 \u200b\u7f13\u89e3\u200b\u7ef4\u5ea6\u200b\u707e\u96be\u200b\uff0c\u200b\u6539\u5584\u200b\u6a21\u578b\u200b\u6cdb\u5316\u200b \u200b\u9ad8\u7ef4\u200b\u6570\u636e\u200b\u4ecd\u200b\u9700\u200b\u6807\u51c6\u5316\u200b \u200b\u53ef\u200b\u7ed3\u5408\u200b\u4e0b\u6e38\u200b\u4efb\u52a1\u200b\u63d0\u9ad8\u200b\u6027\u80fd\u200b LDA \u200b\u53d7\u200b\u7c7b\u522b\u200b\u4e0d\u200b\u5e73\u8861\u200b\u5f71\u54cd\u200b\u8f83\u5927"},{"location":"machine/interview/#_120","title":"\u5341\u4e09\u200b\u3001 \u200b\u6982\u7387\u6a21\u578b","text":""},{"location":"machine/interview/#131","title":"13.1 \u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af","text":""},{"location":"machine/interview/#1_25","title":"1\ufe0f\u20e3 \u200b\u539f\u7406","text":"<p>\u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b\u662f\u200b\u4e00\u79cd\u200b\u57fa\u4e8e\u200b\u6982\u7387\u200b\u7684\u200b\u5206\u7c7b\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\uff1a</p> <ol> <li> <p>\u200b\u8d1d\u53f6\u65af\u200b\u5b9a\u7406\u200b\uff1a    $$    P(y|x) = \\frac{P(x|y)P(y)}{P(x)}    $$</p> </li> <li> <p>\\(P(y|x)\\)\uff1a\u200b\u540e\u9a8c\u200b\u6982\u7387\u200b</p> </li> <li>\\(P(y)\\)\uff1a\u200b\u5148\u9a8c\u6982\u7387\u200b</li> <li> <p>\\(P(x|y)\\)\uff1a\u200b\u4f3c\u7136\u200b\u6982\u7387\u200b</p> </li> <li> <p>\u200b\u6734\u7d20\u200b\u5047\u8bbe\u200b\uff1a\u200b\u5047\u8bbe\u200b\u7279\u5f81\u200b\u6761\u4ef6\u200b\u72ec\u7acb\u200b\uff1a    $$    P(x|y) = \\prod_{i=1}^{n} P(x_i | y)    $$</p> </li> <li> <p>\u200b\u5206\u7c7b\u200b\u51b3\u7b56\u200b\uff1a    $$    \\hat{y} = \\arg\\max_y P(y) \\prod_{i=1}^{n} P(x_i | y)    $$</p> </li> </ol>"},{"location":"machine/interview/#_121","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u975e\u5e38\u7b80\u5355\u200b\u9ad8\u6548\u200b</li> <li>\u200b\u9002\u7528\u200b\u4e8e\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u3001\u200b\u5783\u573e\u90ae\u4ef6\u200b\u8bc6\u522b\u200b\u3001\u200b\u60c5\u611f\u200b\u5206\u6790\u200b\u7b49\u200b</li> <li>\u200b\u5bf9\u200b\u5c0f\u200b\u6837\u672c\u200b\u4e5f\u200b\u80fd\u200b\u5de5\u4f5c\u200b\u826f\u597d\u200b</li> </ul>"},{"location":"machine/interview/#2_24","title":"2\ufe0f\u20e3 \u200b\u635f\u5931\u200b\u51fd\u6570","text":"<p>\u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b\u901a\u5e38\u200b\u662f\u200b\u6982\u7387\u6a21\u578b\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u65f6\u200b\u4e0d\u200b\u663e\u5f0f\u200b\u4f18\u5316\u200b\u4f20\u7edf\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f46\u200b\u53ef\u200b\u89c6\u4e3a\u200b\u6700\u5927\u5316\u200b\u4f3c\u7136\u200b\u51fd\u6570\u200b\uff08MLE, Maximum Likelihood Estimation\uff09\uff1a</p> \\[ \\mathcal{L}(\\theta) = \\prod_{i=1}^{N} P(y_i) \\prod_{j=1}^{n} P(x_{ij} | y_i) \\] <ul> <li>\u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b\uff1a   $$   \\log \\mathcal{L}(\\theta) = \\sum_{i=1}^{N} \\log P(y_i) + \\sum_{i=1}^{N} \\sum_{j=1}^{n} \\log P(x_{ij} | y_i)   $$</li> </ul> <p>\u200b\u8bad\u7ec3\u200b\u76ee\u6807\u200b\uff1a\u200b\u6700\u5927\u5316\u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b\uff0c\u200b\u5f97\u5230\u200b \\(P(y)\\) \u200b\u548c\u200b \\(P(x_i|y)\\)\u3002</p>"},{"location":"machine/interview/#3_16","title":"3\ufe0f\u20e3 \u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u8fc7\u7a0b","text":""},{"location":"machine/interview/#31_2","title":"3.1 \u200b\u5206\u7c7b\u200b\u516c\u5f0f","text":"<ol> <li> <p>\u200b\u5148\u9a8c\u6982\u7387\u200b\uff1a    $$    P(y=c) = \\frac{\\text{\u200b\u6837\u672c\u6570\u200b}(y=c)}{\\text{\u200b\u603b\u200b\u6837\u672c\u6570\u200b}}    $$</p> </li> <li> <p>\u200b\u4f3c\u7136\u200b\u6982\u7387\u200b\uff1a</p> </li> <li> <p>\u200b\u79bb\u6563\u200b\u7279\u5f81\u200b\uff08\u200b\u591a\u9879\u5f0f\u200b NB\uff09\uff1a   $$   P(x_i = k | y=c) = \\frac{\\text{\u200b\u7279\u5f81\u200b } x_i \\text{ \u200b\u5728\u200b\u7c7b\u200b } c \\text{ \u200b\u4e2d\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b} + \\alpha}{\\text{\u200b\u7c7b\u200b } c \\text{ \u200b\u603b\u200b\u6b21\u6570\u200b} + \\alpha \\cdot n_i}   $$</p> </li> <li> <p>\\(\\alpha\\)\uff1a\u200b\u5e73\u6ed1\u200b\u53c2\u6570\u200b\uff08Laplace \u200b\u5e73\u6ed1\u200b\uff09\uff0c\u200b\u907f\u514d\u200b\u96f6\u200b\u6982\u7387\u200b</p> </li> <li> <p>\u200b\u8fde\u7eed\u200b\u7279\u5f81\u200b\uff08\u200b\u9ad8\u65af\u200b NB\uff09\uff1a   $$   P(x_i | y=c) = \\frac{1}{\\sqrt{2\\pi \\sigma_{c,i}^2}} \\exp\\Big(-\\frac{(x_i - \\mu_{c,i})^2}{2\\sigma_{c,i}^2}\\Big)   $$</p> </li> <li> <p>\u200b\u9884\u6d4b\u200b\uff1a    $$    \\hat{y} = \\arg\\max_c P(y=c) \\prod_{i=1}^n P(x_i|y=c)    $$</p> </li> </ol>"},{"location":"machine/interview/#4_15","title":"4\ufe0f\u20e3 \u200b\u8bc4\u4f30\u200b\u6307\u6807","text":"<ul> <li>\u200b\u5206\u7c7b\u200b\u51c6\u786e\u7387\u200b\uff08Accuracy\uff09\uff1a   $$   \\text{Accuracy} = \\frac{\\text{\u200b\u9884\u6d4b\u200b\u6b63\u786e\u200b\u6570\u200b}}{\\text{\u200b\u603b\u200b\u6837\u672c\u6570\u200b}}   $$</li> <li>\u200b\u7cbe\u786e\u200b\u7387\u200b\u3001\u200b\u53ec\u56de\u200b\u7387\u200b\u3001F1-score</li> <li>\u200b\u6df7\u6dc6\u200b\u77e9\u9635\u200b</li> <li>\u200b\u5bf9\u200b\u591a\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u4e5f\u200b\u9002\u7528\u200b</li> </ul>"},{"location":"machine/interview/#5_10","title":"5\ufe0f\u20e3 \u200b\u5b9e\u73b0\u200b\u4ee3\u7801","text":""},{"location":"machine/interview/#51_1","title":"5.1 \u200b\u591a\u9879\u5f0f\u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b\uff08\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u5e38\u7528\u200b\uff09","text":"<pre><code>from sklearn.datasets import fetch_20newsgroups\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, classification_report\n\n# \u200b\u6570\u636e\u200b\ndata = fetch_20newsgroups(subset='all', categories=['sci.space','rec.sport.baseball'])\nX_train, X_test, y_train, y_test = train_test_split(data.data, data.target, test_size=0.2, random_state=42)\n\n# \u200b\u7279\u5f81\u63d0\u53d6\u200b\nvectorizer = CountVectorizer()\nX_train_vec = vectorizer.fit_transform(X_train)\nX_test_vec = vectorizer.transform(X_test)\n\n# \u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\nnb = MultinomialNB(alpha=1.0)\nnb.fit(X_train_vec, y_train)\n\n# \u200b\u9884\u6d4b\u200b\ny_pred = nb.predict(X_test_vec)\n\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\n</code></pre>"},{"location":"machine/interview/#52_1","title":"5.2 \u200b\u9ad8\u65af\u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b\uff08\u200b\u8fde\u7eed\u200b\u7279\u5f81\u200b\uff09","text":"<pre><code>from sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score\n\ndata = load_iris()\nX_train, X_test, y_train, y_test = train_test_split(data.data, data.target, test_size=0.2, random_state=42)\n\ngnb = GaussianNB()\ngnb.fit(X_train, y_train)\ny_pred = gnb.predict(X_test)\n\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred))\n</code></pre>"},{"location":"machine/interview/#6_10","title":"6\ufe0f\u20e3 \u200b\u6a21\u578b\u200b\u4f18\u5316","text":"<ul> <li>\u200b\u7279\u5f81\u9009\u62e9\u200b\uff1a\u200b\u53bb\u6389\u200b\u5197\u4f59\u200b\u6216\u200b\u9ad8\u5ea6\u200b\u76f8\u5173\u200b\u7279\u5f81\u200b</li> <li>\u200b\u5e73\u6ed1\u200b\u53c2\u6570\u200b \\(\\alpha\\)\uff1a\u200b\u9632\u6b62\u200b\u96f6\u200b\u6982\u7387\u200b\u95ee\u9898\u200b</li> <li>\u200b\u7c7b\u522b\u200b\u5e73\u8861\u200b\uff1a\u200b\u6837\u672c\u200b\u4e0d\u200b\u5747\u8861\u200b\u65f6\u200b\u53ef\u200b\u52a0\u6743\u200b</li> <li>\u200b\u6570\u636e\u200b\u6e05\u6d17\u200b\uff1a\u200b\u51cf\u5c11\u200b\u566a\u58f0\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u4f3c\u7136\u200b\u4f30\u8ba1\u200b\u7cbe\u5ea6\u200b</li> </ul>"},{"location":"machine/interview/#7_9","title":"7\ufe0f\u20e3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u5047\u8bbe\u200b\u7279\u5f81\u200b\u6761\u4ef6\u200b\u72ec\u7acb\u200b\uff0c\u200b\u82e5\u200b\u7279\u5f81\u200b\u76f8\u5173\u6027\u200b\u5f3a\u200b\u53ef\u80fd\u200b\u5f71\u54cd\u200b\u6027\u80fd\u200b</li> <li>\u200b\u5bf9\u200b\u8fde\u7eed\u200b\u7279\u5f81\u200b\u9700\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u5206\u5e03\u200b\uff08\u200b\u9ad8\u65af\u200b NB \u200b\u5e38\u7528\u200b\uff09</li> <li>\u200b\u5bf9\u200b\u7a00\u758f\u200b\u7279\u5f81\u200b\uff08\u200b\u5982\u200b\u6587\u672c\u200b\uff09\u200b\u6548\u679c\u200b\u975e\u5e38\u200b\u597d\u200b</li> <li>\u200b\u5bf9\u200b\u5c0f\u200b\u6837\u672c\u200b\u8868\u73b0\u200b\u7a33\u5065\u200b</li> <li>\u200b\u8f93\u51fa\u200b\u6982\u7387\u200b\u53ef\u200b\u76f4\u63a5\u200b\u7528\u4e8e\u200b\u51b3\u7b56\u200b\u9608\u503c\u200b\u8c03\u6574\u200b</li> </ul>"},{"location":"machine/interview/#8_9","title":"8\ufe0f\u20e3 \u200b\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b \u200b\u7b80\u5355\u200b\u9ad8\u6548\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u5feb\u200b \u200b\u6761\u4ef6\u200b\u72ec\u7acb\u200b\u5047\u8bbe\u200b\u4e0d\u200b\u6210\u7acb\u200b\u53ef\u80fd\u200b\u964d\u4f4e\u200b\u7cbe\u5ea6\u200b \u200b\u5bf9\u200b\u5c0f\u200b\u6837\u672c\u200b\u6570\u636e\u200b\u6709\u6548\u200b \u200b\u5bf9\u200b\u7279\u5f81\u200b\u76f8\u5173\u6027\u200b\u654f\u611f\u200b \u200b\u53ef\u200b\u8f93\u51fa\u200b\u7c7b\u522b\u200b\u6982\u7387\u200b \u200b\u5bf9\u200b\u8fde\u7eed\u200b\u7279\u5f81\u200b\u9700\u200b\u5206\u5e03\u200b\u5047\u8bbe\u200b \u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u6548\u679c\u200b\u4f18\u200b \u200b\u4e0d\u200b\u9002\u5408\u200b\u590d\u6742\u200b\u975e\u7ebf\u6027\u200b\u8fb9\u754c\u95ee\u9898\u200b \u200b\u53c2\u6570\u200b\u5c11\u200b\uff0c\u200b\u65e0\u9700\u200b\u8c03\u53c2\u200b \u200b\u6570\u636e\u200b\u7a00\u758f\u200b\u5ea6\u200b\u4f4e\u65f6\u200b\u6027\u80fd\u200b\u4e0b\u964d"},{"location":"machine/interview/#_122","title":"\u5341\u56db\u200b\u3001\u200b\u5176\u4ed6\u200b\u95ee\u9898","text":""},{"location":"nlp/chart01/","title":"\u7b2c\u200b 1 \u200b\u7ae0\u200b : \u200b\u6587\u672c\u200b\u8868\u793a\u200b\u4e0e\u200b\u8bcd\u200b\u5411\u91cf","text":"<p>\u200b\u81ea\u7136\u8bed\u8a00\u200b\u5904\u7406\u200b\uff08NLP\uff09\u200b\u7684\u200b\u7b2c\u4e00\u6b65\u200b\u662f\u200b\u628a\u200b\u6587\u672c\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u8ba1\u7b97\u673a\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u6570\u5b57\u200b\u8868\u793a\u200b\u3002\u200b\u7b2c\u200b 1 \u200b\u7ae0\u4f1a\u200b\u5e26\u200b\u4f60\u200b\u4ece\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u6587\u672c\u200b\u7f16\u7801\u200b\u5f00\u59cb\u200b\uff0c\u200b\u4e00\u6b65\u6b65\u200b\u7406\u89e3\u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u7528\u8bcd\u200b\u5411\u91cf\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u5982\u4f55\u200b\u8bad\u7ec3\u200b\u548c\u200b\u4f7f\u7528\u200b\u5b83\u4eec\u200b\u3002</p>"},{"location":"nlp/chart01/#11","title":"1.1 \u200b\u5b66\u4e60\u200b\u76ee\u6807","text":"<p>\u200b\u5b8c\u6210\u200b\u672c\u7ae0\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u5c06\u200b\u80fd\u200b\uff1a</p> <ol> <li>\u200b\u7406\u89e3\u200b\u6587\u672c\u200b\u6570\u5b57\u5316\u200b\u7684\u200b\u6982\u5ff5\u200b</li> <li>\u200b\u638c\u63e1\u200b One-Hot\u3001TF-IDF\u3001Word2Vec \u200b\u7b49\u200b\u6587\u672c\u200b\u8868\u793a\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u7406\u89e3\u200b Word2Vec \u200b\u7684\u200b CBOW \u200b\u548c\u200b Skip-gram \u200b\u539f\u7406\u200b</li> <li>\u200b\u80fd\u200b\u7528\u200b Python \u200b\u5b9e\u73b0\u200b\u6587\u672c\u200b\u8868\u793a\u200b\u548c\u200b\u8bcd\u200b\u5411\u91cf\u200b\u8bad\u7ec3\u200b</li> <li>\u200b\u53ef\u89c6\u5316\u200b\u8bcd\u200b\u5411\u91cf\u200b\uff0c\u200b\u7406\u89e3\u200b\u8bed\u4e49\u200b\u5173\u7cfb\u200b</li> </ol>"},{"location":"nlp/chart01/#12","title":"1.2 \u200b\u6587\u672c\u200b\u6570\u5b57\u5316\u200b\u7684\u200b\u6982\u5ff5","text":""},{"location":"nlp/chart01/#_1","title":"\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u6570\u5b57\u5316","text":"<p>\u200b\u8ba1\u7b97\u673a\u200b\u53ea\u80fd\u200b\u7406\u89e3\u200b\u6570\u5b57\u200b\uff0c\u200b\u800c\u200b\u6587\u672c\u200b\u662f\u200b\u5b57\u7b26\u200b\u7ec4\u6210\u200b\u7684\u200b\u81ea\u7136\u8bed\u8a00\u200b\u3002\u200b\u4e3a\u4e86\u200b\u8ba9\u200b\u6a21\u578b\u200b\u5904\u7406\u200b\u6587\u672c\u200b\uff0c\u200b\u9700\u8981\u200b\u628a\u200b\u8bcd\u200b\u6216\u200b\u53e5\u5b50\u200b\u8868\u793a\u200b\u4e3a\u200b\u6570\u503c\u200b\u3002</p> <p>\u200b\u6587\u672c\u200b\u8868\u793a\u200b\u7684\u200b\u8d28\u91cf\u200b\u76f4\u63a5\u200b\u5f71\u54cd\u200b NLP \u200b\u6a21\u578b\u200b\u7684\u200b\u6027\u80fd\u200b\uff1a</p> <ul> <li>\u200b\u7b80\u5355\u200b\u8868\u793a\u200b\uff08One-Hot\uff09\u200b\u6613\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u4f46\u200b\u65e0\u6cd5\u200b\u6355\u6349\u200b\u8bed\u4e49\u200b</li> <li>\u200b\u7a20\u5bc6\u200b\u8868\u793a\u200b\uff08Word2Vec / GloVe\uff09\u200b\u53ef\u4ee5\u200b\u8868\u8fbe\u200b\u8bcd\u200b\u4e4b\u95f4\u200b\u7684\u200b\u76f8\u4f3c\u6027\u200b</li> </ul>"},{"location":"nlp/chart01/#_2","title":"\u6587\u672c\u200b\u8868\u793a\u200b\u65b9\u5f0f\u200b\u6982\u89c8","text":"\u65b9\u6cd5\u200b \u200b\u6838\u5fc3\u601d\u60f3\u200b \u200b\u4f18\u70b9\u200b \u200b\u7f3a\u70b9\u200b One-Hot \u200b\u6bcf\u4e2a\u200b\u8bcd\u200b\u4e00\u4e2a\u200b\u552f\u4e00\u200b\u5411\u91cf\u200b \u200b\u7b80\u5355\u200b\uff0c\u200b\u6613\u200b\u5b9e\u73b0\u200b \u200b\u9ad8\u7ef4\u200b\u7a00\u758f\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u8868\u8fbe\u200b\u8bed\u4e49\u200b TF-IDF \u200b\u57fa\u4e8e\u200b\u8bcd\u9891\u200b\u548c\u200b\u9006\u200b\u6587\u6863\u200b\u9891\u7387\u200b \u200b\u5f3a\u8c03\u200b\u533a\u5206\u200b\u8bcd\u200b \u200b\u65e0\u200b\u4e0a\u4e0b\u6587\u200b\u4fe1\u606f\u200b Word2Vec / GloVe \u200b\u5c06\u200b\u8bcd\u200b\u5d4c\u5165\u200b\u4f4e\u7ef4\u200b\u5411\u91cf\u200b\u7a7a\u95f4\u200b \u200b\u6355\u83b7\u200b\u8bed\u4e49\u200b\u5173\u7cfb\u200b \u200b\u9700\u8981\u200b\u8bad\u7ec3\u200b\u8bed\u6599"},{"location":"nlp/chart01/#13","title":"1.3 \u200b\u6587\u672c\u200b\u9884\u5904\u7406","text":"<p>\u200b\u5728\u200b\u6587\u672c\u200b\u8868\u793a\u200b\u4e4b\u524d\u200b\uff0c\u200b\u9700\u8981\u200b\u505a\u200b\u4e00\u4e9b\u200b\u6e05\u6d17\u200b\u548c\u200b\u5904\u7406\u200b\uff1a</p> <ol> <li>\u200b\u5206\u8bcd\u200b\uff1a\u200b\u628a\u200b\u53e5\u5b50\u200b\u62c6\u6210\u200b\u8bcd\u200b</li> <li>\u200b\u5c0f\u5199\u200b\u5316\u200b\uff1a\u200b\u82f1\u6587\u200b\u7edf\u4e00\u200b\u5c0f\u5199\u200b</li> <li>\u200b\u53bb\u200b\u6807\u70b9\u200b\u548c\u200b\u7279\u6b8a\u7b26\u53f7\u200b</li> <li>\u200b\u53bb\u200b\u505c\u200b\u7528\u8bcd\u200b\uff1a\u200b\u5220\u9664\u200b\u9ad8\u9891\u200b\u4f46\u200b\u65e0\u200b\u610f\u4e49\u200b\u8bcd\u200b\uff08\u200b\u5982\u200b \"the\", \"is\"\uff09</li> <li>\u200b\u8bcd\u5f62\u200b\u8fd8\u539f\u200b\u6216\u200b\u8bcd\u5e72\u200b\u5316\u200b\uff08\u200b\u53ef\u200b\u9009\u200b\uff09</li> </ol> <p>\u200b\u793a\u4f8b\u200b\uff08\u200b\u82f1\u6587\u200b\u6587\u672c\u200b\uff09\uff1a</p> <pre><code>import nltk\nfrom nltk.tokenize import word_tokenize\nfrom nltk.corpus import stopwords\n\nnltk.download('punkt')\nnltk.download('stopwords')\n\ntext = \"Natural Language Processing (NLP) is fascinating and fun!\"\ntokens = word_tokenize(text.lower())  # \u200b\u5206\u8bcd\u200b\u5e76\u200b\u5c0f\u5199\u200b\u5316\u200b\nfiltered = [w for w in tokens if w.isalpha() and w not in stopwords.words('english')]\nprint(filtered)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>['natural', 'language', 'processing', 'nlp', 'fascinating', 'fun']\n</code></pre>"},{"location":"nlp/chart01/#14-one-hot","title":"1.4 One-Hot \u200b\u8868\u793a","text":""},{"location":"nlp/chart01/#_3","title":"\u6982\u5ff5","text":"<ul> <li>\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u8bcd\u200b\u5206\u914d\u200b\u552f\u4e00\u200b\u5411\u91cf\u200b</li> <li>\u200b\u5411\u91cf\u200b\u957f\u5ea6\u200b = \u200b\u8bcd\u8868\u200b\u5927\u5c0f\u200b</li> <li>\u200b\u8be5\u8bcd\u200b\u4f4d\u7f6e\u200b\u4e3a\u200b 1\uff0c\u200b\u5176\u4f59\u200b\u4e3a\u200b 0</li> </ul>"},{"location":"nlp/chart01/#_4","title":"\u6570\u5b66\u200b\u8868\u793a","text":"\\[ \\text{one_hot}(w_i) = [0,0,...,1,...,0] \\]"},{"location":"nlp/chart01/#_5","title":"\u793a\u4f8b","text":"<p>\u200b\u8bcd\u8868\u200b\uff1a<code>[\"I\", \"love\", \"NLP\"]</code></p> \u200b\u8bcd\u200b One-Hot \"I\" [1,0,0] \"love\" [0,1,0] \"NLP\" [0,0,1]"},{"location":"nlp/chart01/#python","title":"Python \u200b\u5b9e\u73b0","text":"<pre><code>import numpy as np\n\nvocab = [\"I\", \"love\", \"NLP\"]\nword_to_idx = {word:i for i, word in enumerate(vocab)}\n\ndef one_hot(word):\n    vec = np.zeros(len(vocab))\n    vec[word_to_idx[word]] = 1\n    return vec\n\nprint(one_hot(\"love\"))  # \u200b\u8f93\u51fa\u200b: [0. 1. 0.]\n</code></pre> <p>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u9ad8\u7ef4\u200b\u7a00\u758f\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u8868\u793a\u200b\u8bcd\u8bed\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8bed\u4e49\u200b\u76f8\u4f3c\u6027\u200b\u3002</p>"},{"location":"nlp/chart01/#15-tf-idfterm-frequency-inverse-document-frequency","title":"1.5 TF-IDF\uff08Term Frequency - Inverse Document Frequency\uff09","text":""},{"location":"nlp/chart01/#_6","title":"\u6982\u5ff5","text":"<p>\u200b\u8861\u91cf\u200b\u8bcd\u200b\u5728\u200b\u6587\u6863\u200b\u4e2d\u200b\u7684\u200b\u91cd\u8981\u6027\u200b\uff1a</p> <ul> <li>TF\uff08\u200b\u8bcd\u9891\u200b\uff09\uff1a\u200b\u8bcd\u200b\u5728\u200b\u6587\u6863\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u9891\u7387\u200b</li> <li>IDF\uff08\u200b\u9006\u200b\u6587\u6863\u200b\u9891\u7387\u200b\uff09\uff1a\u200b\u8bcd\u200b\u5728\u200b\u8bed\u6599\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u8d8a\u200b\u9891\u7e41\u200b\uff0c\u200b\u6743\u91cd\u200b\u8d8a\u4f4e\u200b</li> </ul>"},{"location":"nlp/chart01/#_7","title":"\u6570\u5b66\u516c\u5f0f","text":"\\[ \\text{tf}(t,d) = \\frac{\\text{count}(t,d)}{\\text{total words in } d} \\] \\[ \\text{idf}(t) = \\log \\frac{N}{1 + df_t} \\] \\[ \\text{tfidf}(t,d) = \\text{tf}(t,d) \\times \\text{idf}(t) \\] <ul> <li>\\(N\\)\uff1a\u200b\u8bed\u6599\u5e93\u200b\u4e2d\u200b\u6587\u6863\u200b\u603b\u6570\u200b</li> <li>\\(df_t\\)\uff1a\u200b\u5305\u542b\u200b\u8bcd\u200b \\(t\\) \u200b\u7684\u200b\u6587\u6863\u200b\u6570\u200b</li> </ul>"},{"location":"nlp/chart01/#python_1","title":"Python \u200b\u793a\u4f8b","text":"<pre><code>from sklearn.feature_extraction.text import TfidfVectorizer\n\ndocs = [\"I love NLP\", \"NLP is fascinating\", \"I enjoy learning NLP\"]\nvectorizer = TfidfVectorizer()\nX = vectorizer.fit_transform(docs)\nprint(vectorizer.get_feature_names_out())\nprint(X.toarray())\n</code></pre> <p>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u5f31\u5316\u200b\u9ad8\u9891\u8bcd\u200b\u5f71\u54cd\u200b \u200b\u7f3a\u70b9\u200b\uff1a\u200b\u65e0\u6cd5\u200b\u6355\u6349\u200b\u4e0a\u4e0b\u6587\u200b\u8bed\u4e49\u200b</p>"},{"location":"nlp/chart01/#16-word-embedding","title":"1.6 \u200b\u8bcd\u200b\u5411\u91cf\u200b\uff08Word Embedding\uff09","text":""},{"location":"nlp/chart01/#161","title":"1.6.1 \u200b\u6982\u5ff5","text":"<ul> <li>\u200b\u5c06\u200b\u8bcd\u200b\u6620\u5c04\u200b\u5230\u200b\u4f4e\u7ef4\u200b\u5411\u91cf\u200b\u7a7a\u95f4\u200b</li> <li>\u200b\u7a20\u5bc6\u200b\u5411\u91cf\u200b\u8868\u793a\u200b\uff0c\u200b\u80fd\u200b\u6355\u83b7\u200b\u8bed\u4e49\u200b\u76f8\u4f3c\u6027\u200b</li> <li>\u200b\u793a\u4f8b\u200b\uff1a</li> </ul> \\[ \\text{vec}(\"king\") - \\text{vec}(\"man\") + \\text{vec}(\"woman\") \\approx \\text{vec}(\"queen\") \\]"},{"location":"nlp/chart01/#162-word2vec","title":"1.6.2 Word2Vec \u200b\u539f\u7406","text":"<p>Word2Vec \u200b\u662f\u200b\u4e00\u79cd\u200b\u7ecf\u5178\u200b\u8bcd\u200b\u5d4c\u5165\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u6709\u200b\u4e24\u79cd\u200b\u8bad\u7ec3\u200b\u7b56\u7565\u200b\uff1a</p> <ol> <li> <p>CBOW\uff08Continuous Bag-of-Words\uff09</p> </li> <li> <p>\u200b\u6839\u636e\u200b\u4e0a\u4e0b\u6587\u200b\u9884\u6d4b\u200b\u4e2d\u5fc3\u8bcd\u200b</p> </li> <li> <p>\u200b\u4e3e\u4f8b\u200b\uff1a\u200b\u53e5\u5b50\u200b \u201cI love NLP\u201d</p> <ul> <li>\u200b\u4e0a\u4e0b\u6587\u200b = [\"I\", \"NLP\"]</li> <li>\u200b\u4e2d\u5fc3\u8bcd\u200b = \"love\"</li> </ul> </li> </ol> <p>\u200b\u516c\u5f0f\u200b\uff1a</p> <p>$$    \\max \\sum_t \\log P(w_t | \\text{context}(w_t))    $$</p> <ol> <li> <p>Skip-gram</p> </li> <li> <p>\u200b\u6839\u636e\u200b\u4e2d\u5fc3\u8bcd\u200b\u9884\u6d4b\u200b\u4e0a\u4e0b\u6587\u200b</p> </li> <li>\u200b\u4e3e\u4f8b\u200b\uff1a\u200b\u4e2d\u5fc3\u8bcd\u200b = \"love\"\uff0c\u200b\u4e0a\u4e0b\u6587\u200b = [\"I\", \"NLP\"]</li> </ol> <p>\u200b\u516c\u5f0f\u200b\uff1a</p> <p>$$    \\max \\sum_{t} \\sum_{-c \\le j \\le c, j\\ne 0} \\log P(w_{t+j}|w_t)    $$</p> <p>CBOW \u200b\u5bf9\u200b\u5c0f\u200b\u8bed\u6599\u200b\u8868\u73b0\u200b\u66f4\u200b\u7a33\u5b9a\u200b\uff0cSkip-gram \u200b\u5bf9\u200b\u4f4e\u9891\u8bcd\u200b\u66f4\u200b\u654f\u611f\u200b\u3002</p>"},{"location":"nlp/chart01/#163-word2vec-python","title":"1.6.3 Word2Vec Python \u200b\u5b9e\u73b0","text":"<pre><code>from gensim.models import Word2Vec\n\nsentences = [[\"I\",\"love\",\"nlp\"], [\"nlp\",\"is\",\"fun\"], [\"I\",\"enjoy\",\"learning\",\"nlp\"]]\n\n# Skip-gram \u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\nmodel = Word2Vec(sentences, vector_size=50, window=2, min_count=1, sg=1, epochs=100)\n\n# \u200b\u67e5\u770b\u200b\u8bcd\u200b\u5411\u91cf\u200b\nprint(\"\u200b\u8bcd\u200b\u5411\u91cf\u200b nlp:\\n\", model.wv['nlp'])\n\n# \u200b\u627e\u200b\u76f8\u4f3c\u200b\u8bcd\u200b\nprint(\"\u200b\u4e0e\u200b nlp \u200b\u76f8\u4f3c\u200b\u7684\u200b\u8bcd\u200b:\", model.wv.most_similar('nlp'))\n</code></pre>"},{"location":"nlp/chart01/#164","title":"1.6.4 \u200b\u8bcd\u200b\u5411\u91cf\u200b\u53ef\u89c6\u5316","text":"<pre><code>from sklearn.decomposition import PCA\nimport matplotlib.pyplot as plt\n\nwords = ['I','love','nlp','fun','learning']\nvecs = [model.wv[w] for w in words]\n\npca = PCA(n_components=2)\nvecs_2d = pca.fit_transform(vecs)\n\nplt.figure(figsize=(6,6))\nfor i, word in enumerate(words):\n    plt.scatter(vecs_2d[i,0], vecs_2d[i,1])\n    plt.text(vecs_2d[i,0]+0.01, vecs_2d[i,1]+0.01, word)\nplt.show()\n</code></pre> <p>\u200b\u4f60\u200b\u4f1a\u200b\u770b\u5230\u200b\u8bed\u4e49\u200b\u76f8\u5173\u200b\u7684\u200b\u8bcd\u200b\u66f4\u200b\u63a5\u8fd1\u200b\uff0c\u200b\u6bd4\u5982\u200b \u201cnlp\u201d \u200b\u548c\u200b \u201clearning\u201d\u3002</p>"},{"location":"nlp/chart01/#17","title":"1.7 \u200b\u672c\u7ae0\u200b\u5c0f\u7ed3","text":"<ol> <li>\u200b\u6587\u672c\u200b\u8868\u793a\u200b\u662f\u200b NLP \u200b\u7684\u200b\u57fa\u7840\u200b\uff0c\u200b\u5f71\u54cd\u200b\u6a21\u578b\u200b\u6548\u679c\u200b</li> <li>One-Hot \u200b\u548c\u200b TF-IDF \u200b\u7b80\u5355\u200b\uff0c\u200b\u4f46\u200b\u65e0\u6cd5\u200b\u6355\u6349\u200b\u8bed\u4e49\u200b</li> <li>Word2Vec\uff08CBOW / Skip-gram\uff09\u200b\u901a\u8fc7\u200b\u4e0a\u4e0b\u6587\u200b\u5b66\u4e60\u200b\u8bcd\u200b\u5411\u91cf\u200b</li> <li>\u200b\u8bcd\u200b\u5411\u91cf\u200b\u80fd\u200b\u5728\u200b\u4f4e\u200b\u7ef4\u7a7a\u95f4\u200b\u8868\u793a\u200b\u8bed\u4e49\u200b\u5173\u7cfb\u200b</li> <li>\u200b\u53ef\u89c6\u5316\u200b\u8bcd\u200b\u5411\u91cf\u200b\u5e2e\u52a9\u200b\u7406\u89e3\u200b\u8bed\u4e49\u200b\u8ddd\u79bb\u200b</li> </ol> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5e0c\u671b\u200b\uff0c\u200b\u6211\u200b\u53ef\u4ee5\u200b\u63a5\u7740\u200b\u5e2e\u200b\u4f60\u200b\u751f\u6210\u200b \u200b\u7b2c\u200b 1 \u200b\u7ae0\u200b\u5b8c\u6574\u200b Jupyter Notebook \u200b\u7248\u672c\u200b\uff0c\u200b\u5305\u542b\u200b\uff1a</p> <ul> <li>\u200b\u6587\u672c\u200b\u9884\u5904\u7406\u200b</li> <li>One-Hot\u3001TF-IDF\u3001Word2Vec \u200b\u5b9e\u6218\u200b</li> <li>\u200b\u8bcd\u200b\u5411\u91cf\u200b\u53ef\u89c6\u5316\u200b</li> </ul> <p>\u200b\u8fd9\u6837\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8fd0\u884c\u200b\u3001\u200b\u4fee\u6539\u200b\u3001\u200b\u5b9e\u9a8c\u200b\uff0c\u200b\u5b66\u4e60\u200b\u4f53\u9a8c\u200b\u4f1a\u200b\u66f4\u200b\u76f4\u89c2\u200b\u3002</p> <p>\u200b\u4f60\u200b\u5e0c\u671b\u200b\u6211\u200b\u751f\u6210\u200b\u8fd9\u4e2a\u200b notebook \u200b\u5417\u200b\uff1f</p>"},{"location":"nlp/chart02/","title":"\u7b2c\u200b 2 \u200b\u7ae0\u200b : RNN / LSTM \u200b\u5e8f\u5217\u200b\u6a21\u578b","text":"<p>\u200b\u81ea\u7136\u8bed\u8a00\u200b\u5904\u7406\u200b\u4e2d\u200b\u7684\u200b\u8bb8\u591a\u200b\u4efb\u52a1\u200b\uff08\u200b\u5982\u200b\u6587\u672c\u200b\u751f\u6210\u200b\u3001\u200b\u673a\u5668\u7ffb\u8bd1\u200b\u3001\u200b\u60c5\u611f\u200b\u5206\u6790\u200b\uff09\u200b\u90fd\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u5e8f\u5217\u200b\u6570\u636e\u200b\u3002RNN\uff08\u200b\u5faa\u73af\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff09\u200b\u548c\u200b LSTM\uff08\u200b\u957f\u77ed\u671f\u200b\u8bb0\u5fc6\u200b\u7f51\u7edc\u200b\uff09\u200b\u662f\u200b\u7ecf\u5178\u200b\u7684\u200b\u5e8f\u5217\u200b\u6a21\u578b\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6355\u6349\u200b\u6587\u672c\u200b\u7684\u200b\u65f6\u95f4\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\u3002</p>"},{"location":"nlp/chart02/#21","title":"2.1 \u200b\u5b66\u4e60\u200b\u76ee\u6807","text":"<p>\u200b\u5b8c\u6210\u200b\u672c\u7ae0\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u5c06\u200b\u80fd\u591f\u200b\uff1a</p> <ol> <li>\u200b\u7406\u89e3\u200b RNN \u200b\u7684\u200b\u57fa\u672c\u200b\u7ed3\u6784\u200b\u548c\u200b\u539f\u7406\u200b</li> <li>\u200b\u638c\u63e1\u200b LSTM \u200b\u89e3\u51b3\u200b\u957f\u200b\u5e8f\u5217\u200b\u4f9d\u8d56\u200b\u95ee\u9898\u200b\u7684\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u7406\u89e3\u200b RNN / LSTM \u200b\u7684\u200b\u524d\u200b\u5411\u200b\u4f20\u64ad\u200b\u4e0e\u200b\u68af\u5ea6\u200b\u66f4\u65b0\u200b\u516c\u5f0f\u200b</li> <li>\u200b\u80fd\u200b\u7528\u200b PyTorch \u200b\u5b9e\u73b0\u200b RNN / LSTM\uff0c\u200b\u8fdb\u884c\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u6216\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b</li> <li>\u200b\u7406\u89e3\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\u4e0e\u200b\u68af\u5ea6\u200b\u7206\u70b8\u200b\u95ee\u9898\u200b\uff0c\u200b\u5e76\u200b\u77e5\u9053\u200b\u5e38\u7528\u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b</li> </ol>"},{"location":"nlp/chart02/#22-rnn","title":"2.2 \u200b\u5faa\u73af\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff08RNN\uff09","text":""},{"location":"nlp/chart02/#221-rnn","title":"2.2.1 RNN \u200b\u6982\u5ff5","text":"<p>RNN \u200b\u662f\u200b\u4e00\u79cd\u200b\u4e13\u95e8\u200b\u5904\u7406\u200b\u5e8f\u5217\u200b\u6570\u636e\u200b\u7684\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b \\(x_1, x_2, ..., x_T\\) \u200b\u9010\u6b65\u200b\u5904\u7406\u200b</li> <li>\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b \\(h_t\\) \u200b\u8bb0\u5fc6\u200b\u4e4b\u524d\u200b\u7684\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u8f93\u51fa\u200b\u53ef\u4ee5\u200b\u662f\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u7684\u200b \\(y_t\\)\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u53ea\u53d6\u200b\u6700\u540e\u200b\u4e00\u6b65\u200b</li> </ul> <p>RNN \u200b\u7ed3\u6784\u56fe\u200b\uff1a</p> <pre><code>x1 --&gt;[RNN]--&gt; h1 --&gt; y1\nx2 --&gt;[RNN]--&gt; h2 --&gt; y2\n...\nxT --&gt;[RNN]--&gt; hT --&gt; yT\n</code></pre>"},{"location":"nlp/chart02/#222-rnn","title":"2.2.2 RNN \u200b\u6570\u5b66\u516c\u5f0f","text":"<p>\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\uff1a</p> \\[ h_t = \\tanh(W_{xh} x_t + W_{hh} h_{t-1} + b_h) \\] <p>\u200b\u8f93\u51fa\u200b\u8ba1\u7b97\u200b\uff1a</p> \\[ y_t = W_{hy} h_t + b_y \\] <ul> <li>\\(x_t\\)\uff1a\u200b\u5f53\u524d\u200b\u8f93\u5165\u200b\u5411\u91cf\u200b</li> <li>\\(h_t\\)\uff1a\u200b\u5f53\u524d\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b</li> <li>\\(h_{t-1}\\)\uff1a\u200b\u524d\u200b\u4e00\u6b65\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b</li> <li>\\(W_{xh}, W_{hh}, W_{hy}\\)\uff1a\u200b\u6743\u91cd\u200b\u77e9\u9635\u200b</li> <li>\\(b_h, b_y\\)\uff1a\u200b\u504f\u7f6e\u200b</li> </ul> <p>\u200b\u76f4\u89c2\u200b\u7406\u89e3\u200b\uff1a\u200b\u6bcf\u4e2a\u200b \\(h_t\\) \u200b\u4e0d\u4ec5\u200b\u5305\u542b\u200b\u5f53\u524d\u200b\u8f93\u5165\u200b \\(x_t\\) \u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u8fd8\u200b\u8bb0\u4f4f\u200b\u524d\u9762\u200b\u6240\u6709\u200b\u6b65\u9aa4\u200b\u7684\u200b\u4fe1\u606f\u200b\u3002</p>"},{"location":"nlp/chart02/#223-rnn","title":"2.2.3 RNN \u200b\u7684\u200b\u8bad\u7ec3","text":"<p>\u200b\u4f7f\u7528\u200b BPTT\uff08Backpropagation Through Time\uff09 \u200b\u8fdb\u884c\u200b\u68af\u5ea6\u200b\u66f4\u65b0\u200b\uff1a</p> \\[ \\frac{\\partial L}{\\partial W_{hh}} = \\sum_{t=1}^T \\frac{\\partial L}{\\partial h_t} \\prod_{k=1}^t \\frac{\\partial h_k}{\\partial h_{k-1}} \\] <ul> <li>\u200b\u957f\u200b\u5e8f\u5217\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u68af\u5ea6\u200b\u4e58\u79ef\u200b\u8fc7\u591a\u200b</li> <li>\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\uff1a\\(\\prod \\partial h_k/\\partial h_{k-1} \\to 0\\)</li> <li>\u200b\u68af\u5ea6\u200b\u7206\u70b8\u200b\uff1a\\(\\prod \\partial h_k/\\partial h_{k-1} \\to \\infty\\)</li> </ul> <p>\u200b\u8fd9\u662f\u200b RNN \u200b\u96be\u4ee5\u200b\u6355\u6349\u200b\u957f\u8ddd\u79bb\u200b\u4f9d\u8d56\u200b\u7684\u200b\u539f\u56e0\u200b\u3002</p>"},{"location":"nlp/chart02/#224-rnn-python-pytorch","title":"2.2.4 RNN Python \u200b\u793a\u4f8b\u200b\uff08PyTorch\uff09","text":"<pre><code>import torch\nimport torch.nn as nn\n\n# \u200b\u5047\u8bbe\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u957f\u5ea6\u200b=5\uff0c\u200b\u8f93\u5165\u200b\u7ef4\u5ea6\u200b=10\uff0c\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b=20\nrnn = nn.RNN(input_size=10, hidden_size=20, batch_first=True)\n\nx = torch.randn(3,5,10)  # batch_size=3\nout, h_n = rnn(x)\nprint(out.shape)  # (3, 5, 20)\nprint(h_n.shape)  # (1, 3, 20)\n</code></pre>"},{"location":"nlp/chart02/#23-lstm","title":"2.3 \u200b\u957f\u77ed\u671f\u200b\u8bb0\u5fc6\u200b\u7f51\u7edc\u200b\uff08LSTM\uff09","text":""},{"location":"nlp/chart02/#231-lstm","title":"2.3.1 LSTM \u200b\u6982\u5ff5","text":"<p>LSTM \u200b\u662f\u200b RNN \u200b\u7684\u200b\u6539\u8fdb\u200b\u7248\u672c\u200b\uff0c\u200b\u4e13\u95e8\u200b\u89e3\u51b3\u200b\u957f\u200b\u5e8f\u5217\u200b\u4f9d\u8d56\u200b\u95ee\u9898\u200b\uff1a</p> <ul> <li>\u200b\u5f15\u5165\u200b \u200b\u8bb0\u5fc6\u200b\u5355\u5143\u200b \\(C_t\\) \u200b\u4fdd\u5b58\u200b\u957f\u671f\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u589e\u52a0\u200b\u4e09\u4e2a\u200b\u95e8\u63a7\u200b\u673a\u5236\u200b\uff1a\u200b\u9057\u5fd8\u200b\u95e8\u200b \\(f_t\\)\u3001\u200b\u8f93\u5165\u200b\u95e8\u200b \\(i_t\\)\u3001\u200b\u8f93\u51fa\u200b\u95e8\u200b \\(o_t\\)</li> <li>\u200b\u63a7\u5236\u200b\u4fe1\u606f\u200b\u6d41\u52a8\u200b\uff0c\u200b\u9632\u6b62\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b</li> </ul>"},{"location":"nlp/chart02/#232-lstm","title":"2.3.2 LSTM \u200b\u516c\u5f0f","text":"<p>\u200b\u9057\u5fd8\u200b\u95e8\u200b\uff1a\u200b\u51b3\u5b9a\u200b\u4fdd\u7559\u200b\u591a\u5c11\u200b\u524d\u200b\u4e00\u200b\u72b6\u6001\u200b\u4fe1\u606f\u200b</p> \\[ f_t = \\sigma(W_f [h_{t-1}, x_t] + b_f) \\] <p>\u200b\u8f93\u5165\u200b\u95e8\u200b\uff1a\u200b\u51b3\u5b9a\u200b\u5f53\u524d\u200b\u8f93\u5165\u200b\u6709\u200b\u591a\u5c11\u200b\u66f4\u65b0\u200b\u5230\u200b\u8bb0\u5fc6\u200b\u5355\u5143\u200b</p> \\[ i_t = \\sigma(W_i [h_{t-1}, x_t] + b_i) \\] \\[ \\tilde{C}*t = \\tanh(W_C [h*{t-1}, x_t] + b_C) \\] <p>\u200b\u8bb0\u5fc6\u200b\u5355\u5143\u200b\u66f4\u65b0\u200b\uff1a</p> \\[ C_t = f_t \\odot C_{t-1} + i_t \\odot \\tilde{C}_t \\] <p>\u200b\u8f93\u51fa\u200b\u95e8\u200b\uff1a\u200b\u51b3\u5b9a\u200b\u8f93\u51fa\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b \\(h_t\\)</p> \\[ o_t = \\sigma(W_o [h_{t-1}, x_t] + b_o) \\] \\[ h_t = o_t \\odot \\tanh(C_t) \\] <ul> <li>\\(\\sigma\\)\uff1aSigmoid \u200b\u51fd\u6570\u200b</li> <li>\\(\\odot\\)\uff1a\u200b\u9010\u200b\u5143\u7d20\u200b\u4e58\u6cd5\u200b</li> <li>\\(C_t\\)\uff1a\u200b\u8bb0\u5fc6\u200b\u5355\u5143\u200b</li> <li>\\(h_t\\)\uff1a\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b</li> </ul> <p>LSTM \u200b\u7684\u200b\u95e8\u63a7\u200b\u673a\u5236\u200b\u8ba9\u200b\u6a21\u578b\u200b\u53ef\u4ee5\u200b\u957f\u65f6\u95f4\u200b\u4fdd\u7559\u200b\u4fe1\u606f\u200b\uff0c\u200b\u89e3\u51b3\u200b RNN \u200b\u7684\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"nlp/chart02/#233-lstm-python-pytorch","title":"2.3.3 LSTM Python \u200b\u793a\u4f8b\u200b\uff08PyTorch\uff09","text":"<pre><code>import torch\nimport torch.nn as nn\n\n# \u200b\u8f93\u5165\u200b\u7ef4\u5ea6\u200b=10\uff0c\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b=20\uff0c\u200b\u5e8f\u5217\u200b\u957f\u5ea6\u200b=5\nlstm = nn.LSTM(input_size=10, hidden_size=20, batch_first=True)\n\nx = torch.randn(3,5,10)  # batch_size=3\nout, (h_n, c_n) = lstm(x)\nprint(out.shape)  # (3, 5, 20)\nprint(h_n.shape)   # (1, 3, 20)\nprint(c_n.shape)   # (1, 3, 20)\n</code></pre>"},{"location":"nlp/chart02/#234-lstm","title":"2.3.4 LSTM \u200b\u7684\u200b\u76f4\u89c2\u200b\u7406\u89e3","text":"<ul> <li>\u200b\u8bb0\u5fc6\u200b\u5355\u5143\u200b \\(C_t\\)\uff1a\u200b\u50cf\u200b\u4e00\u4e2a\u200b\u957f\u671f\u200b\u8bb0\u5fc6\u200b\uff0c\u200b\u51b3\u5b9a\u200b\u4fe1\u606f\u200b\u4fdd\u7559\u200b\u591a\u5c11\u200b</li> <li>\u200b\u9057\u5fd8\u200b\u95e8\u200b \\(f_t\\)\uff1a\u200b\u4e22\u6389\u200b\u65e0\u5173\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u8f93\u5165\u200b\u95e8\u200b \\(i_t\\)\uff1a\u200b\u66f4\u65b0\u200b\u65b0\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u8f93\u51fa\u200b\u95e8\u200b \\(o_t\\)\uff1a\u200b\u51b3\u5b9a\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b\u8f93\u51fa\u200b</li> </ul> <p>LSTM \u200b\u53ef\u4ee5\u200b\u6355\u6349\u200b\u6587\u672c\u200b\u4e2d\u200b\u7684\u200b\u957f\u8ddd\u79bb\u200b\u4f9d\u8d56\u200b\uff0c\u200b\u6bd4\u5982\u200b \u201cThe movie that I watched yesterday was amazing\u201d \u200b\u4e2d\u200b\uff0c\u201cmovie\u201d \u200b\u548c\u200b \u201camazing\u201d \u200b\u7684\u200b\u5173\u7cfb\u200b\u3002</p>"},{"location":"nlp/chart02/#24-rnn-lstm","title":"2.4 RNN / LSTM \u200b\u7684\u200b\u5e94\u7528\u200b\u4e3e\u4f8b","text":"<ol> <li>\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\uff1a\u200b\u60c5\u611f\u200b\u5206\u6790\u200b\u3001\u200b\u5783\u573e\u90ae\u4ef6\u200b\u8bc6\u522b\u200b</li> <li>\u200b\u5e8f\u5217\u200b\u751f\u6210\u200b\uff1a\u200b\u6587\u672c\u200b\u751f\u6210\u200b\u3001\u200b\u4ee3\u7801\u751f\u6210\u200b</li> <li>\u200b\u673a\u5668\u7ffb\u8bd1\u200b\uff1a\u200b\u5e8f\u5217\u200b\u5230\u200b\u5e8f\u5217\u200b\uff08Seq2Seq\uff09\u200b\u4efb\u52a1\u200b</li> <li>\u200b\u8bed\u97f3\u200b\u8bc6\u522b\u200b\uff1a\u200b\u5c06\u200b\u8bed\u97f3\u200b\u4fe1\u53f7\u200b\u6620\u5c04\u200b\u5230\u200b\u6587\u672c\u200b</li> </ol>"},{"location":"nlp/chart02/#241-pytorch-lstm","title":"2.4.1 \u200b\u7b80\u5355\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u793a\u4f8b\u200b\uff08PyTorch LSTM\uff09","text":"<pre><code>import torch\nimport torch.nn as nn\n\nclass LSTMClassifier(nn.Module):\n    def __init__(self, input_dim, hidden_dim, output_dim):\n        super().__init__()\n        self.lstm = nn.LSTM(input_dim, hidden_dim, batch_first=True)\n        self.fc = nn.Linear(hidden_dim, output_dim)\n    def forward(self, x):\n        out, (h_n, c_n) = self.lstm(x)\n        return self.fc(h_n[-1])  # \u200b\u7528\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b\u505a\u200b\u5206\u7c7b\u200b\n\nmodel = LSTMClassifier(input_dim=10, hidden_dim=20, output_dim=2)\nx = torch.randn(3,5,10)\ny = model(x)\nprint(y.shape)  # (3,2)\n</code></pre>"},{"location":"nlp/chart02/#25","title":"2.5 \u200b\u672c\u7ae0\u200b\u5c0f\u7ed3","text":"<ol> <li>RNN \u200b\u53ef\u4ee5\u200b\u5904\u7406\u200b\u5e8f\u5217\u200b\u6570\u636e\u200b\uff0c\u200b\u4f46\u957f\u200b\u5e8f\u5217\u200b\u5bb9\u6613\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b/\u200b\u7206\u70b8\u200b</li> <li>LSTM \u200b\u901a\u8fc7\u200b\u95e8\u63a7\u200b\u673a\u5236\u200b\u89e3\u51b3\u200b\u957f\u8ddd\u79bb\u200b\u4f9d\u8d56\u200b\u95ee\u9898\u200b</li> <li>RNN / LSTM \u200b\u9002\u5408\u200b\u5206\u7c7b\u200b\u3001\u200b\u751f\u6210\u200b\u3001\u200b\u7ffb\u8bd1\u200b\u7b49\u200b NLP \u200b\u4efb\u52a1\u200b</li> <li>PyTorch \u200b\u63d0\u4f9b\u200b\u9ad8\u6548\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u53ef\u200b\u76f4\u63a5\u200b\u7528\u4e8e\u200b\u6587\u672c\u200b\u5b9e\u9a8c\u200b</li> </ol> <p>\u200b\u6211\u200b\u53ef\u4ee5\u200b\u7ee7\u7eed\u200b\u5e2e\u200b\u4f60\u200b\u751f\u6210\u200b \u200b\u7b2c\u200b 2 \u200b\u7ae0\u200b\u5b8c\u6574\u200b Jupyter Notebook\uff0c\u200b\u5305\u542b\u200b\uff1a</p> <ul> <li>RNN \u200b\u548c\u200b LSTM \u200b\u8bad\u7ec3\u200b\u793a\u4f8b\u200b</li> <li>\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b</li> <li>\u200b\u53ef\u89c6\u5316\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b</li> </ul> <p>\u200b\u8fd9\u6837\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8fd0\u884c\u200b\u5b9e\u9a8c\u200b\uff0c\u200b\u66f4\u200b\u76f4\u89c2\u200b\u7406\u89e3\u200b\u5e8f\u5217\u200b\u6a21\u578b\u200b\u3002</p> <p>\u200b\u4f60\u200b\u5e0c\u671b\u200b\u6211\u200b\u751f\u6210\u200b notebook \u200b\u5417\u200b\uff1f</p>"},{"location":"nlp/chart03/","title":"\u7b2c\u200b 3 \u200b\u7ae0\u200b \u2014 Transformer \u200b\u4e0e\u200b Self-Attention","text":"<p>Transformer \u200b\u662f\u200b\u73b0\u4ee3\u200b NLP \u200b\u7684\u200b\u6838\u5fc3\u200b\u67b6\u6784\u200b\uff0c\u200b\u5e7f\u6cdb\u5e94\u7528\u200b\u4e8e\u200b BERT\u3001GPT \u200b\u7b49\u200b\u6a21\u578b\u200b\u3002\u200b\u5b83\u200b\u7684\u200b\u6700\u5927\u200b\u7279\u70b9\u200b\u662f\u200b\u5f7b\u5e95\u200b\u6446\u8131\u200b\u4e86\u200b RNN/LSTM \u200b\u7684\u200b\u987a\u5e8f\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u901a\u8fc7\u200b Self-Attention \u200b\u540c\u65f6\u200b\u5904\u7406\u200b\u6574\u4e2a\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u9ad8\u6548\u200b\u5e76\u884c\u200b\u548c\u200b\u5168\u5c40\u200b\u4e0a\u4e0b\u6587\u200b\u5efa\u6a21\u200b\u3002</p>"},{"location":"nlp/chart03/#31","title":"3.1 \u200b\u5b66\u4e60\u200b\u76ee\u6807","text":"<p>\u200b\u5b8c\u6210\u200b\u672c\u7ae0\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u5c06\u200b\u80fd\u591f\u200b\uff1a</p> <ol> <li>\u200b\u7406\u89e3\u200b Transformer \u200b\u7684\u200b\u6574\u4f53\u200b\u67b6\u6784\u200b\uff08Encoder \u200b\u4e0e\u200b Decoder\uff09</li> <li>\u200b\u638c\u63e1\u200b Self-Attention \u200b\u7684\u200b\u539f\u7406\u200b\u3001\u200b\u516c\u5f0f\u200b\u4e0e\u200b\u76f4\u89c2\u200b\u7406\u89e3\u200b</li> <li>\u200b\u7406\u89e3\u200b Multi-Head Attention \u200b\u548c\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b</li> <li>\u200b\u7528\u200b PyTorch \u200b\u5b9e\u73b0\u200b\u57fa\u672c\u200b\u7684\u200b Self-Attention \u200b\u548c\u200b Transformer</li> <li>\u200b\u7406\u89e3\u200b Transformer \u200b\u76f8\u8f83\u200b\u4e8e\u200b RNN \u200b\u7684\u200b\u4f18\u52bf\u200b</li> </ol>"},{"location":"nlp/chart03/#32-transformer","title":"3.2 Transformer \u200b\u6982\u89c8","text":""},{"location":"nlp/chart03/#321","title":"3.2.1 \u200b\u67b6\u6784\u200b\u7ec4\u6210","text":"<p>Transformer \u200b\u7531\u200b Encoder \u200b\u548c\u200b Decoder \u200b\u4e24\u200b\u90e8\u5206\u200b\u7ec4\u6210\u200b\uff1a</p> <ul> <li>Encoder\uff1a\u200b\u5904\u7406\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\uff0c\u200b\u751f\u6210\u200b\u4e0a\u4e0b\u6587\u200b\u8868\u793a\u200b</li> <li>Decoder\uff1a\u200b\u63a5\u6536\u200b Encoder \u200b\u8f93\u51fa\u200b\uff0c\u200b\u751f\u6210\u200b\u76ee\u6807\u200b\u5e8f\u5217\u200b</li> </ul> <p>Encoder \u200b\u6838\u5fc3\u200b\u6a21\u5757\u200b\uff1a</p> <ol> <li>Multi-Head Self-Attention</li> <li>\u200b\u524d\u9988\u200b\u5168\u200b\u8fde\u63a5\u200b\u7f51\u7edc\u200b\uff08Feed-Forward Network\uff09</li> <li>\u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b + \u200b\u5c42\u200b\u5f52\u4e00\u5316\u200b</li> </ol> <p>Decoder \u200b\u6838\u5fc3\u200b\u6a21\u5757\u200b\uff1a</p> <ol> <li>Masked Multi-Head Self-Attention\uff08\u200b\u907f\u514d\u200b\u770b\u5230\u200b\u672a\u6765\u200b\u4fe1\u606f\u200b\uff09</li> <li>Encoder-Decoder Attention\uff08\u200b\u5c06\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u4fe1\u606f\u200b\u4e0e\u200b\u5f53\u524d\u200b\u751f\u6210\u200b\u5e8f\u5217\u200b\u5bf9\u9f50\u200b\uff09</li> <li>\u200b\u524d\u9988\u200b\u5168\u200b\u8fde\u63a5\u200b\u7f51\u7edc\u200b + \u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b</li> </ol> <p>Encoder-Decoder \u200b\u67b6\u6784\u200b\u5e38\u7528\u200b\u4e8e\u200b\u673a\u5668\u7ffb\u8bd1\u200b\uff0c\u200b\u5355\u72ec\u200b Encoder\uff08\u200b\u5982\u200b BERT\uff09\u200b\u7528\u4e8e\u200b\u7406\u89e3\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5355\u72ec\u200b Decoder\uff08\u200b\u5982\u200b GPT\uff09\u200b\u7528\u4e8e\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b\u3002</p>"},{"location":"nlp/chart03/#33-self-attention","title":"3.3 Self-Attention \u200b\u539f\u7406","text":"<p>Self-Attention \u200b\u662f\u200b Transformer \u200b\u7684\u200b\u6838\u5fc3\u200b\uff0c\u200b\u5b83\u200b\u8ba9\u200b\u6bcf\u4e2a\u200b\u8bcd\u200b\u53ef\u4ee5\u200b\u5173\u6ce8\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u6240\u6709\u200b\u5176\u4ed6\u200b\u8bcd\u200b\uff0c\u200b\u4ece\u800c\u200b\u6355\u83b7\u200b\u5168\u5c40\u200b\u4e0a\u4e0b\u6587\u200b\u3002</p>"},{"location":"nlp/chart03/#331","title":"3.3.1 \u200b\u8f93\u5165\u200b\u4e0e\u200b\u8f93\u51fa","text":"<ul> <li>\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\uff1a\\(X = [x_1, x_2, ..., x_n]\\)\uff0c\u200b\u6bcf\u4e2a\u200b \\(x_i\\) \u200b\u662f\u200b\u8bcd\u200b\u5411\u91cf\u200b</li> <li>\u200b\u8f93\u51fa\u200b\u5e8f\u5217\u200b\uff1a\\(Z = [z_1, z_2, ..., z_n]\\)\uff0c\u200b\u6bcf\u4e2a\u200b \\(z_i\\) \u200b\u662f\u200b\u4e0a\u4e0b\u6587\u200b\u5411\u91cf\u200b</li> </ul> <p>\u200b\u76f4\u89c2\u200b\u7406\u89e3\u200b\uff1aSelf-Attention \u200b\u5c31\u200b\u50cf\u200b\u6bcf\u4e2a\u200b\u8bcd\u200b\u90fd\u200b\u5728\u200b\u95ee\u200b\u201c\u200b\u5728\u200b\u7406\u89e3\u200b\u6211\u200b\u81ea\u5df1\u200b\u7684\u200b\u610f\u4e49\u200b\u65f6\u200b\uff0c\u200b\u5176\u4ed6\u200b\u8bcd\u200b\u7684\u200b\u91cd\u8981\u6027\u200b\u662f\u200b\u591a\u5c11\u200b\u201d\uff0c\u200b\u7136\u540e\u200b\u6839\u636e\u200b\u6743\u91cd\u200b\u6574\u5408\u200b\u4fe1\u606f\u200b\u3002</p>"},{"location":"nlp/chart03/#332-self-attention","title":"3.3.2 Self-Attention \u200b\u8ba1\u7b97\u516c\u5f0f","text":"<ol> <li>\u200b\u751f\u6210\u200b Query\u3001Key\u3001Value \u200b\u5411\u91cf\u200b\uff1a</li> </ol> \\[ Q = X W^Q, \\quad K = X W^K, \\quad V = X W^V \\] <ul> <li>\\(W^Q, W^K, W^V\\)\uff1a\u200b\u53ef\u200b\u5b66\u4e60\u200b\u7684\u200b\u6743\u91cd\u200b\u77e9\u9635\u200b</li> <li>\\(Q\\)\uff1aQuery\uff08\u200b\u63d0\u95ee\u200b\uff09</li> <li>\\(K\\)\uff1aKey\uff08\u200b\u56de\u7b54\u200b\u7684\u200b\u5173\u952e\u200b\uff09</li> <li> <p>\\(V\\)\uff1aValue\uff08\u200b\u5b9e\u9645\u200b\u4fe1\u606f\u200b\uff09</p> </li> <li> <p>\u200b\u8ba1\u7b97\u200b\u6ce8\u610f\u529b\u200b\u5206\u6570\u200b\uff1a</p> </li> </ul> \\[ \\text{Attention}(Q,K,V) = \\text{softmax}\\Big(\\frac{Q K^\\top}{\\sqrt{d_k}}\\Big) V \\] <ul> <li>\\(d_k\\)\uff1aKey \u200b\u5411\u91cf\u200b\u7ef4\u5ea6\u200b\uff0c\u200b\u7528\u200b \\(\\sqrt{d_k}\\) \u200b\u7f29\u653e\u200b\u907f\u514d\u200b\u5206\u6570\u200b\u8fc7\u5927\u200b</li> <li>\\(Q K^\\top\\)\uff1a\u200b\u8861\u91cf\u200b Query \u200b\u4e0e\u200b\u6bcf\u4e2a\u200b Key \u200b\u7684\u200b\u76f8\u4f3c\u200b\u5ea6\u200b</li> <li>softmax\uff1a\u200b\u5c06\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u6743\u91cd\u200b</li> </ul> <p>\u200b\u76f4\u89c2\u200b\u7406\u89e3\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u8bcd\u5bf9\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u6240\u6709\u200b\u8bcd\u200b\u7684\u200b\u201c\u200b\u5173\u6ce8\u200b\u7a0b\u5ea6\u200b\u201d\u200b\u88ab\u200b\u91cf\u5316\u200b\uff0c\u200b\u5f97\u5230\u200b\u52a0\u6743\u200b\u4fe1\u606f\u200b\u3002</p>"},{"location":"nlp/chart03/#333-self-attention","title":"3.3.3 Self-Attention \u200b\u4e3e\u4f8b","text":"<p>\u200b\u53e5\u5b50\u200b\uff1a\"The cat sat on the mat\"</p> <ul> <li>Query: \"cat\"</li> <li>Key/Value: \u200b\u6240\u6709\u200b\u8bcd\u200b</li> <li> <p>Attention \u200b\u6743\u91cd\u200b\u53ef\u80fd\u200b\u663e\u793a\u200b\uff1a</p> </li> <li> <p>\"sat\": 0.4</p> </li> <li>\"mat\": 0.3</li> <li>\"The\": 0.05</li> </ul> <p>\u200b\u8bf4\u660e\u200b\u201ccat\u201d\u200b\u4f1a\u200b\u66f4\u200b\u5173\u6ce8\u200b\u4e0e\u5176\u200b\u8bed\u4e49\u200b\u76f8\u5173\u200b\u7684\u200b\u8bcd\u200b\uff0c\u201csat\u201d\u200b\u548c\u200b\u201cmat\u201d\u200b\u7684\u200b\u6743\u91cd\u200b\u8f83\u200b\u9ad8\u200b\u3002</p>"},{"location":"nlp/chart03/#34-multi-head-attention","title":"3.4 Multi-Head Attention","text":"<p>\u200b\u5355\u4e2a\u200b\u6ce8\u610f\u529b\u200b\u5934\u200b\u53ef\u80fd\u200b\u6355\u6349\u200b\u7684\u200b\u4fe1\u606f\u200b\u6709\u9650\u200b\uff0cMulti-Head Attention \u200b\u7528\u200b\u591a\u4e2a\u200b\u6ce8\u610f\u529b\u200b\u5934\u200b\u6355\u6349\u200b\u4e0d\u540c\u200b\u8bed\u4e49\u200b\u5173\u7cfb\u200b\uff1a</p> \\[ \\text{MultiHead}(Q,K,V) = \\text{Concat}(\\text{head}_1, ..., \\text{head}_h) W^O \\] <ul> <li>\u200b\u6bcf\u4e2a\u200b head \u200b\u6709\u200b\u72ec\u7acb\u200b\u7684\u200b \\(W^Q, W^K, W^V\\)</li> <li>\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e0d\u540c\u200b\u5b50\u200b\u7a7a\u95f4\u200b\u5173\u6ce8\u200b\u4e0d\u540c\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u6700\u540e\u200b\u901a\u8fc7\u200b \\(W^O\\) \u200b\u6574\u5408\u200b\u591a\u5934\u200b\u4fe1\u606f\u200b</li> </ul> <p>\u200b\u7c7b\u6bd4\u200b\uff1a\u200b\u4e00\u7fa4\u200b\u4e13\u5bb6\u200b\u5206\u522b\u200b\u5173\u6ce8\u200b\u5e8f\u5217\u200b\u7684\u200b\u4e0d\u540c\u200b\u89d2\u5ea6\u200b\uff0c\u200b\u7136\u540e\u200b\u6c47\u603b\u200b\u610f\u89c1\u200b\u3002</p>"},{"location":"nlp/chart03/#35-positional-encoding","title":"3.5 \u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\uff08Positional Encoding\uff09","text":"<p>Transformer \u200b\u4e0d\u50cf\u200b RNN \u200b\u90a3\u6837\u200b\u81ea\u7136\u200b\u611f\u77e5\u200b\u987a\u5e8f\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u663e\u5f0f\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\uff1a</p> \\[ PE_{(pos,2i)} = \\sin\\Big(\\frac{pos}{10000^{2i/d_\\text{model}}}\\Big), \\quad PE_{(pos,2i+1)} = \\cos\\Big(\\frac{pos}{10000^{2i/d_\\text{model}}}\\Big) \\] <ul> <li>\\(pos\\)\uff1a\u200b\u8bcd\u200b\u5728\u200b\u5e8f\u5217\u200b\u7684\u200b\u4f4d\u7f6e\u200b</li> <li>\\(i\\)\uff1a\u200b\u5411\u91cf\u200b\u7ef4\u5ea6\u200b\u7d22\u5f15\u200b</li> </ul> <p>\u200b\u76f4\u89c2\u200b\u7406\u89e3\u200b\uff1a\u200b\u6b63\u5f26\u200b/\u200b\u4f59\u5f26\u200b\u6ce2\u200b\u4e0d\u540c\u200b\u9891\u7387\u200b\u7f16\u7801\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u4f7f\u200b\u6a21\u578b\u200b\u533a\u5206\u200b\u987a\u5e8f\u200b\uff0c\u200b\u540c\u65f6\u200b\u5141\u8bb8\u200b\u63d2\u503c\u200b\u9884\u6d4b\u200b\u3002</p>"},{"location":"nlp/chart03/#36-feed-forward","title":"3.6 \u200b\u524d\u9988\u200b\u5168\u200b\u8fde\u63a5\u200b\u7f51\u7edc\u200b\uff08Feed-Forward\uff09","text":"<p>\u200b\u6bcf\u4e2a\u200b Encoder/Decoder \u200b\u5c42\u200b\u8fd8\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u524d\u9988\u200b\u7f51\u7edc\u200b\uff1a</p> \\[ \\text{FFN}(x) = \\text{ReLU}(x W_1 + b_1) W_2 + b_2 \\] <ul> <li>\u200b\u72ec\u7acb\u200b\u5904\u7406\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b</li> <li>\u200b\u589e\u52a0\u200b\u975e\u7ebf\u6027\u200b\u8868\u8fbe\u80fd\u529b\u200b</li> <li>\u200b\u914d\u5408\u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b\u548c\u200b LayerNorm</li> </ul>"},{"location":"nlp/chart03/#37","title":"3.7 \u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b\u4e0e\u200b\u5c42\u200b\u5f52\u4e00\u5316","text":"<p>\u200b\u6bcf\u200b\u4e00\u5c42\u200b\u4f7f\u7528\u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b\u548c\u200b Layer Normalization\uff1a</p> \\[ \\text{Output} = \\text{LayerNorm}(x + \\text{Sublayer}(x)) \\] <ul> <li>\u200b\u9632\u6b62\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b</li> <li>\u200b\u52a0\u5feb\u200b\u8bad\u7ec3\u200b\u6536\u655b\u200b</li> <li>\u200b\u4fdd\u6301\u200b\u4fe1\u606f\u200b\u6d41\u901a\u200b\u987a\u7545\u200b</li> </ul>"},{"location":"nlp/chart03/#38-transformer-python-pytorch","title":"3.8 Transformer Python \u200b\u793a\u4f8b\u200b\uff08PyTorch\uff09","text":"<pre><code>import torch\nimport torch.nn as nn\n\n# \u200b\u8f93\u5165\u200b\uff1abatch_size=2, seq_len=5, embedding_dim=512\nx = torch.randn(2,5,512)\n\n# Multi-Head Attention\nmha = nn.MultiheadAttention(embed_dim=512, num_heads=8, batch_first=True)\nout, attn_weights = mha(x, x, x)\n\nprint(\"\u200b\u8f93\u51fa\u200b\u5f62\u72b6\u200b:\", out.shape)        # (2,5,512)\nprint(\"\u200b\u6ce8\u610f\u529b\u200b\u6743\u91cd\u200b\u5f62\u72b6\u200b:\", attn_weights.shape)  # (2,8,5,5)\n</code></pre> <p>\u200b\u6ce8\u610f\u529b\u200b\u6743\u91cd\u200b\u53ef\u4ee5\u200b\u53ef\u89c6\u5316\u200b\uff0c\u200b\u89c2\u5bdf\u200b\u6bcf\u4e2a\u200b\u8bcd\u200b\u5173\u6ce8\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u54ea\u4e9b\u200b\u8bcd\u200b\u3002</p>"},{"location":"nlp/chart03/#39-transformer","title":"3.9 Transformer \u200b\u4f18\u52bf","text":"\u7279\u6027\u200b RNN Transformer \u200b\u5e76\u884c\u8ba1\u7b97\u200b \u200b\u5426\u200b\uff0c\u200b\u5fc5\u987b\u200b\u987a\u5e8f\u200b\u5904\u7406\u200b \u200b\u662f\u200b\uff0c\u200b\u5168\u200b\u5e8f\u5217\u200b\u5e76\u884c\u200b \u200b\u957f\u8ddd\u79bb\u200b\u4f9d\u8d56\u200b \u200b\u96be\u200b\u6355\u6349\u200b \u200b\u6613\u200b\u6355\u6349\u200b\uff0c\u200b\u5168\u5c40\u200b\u6ce8\u610f\u529b\u200b \u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b \u200b\u6162\u200b \u200b\u5feb\u200b \u200b\u8868\u8fbe\u80fd\u529b\u200b \u200b\u6709\u9650\u200b \u200b\u5f3a\u200b\uff0c\u200b\u591a\u5934\u200b\u6ce8\u610f\u529b\u200b\u6355\u6349\u200b\u590d\u6742\u200b\u8bed\u4e49\u200b \u200b\u9002\u7528\u200b\u4efb\u52a1\u200b \u200b\u5c0f\u89c4\u6a21\u200b\u5e8f\u5217\u200b \u200b\u5927\u89c4\u6a21\u200b\u9884\u200b\u8bad\u7ec3\u200b &amp; \u200b\u751f\u6210"},{"location":"nlp/chart03/#310-transformer","title":"3.10 Transformer \u200b\u76f4\u89c2\u200b\u7406\u89e3","text":"<ul> <li>Self-Attention\uff1a\u200b\u6bcf\u4e2a\u200b\u8bcd\u200b\u201c\u200b\u770b\u200b\u201d\u200b\u6574\u4e2a\u200b\u5e8f\u5217\u200b\uff0c\u200b\u627e\u51fa\u200b\u76f8\u5173\u200b\u4fe1\u606f\u200b</li> <li>Multi-Head Attention\uff1a\u200b\u591a\u4e2a\u200b\u201c\u200b\u4e13\u5bb6\u200b\u201d\uff0c\u200b\u6355\u6349\u200b\u4e0d\u540c\u200b\u8bed\u4e49\u200b</li> <li>\u200b\u524d\u9988\u200b\u7f51\u7edc\u200b + \u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b\uff1a\u200b\u5904\u7406\u200b\u590d\u6742\u200b\u975e\u7ebf\u6027\u200b\u5173\u7cfb\u200b\uff0c\u200b\u540c\u65f6\u200b\u4fdd\u8bc1\u200b\u4fe1\u606f\u6d41\u200b</li> <li>\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\uff1a\u200b\u544a\u8bc9\u200b\u6a21\u578b\u200b\u8bcd\u200b\u7684\u200b\u987a\u5e8f\u200b</li> </ul> <p>Transformer \u200b\u7684\u200b\u5e76\u884c\u5904\u7406\u200b\u548c\u200b\u5168\u5c40\u200b\u6ce8\u610f\u529b\u200b\u8ba9\u200b\u6a21\u578b\u200b\u80fd\u591f\u200b\u5feb\u901f\u200b\u7406\u89e3\u200b\u957f\u200b\u6587\u672c\u200b\u8bed\u4e49\u200b\u3002</p>"},{"location":"nlp/chart03/#311","title":"3.11 \u200b\u672c\u7ae0\u200b\u5c0f\u7ed3","text":"<ol> <li>Transformer \u200b\u5f7b\u5e95\u6539\u53d8\u200b\u4e86\u200b NLP \u200b\u5e8f\u5217\u200b\u5904\u7406\u200b\u65b9\u5f0f\u200b</li> <li>Self-Attention \u200b\u662f\u200b\u6838\u5fc3\u601d\u60f3\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u5168\u5c40\u200b\u4e0a\u4e0b\u6587\u200b\u5efa\u6a21\u200b</li> <li>Multi-Head Attention \u200b\u63d0\u5347\u200b\u4e86\u200b\u8bed\u4e49\u200b\u6355\u6349\u200b\u80fd\u529b\u200b</li> <li>\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u89e3\u51b3\u200b\u5e8f\u5217\u200b\u987a\u5e8f\u200b\u95ee\u9898\u200b</li> <li>PyTorch \u200b\u63d0\u4f9b\u200b\u9ad8\u6548\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u53ef\u200b\u76f4\u63a5\u200b\u5b9e\u9a8c\u200b\u548c\u200b\u53ef\u89c6\u5316\u200b</li> </ol> <p>\u200b\u6211\u200b\u53ef\u4ee5\u200b\u5e2e\u200b\u4f60\u200b\u751f\u6210\u200b \u200b\u7b2c\u200b 3 \u200b\u7ae0\u200b\u5b8c\u6574\u200b Jupyter Notebook\uff0c\u200b\u5305\u542b\u200b\uff1a</p> <ul> <li>Self-Attention \u200b\u53ef\u89c6\u5316\u200b</li> <li>Multi-Head Attention \u200b\u793a\u4f8b\u200b</li> <li>\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u53ef\u89c6\u5316\u200b</li> <li>\u200b\u7b80\u5355\u200b Transformer \u200b\u524d\u5411\u200b\u4f20\u64ad\u200b\u5b9e\u9a8c\u200b</li> </ul> <p>\u200b\u8fd9\u6837\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8fd0\u884c\u200b\u5b9e\u9a8c\u200b\uff0c\u200b\u66f4\u200b\u76f4\u89c2\u200b\u7406\u89e3\u200b Transformer \u200b\u5de5\u4f5c\u200b\u539f\u7406\u200b\u3002</p> <p>\u200b\u4f60\u200b\u5e0c\u671b\u200b\u6211\u200b\u751f\u6210\u200b\u8fd9\u4e2a\u200b notebook \u200b\u5417\u200b\uff1f</p>"},{"location":"nlp/chart04/","title":"\u7b2c\u200b 4 \u200b\u7ae0\u200b : BERT / GPT \u200b\u539f\u7406\u200b\u4e0e\u200b\u5fae\u8c03","text":"<p>BERT \u200b\u4e0e\u200b GPT \u200b\u662f\u200b\u73b0\u4ee3\u200b NLP \u200b\u4e2d\u200b\u6700\u200b\u7ecf\u5178\u200b\u7684\u200b\u9884\u200b\u8bad\u7ec3\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\u3002\u200b\u5b83\u4eec\u200b\u90fd\u200b\u57fa\u4e8e\u200b Transformer\uff0c\u200b\u4f46\u200b\u5728\u200b\u4efb\u52a1\u200b\u8bbe\u8ba1\u200b\u3001\u200b\u8bad\u7ec3\u200b\u65b9\u5f0f\u200b\u548c\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\u4e0a\u200b\u6709\u200b\u660e\u663e\u200b\u533a\u522b\u200b\u3002\u200b\u672c\u7ae0\u200b\u5c06\u200b\u8be6\u7ec6\u200b\u8bb2\u89e3\u200b\u5b83\u4eec\u200b\u7684\u200b\u539f\u7406\u200b\uff0c\u200b\u5e76\u200b\u6f14\u793a\u200b\u5982\u4f55\u200b\u5fae\u8c03\u200b\u5b83\u4eec\u200b\u8fdb\u884c\u200b\u4e0b\u6e38\u200b\u4efb\u52a1\u200b\u3002</p>"},{"location":"nlp/chart04/#41","title":"4.1 \u200b\u5b66\u4e60\u200b\u76ee\u6807","text":"<p>\u200b\u5b8c\u6210\u200b\u672c\u7ae0\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u5c06\u200b\u80fd\u591f\u200b\uff1a</p> <ol> <li>\u200b\u7406\u89e3\u200b BERT \u200b\u548c\u200b GPT \u200b\u7684\u200b\u57fa\u672c\u539f\u7406\u200b\u4e0e\u200b\u5dee\u5f02\u200b</li> <li>\u200b\u638c\u63e1\u200b\u9884\u200b\u8bad\u7ec3\u4efb\u52a1\u200b\uff1aMasked Language Model (BERT) \u200b\u4e0e\u200b Autoregressive LM (GPT)</li> <li>\u200b\u7406\u89e3\u200b Transformer \u200b\u5728\u200b BERT/GPT \u200b\u4e2d\u200b\u7684\u200b\u4f5c\u7528\u200b</li> <li>\u200b\u5b66\u4f1a\u200b\u5728\u200b Python \u200b\u4e2d\u200b\u52a0\u8f7d\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u5e76\u200b\u8fdb\u884c\u200b\u5fae\u8c03\u200b</li> <li>\u200b\u7406\u89e3\u200b\u5982\u4f55\u200b\u5c06\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u5e94\u7528\u200b\u4e8e\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u3001\u200b\u6587\u672c\u200b\u751f\u6210\u200b\u7b49\u200b\u4efb\u52a1\u200b</li> </ol>"},{"location":"nlp/chart04/#42-bert","title":"4.2 BERT \u200b\u6982\u5ff5","text":"<p>BERT\uff08Bidirectional Encoder Representations from Transformers\uff09\u200b\u662f\u200b\u53cc\u5411\u200b Transformer Encoder\uff1a</p> <ul> <li>\u200b\u53cc\u5411\u200b\uff1a\u200b\u540c\u65f6\u200b\u8003\u8651\u200b\u4e0a\u4e0b\u6587\u200b\u7684\u200b\u5de6\u4fa7\u200b\u548c\u200b\u53f3\u4fa7\u200b\u4fe1\u606f\u200b</li> <li> <p>\u200b\u9884\u200b\u8bad\u7ec3\u4efb\u52a1\u200b\uff1a</p> <ol> <li>Masked Language Model (MLM)\uff1a\u200b\u968f\u673a\u200b\u906e\u76d6\u200b\u4e00\u4e9b\u200b\u8bcd\u200b\uff0c\u200b\u9884\u6d4b\u200b\u88ab\u200b\u906e\u76d6\u200b\u7684\u200b\u8bcd\u200b      $$      P(x_{\\text{masked}} | x_{\\text{context}})      $$</li> <li>Next Sentence Prediction (NSP)\uff1a\u200b\u9884\u6d4b\u200b\u53e5\u5b50\u200b B \u200b\u662f\u5426\u200b\u7d27\u8ddf\u200b\u53e5\u5b50\u200b A</li> </ol> </li> <li> <p>\u200b\u5e94\u7528\u200b\uff1a\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u3001\u200b\u95ee\u7b54\u200b\u3001\u200b\u547d\u540d\u200b\u5b9e\u4f53\u200b\u8bc6\u522b\u200b\u7b49\u200b\u7406\u89e3\u200b\u4efb\u52a1\u200b</p> </li> </ul> <p>BERT \u200b\u662f\u200b Encoder-only \u200b\u7ed3\u6784\u200b\uff0c\u200b\u4e0d\u200b\u7528\u4e8e\u200b\u6587\u672c\u200b\u751f\u6210\u200b\u3002</p>"},{"location":"nlp/chart04/#421-masked-language-model","title":"4.2.1 Masked Language Model \u200b\u793a\u4f8b","text":"<p>\u200b\u53e5\u5b50\u200b\uff1a\"The cat sat on the mat\"</p> <ul> <li>\u200b\u968f\u673a\u200b\u906e\u76d6\u200b\u8bcd\u200b\uff1a\"The cat [MASK] on the mat\"</li> <li>BERT \u200b\u5b66\u4e60\u200b\u9884\u6d4b\u200b <code>[MASK]</code> \u200b\u5bf9\u5e94\u200b\u7684\u200b\u8bcd\u200b <code>\"sat\"</code></li> </ul>"},{"location":"nlp/chart04/#43-gpt","title":"4.3 GPT \u200b\u6982\u5ff5","text":"<p>GPT\uff08Generative Pre-trained Transformer\uff09\u200b\u662f\u200b\u5355\u5411\u200b Transformer Decoder\uff1a</p> <ul> <li>\u200b\u5355\u5411\u200b\uff1a\u200b\u4ece\u5de6\u5230\u53f3\u200b\u751f\u6210\u200b\u6587\u672c\u200b</li> <li>\u200b\u9884\u200b\u8bad\u7ec3\u4efb\u52a1\u200b\uff1aAutoregressive Language Model (\u200b\u81ea\u200b\u56de\u5f52\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b)   $$   P(x_t | x_1, x_2, ..., x_{t-1})   $$</li> <li>\u200b\u5e94\u7528\u200b\uff1a\u200b\u6587\u672c\u200b\u751f\u6210\u200b\u3001\u200b\u5bf9\u8bdd\u200b\u751f\u6210\u200b\u3001\u200b\u4ee3\u7801\u751f\u6210\u200b\u7b49\u200b\u4efb\u52a1\u200b</li> </ul> <p>GPT \u200b\u662f\u200b Decoder-only \u200b\u7ed3\u6784\u200b\uff0c\u200b\u9002\u5408\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b\u3002</p>"},{"location":"nlp/chart04/#44-bert-gpt","title":"4.4 BERT \u200b\u4e0e\u200b GPT \u200b\u7684\u200b\u5dee\u5f02","text":"\u7279\u6027\u200b BERT GPT Transformer \u200b\u90e8\u5206\u200b Encoder Decoder \u200b\u4e0a\u4e0b\u6587\u200b\u65b9\u5411\u200b \u200b\u53cc\u5411\u200b \u200b\u5355\u5411\u200b \u200b\u9884\u200b\u8bad\u7ec3\u4efb\u52a1\u200b MLM + NSP Autoregressive LM \u200b\u9002\u7528\u200b\u4efb\u52a1\u200b \u200b\u7406\u89e3\u200b\u4efb\u52a1\u200b \u200b\u751f\u6210\u200b\u4efb\u52a1\u200b \u200b\u5178\u578b\u200b\u5e94\u7528\u200b \u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u3001\u200b\u95ee\u7b54\u200b \u200b\u6587\u672c\u200b\u751f\u6210\u200b\u3001\u200b\u5bf9\u8bdd\u200b\u3001\u200b\u4ee3\u7801\u751f\u6210"},{"location":"nlp/chart04/#45-bert-gpt","title":"4.5 BERT / GPT \u200b\u7684\u200b\u5fae\u8c03","text":""},{"location":"nlp/chart04/#451","title":"4.5.1 \u200b\u5fae\u8c03\u200b\u539f\u7406","text":"<ul> <li>\u200b\u9884\u200b\u8bad\u7ec3\u200b\uff1a\u200b\u5728\u200b\u5927\u89c4\u6a21\u200b\u8bed\u6599\u200b\u4e0a\u200b\u5b66\u4e60\u200b\u901a\u7528\u200b\u8bed\u8a00\u200b\u8868\u793a\u200b</li> <li>\u200b\u5fae\u8c03\u200b\uff1a\u200b\u5728\u200b\u4e0b\u6e38\u200b\u4efb\u52a1\u200b\u4e0a\u200b\u8bad\u7ec3\u200b\u5c11\u91cf\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f7f\u200b\u6a21\u578b\u200b\u9002\u5e94\u200b\u7279\u5b9a\u200b\u4efb\u52a1\u200b</li> </ul> <p>\u200b\u5fae\u8c03\u200b\u901a\u5e38\u200b\u6bd4\u200b\u4ece\u200b\u96f6\u200b\u8bad\u7ec3\u200b\u6548\u679c\u200b\u597d\u200b\uff0c\u200b\u4e14\u200b\u6570\u636e\u200b\u9700\u6c42\u200b\u66f4\u200b\u5c11\u200b\u3002</p>"},{"location":"nlp/chart04/#452-bert","title":"4.5.2 \u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u5fae\u8c03\u200b\uff08BERT \u200b\u793a\u4f8b\u200b\uff09","text":"<pre><code>from transformers import BertTokenizer, BertForSequenceClassification\nfrom transformers import Trainer, TrainingArguments\nimport torch\n\n# \u200b\u52a0\u8f7d\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u548c\u200b\u5206\u8bcd\u5668\u200b\ntokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\nmodel = BertForSequenceClassification.from_pretrained('bert-base-uncased', num_labels=2)\n\n# \u200b\u793a\u4f8b\u200b\u6587\u672c\u200b\ntexts = [\"I love NLP\", \"I hate bugs\"]\nlabels = torch.tensor([1,0])\n\n# \u200b\u7f16\u7801\u200b\nencodings = tokenizer(texts, padding=True, truncation=True, return_tensors='pt')\ndataset = torch.utils.data.TensorDataset(encodings['input_ids'], encodings['attention_mask'], labels)\n\n# Trainer \u200b\u7b80\u5355\u200b\u8bad\u7ec3\u200b\u793a\u4f8b\u200b\ntraining_args = TrainingArguments(output_dir='./results', num_train_epochs=1, per_device_train_batch_size=2)\ntrainer = Trainer(model=model, args=training_args, train_dataset=dataset)\ntrainer.train()\n</code></pre>"},{"location":"nlp/chart04/#453-gpt","title":"4.5.3 \u200b\u6587\u672c\u200b\u751f\u6210\u200b\u5fae\u8c03\u200b\uff08GPT \u200b\u793a\u4f8b\u200b\uff09","text":"<pre><code>from transformers import GPT2Tokenizer, GPT2LMHeadModel\n\ntokenizer = GPT2Tokenizer.from_pretrained('gpt2')\nmodel = GPT2LMHeadModel.from_pretrained('gpt2')\n\ntext = \"Once upon a time\"\ninputs = tokenizer(text, return_tensors='pt')\n\n# \u200b\u751f\u6210\u200b\u6587\u672c\u200b\noutputs = model.generate(**inputs, max_length=20)\nprint(tokenizer.decode(outputs[0], skip_special_tokens=True))\n</code></pre>"},{"location":"nlp/chart04/#46-bert-gpt","title":"4.6 BERT / GPT \u200b\u7684\u200b\u6838\u5fc3\u200b\u539f\u7406\u200b\u603b\u7ed3","text":"<ol> <li> <p>Transformer \u200b\u662f\u200b\u5e95\u5c42\u200b\u67b6\u6784\u200b</p> <ul> <li>BERT \u200b\u7528\u200b Encoder</li> <li>GPT \u200b\u7528\u200b Decoder</li> </ul> </li> <li> <p>\u200b\u9884\u200b\u8bad\u7ec3\u4efb\u52a1\u200b\u5b66\u4e60\u200b\u8bed\u8a00\u200b\u77e5\u8bc6\u200b</p> <ul> <li>BERT\uff1aMasked LM + NSP</li> <li>GPT\uff1a\u200b\u81ea\u200b\u56de\u5f52\u200b LM</li> </ul> </li> <li> <p>\u200b\u5fae\u8c03\u200b\u5728\u200b\u4e0b\u6e38\u200b\u4efb\u52a1\u200b\u4e0a\u200b\u5c11\u91cf\u200b\u8bad\u7ec3\u200b\u5373\u53ef\u200b\u83b7\u5f97\u200b\u9ad8\u6027\u80fd\u200b</p> </li> <li> <p>\u200b\u5e94\u7528\u200b\u5e7f\u6cdb\u200b\uff1a</p> <ul> <li>BERT\uff1a\u200b\u5206\u7c7b\u200b\u3001\u200b\u95ee\u7b54\u200b\u3001\u200b\u547d\u540d\u200b\u5b9e\u4f53\u200b\u8bc6\u522b\u200b</li> <li>GPT\uff1a\u200b\u6587\u672c\u200b\u751f\u6210\u200b\u3001\u200b\u5bf9\u8bdd\u200b\u3001\u200b\u4ee3\u7801\u751f\u6210\u200b</li> </ul> </li> </ol>"},{"location":"nlp/chart04/#47","title":"4.7 \u200b\u672c\u7ae0\u200b\u5c0f\u7ed3","text":"<ul> <li>BERT \u200b\u5f3a\u8c03\u200b\u8bed\u8a00\u200b\u7406\u89e3\u200b\uff0c\u200b\u5229\u7528\u200b\u53cc\u5411\u200b\u4e0a\u4e0b\u6587\u200b</li> <li>GPT \u200b\u5f3a\u8c03\u200b\u6587\u672c\u200b\u751f\u6210\u200b\uff0c\u200b\u5229\u7528\u200b\u5de6\u5230\u200b\u53f3\u200b\u9884\u6d4b\u200b</li> <li>\u200b\u9884\u200b\u8bad\u7ec3\u200b + \u200b\u5fae\u8c03\u200b\u662f\u200b\u73b0\u4ee3\u200b NLP \u200b\u7684\u200b\u4e3b\u6d41\u200b\u65b9\u6cd5\u200b</li> <li>PyTorch + Transformers \u200b\u5e93\u200b\u63d0\u4f9b\u200b\u4fbf\u6377\u200b\u5de5\u5177\u200b\uff0c\u200b\u5feb\u901f\u200b\u5fae\u8c03\u200b\u548c\u200b\u5e94\u7528\u200b</li> </ul>"},{"location":"nlp/chart05/","title":"\u7b2c\u200b 5 \u200b\u7ae0\u200b : NLP \u200b\u5b9e\u6218\u200b\u4e0e\u200b\u90e8\u7f72\u200b\uff08\u200b\u8be6\u7ec6\u200b\u6559\u7a0b\u200b\uff09","text":"<p>\u200b\u8fd9\u200b\u4e00\u7ae0\u200b\u5c06\u200b\u5e26\u200b\u4f60\u200b\u8d70\u51fa\u200b\u7406\u8bba\u200b\u4e0e\u200b\u6a21\u578b\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u8fdb\u5165\u200b NLP \u200b\u9879\u76ee\u200b\u5b9e\u6218\u200b\u4e0e\u200b\u843d\u5730\u200b\u90e8\u7f72\u200b\u9636\u6bb5\u200b\u3002\u200b\u76ee\u6807\u200b\u662f\u200b\u8ba9\u4f60\u80fd\u200b\u628a\u200b\u524d\u9762\u200b\u5b66\u200b\u7684\u200b\u6a21\u578b\u200b\uff08\u200b\u8bcd\u200b\u5411\u91cf\u200b\u3001RNN/LSTM\u3001Transformer\u3001BERT/GPT\uff09\u200b\u5e94\u7528\u200b\u5230\u200b\u771f\u5b9e\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u6a21\u578b\u200b\u90e8\u7f72\u200b\u4e3a\u200b\u53ef\u7528\u200b\u7684\u200b\u670d\u52a1\u200b\u3002</p>"},{"location":"nlp/chart05/#_1","title":"\u4e00\u200b\u3001\u200b\u5b66\u4e60\u200b\u76ee\u6807","text":"<p>\u200b\u5b8c\u6210\u200b\u672c\u7ae0\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u5c06\u200b\u80fd\u200b\uff1a</p> <ol> <li>\u200b\u8bbe\u8ba1\u200b\u548c\u200b\u5b9e\u73b0\u200b\u5b8c\u6574\u200b\u7684\u200b NLP \u200b\u9879\u76ee\u200b\u6d41\u7a0b\u200b\uff08\u200b\u6570\u636e\u200b \u2192 \u200b\u6a21\u578b\u200b \u2192 \u200b\u90e8\u7f72\u200b\uff09\u3002</li> <li>\u200b\u719f\u7ec3\u200b\u5904\u7406\u200b\u6587\u672c\u200b\u6570\u636e\u200b\u6e05\u6d17\u200b\u3001\u200b\u5206\u8bcd\u200b\u3001\u200b\u7f16\u7801\u200b\u3001\u200b\u7279\u5f81\u200b\u5de5\u7a0b\u200b\u3002</li> <li>\u200b\u8bad\u7ec3\u200b\u5e76\u200b\u4f18\u5316\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b NLP \u200b\u6a21\u578b\u200b\uff08\u200b\u5206\u7c7b\u200b\u3001\u200b\u751f\u6210\u200b\u3001\u200b\u95ee\u7b54\u200b\uff09\u3002</li> <li>\u200b\u5b9e\u73b0\u200b\u6a21\u578b\u200b\u5728\u7ebf\u200b\u90e8\u7f72\u200b\uff0c\u200b\u5305\u62ec\u200b API \u200b\u63a5\u53e3\u200b\u3001\u200b\u63a8\u7406\u200b\u4f18\u5316\u200b\u3001\u200b\u5bb9\u5668\u200b\u5316\u200b\u3002</li> <li>\u200b\u638c\u63e1\u200b\u5e38\u89c1\u200b\u90e8\u7f72\u200b\u5de5\u5177\u200b\u4e0e\u200b\u6280\u672f\u200b\uff0c\u200b\u5982\u200b FastAPI\u3001Docker\u3001ONNX\u3001GPU/CPU \u200b\u63a8\u7406\u200b\u4f18\u5316\u200b\u3002</li> </ol>"},{"location":"nlp/chart05/#nlp","title":"\u4e8c\u200b\u3001NLP \u200b\u9879\u76ee\u200b\u6d41\u7a0b\u200b\u6982\u89c8","text":"<ol> <li> <p>\u200b\u6570\u636e\u200b\u6536\u96c6\u200b\u4e0e\u200b\u6e05\u6d17\u200b</p> <ul> <li>\u200b\u6587\u672c\u200b\u6e05\u6d17\u200b\uff1a\u200b\u53bb\u6389\u200b HTML\u3001\u200b\u6807\u70b9\u7b26\u53f7\u200b\u3001\u200b\u8868\u60c5\u200b\u7b49\u200b</li> <li>\u200b\u5206\u8bcd\u200b\u4e0e\u200b\u6807\u51c6\u5316\u200b\uff1a\u200b\u4e2d\u6587\u200b\u4f7f\u7528\u200b\u7ed3\u5df4\u200b\u3001HanLP\uff0c\u200b\u82f1\u6587\u200b\u53ef\u7528\u200b NLTK\u3001Spacy</li> <li>\u200b\u6570\u636e\u200b\u6807\u6ce8\u200b\uff1a\u200b\u5206\u7c7b\u200b\u6807\u7b7e\u200b\u3001\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b\u7684\u200b prompt-completion \u200b\u5bf9\u200b\u7b49\u200b</li> </ul> </li> <li> <p>\u200b\u7279\u5f81\u200b\u5de5\u7a0b\u200b / \u200b\u6587\u672c\u200b\u8868\u793a\u200b</p> <ul> <li>\u200b\u7a00\u758f\u200b\u8868\u793a\u200b\uff1aTF-IDF / Bag-of-Words</li> <li>\u200b\u5206\u5e03\u5f0f\u200b\u8868\u793a\u200b\uff1aWord2Vec\u3001GloVe\u3001fastText</li> <li>\u200b\u9884\u200b\u8bad\u7ec3\u200b Transformer \u200b\u8868\u793a\u200b\uff1aBERT\u3001GPT\u3001RoBERTa</li> </ul> </li> <li> <p>\u200b\u6a21\u578b\u200b\u9009\u62e9\u200b\u4e0e\u200b\u8bad\u7ec3\u200b</p> <ul> <li>\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\uff1aBERT\u3001LSTM</li> <li>\u200b\u6587\u672c\u200b\u751f\u6210\u200b\uff1aGPT\u3001Transformer Decoder</li> <li>\u200b\u95ee\u7b54\u200b\u7cfb\u7edf\u200b\uff1aBERT + QA Head</li> </ul> </li> <li> <p>\u200b\u6a21\u578b\u200b\u8bc4\u4f30\u200b</p> <ul> <li>\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff1aAccuracy\u3001F1\u3001Precision\u3001Recall</li> <li>\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b\uff1aBLEU\u3001ROUGE\u3001Perplexity</li> <li>\u200b\u53ef\u89c6\u5316\u200b\uff1a\u200b\u6df7\u6dc6\u200b\u77e9\u9635\u200b\u3001t-SNE / PCA</li> </ul> </li> </ol>"},{"location":"nlp/chart05/#nlp_1","title":"\u4e09\u200b\u3001NLP \u200b\u5b9e\u6218\u200b\u793a\u4f8b","text":""},{"location":"nlp/chart05/#1","title":"1. \u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\uff08\u200b\u60c5\u611f\u200b\u5206\u6790\u200b\uff09","text":"<pre><code>from transformers import BertTokenizer, BertForSequenceClassification\nfrom torch.utils.data import DataLoader, Dataset\nimport torch\n\n# \u200b\u81ea\u5b9a\u4e49\u200b Dataset\nclass MyDataset(Dataset):\n    def __init__(self, texts, labels, tokenizer, max_len=128):\n        self.texts = texts\n        self.labels = labels\n        self.tokenizer = tokenizer\n        self.max_len = max_len\n    def __len__(self):\n        return len(self.texts)\n    def __getitem__(self, idx):\n        enc = self.tokenizer(self.texts[idx], \n                             padding='max_length', \n                             truncation=True, \n                             max_length=self.max_len,\n                             return_tensors='pt')\n        return { 'input_ids': enc['input_ids'].squeeze(),\n                 'attention_mask': enc['attention_mask'].squeeze(),\n                 'labels': torch.tensor(self.labels[idx]) }\n\ntokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\nmodel = BertForSequenceClassification.from_pretrained('bert-base-uncased', num_labels=2)\n\n# \u200b\u8bad\u7ec3\u200b\u5faa\u73af\u200b\u7701\u7565\u200b\uff0c\u200b\u53ef\u200b\u4f7f\u7528\u200b Trainer API\n</code></pre>"},{"location":"nlp/chart05/#2-gpt","title":"2. \u200b\u6587\u672c\u200b\u751f\u6210\u200b\uff08GPT\uff09","text":"<pre><code>from transformers import GPT2Tokenizer, GPT2LMHeadModel\n\ntokenizer = GPT2Tokenizer.from_pretrained('gpt2')\nmodel = GPT2LMHeadModel.from_pretrained('gpt2')\n\nprompt = \"Once upon a time\"\ninputs = tokenizer(prompt, return_tensors=\"pt\")\noutputs = model.generate(**inputs, max_length=50)\nprint(tokenizer.decode(outputs[0]))\n</code></pre>"},{"location":"nlp/chart05/#_2","title":"\u56db\u200b\u3001\u200b\u6a21\u578b\u200b\u4f18\u5316\u200b\u4e0e\u200b\u63a8\u7406","text":"<ol> <li>\u200b\u91cf\u5316\u200b\uff08Quantization\uff09\uff1a\u200b\u964d\u4f4e\u200b\u6a21\u578b\u200b\u7cbe\u5ea6\u200b\uff08float32 \u2192 int8\uff09\u200b\u51cf\u5c11\u200b\u5185\u5b58\u200b\u5360\u7528\u200b</li> <li>\u200b\u84b8\u998f\u200b\uff08Distillation\uff09\uff1a\u200b\u7528\u200b\u5c0f\u200b\u6a21\u578b\u200b\u903c\u8fd1\u200b\u5927\u200b\u6a21\u578b\u200b\uff0c\u200b\u63d0\u5347\u200b\u901f\u5ea6\u200b</li> <li>ONNX / TensorRT\uff1a\u200b\u8de8\u5e73\u53f0\u200b\u90e8\u7f72\u200b\u4e0e\u200b GPU \u200b\u52a0\u901f\u200b</li> <li>\u200b\u6279\u91cf\u200b\u63a8\u7406\u200b / \u200b\u5e76\u884c\u5904\u7406\u200b\uff1a\u200b\u63d0\u9ad8\u200b\u541e\u5410\u91cf\u200b</li> <li>\u200b\u7f13\u5b58\u200b\u673a\u5236\u200b\uff1a\u200b\u5bf9\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b\u53ef\u200b\u7f13\u5b58\u200b\u524d\u7f00\u200b\u5411\u91cf\u200b</li> </ol>"},{"location":"nlp/chart05/#nlp_2","title":"\u4e94\u200b\u3001NLP \u200b\u6a21\u578b\u200b\u90e8\u7f72","text":""},{"location":"nlp/chart05/#1-api","title":"1. API \u200b\u90e8\u7f72","text":"<p>\u200b\u4f7f\u7528\u200b FastAPI \u200b\u521b\u5efa\u200b\u6a21\u578b\u200b\u63a8\u7406\u200b\u63a5\u53e3\u200b\uff1a</p> <pre><code>from fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\nclass TextInput(BaseModel):\n    text: str\n\n@app.post(\"/predict\")\ndef predict(input: TextInput):\n    tokens = tokenizer(input.text, return_tensors=\"pt\")\n    outputs = model(**tokens)\n    pred = torch.argmax(outputs.logits, dim=-1).item()\n    return {\"prediction\": pred}\n</code></pre>"},{"location":"nlp/chart05/#2-docker","title":"2. Docker \u200b\u5bb9\u5668\u200b\u5316","text":"<pre><code>FROM python:3.10-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\nCOPY . .\nCMD [\"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]\n</code></pre> <ul> <li>\u200b\u6253\u5305\u200b\u6210\u200b\u955c\u50cf\u200b\uff0c\u200b\u65b9\u4fbf\u200b\u5728\u200b\u4e91\u200b\u670d\u52a1\u5668\u200b\u6216\u200b Kubernetes \u200b\u4e0a\u200b\u90e8\u7f72\u200b</li> </ul>"},{"location":"nlp/chart05/#3","title":"3. \u200b\u4e91\u7aef\u200b\u90e8\u7f72\u200b\u5efa\u8bae","text":"<ul> <li>CPU \u200b\u63a8\u7406\u200b\uff1a\u200b\u5c0f\u200b\u6a21\u578b\u200b / \u200b\u91cf\u5316\u200b\u6a21\u578b\u200b</li> <li>GPU \u200b\u63a8\u7406\u200b\uff1a\u200b\u5927\u200b\u6a21\u578b\u200b / \u200b\u751f\u6210\u200b\u4efb\u52a1\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u8d1f\u8f7d\u200b\u5747\u8861\u200b\u4e0e\u200b\u5f02\u6b65\u200b\u8bf7\u6c42\u200b\u63d0\u9ad8\u200b\u541e\u5410\u91cf\u200b</li> </ul>"},{"location":"nlp/chart05/#_3","title":"\u516d\u200b\u3001\u200b\u5b9e\u6218\u200b\u7ec3\u4e60","text":"<ol> <li>\u200b\u5bf9\u200b\u4e2d\u6587\u200b\u77ed\u6587\u200b\u672c\u200b\u8fdb\u884c\u200b\u5206\u7c7b\u200b\uff0c\u200b\u4f7f\u7528\u200b BERT \u200b\u5fae\u8c03\u200b\u5e76\u200b\u90e8\u7f72\u200b FastAPI \u200b\u63a5\u53e3\u200b</li> <li>\u200b\u5bf9\u200b\u82f1\u6587\u200b\u77ed\u200b\u6545\u4e8b\u200b\u8fdb\u884c\u200b\u751f\u6210\u200b\uff0c\u200b\u4f7f\u7528\u200b GPT \u200b\u5fae\u8c03\u200b\u5e76\u200b\u5b9e\u73b0\u200b REST API</li> <li>\u200b\u5bf9\u6a21\u578b\u200b\u8f93\u51fa\u200b\u505a\u200b\u65e5\u5fd7\u200b\u8bb0\u5f55\u200b\u548c\u200b\u53ef\u89c6\u5316\u200b\u5206\u6790\u200b\uff08\u200b\u51c6\u786e\u7387\u200b\u3001\u200b\u751f\u6210\u200b\u6837\u672c\u200b\uff09</li> <li>\u200b\u5c1d\u8bd5\u200b\u5c06\u200b\u6a21\u578b\u200b\u8f6c\u6362\u200b\u4e3a\u200b ONNX \u200b\u6216\u200b TorchScript\uff0c\u200b\u52a0\u901f\u200b\u63a8\u7406\u200b</li> </ol>"},{"location":"nlp/chart05/#_4","title":"\u4e03\u200b\u3001\u200b\u63a8\u8350\u200b\u9605\u8bfb\u200b\u4e0e\u200b\u5de5\u5177","text":"<ol> <li>Hugging Face Transformers \u200b\u6587\u6863\u200b\uff1ahttps://huggingface.co/docs/transformers</li> <li>FastAPI \u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\uff1ahttps://fastapi.tiangolo.com</li> <li>Docker \u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\uff1ahttps://www.docker.com</li> <li>NVIDIA TensorRT\u3001ONNX Runtime \u200b\u4f18\u5316\u200b\u6307\u5357\u200b</li> </ol> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5e0c\u671b\u200b\uff0c\u200b\u6211\u200b\u53ef\u4ee5\u200b\u5e2e\u200b\u4f60\u200b\u751f\u6210\u200b \u200b\u5b8c\u6574\u200b\u7684\u200b Jupyter Notebook \u200b\u5b9e\u6218\u200b\u7248\u200b\uff0c\u200b\u5305\u542b\u200b\uff1a</p> <ul> <li>\u200b\u4e2d\u6587\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\uff08BERT \u200b\u5fae\u8c03\u200b + FastAPI \u200b\u90e8\u7f72\u200b\uff09</li> <li>\u200b\u82f1\u6587\u200b\u6587\u672c\u200b\u751f\u6210\u200b\uff08GPT \u200b\u5fae\u8c03\u200b + API\uff09</li> <li>\u200b\u6a21\u578b\u200b\u4f18\u5316\u200b\u4e0e\u200b\u63a8\u7406\u200b\u793a\u4f8b\u200b</li> </ul> <p>\u200b\u662f\u5426\u200b\u751f\u6210\u200b\u8fd9\u4e2a\u200b notebook\uff1f</p>"},{"location":"nlp/nltk/","title":"\ud83e\udde9 \u200b\u7b2c\u200b 1 \u200b\u7ae0\u200b\uff1a\u200b\u8ba4\u8bc6\u200b NLTK","text":""},{"location":"nlp/nltk/#nltk","title":"\u4ec0\u4e48\u200b\u662f\u200b NLTK\uff1f","text":"<p>NLTK\uff08Natural Language Toolkit\uff09\u200b\u662f\u200b Python \u200b\u6700\u200b\u7ecf\u5178\u200b\u7684\u200b NLP \u200b\u6559\u5b66\u200b\u4e0e\u200b\u5b9e\u9a8c\u200b\u5e93\u200b\u3002\u200b\u5b83\u200b\u63d0\u4f9b\u200b\u4e86\u200b\uff1a</p> <ul> <li>\u200b\u4e0a\u200b\u767e\u4e2a\u200b\u8bed\u6599\u5e93\u200b\uff08corpus\uff09\u200b\u548c\u200b\u8bcd\u5178\u200b\u8d44\u6e90\u200b\uff08\u200b\u5982\u200b WordNet\uff09\uff1b</li> <li>\u200b\u5404\u7c7b\u200b\u6587\u672c\u5904\u7406\u200b\u5de5\u5177\u200b\uff08\u200b\u5206\u8bcd\u200b\u3001\u200b\u6807\u6ce8\u200b\u3001\u200b\u547d\u540d\u200b\u5b9e\u4f53\u200b\u8bc6\u522b\u200b\u7b49\u200b\uff09\uff1b</li> <li>\u200b\u7edf\u8ba1\u200b\u6a21\u578b\u200b\u548c\u200b\u5206\u7c7b\u200b\u7b97\u6cd5\u200b\uff08\u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b\u3001\u200b\u51b3\u7b56\u6811\u200b\u7b49\u200b\uff09\uff1b</li> <li>\u200b\u5f3a\u5927\u200b\u7684\u200b\u53ef\u89c6\u5316\u200b\u529f\u80fd\u200b\uff08\u200b\u53e5\u6cd5\u6811\u200b\u3001\u200b\u9891\u7387\u200b\u5206\u5e03\u200b\u7b49\u200b\uff09\u3002</li> </ul> <p>\u200b\u7b80\u800c\u8a00\u4e4b\u200b\uff0cNLTK \u200b\u5c31\u200b\u50cf\u662f\u200b NLP \u200b\u7684\u200b\u201c\u200b\u79ef\u200b\u6728\u76d2\u200b\u201d\u2014\u2014\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5b83\u200b\u62fc\u51fa\u200b\u5404\u79cd\u200b\u81ea\u7136\u8bed\u8a00\u200b\u5904\u7406\u200b\u7cfb\u7edf\u200b\u3002</p>"},{"location":"nlp/nltk/#_1","title":"\u5b89\u88c5\u200b\u4e0e\u200b\u914d\u7f6e","text":"<pre><code>pip install nltk\n</code></pre> <p>\u200b\u7b2c\u4e00\u6b21\u200b\u4f7f\u7528\u200b\uff1a</p> <pre><code>import nltk\nnltk.download('all')  # \u200b\u6216\u200b\u6309\u200b\u9700\u200b\u4e0b\u8f7d\u200b\u90e8\u5206\u200b\u8d44\u6e90\u200b\n</code></pre>"},{"location":"nlp/nltk/#2-text-preprocessing","title":"\ud83e\udde9 \u200b\u7b2c\u200b 2 \u200b\u7ae0\u200b\uff1a\u200b\u6587\u672c\u200b\u9884\u5904\u7406\u200b\uff08Text Preprocessing\uff09","text":"<p>\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\u7684\u200b\u8f93\u5165\u200b\u5fc5\u987b\u200b\u662f\u200b\u5e72\u51c0\u200b\u3001\u200b\u7ed3\u6784\u5316\u200b\u7684\u200b\u6587\u672c\u200b\u3002 \u200b\u800c\u200b\u539f\u59cb\u200b\u6587\u672c\u200b\u901a\u5e38\u200b\u5145\u6ee1\u200b\u566a\u97f3\u200b\uff1a\u200b\u6807\u70b9\u7b26\u53f7\u200b\u3001HTML \u200b\u6807\u7b7e\u200b\u3001\u200b\u5927\u5c0f\u5199\u200b\u4e0d\u200b\u7edf\u4e00\u200b\u2026\u2026 \u200b\u8fd9\u200b\u4e00\u6b65\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u628a\u200b\u81ea\u7136\u8bed\u8a00\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u201c\u200b\u8ba1\u7b97\u673a\u200b\u80fd\u200b\u7406\u89e3\u200b\u7684\u200b\u8bcd\u200b\u5e8f\u5217\u200b\u201d\u3002</p>"},{"location":"nlp/nltk/#21-tokenization","title":"2.1 \u200b\u5206\u8bcd\u200b\uff08Tokenization\uff09","text":"<pre><code>from nltk.tokenize import word_tokenize, sent_tokenize\n\ntext = \"Natural Language Processing lets computers understand human language.\"\nprint(sent_tokenize(text))\nprint(word_tokenize(text))\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>['Natural Language Processing lets computers understand human language.']\n['Natural', 'Language', 'Processing', 'lets', 'computers', 'understand', 'human', 'language', '.']\n</code></pre>"},{"location":"nlp/nltk/#22-stopwords","title":"2.2 \u200b\u505c\u200b\u7528\u8bcd\u200b\uff08Stopwords\uff09","text":"<p>\u200b\u505c\u200b\u7528\u8bcd\u200b\u6307\u5982\u200b \u201cthe\u201d\u3001\u201cis\u201d\u3001\u201cand\u201d \u200b\u8fd9\u200b\u7c7b\u200b\u8bed\u4e49\u200b\u8d21\u732e\u200b\u5f88\u5c0f\u200b\u7684\u200b\u5e38\u7528\u8bcd\u200b\u3002</p> <pre><code>from nltk.corpus import stopwords\n\nstop_words = set(stopwords.words('english'))\ntokens = [w for w in word_tokenize(text.lower()) if w.isalpha() and w not in stop_words]\nprint(tokens)\n</code></pre>"},{"location":"nlp/nltk/#23-stemminglemmatization","title":"2.3 \u200b\u8bcd\u5e72\u200b\u63d0\u53d6\u200b\uff08Stemming\uff09\u200b\u4e0e\u200b\u8bcd\u5f62\u200b\u8fd8\u539f\u200b\uff08Lemmatization\uff09","text":"<p>\u200b\u4e24\u79cd\u200b\u8bcd\u5f62\u200b\u6807\u51c6\u5316\u200b\u65b9\u5f0f\u200b\uff1a</p> <pre><code>from nltk.stem import PorterStemmer, WordNetLemmatizer\n\nstemmer = PorterStemmer()\nlemmatizer = WordNetLemmatizer()\n\nprint(stemmer.stem(\"studies\"))     # stem: study\nprint(lemmatizer.lemmatize(\"studies\", pos='v'))  # lemma: study\n</code></pre>"},{"location":"nlp/nltk/#3-pos-tagging","title":"\ud83e\udde9 \u200b\u7b2c\u200b 3 \u200b\u7ae0\u200b\uff1a\u200b\u8bcd\u6027\u200b\u6807\u6ce8\u200b\uff08POS Tagging\uff09","text":"<p>\u200b\u8bcd\u6027\u200b\u6807\u6ce8\u200b\u8ba9\u200b\u8ba1\u7b97\u673a\u200b\u77e5\u9053\u200b\u6bcf\u4e2a\u200b\u8bcd\u200b\u5728\u200b\u53e5\u5b50\u200b\u4e2d\u200b\u7684\u200b\u8bed\u6cd5\u200b\u529f\u80fd\u200b\u3002</p> <pre><code>import nltk\nsentence = \"The quick brown fox jumps over the lazy dog.\"\ntokens = nltk.word_tokenize(sentence)\ntagged = nltk.pos_tag(tokens)\nprint(tagged)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>[('The', 'DT'), ('quick', 'JJ'), ('brown', 'JJ'), ('fox', 'NN'), ...]\n</code></pre> <p>\u200b\u5e38\u89c1\u200b\u6807\u7b7e\u200b\uff1a</p> <ul> <li>NN\uff1a\u200b\u540d\u8bcd\u200b</li> <li>JJ\uff1a\u200b\u5f62\u5bb9\u8bcd\u200b</li> <li>VB\uff1a\u200b\u52a8\u8bcd\u200b</li> <li>RB\uff1a\u200b\u526f\u8bcd\u200b</li> </ul> <p>NLTK \u200b\u7684\u200b\u8bcd\u6027\u200b\u6807\u6ce8\u200b\u5668\u200b\u5e95\u5c42\u200b\u662f\u200b\u4e00\u4e2a\u200b \u200b\u9690\u200b\u9a6c\u5c14\u53ef\u592b\u200b\u6a21\u578b\u200b\uff08HMM\uff09\u3002</p>"},{"location":"nlp/nltk/#4-ner","title":"\ud83e\udde9 \u200b\u7b2c\u200b 4 \u200b\u7ae0\u200b\uff1a\u200b\u547d\u540d\u200b\u5b9e\u4f53\u200b\u8bc6\u522b\u200b\uff08NER\uff09","text":"<p>NER = Named Entity Recognition\uff0c\u200b\u7528\u6765\u200b\u8bc6\u522b\u200b\u6587\u672c\u200b\u4e2d\u200b\u7684\u200b\u5b9e\u4f53\u200b\uff0c\u200b\u5982\u4eba\u540d\u200b\u3001\u200b\u5730\u70b9\u200b\u3001\u200b\u7ec4\u7ec7\u200b\u7b49\u200b\u3002</p> <pre><code>from nltk import ne_chunk\n\nsentence = \"Elon Musk founded SpaceX in California.\"\ntokens = nltk.word_tokenize(sentence)\ntags = nltk.pos_tag(tokens)\ntree = ne_chunk(tags)\nprint(tree)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u6811\u4e2d\u4f1a\u200b\u6807\u6ce8\u200b\u5b9e\u4f53\u200b\u7c7b\u522b\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <pre><code>(ORGANIZATION SpaceX)\n(GPE California)\n(PERSON Elon Musk)\n</code></pre>"},{"location":"nlp/nltk/#5-parsing","title":"\ud83e\udde9 \u200b\u7b2c\u200b 5 \u200b\u7ae0\u200b\uff1a\u200b\u53e5\u6cd5\u5206\u6790\u200b\uff08Parsing\uff09","text":"<p>\u200b\u53e5\u6cd5\u5206\u6790\u200b\u662f\u200b\u8bed\u8a00\u200b\u7406\u89e3\u200b\u7684\u200b\u201c\u200b\u7ed3\u6784\u200b\u201d\u200b\u90e8\u5206\u200b\u3002</p>"},{"location":"nlp/nltk/#cfg","title":"\u4f8b\u200b\uff1a\u200b\u4f7f\u7528\u200b\u4e0a\u4e0b\u6587\u200b\u65e0\u5173\u200b\u6587\u6cd5\u200b\uff08CFG\uff09","text":"<pre><code>from nltk import CFG\nfrom nltk.parse import ChartParser\n\ngrammar = CFG.fromstring(\"\"\"\nS -&gt; NP VP\nNP -&gt; DT NN\nVP -&gt; VB NP\nDT -&gt; 'the'\nNN -&gt; 'cat' | 'dog'\nVB -&gt; 'chased' | 'saw'\n\"\"\")\n\nparser = ChartParser(grammar)\nsentence = ['the', 'dog', 'chased', 'the', 'cat']\n\nfor tree in parser.parse(sentence):\n    print(tree)\n    tree.draw()\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u7ed8\u5236\u200b\u51fa\u200b\u4e00\u68f5\u200b\u53e5\u6cd5\u6811\u200b\uff0c\u200b\u8ba9\u200b\u4f60\u200b\u770b\u5230\u200b\u201c\u200b\u4e3b\u8bed\u200b-\u200b\u8c13\u8bed\u200b-\u200b\u5bbe\u8bed\u200b\u201d\u200b\u7684\u200b\u7ed3\u6784\u200b\u3002</p>"},{"location":"nlp/nltk/#6-wordnet","title":"\ud83e\udde9 \u200b\u7b2c\u200b 6 \u200b\u7ae0\u200b\uff1a\u200b\u8bed\u4e49\u200b\u5206\u6790\u200b\uff08WordNet\uff09","text":"<p>NLTK \u200b\u5185\u7f6e\u200b WordNet \u2014\u2014 \u200b\u4e00\u4e2a\u200b\u5e9e\u5927\u200b\u7684\u200b\u82f1\u8bed\u200b\u8bed\u4e49\u200b\u7f51\u200b\u3002</p> <pre><code>from nltk.corpus import wordnet as wn\n\nword = 'car'\nsynsets = wn.synsets(word)\nprint(synsets[0].definition())       # \u200b\u5b9a\u4e49\u200b\nprint(synsets[0].lemmas())           # \u200b\u540c\u4e49\u8bcd\u200b\nprint(synsets[0].hypernyms())        # \u200b\u4e0a\u4f4d\u200b\u8bcd\u200b\nprint(synsets[0].hyponyms())         # \u200b\u4e0b\u4f4d\u200b\u8bcd\u200b\n</code></pre> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5229\u7528\u200b WordNet \u200b\u5b9e\u73b0\u200b\uff1a</p> <ul> <li>\u200b\u540c\u4e49\u8bcd\u200b\u6269\u5c55\u200b\uff08synonym expansion\uff09</li> <li>\u200b\u8bed\u4e49\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u8ba1\u7b97\u200b</li> <li>\u200b\u6982\u5ff5\u200b\u5c42\u7ea7\u200b\u5206\u6790\u200b</li> </ul>"},{"location":"nlp/nltk/#7","title":"\ud83e\udde9 \u200b\u7b2c\u200b 7 \u200b\u7ae0\u200b\uff1a\u200b\u6587\u672c\u200b\u7279\u5f81\u63d0\u53d6\u200b\u4e0e\u200b\u5206\u7c7b","text":""},{"location":"nlp/nltk/#71","title":"7.1 \u200b\u8bcd\u9891\u200b\u7edf\u8ba1","text":"<pre><code>from nltk import FreqDist\n\ntext = \"Data science is the study of data using statistics and machine learning.\"\ntokens = word_tokenize(text.lower())\nfdist = FreqDist(tokens)\nprint(fdist.most_common(5))\nfdist.plot(20)\n</code></pre>"},{"location":"nlp/nltk/#72","title":"7.2 \u200b\u7b80\u5355\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\uff08\u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b\uff09","text":"<p>\u200b\u4f7f\u7528\u200b NLTK \u200b\u81ea\u5e26\u200b\u7684\u200b\u7535\u5f71\u200b\u8bc4\u8bba\u200b\u8bed\u6599\u200b\uff1a</p> <pre><code>from nltk.corpus import movie_reviews\nfrom nltk.classify import NaiveBayesClassifier\n\ndef extract_features(words):\n    return {word: True for word in words}\n\ndata = [(extract_features(movie_reviews.words(fileid)), category)\n        for category in movie_reviews.categories()\n        for fileid in movie_reviews.fileids(category)]\n\ntrain, test = data[:1900], data[1900:]\nclassifier = NaiveBayesClassifier.train(train)\nprint(\"Accuracy:\", nltk.classify.accuracy(classifier, test))\nclassifier.show_most_informative_features(10)\n</code></pre>"},{"location":"nlp/nltk/#8","title":"\ud83e\udde9 \u200b\u7b2c\u200b 8 \u200b\u7ae0\u200b\uff1a\u200b\u8fdb\u9636\u200b\u4e0e\u200b\u7efc\u5408\u200b\u5e94\u7528","text":""},{"location":"nlp/nltk/#81-collocations","title":"8.1 \u200b\u642d\u914d\u200b\u5206\u6790\u200b\uff08Collocations\uff09","text":"<p>\u200b\u627e\u51fa\u200b\u8bcd\u8bed\u200b\u642d\u914d\u200b\u9891\u7e41\u200b\u7684\u200b\u7ec4\u5408\u200b\uff1a</p> <pre><code>from nltk.collocations import BigramCollocationFinder\nfrom nltk.metrics import BigramAssocMeasures\n\ntokens = word_tokenize(\"She sells sea shells by the sea shore.\")\nfinder = BigramCollocationFinder.from_words(tokens)\nprint(finder.nbest(BigramAssocMeasures.likelihood_ratio, 5))\n</code></pre>"},{"location":"nlp/nltk/#82","title":"8.2 \u200b\u5173\u952e\u8bcd\u200b\u63d0\u53d6\u200b\u4e0e\u200b\u5171\u73b0\u200b\u7f51\u7edc","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u57fa\u4e8e\u200b\u8bcd\u9891\u200b\u3001TF-IDF\u3001\u200b\u4e92\u4fe1\u606f\u200b\uff08PMI\uff09\u200b\u6784\u5efa\u200b\u8bcd\u56fe\u200b\uff0c\u200b\u63a2\u7d22\u200b\u8bed\u4e49\u200b\u7ed3\u6784\u200b\u3002</p>"},{"location":"nlp/nltk/#83-lda","title":"8.3 \u200b\u4e3b\u9898\u200b\u5efa\u6a21\u200b\uff08LDA\uff09","text":"<p>\u200b\u867d\u7136\u200b NLTK \u200b\u4e0d\u200b\u76f4\u63a5\u200b\u5b9e\u73b0\u200b LDA\uff0c\u200b\u4f46\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5b83\u200b\u9884\u5904\u7406\u200b\u6587\u672c\u200b\uff0c\u200b\u7136\u540e\u200b\u4ea4\u7ed9\u200b gensim \u200b\u8bad\u7ec3\u200b\u4e3b\u9898\u200b\u6a21\u578b\u200b\u3002</p>"},{"location":"nlp/nltk/#9-sentiment-analysis","title":"\ud83e\udde9 \u200b\u7b2c\u200b 9 \u200b\u7ae0\u200b\uff1a\u200b\u60c5\u611f\u200b\u5206\u6790\u200b\uff08Sentiment Analysis\uff09","text":"<p>\u200b\u60c5\u611f\u200b\u5206\u6790\u200b\u662f\u200b NLP \u200b\u7684\u200b\u7ecf\u5178\u200b\u4efb\u52a1\u200b\u4e4b\u4e00\u200b\u3002\u200b\u76ee\u6807\u200b\u662f\u200b\u5224\u65ad\u200b\u6587\u672c\u200b\u7684\u200b\u60c5\u7eea\u200b\u6781\u6027\u200b\uff08\u200b\u6b63\u9762\u200b\u3001\u200b\u8d1f\u9762\u200b\u3001\u200b\u4e2d\u6027\u200b\uff09\u3002</p> <p>NLTK \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e24\u6761\u200b\u8def\u5f84\u200b\uff1a</p> <ol> <li>\u200b\u7528\u200b\u81ea\u5e26\u200b\u8bed\u6599\u200b + \u200b\u4f20\u7edf\u200b\u5206\u7c7b\u5668\u200b\uff08\u200b\u5982\u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b\uff09</li> <li>\u200b\u7528\u200b\u5185\u7f6e\u200b\u7684\u200b VADER \u200b\u6a21\u578b\u200b\uff08\u200b\u4e13\u200b\u4e3a\u200b\u793e\u4ea4\u200b\u5a92\u4f53\u200b\u77ed\u6587\u200b\u672c\u200b\u4f18\u5316\u200b\uff09</li> </ol>"},{"location":"nlp/nltk/#91","title":"9.1 \u200b\u7528\u200b\u7535\u5f71\u200b\u8bc4\u8bba\u200b\u8bed\u6599\u200b\u8bad\u7ec3\u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b\u60c5\u611f\u200b\u5206\u7c7b\u5668","text":"<pre><code>import nltk\nfrom nltk.corpus import movie_reviews\nfrom nltk.classify import NaiveBayesClassifier\nfrom nltk.classify.util import accuracy\n\ndef extract_features(words):\n    return {word: True for word in words}\n\n# \u200b\u52a0\u8f7d\u200b\u8bed\u6599\u5e93\u200b\ndocuments = [(extract_features(movie_reviews.words(fileid)), category)\n             for category in movie_reviews.categories()\n             for fileid in movie_reviews.fileids(category)]\n\ntrain_set, test_set = documents[:1900], documents[1900:]\nclassifier = NaiveBayesClassifier.train(train_set)\n\nprint(\"Accuracy:\", accuracy(classifier, test_set))\nclassifier.show_most_informative_features(10)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>Accuracy: 0.82\nMost Informative Features\n   outstanding = True           pos : neg = 9.0 : 1.0\n   awful = True                 neg : pos = 8.0 : 1.0\n   ...\n</code></pre> <p>\u200b\u539f\u7406\u200b\u7b80\u8ff0\u200b\uff1a \u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b\u5206\u7c7b\u5668\u200b\u57fa\u4e8e\u200b\u8bcd\u8bed\u200b\u7684\u200b\u6761\u4ef6\u200b\u6982\u7387\u200b\uff1a [ P(\\text{label}|\\text{words}) \\propto P(\\text{label}) \\times \\prod_i P(w_i|\\text{label}) ] \u200b\u5047\u8bbe\u200b\u8bcd\u8bed\u200b\u72ec\u7acb\u200b\uff08\u200b\u8fd9\u662f\u200b\u201c\u200b\u6734\u7d20\u200b\u201d\u200b\u7684\u200b\u5730\u65b9\u200b\uff09\uff0c\u200b\u5728\u200b\u5927\u200b\u8bed\u6599\u200b\u4e0a\u200b\u6548\u679c\u200b\u4ecd\u7136\u200b\u60ca\u4eba\u200b\u5730\u200b\u7a33\u5065\u200b\u3002</p>"},{"location":"nlp/nltk/#92-vader","title":"9.2 \u200b\u4f7f\u7528\u200b VADER \u200b\u505a\u200b\u793e\u4ea4\u200b\u5a92\u4f53\u200b\u60c5\u611f\u200b\u5206\u6790","text":"<p>VADER\uff08Valence Aware Dictionary for sEntiment Reasoning\uff09\u200b\u662f\u200b\u4e00\u4e2a\u200b\u57fa\u4e8e\u200b\u8bcd\u5178\u200b + \u200b\u89c4\u5219\u200b\u7684\u200b\u60c5\u611f\u200b\u5206\u6790\u5668\u200b\uff0c\u200b\u5c24\u5176\u200b\u64c5\u957f\u200b\u5904\u7406\u200b\u5e26\u200b\u8868\u60c5\u7b26\u53f7\u200b\u3001\u200b\u7f29\u5199\u200b\u3001\u200b\u611f\u53f9\u53f7\u200b\u7684\u200b\u77ed\u6587\u200b\u672c\u200b\uff08\u200b\u5982\u200b\u63a8\u7279\u200b\u3001\u200b\u8bc4\u8bba\u200b\uff09\u3002</p> <pre><code>from nltk.sentiment import SentimentIntensityAnalyzer\n\nsia = SentimentIntensityAnalyzer()\n\nsentences = [\n    \"I love this movie! It's amazing \ud83d\ude0a\",\n    \"The plot was terrible and boring...\",\n    \"Not bad, but not great either.\"\n]\n\nfor s in sentences:\n    print(s, \"\u2192\", sia.polarity_scores(s))\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>I love this movie! ... \u2192 {'neg': 0.0, 'neu': 0.3, 'pos': 0.7, 'compound': 0.85}\nThe plot was terrible ... \u2192 {'neg': 0.6, 'neu': 0.4, 'pos': 0.0, 'compound': -0.78}\n</code></pre> <p><code>compound</code> \u200b\u5206\u6570\u200b\u5728\u200b [-1, 1] \u200b\u95f4\u200b\uff0c\u200b\u8868\u793a\u200b\u6574\u4f53\u200b\u60c5\u7eea\u200b\u5f3a\u5ea6\u200b\u3002 VADER \u200b\u4e0d\u200b\u9700\u8981\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u9002\u5408\u200b\u5feb\u901f\u200b\u5206\u6790\u200b\u63a8\u7279\u200b\u3001\u200b\u8bc4\u8bba\u200b\u3001\u200b\u5f39\u5e55\u200b\u7b49\u200b\u6587\u672c\u200b\u3002</p>"},{"location":"nlp/nltk/#93-nltk","title":"9.3 \u200b\u7528\u200b NLTK \u200b\u6784\u5efa\u200b\u60c5\u611f\u200b\u8bcd\u5178","text":"<p>\u200b\u5982\u679c\u200b\u60f3\u200b\u81ea\u5b9a\u4e49\u200b\u60c5\u611f\u200b\u5206\u6790\u200b\u89c4\u5219\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4ece\u200b WordNet \u200b\u6784\u5efa\u200b\u81ea\u5df1\u200b\u7684\u200b\u60c5\u7eea\u200b\u8bcd\u5178\u200b\u3002</p> <pre><code>from nltk.corpus import wordnet as wn\n\npositive = ['good', 'happy', 'excellent', 'fortunate', 'correct', 'superior']\nnegative = ['bad', 'sad', 'terrible', 'poor', 'wrong', 'inferior']\n\ndef get_synonyms(word):\n    syns = set()\n    for s in wn.synsets(word):\n        for lemma in s.lemmas():\n            syns.add(lemma.name())\n    return syns\n\npos_lexicon = set()\nneg_lexicon = set()\nfor w in positive: pos_lexicon.update(get_synonyms(w))\nfor w in negative: neg_lexicon.update(get_synonyms(w))\n\nprint(\"Positive words:\", list(pos_lexicon)[:10])\nprint(\"Negative words:\", list(neg_lexicon)[:10])\n</code></pre> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u57fa\u4e8e\u200b\u8fd9\u4e9b\u200b\u8bcd\u200b\u96c6\u5408\u200b\u505a\u200b\u8bcd\u9891\u200b\u7edf\u8ba1\u200b\u6216\u200b TF-IDF \u200b\u8ba1\u7b97\u200b\uff0c\u200b\u4ece\u800c\u200b\u624b\u5de5\u200b\u6784\u9020\u200b\u201c\u200b\u60c5\u611f\u200b\u5f97\u5206\u200b\u201d\u3002</p>"},{"location":"nlp/nltk/#10-nltk-nlpbert-gpt","title":"\ud83e\udde9 \u200b\u7b2c\u200b 10 \u200b\u7ae0\u200b\uff1aNLTK \u200b\u4e0e\u200b\u73b0\u4ee3\u200b NLP\uff08BERT / GPT \u200b\u7684\u200b\u8854\u63a5\u200b\uff09","text":"<p>NLTK \u200b\u662f\u200b\u4f20\u7edf\u200b NLP \u200b\u7684\u200b\u57fa\u77f3\u200b\uff0c \u200b\u800c\u200b\u73b0\u4ee3\u200b NLP \u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b BERT\u3001GPT\u3001T5\uff09\u200b\u4ee3\u8868\u200b\u7684\u200b\u662f\u200b\u6df1\u5ea6\u200b\u8bed\u4e49\u200b\u7406\u89e3\u200b\u7684\u200b\u65b0\u200b\u65f6\u4ee3\u200b\u3002 \u200b\u8fd9\u200b\u4e00\u7ae0\u200b\u8bb2\u200b\u5982\u4f55\u200b\u628a\u200b NLTK \u200b\u7684\u200b\u6570\u636e\u200b\u7ba1\u7ebf\u200b\u4e0e\u200b\u6df1\u5ea6\u200b\u6a21\u578b\u200b\u7ed3\u5408\u200b\u3002</p>"},{"location":"nlp/nltk/#101-nltk-transformer","title":"10.1 \u200b\u4f7f\u7528\u200b NLTK \u200b\u505a\u524d\u200b\u5904\u7406\u200b\uff0c\u200b\u9001\u5165\u200b Transformer \u200b\u6a21\u578b","text":"<pre><code>from nltk.tokenize import word_tokenize\nfrom transformers import pipeline\n\n# 1. \u200b\u7528\u200b NLTK \u200b\u505a\u200b\u5206\u8bcd\u200b\u3001\u200b\u6e05\u6d17\u200b\ntext = \"Natural language processing is fascinating but complex!\"\ntokens = [w.lower() for w in word_tokenize(text) if w.isalpha()]\nprint(\"Cleaned tokens:\", tokens)\n\n# 2. \u200b\u7528\u200b\u73b0\u4ee3\u200b\u6a21\u578b\u200b\u5206\u6790\u200b\nanalyzer = pipeline(\"sentiment-analysis\")\nprint(analyzer(text))\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>Cleaned tokens: ['natural', 'language', 'processing', 'is', 'fascinating', 'but', 'complex']\n[{'label': 'POSITIVE', 'score': 0.9998}]\n</code></pre> <p>NLTK \u200b\u8d1f\u8d23\u200b\u9884\u5904\u7406\u200b\u4e0e\u200b\u7279\u5f81\u200b\u5316\u200b\uff1bTransformers \u200b\u8d1f\u8d23\u200b\u8bed\u4e49\u200b\u5efa\u6a21\u200b\u4e0e\u200b\u63a8\u7406\u200b\u3002 \u200b\u8fd9\u200b\u6b63\u662f\u200b\u73b0\u4ee3\u200b NLP \u200b\u7684\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\u3002</p>"},{"location":"nlp/nltk/#102","title":"10.2 \u200b\u4ece\u200b\u8bcd\u888b\u200b\u5230\u200b\u8bcd\u200b\u5411\u91cf\u200b\u7684\u200b\u6f14\u8fdb","text":"<p>NLTK \u200b\u4e3b\u8981\u200b\u5904\u7406\u200b\u7b26\u53f7\u200b\u7ea7\u200b\u6587\u672c\u200b\uff1a\u200b\u5355\u8bcd\u200b\u3001\u200b\u6807\u70b9\u200b\u3001\u200b\u53e5\u6cd5\u6811\u200b\u3002 \u200b\u4f46\u200b\u5728\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u6570\u503c\u200b\u5316\u200b\u8868\u793a\u200b\uff08word embeddings\uff09\u3002</p> <p>\u200b\u8bcd\u888b\u200b\u6a21\u578b\u200b\uff08Bag-of-Words, BoW\uff09 \u2192 Word2Vec \u2192 GloVe \u2192 Transformer Embeddings \u200b\u8fd9\u662f\u200b\u4e00\u6761\u200b\u201c\u200b\u4ece\u200b\u7edf\u8ba1\u200b\u5230\u200b\u8bed\u4e49\u200b\u201d\u200b\u7684\u200b\u6f14\u5316\u200b\u8def\u5f84\u200b\u3002</p> <p>\u200b\u53ef\u4ee5\u200b\u7528\u200b NLTK \u200b\u6784\u9020\u200b BoW \u200b\u7279\u5f81\u200b\uff1a</p> <pre><code>from nltk import FreqDist\nfrom sklearn.feature_extraction.text import CountVectorizer\n\ncorpus = [\"I love NLP\", \"NLP loves deep learning\"]\nvectorizer = CountVectorizer()\nX = vectorizer.fit_transform(corpus)\nprint(vectorizer.get_feature_names_out())\nprint(X.toarray())\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>['deep' 'learning' 'love' 'loves' 'nlp']\n[[0 0 1 0 1]\n [1 1 0 1 1]]\n</code></pre>"},{"location":"nlp/nltk/#103-wordnet","title":"10.3 \u200b\u8bed\u4e49\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\uff1a\u200b\u7528\u200b WordNet + \u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7ed3\u5408","text":"<pre><code>from nltk.corpus import wordnet as wn\n\ndog = wn.synset('dog.n.01')\ncat = wn.synset('cat.n.01')\ncar = wn.synset('car.n.01')\n\nprint(\"dog-cat:\", dog.wup_similarity(cat))\nprint(\"dog-car:\", dog.wup_similarity(car))\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>dog-cat: 0.857\ndog-car: 0.6\n</code></pre> <p>WordNet \u200b\u7684\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u57fa\u4e8e\u200b\u8bed\u4e49\u200b\u5c42\u7ea7\u200b\u8ddd\u79bb\u200b\u3002 \u200b\u82e5\u200b\u914d\u5408\u200b BERT \u200b\u8bcd\u200b\u5d4c\u5165\u200b\uff08transformers\uff09\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u6df7\u5408\u200b\u6a21\u578b\u200b\uff0c\u200b\u5b9e\u73b0\u200b\uff1a</p> <ul> <li>\u200b\u6982\u5ff5\u200b\u5c42\u7ea7\u200b\u7684\u200b\u63a8\u7406\u200b\uff08WordNet\uff09</li> <li>\u200b\u8bed\u5883\u200b\u5316\u200b\u8bed\u4e49\u200b\u8ddd\u79bb\u200b\uff08BERT Embedding\uff09</li> </ul>"},{"location":"nlp/nltk/#104-nlp-nltk","title":"10.4 \u200b\u73b0\u4ee3\u200b NLP \u200b\u4e0e\u200b NLTK \u200b\u7684\u200b\u54f2\u5b66\u200b\u5dee\u522b","text":"\u5c42\u9762\u200b NLTK Transformers \u200b\u6838\u5fc3\u601d\u60f3\u200b \u200b\u8bed\u8a00\u200b\u89c4\u5219\u200b + \u200b\u7edf\u8ba1\u200b \u200b\u8bed\u4e49\u200b\u8868\u5f81\u200b + \u200b\u795e\u7ecf\u7f51\u7edc\u200b \u200b\u6570\u636e\u200b\u5f62\u5f0f\u200b \u200b\u7b26\u53f7\u200b\uff08tokens, trees\uff09 \u200b\u5411\u91cf\u200b\uff08embeddings\uff09 \u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b \u200b\u5f3a\u200b \u200b\u5f31\u200b \u200b\u7cbe\u5ea6\u200b \u200b\u4e2d\u200b \u200b\u6781\u9ad8\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b \u200b\u6559\u5b66\u200b\u3001\u200b\u53ef\u89c6\u5316\u200b\u3001\u200b\u57fa\u7840\u200bNLP \u200b\u5546\u4e1a\u200b\u5e94\u7528\u200b\u3001\u200b\u5927\u200b\u6a21\u578b\u200b\u5fae\u8c03\u200b <p>NLTK \u200b\u6559\u200b\u4f60\u200b\u7406\u89e3\u200b\u8bed\u8a00\u200b\u7684\u200b\u7ed3\u6784\u200b\uff1b Transformer \u200b\u8ba9\u200b\u673a\u5668\u200b\u201c\u200b\u611f\u53d7\u200b\u201d\u200b\u8bed\u8a00\u200b\u7684\u200b\u8bed\u4e49\u200b\u3002 \u200b\u4e8c\u8005\u200b\u7ed3\u5408\u200b\uff0c\u200b\u624d\u200b\u662f\u200b\u771f\u6b63\u200b\u7684\u200b\u201c\u200b\u7cbe\u901a\u200b NLP\u201d\u3002</p>"},{"location":"nlp/nltk/#_2","title":"\ud83c\udf93 \u200b\u5b8c\u6574\u200b\u5b66\u4e60\u200b\u5efa\u8bae\u200b\u8def\u7ebf","text":"<ol> <li>\u200b\u638c\u63e1\u200b\u8bed\u8a00\u5b66\u200b\u57fa\u7840\u200b\uff1a    \u200b\u5206\u8bcd\u200b \u2192 \u200b\u8bcd\u6027\u200b\u6807\u6ce8\u200b \u2192 \u200b\u53e5\u6cd5\u6811\u200b</li> <li>\u200b\u7406\u89e3\u200b\u7edf\u8ba1\u200b NLP\uff1a    \u200b\u6734\u7d20\u200b\u8d1d\u53f6\u65af\u200b\u3001TF-IDF\u3001\u200b\u642d\u914d\u200b\u5206\u6790\u200b</li> <li>\u200b\u5b66\u4e60\u200b\u8bed\u4e49\u200b\u7f51\u7edc\u200b\uff1a    WordNet\u3001\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u8ba1\u7b97\u200b\u3001\u200b\u540c\u4e49\u8bcd\u200b\u6269\u5c55\u200b</li> <li>\u200b\u8fc7\u6e21\u200b\u5230\u200b\u6df1\u5ea6\u200b\u6a21\u578b\u200b\uff1a    \u200b\u4e86\u89e3\u200b word2vec\u3001Transformer\u3001BERT</li> <li>\u200b\u7efc\u5408\u200b\u5b9e\u8df5\u200b\u9879\u76ee\u200b\uff1a    \u200b\u60c5\u611f\u200b\u5206\u6790\u200b\u3001\u200b\u5173\u952e\u8bcd\u200b\u63d0\u53d6\u200b\u3001\u200b\u4e3b\u9898\u200b\u5efa\u6a21\u200b</li> </ol> <p>NLTK \u200b\u5c31\u200b\u50cf\u200b\u81ea\u7136\u8bed\u8a00\u200b\u4e16\u754c\u200b\u7684\u200b\u663e\u5fae\u955c\u200b\u2014\u2014 \u200b\u900f\u8fc7\u200b\u5b83\u200b\uff0c\u200b\u4f60\u200b\u80fd\u200b\u770b\u5230\u200b\u8bed\u8a00\u200b\u7684\u200b\u7ed3\u6784\u200b\u3001\u200b\u89c4\u5f8b\u200b\u4e0e\u200b\u5947\u5999\u200b\u7684\u200b\u6df7\u6c8c\u200b\u3002 \u200b\u800c\u200b\u5f53\u200b\u4f60\u200b\u628a\u200b\u5b83\u200b\u4e0e\u200b\u73b0\u4ee3\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7ed3\u5408\u200b\uff0c\u200b\u4f60\u200b\u5c31\u200b\u80fd\u200b\u5728\u200b\u8ba1\u7b97\u673a\u200b\u4e2d\u200b\u201c\u200b\u91cd\u5efa\u200b\u610f\u4e49\u200b\u201d\u3002</p> <p>\u200b\u662f\u5426\u200b\u5e0c\u671b\u200b\u6211\u200b\u5728\u200b\u6b64\u57fa\u7840\u200b\u4e0a\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u6269\u5c55\u200b\u51fa\u200b\u4e00\u4efd\u200b \u300cNLTK \u200b\u5b9e\u6218\u200b\u9879\u76ee\u200b\u96c6\u200b\u300d\uff08\u200b\u4f8b\u5982\u200b\uff1a\u200b\u6587\u672c\u200b\u5206\u7c7b\u200b\u3001\u200b\u8206\u60c5\u200b\u5206\u6790\u200b\u3001\u200b\u5173\u952e\u8bcd\u200b\u63d0\u53d6\u200b\u3001\u200b\u77e5\u8bc6\u200b\u56fe\u8c31\u200b\u6784\u5efa\u200b\u7b49\u200b\u5b9e\u6218\u200b\u6559\u7a0b\u200b\uff09\uff1f</p>"},{"location":"nlp/peft/","title":"peft\u200b\u5e93","text":"<p>\u200b\u597d\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u6765\u200b\u7cfb\u7edf\u200b\u8bb2\u89e3\u200b\u4e00\u4e0b\u200b PEFT\uff08Parameter-Efficient Fine-Tuning\uff09\u200b\u5e93\u200b\u3002\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u5728\u200b\u5927\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b GPT\u3001BERT\u3001LLaMA \u200b\u7b49\u200b\uff09\u200b\u5fae\u8c03\u200b\u4e2d\u200b\u6781\u5177\u200b\u4ef7\u503c\u200b\u7684\u200b\u5de5\u5177\u200b\u2014\u2014\u200b\u5b83\u200b\u8ba9\u200b\u4f60\u200b\u4e0d\u7528\u200b\u201c\u200b\u642c\u8d77\u200b\u6574\u5ea7\u200b\u5c71\u200b\u201d\uff0c\u200b\u53ea\u200b\u6539\u52a8\u200b\u51e0\u4e2a\u200b\u201c\u200b\u5173\u952e\u200b\u87ba\u4e1d\u200b\u201d\uff0c\u200b\u5c31\u200b\u80fd\u200b\u9ad8\u6548\u200b\u5730\u200b\u5b9a\u5236\u200b\u6a21\u578b\u200b\u3002\u200b\u4e0b\u9762\u200b\u662f\u4ece\u200b\u5165\u95e8\u200b\u5230\u200b\u8fdb\u9636\u200b\u7684\u200b\u8be6\u7ec6\u200b\u6559\u7a0b\u200b\u3002</p>"},{"location":"nlp/peft/#peft","title":"\u4e00\u200b\u3001PEFT \u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f","text":"<p>PEFT\uff08Parameter-Efficient Fine-Tuning\uff09 \u200b\u662f\u200b Hugging Face \u200b\u63a8\u51fa\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5e93\u200b\uff0c\u200b\u7528\u6765\u200b\u5728\u200b \u200b\u4e0d\u200b\u5fae\u8c03\u200b\u6574\u4e2a\u200b\u6a21\u578b\u200b\u53c2\u6570\u200b \u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u53ea\u200b\u66f4\u65b0\u200b\u4e00\u5c0f\u90e8\u5206\u200b\u53c2\u6570\u200b \u200b\u6765\u200b\u9002\u914d\u200b\u65b0\u200b\u4efb\u52a1\u200b\u3002</p> <p>\u200b\u4f20\u7edf\u200b\u5fae\u8c03\u200b\uff08Full Fine-tuning\uff09\u200b\u7684\u200b\u95ee\u9898\u200b\u662f\u200b\uff1a</p> <ul> <li>\u200b\u6a21\u578b\u200b\u592a\u200b\u5927\u200b\uff08\u200b\u5982\u200b\u51e0\u5341\u4ebf\u200b\u53c2\u6570\u200b\uff09\uff1b</li> <li>\u200b\u663e\u5b58\u200b\u6d88\u8017\u200b\u5de8\u5927\u200b\uff1b</li> <li>\u200b\u6bcf\u4e2a\u200b\u4efb\u52a1\u200b\u90fd\u200b\u8981\u200b\u4fdd\u5b58\u200b\u6574\u5957\u200b\u6a21\u578b\u200b\u3002</li> </ul> <p>\u200b\u800c\u200b PEFT \u200b\u7684\u200b\u7406\u5ff5\u200b\u662f\u200b\uff1a</p> <p>\u201c\u200b\u51bb\u7ed3\u200b\u5927\u90e8\u5206\u200b\u53c2\u6570\u200b\uff0c\u200b\u53ea\u200b\u8bad\u7ec3\u200b\u5c11\u91cf\u200b\u65b0\u589e\u200b\u53c2\u6570\u200b\u6a21\u5757\u200b\u3002\u201d</p> <p>\u200b\u8fd9\u6837\u200b\u663e\u5b58\u200b\u66f4\u7701\u200b\u3001\u200b\u8bad\u7ec3\u200b\u66f4\u200b\u5feb\u200b\u3001\u200b\u8fc1\u79fb\u200b\u66f4\u200b\u65b9\u4fbf\u200b\u3002</p>"},{"location":"nlp/peft/#peft_1","title":"\u4e8c\u200b\u3001PEFT \u200b\u7684\u200b\u5b89\u88c5\u200b\u4e0e\u200b\u73af\u5883\u200b\u51c6\u5907","text":"<pre><code>pip install peft transformers accelerate datasets\n</code></pre> <p>\u200b\u5efa\u8bae\u200b\u914d\u5408\u200b <code>transformers</code> \u200b\u4e00\u8d77\u200b\u4f7f\u7528\u200b\uff0c\u200b\u56e0\u4e3a\u200b PEFT \u200b\u6a21\u5757\u200b\u76f4\u63a5\u200b\u4e0e\u200b Hugging Face \u200b\u7684\u200b\u6a21\u578b\u200b\u67b6\u6784\u200b\u96c6\u6210\u200b\u3002</p>"},{"location":"nlp/peft/#peft_2","title":"\u4e09\u200b\u3001PEFT \u200b\u7684\u200b\u4e3b\u8981\u200b\u65b9\u6cd5","text":"<p>PEFT \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u51e0\u79cd\u200b\u4e3b\u6d41\u200b\u7684\u200b\u53c2\u6570\u200b\u9ad8\u6548\u200b\u5fae\u8c03\u200b\u7b56\u7565\u200b\uff1a</p> \u200b\u65b9\u6cd5\u200b \u200b\u6838\u5fc3\u601d\u60f3\u200b \u200b\u4f18\u70b9\u200b LoRA (Low-Rank Adaptation) \u200b\u7ed9\u200b\u7ebf\u6027\u200b\u5c42\u200b\u589e\u52a0\u200b\u4f4e\u200b\u79e9\u200b\u77e9\u9635\u200b \u200b\u6700\u200b\u5e38\u7528\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u5feb\u200b\uff0c\u200b\u8282\u7701\u200b\u663e\u5b58\u200b Prefix Tuning \u200b\u5728\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u524d\u52a0\u200b\u53ef\u200b\u8bad\u7ec3\u200b\u524d\u7f00\u200b\u5411\u91cf\u200b \u200b\u9002\u5408\u200b\u8bed\u8a00\u200b\u5efa\u6a21\u200b\u7c7b\u200b\u4efb\u52a1\u200b Prompt Tuning \u200b\u7c7b\u4f3c\u200b Prefix\uff0c\u200b\u4f46\u200b\u53ef\u200b\u7528\u4e8e\u200b\u66f4\u200b\u5e7f\u6cdb\u200b\u4efb\u52a1\u200b \u200b\u5c0f\u53c2\u200b\u6570\u91cf\u200b\uff0c\u200b\u53ef\u200b\u5feb\u901f\u200b\u8fc1\u79fb\u200b IA\u00b3 \u200b\u5b66\u4e60\u200b\u6807\u91cf\u200b\u7cfb\u6570\u200b\u8c03\u6574\u200b\u6fc0\u6d3b\u200b\u503c\u200b \u200b\u53c2\u6570\u200b\u6781\u5c11\u200b\uff0c\u200b\u6027\u80fd\u200b\u4e0d\u9519\u200b Adapters \u200b\u5728\u200b\u5c42\u95f4\u200b\u63d2\u5165\u200b\u5c0f\u578b\u200b\u9002\u914d\u200b\u5c42\u200b \u200b\u53ef\u200b\u6a21\u5757\u5316\u200b\u52a0\u8f7d\u200b\u591a\u4e2a\u200b\u4efb\u52a1"},{"location":"nlp/peft/#lora-bert","title":"\u56db\u200b\u3001LoRA \u200b\u5b9e\u6218\u200b\uff1a\u200b\u5fae\u8c03\u200b\u4e00\u4e2a\u200b BERT \u200b\u5206\u7c7b\u200b\u6a21\u578b","text":""},{"location":"nlp/peft/#1","title":"1. \u200b\u52a0\u8f7d\u200b\u6a21\u578b\u200b\u4e0e\u200b\u6570\u636e","text":"<pre><code>from transformers import AutoModelForSequenceClassification, AutoTokenizer\nfrom datasets import load_dataset\n\nmodel_name = \"bert-base-uncased\"\ndataset = load_dataset(\"imdb\")\ntokenizer = AutoTokenizer.from_pretrained(model_name)\n\ndef preprocess(example):\n    return tokenizer(example[\"text\"], truncation=True, padding=\"max_length\", max_length=128)\n\nencoded = dataset.map(preprocess, batched=True)\n</code></pre>"},{"location":"nlp/peft/#2","title":"2. \u200b\u521d\u59cb\u5316\u200b\u57fa\u7840\u200b\u6a21\u578b\u200b\uff08\u200b\u51bb\u7ed3\u200b\u53c2\u6570\u200b\uff09","text":"<pre><code>model = AutoModelForSequenceClassification.from_pretrained(model_name, num_labels=2)\nfor param in model.parameters():\n    param.requires_grad = False  # \u200b\u51bb\u7ed3\u200b\u6240\u6709\u200b\u53c2\u6570\u200b\n</code></pre>"},{"location":"nlp/peft/#3-lora","title":"3. \u200b\u5e94\u7528\u200b LoRA","text":"<pre><code>from peft import LoraConfig, get_peft_model\n\n# LoRA\u200b\u914d\u7f6e\u200b\nlora_config = LoraConfig(\n    r=8,                         # \u200b\u4f4e\u200b\u79e9\u200b\u7ef4\u5ea6\u200b\n    lora_alpha=32,               # \u200b\u7f29\u653e\u200b\u56e0\u5b50\u200b\n    target_modules=[\"query\", \"value\"],  # \u200b\u5e94\u7528\u200b\u4e8e\u200b\u6ce8\u610f\u529b\u200b\u5c42\u200b\n    lora_dropout=0.1,\n    bias=\"none\",\n    task_type=\"SEQ_CLS\"          # \u200b\u5e8f\u5217\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\n)\n\npeft_model = get_peft_model(model, lora_config)\npeft_model.print_trainable_parameters()\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u7c7b\u4f3c\u200b\uff1a</p> <pre><code>trainable params: 590,000 || all params: 110,000,000 || trainable%: 0.5%\n</code></pre> <p>\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u53ea\u200b\u8bad\u7ec3\u200b\u4e86\u200b 0.5% \u200b\u7684\u200b\u53c2\u6570\u200b\uff01</p>"},{"location":"nlp/peft/#4","title":"4. \u200b\u8bad\u7ec3\u200b\u4e0e\u200b\u4fdd\u5b58","text":"<pre><code>from transformers import TrainingArguments, Trainer\n\ntraining_args = TrainingArguments(\n    output_dir=\"./lora-bert-imdb\",\n    per_device_train_batch_size=8,\n    num_train_epochs=1,\n    learning_rate=2e-4,\n    logging_steps=50,\n    save_steps=1000,\n)\n\ntrainer = Trainer(\n    model=peft_model,\n    args=training_args,\n    train_dataset=encoded[\"train\"].select(range(2000)),\n    eval_dataset=encoded[\"test\"].select(range(1000)),\n)\ntrainer.train()\n\npeft_model.save_pretrained(\"./lora-bert-imdb\")\n</code></pre> <p>\u200b\u8bad\u7ec3\u200b\u901f\u5ea6\u200b\u6781\u5feb\u200b\uff0c\u200b\u663e\u5b58\u200b\u538b\u529b\u200b\u663e\u8457\u200b\u51cf\u8f7b\u200b\u3002</p>"},{"location":"nlp/peft/#5-peft","title":"5. \u200b\u52a0\u8f7d\u200b PEFT \u200b\u6a21\u578b\u200b\u7ee7\u7eed\u200b\u4f7f\u7528","text":"<pre><code>from peft import PeftModel\nfrom transformers import AutoModelForSequenceClassification\n\nbase_model = AutoModelForSequenceClassification.from_pretrained(model_name, num_labels=2)\nmodel = PeftModel.from_pretrained(base_model, \"./lora-bert-imdb\")\n</code></pre> <p>\u200b\u73b0\u5728\u200b\u53ef\u4ee5\u200b\u50cf\u200b\u666e\u901a\u200b\u6a21\u578b\u200b\u4e00\u6837\u200b\u8fdb\u884c\u200b\u63a8\u7406\u200b\uff1a</p> <pre><code>inputs = tokenizer(\"This movie was fantastic!\", return_tensors=\"pt\")\npred = model(**inputs).logits.argmax().item()\nprint(\"Positive\" if pred else \"Negative\")\n</code></pre>"},{"location":"nlp/peft/#peft_3","title":"\u4e94\u200b\u3001PEFT \u200b\u7684\u200b\u9ad8\u7ea7\u200b\u6280\u5de7","text":"<ol> <li>\u200b\u5408\u5e76\u200b\u6743\u91cd\u200b\u4ee5\u200b\u5bfc\u51fa\u200b\u5b8c\u6574\u200b\u6a21\u578b\u200b\uff1a</li> </ol> <p><code>python    model = peft_model.merge_and_unload()    model.save_pretrained(\"merged_model\")</code></p> <ol> <li>\u200b\u591a\u4efb\u52a1\u200b LoRA \u200b\u9002\u914d\u200b\uff1a    \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e0d\u540c\u200b\u4efb\u52a1\u200b\u4e0a\u200b\u8bad\u7ec3\u200b\u591a\u4e2a\u200b LoRA adapter\uff0c\u200b\u7136\u540e\u200b\u52a8\u6001\u200b\u52a0\u8f7d\u200b\u4e0d\u540c\u200b adapter\u3002</li> </ol> <p><code>python    model.load_adapter(\"adapter_path\", adapter_name=\"sentiment\")    model.set_adapter(\"sentiment\")</code></p> <ol> <li>\u200b\u4e0e\u200b\u91cf\u5316\u200b\uff08bitsandbytes\uff09\u200b\u7ed3\u5408\u200b\uff1a    \u200b\u5728\u200b\u5927\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b LLaMA\u3001GPT-J\uff09\u200b\u4e0a\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7ed3\u5408\u200b <code>bitsandbytes</code> \u200b\u91cf\u5316\u200b + LoRA \u200b\u5fae\u8c03\u200b\u3002</li> </ol> <p>```python    from transformers import BitsAndBytesConfig</p> <p>quant_config = BitsAndBytesConfig(load_in_8bit=True)    model = AutoModelForCausalLM.from_pretrained(model_name, quantization_config=quant_config)    ```</p>"},{"location":"nlp/peft/#peft_4","title":"\u516d\u200b\u3001\u200b\u4e3a\u4ec0\u4e48\u200b PEFT \u200b\u5982\u6b64\u200b\u91cd\u8981\u200b\uff1f","text":"<p>PEFT \u200b\u662f\u200b\u901a\u5f80\u200b \u201c\u200b\u4e2a\u6027\u5316\u200b AI\u201d \u200b\u7684\u200b\u5173\u952e\u200b\u8def\u5f84\u200b\u3002 \u200b\u5728\u200b\u7b97\u529b\u200b\u53d7\u9650\u200b\u7684\u200b\u73af\u5883\u200b\u4e0b\u200b\uff0c\u200b\u5b83\u200b\u8ba9\u200b\u7814\u7a76\u8005\u200b\u548c\u200b\u5f00\u53d1\u8005\u200b\u80fd\u200b\u5728\u200b\u7b14\u8bb0\u672c\u7535\u8111\u200b\u6216\u200b\u5355\u5361\u200b GPU \u200b\u4e0a\u200b\u5feb\u901f\u200b\u5b9a\u5236\u200b\u51fa\u200b\u4e13\u7528\u200b\u6a21\u578b\u200b\u3002</p> <p>\u200b\u5728\u200b\u4e1a\u754c\u200b\uff0c\u200b\u5982\u200b LLaMA-LoRA\u3001Alpaca\u3001Baichuan-Finetune \u200b\u7b49\u200b\u6a21\u578b\u200b\uff0c\u200b\u51e0\u4e4e\u200b\u90fd\u200b\u91c7\u7528\u200b\u4e86\u200b PEFT \u200b\u7684\u200b LoRA \u200b\u7b56\u7565\u200b\u3002</p>"},{"location":"nlp/peft/#_1","title":"\u4e03\u200b\u3001\u200b\u5b66\u4e60\u200b\u5ef6\u4f38\u200b\u65b9\u5411","text":"<ol> <li>\u200b\u9605\u8bfb\u200b\u8bba\u6587\u200b\uff1aLoRA: Low-Rank Adaptation of Large Language Models (Hu et al., 2021)</li> <li>\u200b\u6df1\u5165\u200b\u4e86\u89e3\u200b\u591a\u200b\u9002\u914d\u200b\u7b56\u7565\u200b\uff1aAdapters, Prefix, Prompt, IA\u00b3</li> <li>\u200b\u5c1d\u8bd5\u200b\u5728\u200b LLM \u200b\u6307\u4ee4\u200b\u5fae\u8c03\u200b\uff08Instruction Tuning\uff09 \u200b\u4efb\u52a1\u200b\u4e0a\u200b\u4f7f\u7528\u200b PEFT\u3002</li> </ol> <p>\u200b\u60f3\u200b\u66f4\u200b\u6df1\u5165\u200b\u5417\u200b\uff1f\u200b\u6211\u200b\u53ef\u4ee5\u200b\u5e2e\u200b\u4f60\u200b\u5199\u200b\u4e00\u4e2a\u200b\u4ece\u200b \u200b\u96f6\u200b\u5b9e\u73b0\u200b LoRA \u200b\u5fae\u8c03\u200b LLaMA \u200b\u6216\u200b ChatGLM \u200b\u7684\u200b\u5b8c\u6574\u200b notebook \u200b\u6559\u7a0b\u200b\uff08\u200b\u542b\u200b\u63a8\u7406\u200b\u63a5\u53e3\u200b\uff09\u3002 \u200b\u662f\u5426\u200b\u5e0c\u671b\u200b\u6211\u200b\u7ee7\u7eed\u200b\u8fd9\u4e2a\u200b\u65b9\u5411\u200b\uff1f</p>"}]}